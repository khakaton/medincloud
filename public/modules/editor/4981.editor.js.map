{"version":3,"sources":["webpack:///./node_modules/ace-builds/src-noconflict/ext-split.js","webpack:///./node_modules/diff-match-patch/index.js","webpack:///./node_modules/react-ace/lib/ace.js","webpack:///./node_modules/react-ace/lib/diff.js","webpack:///./node_modules/react-ace/lib/editorOptions.js","webpack:///./node_modules/react-ace/lib/index.js","webpack:///./node_modules/react-ace/lib/split.js"],"names":["ace","define","require","exports","module","oop","EventEmitter","Editor","Renderer","VirtualRenderer","EditSession","Split","container","theme","splits","this","BELOW","BESIDE","$container","$theme","$splits","$editorCSS","$editors","$orientation","setSplits","$cEditor","on","editor","bind","implement","$createEditor","el","document","createElement","className","style","cssText","appendChild","_emit","push","setFontSize","$fontSize","length","removeChild","resize","getSplits","getEditor","idx","getCurrentEditor","focus","blur","setTheme","forEach","setKeyboardHandler","keybinding","callback","scope","size","$cloneSession","session","s","getDocument","getMode","undoManager","getUndoManager","setUndoManager","setTabSize","getTabSize","setUseSoftTabs","getUseSoftTabs","setOverwrite","getOverwrite","setBreakpoints","getBreakpoints","setUseWrapMode","getUseWrapMode","setUseWorker","getUseWorker","setWrapLimitRange","$wrapLimitRange","min","max","$foldData","$cloneFoldData","setSession","some","getOrientation","setOrientation","orientation","width","clientWidth","height","clientHeight","editorWidth","i","top","left","editorHeight","call","prototype","m","diff_match_patch","Diff_Timeout","Diff_EditCost","Match_Threshold","Match_Distance","Patch_DeleteThreshold","Patch_Margin","Match_MaxBits","DIFF_DELETE","Diff","op","text","diff_main","text1","text2","opt_checklines","opt_deadline","Number","MAX_VALUE","Date","getTime","deadline","Error","checklines","commonlength","diff_commonPrefix","commonprefix","substring","diff_commonSuffix","commonsuffix","diffs","diff_compute_","unshift","diff_cleanupMerge","longtext","shorttext","indexOf","hm","diff_halfMatch_","text1_a","text1_b","text2_a","text2_b","mid_common","diffs_a","diffs_b","concat","diff_lineMode_","diff_bisect_","a","diff_linesToChars_","chars1","chars2","linearray","lineArray","diff_charsToLines_","diff_cleanupSemantic","pointer","count_delete","count_insert","text_delete","text_insert","splice","subDiff","j","pop","text1_length","text2_length","max_d","Math","ceil","v_offset","v_length","v1","Array","v2","x","delta","front","k1start","k1end","k2start","k2end","d","k1","k1_offset","y1","x1","charAt","k2_offset","x2","diff_bisectSplit_","k2","y2","y","text1a","text2a","text1b","text2b","diffsb","lineHash","diff_linesToCharsMunge_","chars","lineStart","lineEnd","lineArrayLength","line","hasOwnProperty","undefined","String","fromCharCode","maxLines","charCodeAt","join","pointermin","pointermax","pointermid","pointerstart","floor","pointerend","diff_commonOverlap_","text_length","best","pattern","found","dmp","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","best_common","prefixLength","suffixLength","hm1","hm2","changes","equalities","equalitiesLength","lastEquality","length_insertions1","length_deletions1","length_insertions2","length_deletions2","diff_cleanupSemanticLossless","deletion","insertion","overlap_length1","overlap_length2","diff_cleanupSemanticScore_","one","two","char1","char2","nonAlphaNumeric1","match","nonAlphaNumericRegex_","nonAlphaNumeric2","whitespace1","whitespaceRegex_","whitespace2","lineBreak1","linebreakRegex_","lineBreak2","blankLine1","blanklineEndRegex_","blankLine2","blanklineStartRegex_","equality1","edit","equality2","commonOffset","commonString","bestEquality1","bestEdit","bestEquality2","bestScore","score","diff_cleanupEfficiency","pre_ins","pre_del","post_ins","post_del","diff_xIndex","loc","last_chars1","last_chars2","diff_prettyHtml","html","pattern_amp","pattern_lt","pattern_gt","pattern_para","replace","diff_text1","diff_text2","diff_levenshtein","levenshtein","insertions","deletions","data","diff_toDelta","encodeURI","diff_fromDelta","diffsLength","tokens","split","param","decodeURI","ex","n","parseInt","isNaN","match_main","match_bitap_","match_alphabet_","match_bitapScore_","e","accuracy","proximity","abs","score_threshold","best_loc","lastIndexOf","bin_min","bin_mid","matchmask","last_rd","bin_max","start","finish","rd","charMatch","patch_addContext_","patch","start2","length1","padding","prefix","suffix","start1","length2","patch_make","opt_b","opt_c","patches","patch_obj","patchDiffLength","char_count1","char_count2","prepatch_text","postpatch_text","diff_type","diff_text","patch_deepCopy","patchesCopy","patchCopy","patch_apply","nullPadding","patch_addPadding","patch_splitMax","results","start_loc","expected_loc","end_loc","index2","index1","mod","paddingLength","extraLength","patch_size","bigpatch","precontext","empty","shift","postcontext","patch_toText","patch_fromText","textline","textPointer","patchHeader","sign","toString","extendStatics","__extends","b","Object","setPrototypeOf","__proto__","p","__","constructor","create","__assign","assign","t","arguments","apply","defineProperty","value","PropTypes","React","isEqual","editorOptions_1","getAceInstance","Range","ReactAce","_super","props","_this","editorEvents","method","debounce","componentDidMount","_a","onBeforeLoad","onValidate","mode","fontSize","defaultValue","cursorStart","showGutter","wrapEnabled","showPrintMargin","_b","scrollMargin","keyboardHandler","onLoad","commands","annotations","markers","placeholder","refEditor","editorProps","keys","debounceChangePeriod","onChange","renderer","setScrollMargin","getSession","setMode","setValue","navigateToFileEnd","navigateFileEnd","setShowGutter","setShowPrintMargin","onFocus","onBlur","onCopy","onPaste","onInput","updatePlaceholder","selection","onSelectionChange","onCursorChange","getAnnotations","onScroll","setAnnotations","handleMarkers","availableOptions","$options","editorOptions","option","setOption","console","warn","handleOptions","isArray","command","exec","bindKey","addCommand","componentDidUpdate","prevProps","oldProps","nextProps","appliedClassesArray_1","trim","oldClass","index","getValue","silent","pos","toJSON","fromJSON","setOptions","handleScrollMargins","margins","setScrollMargins","componentWillUnmount","destroy","event","getSelection","currentMarkers","getMarkers","removeMarker","id","clazz","startRow","startCol","endRow","endCol","type","inFront","range","addMarker","showPlaceholder","node","placeholderNode","scroller","textContent","position","zIndex","updateRef","item","render","name","divStyle","ref","propTypes","string","bool","oneOfType","number","func","minLines","readOnly","highlightActiveLine","tabSize","object","array","enableSnippets","enableBasicAutocompletion","enableLiveAutocompletion","defaultProps","Component","default","split_1","DiffMatchPatch","DiffComponent","state","diff","setState","lhString","rhString","diffedLines","generateDiffedLines","setCodeMarkers","right","cursor","chunk","chunkType","lines","firstChar","lastChar","linesToHighlight","startLine","endLine","codeEditorSettings","newMarkerSet","markerObj","window","acequire","fn","delay","timer","context","args","clearTimeout","setTimeout","ace_1","diff_1","ace_builds_1","ext_split_1","get","SplitComponent","env","splitEditor","defaultValueForEditor","valueForEditor","UndoManager","newAnnotations","newMarkers","sp","nextValue","oldAnnotations","oldMarkers","value_1","value_2","value_3","arrayOf"],"mappings":"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","file":"4981.editor.js","sourcesContent":["ace.define(\"ace/split\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/lib/event_emitter\",\"ace/editor\",\"ace/virtual_renderer\",\"ace/edit_session\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"./lib/oop\");\nvar lang = require(\"./lib/lang\");\nvar EventEmitter = require(\"./lib/event_emitter\").EventEmitter;\n\nvar Editor = require(\"./editor\").Editor;\nvar Renderer = require(\"./virtual_renderer\").VirtualRenderer;\nvar EditSession = require(\"./edit_session\").EditSession;\n\n\nvar Split = function(container, theme, splits) {\n    this.BELOW = 1;\n    this.BESIDE = 0;\n\n    this.$container = container;\n    this.$theme = theme;\n    this.$splits = 0;\n    this.$editorCSS = \"\";\n    this.$editors = [];\n    this.$orientation = this.BESIDE;\n\n    this.setSplits(splits || 1);\n    this.$cEditor = this.$editors[0];\n\n\n    this.on(\"focus\", function(editor) {\n        this.$cEditor = editor;\n    }.bind(this));\n};\n\n(function(){\n\n    oop.implement(this, EventEmitter);\n\n    this.$createEditor = function() {\n        var el = document.createElement(\"div\");\n        el.className = this.$editorCSS;\n        el.style.cssText = \"position: absolute; top:0px; bottom:0px\";\n        this.$container.appendChild(el);\n        var editor = new Editor(new Renderer(el, this.$theme));\n\n        editor.on(\"focus\", function() {\n            this._emit(\"focus\", editor);\n        }.bind(this));\n\n        this.$editors.push(editor);\n        editor.setFontSize(this.$fontSize);\n        return editor;\n    };\n\n    this.setSplits = function(splits) {\n        var editor;\n        if (splits < 1) {\n            throw \"The number of splits have to be > 0!\";\n        }\n\n        if (splits == this.$splits) {\n            return;\n        } else if (splits > this.$splits) {\n            while (this.$splits < this.$editors.length && this.$splits < splits) {\n                editor = this.$editors[this.$splits];\n                this.$container.appendChild(editor.container);\n                editor.setFontSize(this.$fontSize);\n                this.$splits ++;\n            }\n            while (this.$splits < splits) {\n                this.$createEditor();\n                this.$splits ++;\n            }\n        } else {\n            while (this.$splits > splits) {\n                editor = this.$editors[this.$splits - 1];\n                this.$container.removeChild(editor.container);\n                this.$splits --;\n            }\n        }\n        this.resize();\n    };\n    this.getSplits = function() {\n        return this.$splits;\n    };\n    this.getEditor = function(idx) {\n        return this.$editors[idx];\n    };\n    this.getCurrentEditor = function() {\n        return this.$cEditor;\n    };\n    this.focus = function() {\n        this.$cEditor.focus();\n    };\n    this.blur = function() {\n        this.$cEditor.blur();\n    };\n    this.setTheme = function(theme) {\n        this.$editors.forEach(function(editor) {\n            editor.setTheme(theme);\n        });\n    };\n    this.setKeyboardHandler = function(keybinding) {\n        this.$editors.forEach(function(editor) {\n            editor.setKeyboardHandler(keybinding);\n        });\n    };\n    this.forEach = function(callback, scope) {\n        this.$editors.forEach(callback, scope);\n    };\n\n\n    this.$fontSize = \"\";\n    this.setFontSize = function(size) {\n        this.$fontSize = size;\n        this.forEach(function(editor) {\n           editor.setFontSize(size);\n        });\n    };\n\n    this.$cloneSession = function(session) {\n        var s = new EditSession(session.getDocument(), session.getMode());\n\n        var undoManager = session.getUndoManager();\n        s.setUndoManager(undoManager);\n        s.setTabSize(session.getTabSize());\n        s.setUseSoftTabs(session.getUseSoftTabs());\n        s.setOverwrite(session.getOverwrite());\n        s.setBreakpoints(session.getBreakpoints());\n        s.setUseWrapMode(session.getUseWrapMode());\n        s.setUseWorker(session.getUseWorker());\n        s.setWrapLimitRange(session.$wrapLimitRange.min,\n                            session.$wrapLimitRange.max);\n        s.$foldData = session.$cloneFoldData();\n\n        return s;\n    };\n    this.setSession = function(session, idx) {\n        var editor;\n        if (idx == null) {\n            editor = this.$cEditor;\n        } else {\n            editor = this.$editors[idx];\n        }\n        var isUsed = this.$editors.some(function(editor) {\n           return editor.session === session;\n        });\n\n        if (isUsed) {\n            session = this.$cloneSession(session);\n        }\n        editor.setSession(session);\n        return session;\n    };\n    this.getOrientation = function() {\n        return this.$orientation;\n    };\n    this.setOrientation = function(orientation) {\n        if (this.$orientation == orientation) {\n            return;\n        }\n        this.$orientation = orientation;\n        this.resize();\n    };\n    this.resize = function() {\n        var width = this.$container.clientWidth;\n        var height = this.$container.clientHeight;\n        var editor;\n\n        if (this.$orientation == this.BESIDE) {\n            var editorWidth = width / this.$splits;\n            for (var i = 0; i < this.$splits; i++) {\n                editor = this.$editors[i];\n                editor.container.style.width = editorWidth + \"px\";\n                editor.container.style.top = \"0px\";\n                editor.container.style.left = i * editorWidth + \"px\";\n                editor.container.style.height = height + \"px\";\n                editor.resize();\n            }\n        } else {\n            var editorHeight = height / this.$splits;\n            for (var i = 0; i < this.$splits; i++) {\n                editor = this.$editors[i];\n                editor.container.style.width = width + \"px\";\n                editor.container.style.top = i * editorHeight + \"px\";\n                editor.container.style.left = \"0px\";\n                editor.container.style.height = editorHeight + \"px\";\n                editor.resize();\n            }\n        }\n    };\n\n}).call(Split.prototype);\n\nexports.Split = Split;\n});\n\nace.define(\"ace/ext/split\",[\"require\",\"exports\",\"module\",\"ace/split\"], function(require, exports, module) {\n\"use strict\";\nmodule.exports = require(\"../split\");\n\n});                (function() {\n                    ace.require([\"ace/ext/split\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            ","/**\n * Diff Match and Patch\n * Copyright 2018 The diff-match-patch Authors.\n * https://github.com/google/diff-match-patch\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Computes the difference between two texts to create a patch.\n * Applies the patch onto another text, allowing for errors.\n * @author fraser@google.com (Neil Fraser)\n */\n\n/**\n * Class containing the diff, match and patch methods.\n * @constructor\n */\nvar diff_match_patch = function() {\n\n  // Defaults.\n  // Redefine these in your program to override the defaults.\n\n  // Number of seconds to map a diff before giving up (0 for infinity).\n  this.Diff_Timeout = 1.0;\n  // Cost of an empty edit operation in terms of edit characters.\n  this.Diff_EditCost = 4;\n  // At what point is no match declared (0.0 = perfection, 1.0 = very loose).\n  this.Match_Threshold = 0.5;\n  // How far to search for a match (0 = exact location, 1000+ = broad match).\n  // A match this many characters away from the expected location will add\n  // 1.0 to the score (0.0 is a perfect match).\n  this.Match_Distance = 1000;\n  // When deleting a large block of text (over ~64 characters), how close do\n  // the contents have to be to match the expected contents. (0.0 = perfection,\n  // 1.0 = very loose).  Note that Match_Threshold controls how closely the\n  // end points of a delete need to match.\n  this.Patch_DeleteThreshold = 0.5;\n  // Chunk size for context length.\n  this.Patch_Margin = 4;\n\n  // The number of bits in an int.\n  this.Match_MaxBits = 32;\n};\n\n\n//  DIFF FUNCTIONS\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n/**\n * Class representing one diff tuple.\n * ~Attempts to look like a two-element array (which is what this used to be).~\n * Constructor returns an actual two-element array, to allow destructing @JackuB\n * See https://github.com/JackuB/diff-match-patch/issues/14 for details\n * @param {number} op Operation, one of: DIFF_DELETE, DIFF_INSERT, DIFF_EQUAL.\n * @param {string} text Text to be deleted, inserted, or retained.\n * @constructor\n */\ndiff_match_patch.Diff = function(op, text) {\n  return [op, text];\n};\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean=} opt_checklines Optional speedup flag. If present and false,\n *     then don't run a line-level diff first to identify the changed areas.\n *     Defaults to true, which does a faster, slightly less optimal diff.\n * @param {number=} opt_deadline Optional time when the diff should be complete\n *     by.  Used internally for recursive calls.  Users should set DiffTimeout\n *     instead.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_main = function(text1, text2, opt_checklines,\n    opt_deadline) {\n  // Set a deadline by which time the diff must be complete.\n  if (typeof opt_deadline == 'undefined') {\n    if (this.Diff_Timeout <= 0) {\n      opt_deadline = Number.MAX_VALUE;\n    } else {\n      opt_deadline = (new Date).getTime() + this.Diff_Timeout * 1000;\n    }\n  }\n  var deadline = opt_deadline;\n\n  // Check for null inputs.\n  if (text1 == null || text2 == null) {\n    throw new Error('Null input. (diff_main)');\n  }\n\n  // Check for equality (speedup).\n  if (text1 == text2) {\n    if (text1) {\n      return [new diff_match_patch.Diff(DIFF_EQUAL, text1)];\n    }\n    return [];\n  }\n\n  if (typeof opt_checklines == 'undefined') {\n    opt_checklines = true;\n  }\n  var checklines = opt_checklines;\n\n  // Trim off common prefix (speedup).\n  var commonlength = this.diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = this.diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = this.diff_compute_(text1, text2, checklines, deadline);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift(new diff_match_patch.Diff(DIFF_EQUAL, commonprefix));\n  }\n  if (commonsuffix) {\n    diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, commonsuffix));\n  }\n  this.diff_cleanupMerge(diffs);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean} checklines Speedup flag.  If false, then don't run a\n *     line-level diff first to identify the changed areas.\n *     If true, then run a faster, slightly less optimal diff.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_compute_ = function(text1, text2, checklines,\n    deadline) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [new diff_match_patch.Diff(DIFF_INSERT, text2)];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [new diff_match_patch.Diff(DIFF_DELETE, text1)];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i != -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [new diff_match_patch.Diff(DIFF_INSERT, longtext.substring(0, i)),\n             new diff_match_patch.Diff(DIFF_EQUAL, shorttext),\n             new diff_match_patch.Diff(DIFF_INSERT,\n                 longtext.substring(i + shorttext.length))];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length == 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [new diff_match_patch.Diff(DIFF_DELETE, text1),\n            new diff_match_patch.Diff(DIFF_INSERT, text2)];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = this.diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = this.diff_main(text1_a, text2_a, checklines, deadline);\n    var diffs_b = this.diff_main(text1_b, text2_b, checklines, deadline);\n    // Merge the results.\n    return diffs_a.concat([new diff_match_patch.Diff(DIFF_EQUAL, mid_common)],\n                          diffs_b);\n  }\n\n  if (checklines && text1.length > 100 && text2.length > 100) {\n    return this.diff_lineMode_(text1, text2, deadline);\n  }\n\n  return this.diff_bisect_(text1, text2, deadline);\n};\n\n\n/**\n * Do a quick line-level diff on both strings, then rediff the parts for\n * greater accuracy.\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_lineMode_ = function(text1, text2, deadline) {\n  // Scan the text on a line-by-line basis first.\n  var a = this.diff_linesToChars_(text1, text2);\n  text1 = a.chars1;\n  text2 = a.chars2;\n  var linearray = a.lineArray;\n\n  var diffs = this.diff_main(text1, text2, false, deadline);\n\n  // Convert the diff back to original text.\n  this.diff_charsToLines_(diffs, linearray);\n  // Eliminate freak matches (e.g. blank lines)\n  this.diff_cleanupSemantic(diffs);\n\n  // Rediff any replacement blocks, this time character-by-character.\n  // Add a dummy entry at the end.\n  diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, ''));\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete >= 1 && count_insert >= 1) {\n          // Delete the offending records and add the merged ones.\n          diffs.splice(pointer - count_delete - count_insert,\n                       count_delete + count_insert);\n          pointer = pointer - count_delete - count_insert;\n          var subDiff =\n              this.diff_main(text_delete, text_insert, false, deadline);\n          for (var j = subDiff.length - 1; j >= 0; j--) {\n            diffs.splice(pointer, 0, subDiff[j]);\n          }\n          pointer = pointer + subDiff.length;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n    pointer++;\n  }\n  diffs.pop();  // Remove the dummy entry at the end.\n\n  return diffs;\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisect_ = function(text1, text2, deadline) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 != 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Bail out if deadline is reached.\n    if ((new Date()).getTime() > deadline) {\n      break;\n    }\n\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 == -d || (k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (x1 < text1_length && y1 < text2_length &&\n             text1.charAt(x1) == text2.charAt(y1)) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 == -d || (k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (x2 < text1_length && y2 < text2_length &&\n             text1.charAt(text1_length - x2 - 1) ==\n             text2.charAt(text2_length - y2 - 1)) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [new diff_match_patch.Diff(DIFF_DELETE, text1),\n          new diff_match_patch.Diff(DIFF_INSERT, text2)];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisectSplit_ = function(text1, text2, x, y,\n    deadline) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = this.diff_main(text1a, text2a, false, deadline);\n  var diffsb = this.diff_main(text1b, text2b, false, deadline);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Split two texts into an array of strings.  Reduce the texts to a string of\n * hashes where each Unicode character represents one line.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {{chars1: string, chars2: string, lineArray: !Array.<string>}}\n *     An object containing the encoded text1, the encoded text2 and\n *     the array of unique strings.\n *     The zeroth element of the array of unique strings is intentionally blank.\n * @private\n */\ndiff_match_patch.prototype.diff_linesToChars_ = function(text1, text2) {\n  var lineArray = [];  // e.g. lineArray[4] == 'Hello\\n'\n  var lineHash = {};   // e.g. lineHash['Hello\\n'] == 4\n\n  // '\\x00' is a valid character, but various debuggers don't like it.\n  // So we'll insert a junk entry to avoid generating a null character.\n  lineArray[0] = '';\n\n  /**\n   * Split a text into an array of strings.  Reduce the texts to a string of\n   * hashes where each Unicode character represents one line.\n   * Modifies linearray and linehash through being a closure.\n   * @param {string} text String to encode.\n   * @return {string} Encoded string.\n   * @private\n   */\n  function diff_linesToCharsMunge_(text) {\n    var chars = '';\n    // Walk the text, pulling out a substring for each line.\n    // text.split('\\n') would would temporarily double our memory footprint.\n    // Modifying text would create many large strings to garbage collect.\n    var lineStart = 0;\n    var lineEnd = -1;\n    // Keeping our own length variable is faster than looking it up.\n    var lineArrayLength = lineArray.length;\n    while (lineEnd < text.length - 1) {\n      lineEnd = text.indexOf('\\n', lineStart);\n      if (lineEnd == -1) {\n        lineEnd = text.length - 1;\n      }\n      var line = text.substring(lineStart, lineEnd + 1);\n\n      if (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) :\n          (lineHash[line] !== undefined)) {\n        chars += String.fromCharCode(lineHash[line]);\n      } else {\n        if (lineArrayLength == maxLines) {\n          // Bail out at 65535 because\n          // String.fromCharCode(65536) == String.fromCharCode(0)\n          line = text.substring(lineStart);\n          lineEnd = text.length;\n        }\n        chars += String.fromCharCode(lineArrayLength);\n        lineHash[line] = lineArrayLength;\n        lineArray[lineArrayLength++] = line;\n      }\n      lineStart = lineEnd + 1;\n    }\n    return chars;\n  }\n  // Allocate 2/3rds of the space for text1, the rest for text2.\n  var maxLines = 40000;\n  var chars1 = diff_linesToCharsMunge_(text1);\n  maxLines = 65535;\n  var chars2 = diff_linesToCharsMunge_(text2);\n  return {chars1: chars1, chars2: chars2, lineArray: lineArray};\n};\n\n\n/**\n * Rehydrate the text in a diff from a string of line hashes to real lines of\n * text.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {!Array.<string>} lineArray Array of unique strings.\n * @private\n */\ndiff_match_patch.prototype.diff_charsToLines_ = function(diffs, lineArray) {\n  for (var i = 0; i < diffs.length; i++) {\n    var chars = diffs[i][1];\n    var text = [];\n    for (var j = 0; j < chars.length; j++) {\n      text[j] = lineArray[chars.charCodeAt(j)];\n    }\n    diffs[i][1] = text.join('');\n  }\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\ndiff_match_patch.prototype.diff_commonPrefix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: https://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(pointerstart, pointermid) ==\n        text2.substring(pointerstart, pointermid)) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\ndiff_match_patch.prototype.diff_commonSuffix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 ||\n      text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: https://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n        text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine if the suffix of one string is the prefix of another.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of the first\n *     string and the start of the second string.\n * @private\n */\ndiff_match_patch.prototype.diff_commonOverlap_ = function(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  // Eliminate the null case.\n  if (text1_length == 0 || text2_length == 0) {\n    return 0;\n  }\n  // Truncate the longer string.\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n  var text_length = Math.min(text1_length, text2_length);\n  // Quick check for the worst case.\n  if (text1 == text2) {\n    return text_length;\n  }\n\n  // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: https://neil.fraser.name/news/2010/11/04/\n  var best = 0;\n  var length = 1;\n  while (true) {\n    var pattern = text1.substring(text_length - length);\n    var found = text2.indexOf(pattern);\n    if (found == -1) {\n      return best;\n    }\n    length += found;\n    if (found == 0 || text1.substring(text_length - length) ==\n        text2.substring(0, length)) {\n      best = length;\n      length++;\n    }\n  }\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n * @private\n */\ndiff_match_patch.prototype.diff_halfMatch_ = function(text1, text2) {\n  if (this.Diff_Timeout <= 0) {\n    // Don't risk returning a non-optimal diff if we have unlimited time.\n    return null;\n  }\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {\n      var prefixLength = dmp.diff_commonPrefix(longtext.substring(i),\n                                               shorttext.substring(j));\n      var suffixLength = dmp.diff_commonSuffix(longtext.substring(0, i),\n                                               shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(j - suffixLength, j) +\n            shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [best_longtext_a, best_longtext_b,\n              best_shorttext_a, best_shorttext_b, best_common];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemantic = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastEquality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Number of characters that changed prior to the equality.\n  var length_insertions1 = 0;\n  var length_deletions1 = 0;\n  // Number of characters that changed after the equality.\n  var length_insertions2 = 0;\n  var length_deletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastEquality = diffs[pointer][1];\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      }\n      // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n      if (lastEquality && (lastEquality.length <=\n          Math.max(length_insertions1, length_deletions1)) &&\n          (lastEquality.length <= Math.max(length_insertions2,\n                                           length_deletions2))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     new diff_match_patch.Diff(DIFF_DELETE, lastEquality));\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        // Throw away the equality we just deleted.\n        equalitiesLength--;\n        // Throw away the previous equality (it needs to be reevaluated).\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0;  // Reset the counters.\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastEquality = null;\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  // Normalize the diff.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n  this.diff_cleanupSemanticLossless(diffs);\n\n  // Find any overlaps between deletions and insertions.\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  //   -> <del>abc</del>xxx<ins>def</ins>\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\n  //   -> <ins>def</ins>xxx<del>abc</del>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (diffs[pointer - 1][0] == DIFF_DELETE &&\n        diffs[pointer][0] == DIFF_INSERT) {\n      var deletion = diffs[pointer - 1][1];\n      var insertion = diffs[pointer][1];\n      var overlap_length1 = this.diff_commonOverlap_(deletion, insertion);\n      var overlap_length2 = this.diff_commonOverlap_(insertion, deletion);\n      if (overlap_length1 >= overlap_length2) {\n        if (overlap_length1 >= deletion.length / 2 ||\n            overlap_length1 >= insertion.length / 2) {\n          // Overlap found.  Insert an equality and trim the surrounding edits.\n          diffs.splice(pointer, 0, new diff_match_patch.Diff(DIFF_EQUAL,\n              insertion.substring(0, overlap_length1)));\n          diffs[pointer - 1][1] =\n              deletion.substring(0, deletion.length - overlap_length1);\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\n          pointer++;\n        }\n      } else {\n        if (overlap_length2 >= deletion.length / 2 ||\n            overlap_length2 >= insertion.length / 2) {\n          // Reverse overlap found.\n          // Insert an equality and swap and trim the surrounding edits.\n          diffs.splice(pointer, 0, new diff_match_patch.Diff(DIFF_EQUAL,\n              deletion.substring(0, overlap_length2)));\n          diffs[pointer - 1][0] = DIFF_INSERT;\n          diffs[pointer - 1][1] =\n              insertion.substring(0, insertion.length - overlap_length2);\n          diffs[pointer + 1][0] = DIFF_DELETE;\n          diffs[pointer + 1][1] =\n              deletion.substring(overlap_length2);\n          pointer++;\n        }\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n};\n\n\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemanticLossless = function(diffs) {\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 6 (best) to 0 (worst).\n   * Closure, but does not reference any external variables.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n   * @return {number} The score.\n   * @private\n   */\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 6;\n    }\n\n    // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n    var char1 = one.charAt(one.length - 1);\n    var char2 = two.charAt(0);\n    var nonAlphaNumeric1 = char1.match(diff_match_patch.nonAlphaNumericRegex_);\n    var nonAlphaNumeric2 = char2.match(diff_match_patch.nonAlphaNumericRegex_);\n    var whitespace1 = nonAlphaNumeric1 &&\n        char1.match(diff_match_patch.whitespaceRegex_);\n    var whitespace2 = nonAlphaNumeric2 &&\n        char2.match(diff_match_patch.whitespaceRegex_);\n    var lineBreak1 = whitespace1 &&\n        char1.match(diff_match_patch.linebreakRegex_);\n    var lineBreak2 = whitespace2 &&\n        char2.match(diff_match_patch.linebreakRegex_);\n    var blankLine1 = lineBreak1 &&\n        one.match(diff_match_patch.blanklineEndRegex_);\n    var blankLine2 = lineBreak2 &&\n        two.match(diff_match_patch.blanklineStartRegex_);\n\n    if (blankLine1 || blankLine2) {\n      // Five points for blank lines.\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      // Four points for line breaks.\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      // Three points for end of sentences.\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      // Two points for whitespace.\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      // One point for non-alphanumeric.\n      return 1;\n    }\n    return 0;\n  }\n\n  var pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      var equality1 = diffs[pointer - 1][1];\n      var edit = diffs[pointer][1];\n      var equality2 = diffs[pointer + 1][1];\n\n      // First, shift the edit as far left as possible.\n      var commonOffset = this.diff_commonSuffix(equality1, edit);\n      if (commonOffset) {\n        var commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n\n      // Second, step character by character right, looking for the best fit.\n      var bestEquality1 = equality1;\n      var bestEdit = edit;\n      var bestEquality2 = equality2;\n      var bestScore = diff_cleanupSemanticScore_(equality1, edit) +\n          diff_cleanupSemanticScore_(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        var score = diff_cleanupSemanticScore_(equality1, edit) +\n            diff_cleanupSemanticScore_(edit, equality2);\n        // The >= encourages trailing rather than leading whitespace on edits.\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n\n      if (diffs[pointer - 1][1] != bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n};\n\n// Define some regex patterns for matching boundaries.\ndiff_match_patch.nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\ndiff_match_patch.whitespaceRegex_ = /\\s/;\ndiff_match_patch.linebreakRegex_ = /[\\r\\n]/;\ndiff_match_patch.blanklineEndRegex_ = /\\n\\r?\\n$/;\ndiff_match_patch.blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\n\n/**\n * Reduce the number of edits by eliminating operationally trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupEfficiency = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastEquality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Is there an insertion operation before the last equality.\n  var pre_ins = false;\n  // Is there a deletion operation before the last equality.\n  var pre_del = false;\n  // Is there an insertion operation after the last equality.\n  var post_ins = false;\n  // Is there a deletion operation after the last equality.\n  var post_del = false;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      if (diffs[pointer][1].length < this.Diff_EditCost &&\n          (post_ins || post_del)) {\n        // Candidate found.\n        equalities[equalitiesLength++] = pointer;\n        pre_ins = post_ins;\n        pre_del = post_del;\n        lastEquality = diffs[pointer][1];\n      } else {\n        // Not a candidate, and can never become one.\n        equalitiesLength = 0;\n        lastEquality = null;\n      }\n      post_ins = post_del = false;\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_DELETE) {\n        post_del = true;\n      } else {\n        post_ins = true;\n      }\n      /*\n       * Five types to be split:\n       * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\n       * <ins>A</ins>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<ins>C</ins>\n       * <ins>A</del>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<del>C</del>\n       */\n      if (lastEquality && ((pre_ins && pre_del && post_ins && post_del) ||\n                           ((lastEquality.length < this.Diff_EditCost / 2) &&\n                            (pre_ins + pre_del + post_ins + post_del) == 3))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     new diff_match_patch.Diff(DIFF_DELETE, lastEquality));\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        equalitiesLength--;  // Throw away the equality we just deleted;\n        lastEquality = null;\n        if (pre_ins && pre_del) {\n          // No changes made which could affect previous entry, keep going.\n          post_ins = post_del = true;\n          equalitiesLength = 0;\n        } else {\n          equalitiesLength--;  // Throw away the previous equality.\n          pointer = equalitiesLength > 0 ?\n              equalities[equalitiesLength - 1] : -1;\n          post_ins = post_del = false;\n        }\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupMerge = function(diffs) {\n  // Add a dummy entry at the end.\n  diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, ''));\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete + count_insert > 1) {\n          if (count_delete !== 0 && count_insert !== 0) {\n            // Factor out any common prefixies.\n            commonlength = this.diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if ((pointer - count_delete - count_insert) > 0 &&\n                  diffs[pointer - count_delete - count_insert - 1][0] ==\n                  DIFF_EQUAL) {\n                diffs[pointer - count_delete - count_insert - 1][1] +=\n                    text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, new diff_match_patch.Diff(DIFF_EQUAL,\n                    text_insert.substring(0, commonlength)));\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixies.\n            commonlength = this.diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] = text_insert.substring(text_insert.length -\n                  commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length -\n                  commonlength);\n              text_delete = text_delete.substring(0, text_delete.length -\n                  commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          pointer -= count_delete + count_insert;\n          diffs.splice(pointer, count_delete + count_insert);\n          if (text_delete.length) {\n            diffs.splice(pointer, 0,\n                new diff_match_patch.Diff(DIFF_DELETE, text_delete));\n            pointer++;\n          }\n          if (text_insert.length) {\n            diffs.splice(pointer, 0,\n                new diff_match_patch.Diff(DIFF_INSERT, text_insert));\n            pointer++;\n          }\n          pointer++;\n        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n          diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n            diffs[pointer][1].substring(0, diffs[pointer][1].length -\n                                        diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n          diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n            diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n            diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * loc is a location in text1, compute and return the equivalent location in\n * text2.\n * e.g. 'The cat' vs 'The big cat', 1->1, 5->8\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {number} loc Location within text1.\n * @return {number} Location within text2.\n */\ndiff_match_patch.prototype.diff_xIndex = function(diffs, loc) {\n  var chars1 = 0;\n  var chars2 = 0;\n  var last_chars1 = 0;\n  var last_chars2 = 0;\n  var x;\n  for (x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {  // Equality or deletion.\n      chars1 += diffs[x][1].length;\n    }\n    if (diffs[x][0] !== DIFF_DELETE) {  // Equality or insertion.\n      chars2 += diffs[x][1].length;\n    }\n    if (chars1 > loc) {  // Overshot the location.\n      break;\n    }\n    last_chars1 = chars1;\n    last_chars2 = chars2;\n  }\n  // Was the location was deleted?\n  if (diffs.length != x && diffs[x][0] === DIFF_DELETE) {\n    return last_chars2;\n  }\n  // Add the remaining character length.\n  return last_chars2 + (loc - last_chars1);\n};\n\n\n/**\n * Convert a diff array into a pretty HTML report.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} HTML representation.\n */\ndiff_match_patch.prototype.diff_prettyHtml = function(diffs) {\n  var html = [];\n  var pattern_amp = /&/g;\n  var pattern_lt = /</g;\n  var pattern_gt = />/g;\n  var pattern_para = /\\n/g;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];    // Operation (insert, delete, equal)\n    var data = diffs[x][1];  // Text of change.\n    var text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;')\n        .replace(pattern_gt, '&gt;').replace(pattern_para, '&para;<br>');\n    switch (op) {\n      case DIFF_INSERT:\n        html[x] = '<ins style=\"background:#e6ffe6;\">' + text + '</ins>';\n        break;\n      case DIFF_DELETE:\n        html[x] = '<del style=\"background:#ffe6e6;\">' + text + '</del>';\n        break;\n      case DIFF_EQUAL:\n        html[x] = '<span>' + text + '</span>';\n        break;\n    }\n  }\n  return html.join('');\n};\n\n\n/**\n * Compute and return the source text (all equalities and deletions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Source text.\n */\ndiff_match_patch.prototype.diff_text1 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute and return the destination text (all equalities and insertions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Destination text.\n */\ndiff_match_patch.prototype.diff_text2 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_DELETE) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute the Levenshtein distance; the number of inserted, deleted or\n * substituted characters.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {number} Number of changes.\n */\ndiff_match_patch.prototype.diff_levenshtein = function(diffs) {\n  var levenshtein = 0;\n  var insertions = 0;\n  var deletions = 0;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];\n    var data = diffs[x][1];\n    switch (op) {\n      case DIFF_INSERT:\n        insertions += data.length;\n        break;\n      case DIFF_DELETE:\n        deletions += data.length;\n        break;\n      case DIFF_EQUAL:\n        // A deletion and an insertion is one substitution.\n        levenshtein += Math.max(insertions, deletions);\n        insertions = 0;\n        deletions = 0;\n        break;\n    }\n  }\n  levenshtein += Math.max(insertions, deletions);\n  return levenshtein;\n};\n\n\n/**\n * Crush the diff into an encoded string which describes the operations\n * required to transform text1 into text2.\n * E.g. =3\\t-2\\t+ing  -> Keep 3 chars, delete 2 chars, insert 'ing'.\n * Operations are tab-separated.  Inserted text is escaped using %xx notation.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Delta text.\n */\ndiff_match_patch.prototype.diff_toDelta = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    switch (diffs[x][0]) {\n      case DIFF_INSERT:\n        text[x] = '+' + encodeURI(diffs[x][1]);\n        break;\n      case DIFF_DELETE:\n        text[x] = '-' + diffs[x][1].length;\n        break;\n      case DIFF_EQUAL:\n        text[x] = '=' + diffs[x][1].length;\n        break;\n    }\n  }\n  return text.join('\\t').replace(/%20/g, ' ');\n};\n\n\n/**\n * Given the original text1, and an encoded string which describes the\n * operations required to transform text1 into text2, compute the full diff.\n * @param {string} text1 Source string for the diff.\n * @param {string} delta Delta text.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.diff_fromDelta = function(text1, delta) {\n  var diffs = [];\n  var diffsLength = 0;  // Keeping our own length var is faster in JS.\n  var pointer = 0;  // Cursor in text1\n  var tokens = delta.split(/\\t/g);\n  for (var x = 0; x < tokens.length; x++) {\n    // Each token begins with a one character parameter which specifies the\n    // operation of this token (delete, insert, equality).\n    var param = tokens[x].substring(1);\n    switch (tokens[x].charAt(0)) {\n      case '+':\n        try {\n          diffs[diffsLength++] =\n              new diff_match_patch.Diff(DIFF_INSERT, decodeURI(param));\n        } catch (ex) {\n          // Malformed URI sequence.\n          throw new Error('Illegal escape in diff_fromDelta: ' + param);\n        }\n        break;\n      case '-':\n        // Fall through.\n      case '=':\n        var n = parseInt(param, 10);\n        if (isNaN(n) || n < 0) {\n          throw new Error('Invalid number in diff_fromDelta: ' + param);\n        }\n        var text = text1.substring(pointer, pointer += n);\n        if (tokens[x].charAt(0) == '=') {\n          diffs[diffsLength++] = new diff_match_patch.Diff(DIFF_EQUAL, text);\n        } else {\n          diffs[diffsLength++] = new diff_match_patch.Diff(DIFF_DELETE, text);\n        }\n        break;\n      default:\n        // Blank tokens are ok (from a trailing \\t).\n        // Anything else is an error.\n        if (tokens[x]) {\n          throw new Error('Invalid diff operation in diff_fromDelta: ' +\n                          tokens[x]);\n        }\n    }\n  }\n  if (pointer != text1.length) {\n    throw new Error('Delta length (' + pointer +\n        ') does not equal source text length (' + text1.length + ').');\n  }\n  return diffs;\n};\n\n\n//  MATCH FUNCTIONS\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc'.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n */\ndiff_match_patch.prototype.match_main = function(text, pattern, loc) {\n  // Check for null inputs.\n  if (text == null || pattern == null || loc == null) {\n    throw new Error('Null input. (match_main)');\n  }\n\n  loc = Math.max(0, Math.min(loc, text.length));\n  if (text == pattern) {\n    // Shortcut (potentially not guaranteed by the algorithm)\n    return 0;\n  } else if (!text.length) {\n    // Nothing to match.\n    return -1;\n  } else if (text.substring(loc, loc + pattern.length) == pattern) {\n    // Perfect match at the perfect spot!  (Includes case of null pattern)\n    return loc;\n  } else {\n    // Do a fuzzy compare.\n    return this.match_bitap_(text, pattern, loc);\n  }\n};\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc' using the\n * Bitap algorithm.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n * @private\n */\ndiff_match_patch.prototype.match_bitap_ = function(text, pattern, loc) {\n  if (pattern.length > this.Match_MaxBits) {\n    throw new Error('Pattern too long for this browser.');\n  }\n\n  // Initialise the alphabet.\n  var s = this.match_alphabet_(pattern);\n\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Compute and return the score for a match with e errors and x location.\n   * Accesses loc and pattern through being a closure.\n   * @param {number} e Number of errors in match.\n   * @param {number} x Location of match.\n   * @return {number} Overall score for match (0.0 = good, 1.0 = bad).\n   * @private\n   */\n  function match_bitapScore_(e, x) {\n    var accuracy = e / pattern.length;\n    var proximity = Math.abs(loc - x);\n    if (!dmp.Match_Distance) {\n      // Dodge divide by zero error.\n      return proximity ? 1.0 : accuracy;\n    }\n    return accuracy + (proximity / dmp.Match_Distance);\n  }\n\n  // Highest score beyond which we give up.\n  var score_threshold = this.Match_Threshold;\n  // Is there a nearby exact match? (speedup)\n  var best_loc = text.indexOf(pattern, loc);\n  if (best_loc != -1) {\n    score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    // What about in the other direction? (speedup)\n    best_loc = text.lastIndexOf(pattern, loc + pattern.length);\n    if (best_loc != -1) {\n      score_threshold =\n          Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    }\n  }\n\n  // Initialise the bit arrays.\n  var matchmask = 1 << (pattern.length - 1);\n  best_loc = -1;\n\n  var bin_min, bin_mid;\n  var bin_max = pattern.length + text.length;\n  var last_rd;\n  for (var d = 0; d < pattern.length; d++) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from 'loc' we can stray at this\n    // error level.\n    bin_min = 0;\n    bin_mid = bin_max;\n    while (bin_min < bin_mid) {\n      if (match_bitapScore_(d, loc + bin_mid) <= score_threshold) {\n        bin_min = bin_mid;\n      } else {\n        bin_max = bin_mid;\n      }\n      bin_mid = Math.floor((bin_max - bin_min) / 2 + bin_min);\n    }\n    // Use the result from this iteration as the maximum for the next.\n    bin_max = bin_mid;\n    var start = Math.max(1, loc - bin_mid + 1);\n    var finish = Math.min(loc + bin_mid, text.length) + pattern.length;\n\n    var rd = Array(finish + 2);\n    rd[finish + 1] = (1 << d) - 1;\n    for (var j = finish; j >= start; j--) {\n      // The alphabet (s) is a sparse hash, so the following line generates\n      // warnings.\n      var charMatch = s[text.charAt(j - 1)];\n      if (d === 0) {  // First pass: exact match.\n        rd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\n      } else {  // Subsequent passes: fuzzy match.\n        rd[j] = (((rd[j + 1] << 1) | 1) & charMatch) |\n                (((last_rd[j + 1] | last_rd[j]) << 1) | 1) |\n                last_rd[j + 1];\n      }\n      if (rd[j] & matchmask) {\n        var score = match_bitapScore_(d, j - 1);\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (score <= score_threshold) {\n          // Told you so.\n          score_threshold = score;\n          best_loc = j - 1;\n          if (best_loc > loc) {\n            // When passing loc, don't exceed our current distance from loc.\n            start = Math.max(1, 2 * loc - best_loc);\n          } else {\n            // Already passed loc, downhill from here on in.\n            break;\n          }\n        }\n      }\n    }\n    // No hope for a (better) match at greater error levels.\n    if (match_bitapScore_(d + 1, loc) > score_threshold) {\n      break;\n    }\n    last_rd = rd;\n  }\n  return best_loc;\n};\n\n\n/**\n * Initialise the alphabet for the Bitap algorithm.\n * @param {string} pattern The text to encode.\n * @return {!Object} Hash of character locations.\n * @private\n */\ndiff_match_patch.prototype.match_alphabet_ = function(pattern) {\n  var s = {};\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] = 0;\n  }\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] |= 1 << (pattern.length - i - 1);\n  }\n  return s;\n};\n\n\n//  PATCH FUNCTIONS\n\n\n/**\n * Increase the context until it is unique,\n * but don't let the pattern expand beyond Match_MaxBits.\n * @param {!diff_match_patch.patch_obj} patch The patch to grow.\n * @param {string} text Source text.\n * @private\n */\ndiff_match_patch.prototype.patch_addContext_ = function(patch, text) {\n  if (text.length == 0) {\n    return;\n  }\n  if (patch.start2 === null) {\n    throw Error('patch not initialized');\n  }\n  var pattern = text.substring(patch.start2, patch.start2 + patch.length1);\n  var padding = 0;\n\n  // Look for the first and last matches of pattern in text.  If two different\n  // matches are found, increase the pattern length.\n  while (text.indexOf(pattern) != text.lastIndexOf(pattern) &&\n         pattern.length < this.Match_MaxBits - this.Patch_Margin -\n         this.Patch_Margin) {\n    padding += this.Patch_Margin;\n    pattern = text.substring(patch.start2 - padding,\n                             patch.start2 + patch.length1 + padding);\n  }\n  // Add one chunk for good luck.\n  padding += this.Patch_Margin;\n\n  // Add the prefix.\n  var prefix = text.substring(patch.start2 - padding, patch.start2);\n  if (prefix) {\n    patch.diffs.unshift(new diff_match_patch.Diff(DIFF_EQUAL, prefix));\n  }\n  // Add the suffix.\n  var suffix = text.substring(patch.start2 + patch.length1,\n                              patch.start2 + patch.length1 + padding);\n  if (suffix) {\n    patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, suffix));\n  }\n\n  // Roll back the start points.\n  patch.start1 -= prefix.length;\n  patch.start2 -= prefix.length;\n  // Extend the lengths.\n  patch.length1 += prefix.length + suffix.length;\n  patch.length2 += prefix.length + suffix.length;\n};\n\n\n/**\n * Compute a list of patches to turn text1 into text2.\n * Use diffs if provided, otherwise compute it ourselves.\n * There are four ways to call this function, depending on what data is\n * available to the caller:\n * Method 1:\n * a = text1, b = text2\n * Method 2:\n * a = diffs\n * Method 3 (optimal):\n * a = text1, b = diffs\n * Method 4 (deprecated, use method 3):\n * a = text1, b = text2, c = diffs\n *\n * @param {string|!Array.<!diff_match_patch.Diff>} a text1 (methods 1,3,4) or\n * Array of diff tuples for text1 to text2 (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>=} opt_b text2 (methods 1,4) or\n * Array of diff tuples for text1 to text2 (method 3) or undefined (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>=} opt_c Array of diff tuples\n * for text1 to text2 (method 4) or undefined (methods 1,2,3).\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_make = function(a, opt_b, opt_c) {\n  var text1, diffs;\n  if (typeof a == 'string' && typeof opt_b == 'string' &&\n      typeof opt_c == 'undefined') {\n    // Method 1: text1, text2\n    // Compute diffs from text1 and text2.\n    text1 = /** @type {string} */(a);\n    diffs = this.diff_main(text1, /** @type {string} */(opt_b), true);\n    if (diffs.length > 2) {\n      this.diff_cleanupSemantic(diffs);\n      this.diff_cleanupEfficiency(diffs);\n    }\n  } else if (a && typeof a == 'object' && typeof opt_b == 'undefined' &&\n      typeof opt_c == 'undefined') {\n    // Method 2: diffs\n    // Compute text1 from diffs.\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(a);\n    text1 = this.diff_text1(diffs);\n  } else if (typeof a == 'string' && opt_b && typeof opt_b == 'object' &&\n      typeof opt_c == 'undefined') {\n    // Method 3: text1, diffs\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_b);\n  } else if (typeof a == 'string' && typeof opt_b == 'string' &&\n      opt_c && typeof opt_c == 'object') {\n    // Method 4: text1, text2, diffs\n    // text2 is not used.\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_c);\n  } else {\n    throw new Error('Unknown call format to patch_make.');\n  }\n\n  if (diffs.length === 0) {\n    return [];  // Get rid of the null case.\n  }\n  var patches = [];\n  var patch = new diff_match_patch.patch_obj();\n  var patchDiffLength = 0;  // Keeping our own length var is faster in JS.\n  var char_count1 = 0;  // Number of characters into the text1 string.\n  var char_count2 = 0;  // Number of characters into the text2 string.\n  // Start with text1 (prepatch_text) and apply the diffs until we arrive at\n  // text2 (postpatch_text).  We recreate the patches one by one to determine\n  // context info.\n  var prepatch_text = text1;\n  var postpatch_text = text1;\n  for (var x = 0; x < diffs.length; x++) {\n    var diff_type = diffs[x][0];\n    var diff_text = diffs[x][1];\n\n    if (!patchDiffLength && diff_type !== DIFF_EQUAL) {\n      // A new patch starts here.\n      patch.start1 = char_count1;\n      patch.start2 = char_count2;\n    }\n\n    switch (diff_type) {\n      case DIFF_INSERT:\n        patch.diffs[patchDiffLength++] = diffs[x];\n        patch.length2 += diff_text.length;\n        postpatch_text = postpatch_text.substring(0, char_count2) + diff_text +\n                         postpatch_text.substring(char_count2);\n        break;\n      case DIFF_DELETE:\n        patch.length1 += diff_text.length;\n        patch.diffs[patchDiffLength++] = diffs[x];\n        postpatch_text = postpatch_text.substring(0, char_count2) +\n                         postpatch_text.substring(char_count2 +\n                             diff_text.length);\n        break;\n      case DIFF_EQUAL:\n        if (diff_text.length <= 2 * this.Patch_Margin &&\n            patchDiffLength && diffs.length != x + 1) {\n          // Small equality inside a patch.\n          patch.diffs[patchDiffLength++] = diffs[x];\n          patch.length1 += diff_text.length;\n          patch.length2 += diff_text.length;\n        } else if (diff_text.length >= 2 * this.Patch_Margin) {\n          // Time for a new patch.\n          if (patchDiffLength) {\n            this.patch_addContext_(patch, prepatch_text);\n            patches.push(patch);\n            patch = new diff_match_patch.patch_obj();\n            patchDiffLength = 0;\n            // Unlike Unidiff, our patch lists have a rolling context.\n            // https://github.com/google/diff-match-patch/wiki/Unidiff\n            // Update prepatch text & pos to reflect the application of the\n            // just completed patch.\n            prepatch_text = postpatch_text;\n            char_count1 = char_count2;\n          }\n        }\n        break;\n    }\n\n    // Update the current character count.\n    if (diff_type !== DIFF_INSERT) {\n      char_count1 += diff_text.length;\n    }\n    if (diff_type !== DIFF_DELETE) {\n      char_count2 += diff_text.length;\n    }\n  }\n  // Pick up the leftover patch if not empty.\n  if (patchDiffLength) {\n    this.patch_addContext_(patch, prepatch_text);\n    patches.push(patch);\n  }\n\n  return patches;\n};\n\n\n/**\n * Given an array of patches, return another array that is identical.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_deepCopy = function(patches) {\n  // Making deep copies is hard in JavaScript.\n  var patchesCopy = [];\n  for (var x = 0; x < patches.length; x++) {\n    var patch = patches[x];\n    var patchCopy = new diff_match_patch.patch_obj();\n    patchCopy.diffs = [];\n    for (var y = 0; y < patch.diffs.length; y++) {\n      patchCopy.diffs[y] =\n          new diff_match_patch.Diff(patch.diffs[y][0], patch.diffs[y][1]);\n    }\n    patchCopy.start1 = patch.start1;\n    patchCopy.start2 = patch.start2;\n    patchCopy.length1 = patch.length1;\n    patchCopy.length2 = patch.length2;\n    patchesCopy[x] = patchCopy;\n  }\n  return patchesCopy;\n};\n\n\n/**\n * Merge a set of patches onto the text.  Return a patched text, as well\n * as a list of true/false values indicating which patches were applied.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @param {string} text Old text.\n * @return {!Array.<string|!Array.<boolean>>} Two element Array, containing the\n *      new text and an array of boolean values.\n */\ndiff_match_patch.prototype.patch_apply = function(patches, text) {\n  if (patches.length == 0) {\n    return [text, []];\n  }\n\n  // Deep copy the patches so that no changes are made to originals.\n  patches = this.patch_deepCopy(patches);\n\n  var nullPadding = this.patch_addPadding(patches);\n  text = nullPadding + text + nullPadding;\n\n  this.patch_splitMax(patches);\n  // delta keeps track of the offset between the expected and actual location\n  // of the previous patch.  If there are patches expected at positions 10 and\n  // 20, but the first patch was found at 12, delta is 2 and the second patch\n  // has an effective expected position of 22.\n  var delta = 0;\n  var results = [];\n  for (var x = 0; x < patches.length; x++) {\n    var expected_loc = patches[x].start2 + delta;\n    var text1 = this.diff_text1(patches[x].diffs);\n    var start_loc;\n    var end_loc = -1;\n    if (text1.length > this.Match_MaxBits) {\n      // patch_splitMax will only provide an oversized pattern in the case of\n      // a monster delete.\n      start_loc = this.match_main(text, text1.substring(0, this.Match_MaxBits),\n                                  expected_loc);\n      if (start_loc != -1) {\n        end_loc = this.match_main(text,\n            text1.substring(text1.length - this.Match_MaxBits),\n            expected_loc + text1.length - this.Match_MaxBits);\n        if (end_loc == -1 || start_loc >= end_loc) {\n          // Can't find valid trailing context.  Drop this patch.\n          start_loc = -1;\n        }\n      }\n    } else {\n      start_loc = this.match_main(text, text1, expected_loc);\n    }\n    if (start_loc == -1) {\n      // No match found.  :(\n      results[x] = false;\n      // Subtract the delta for this failed patch from subsequent patches.\n      delta -= patches[x].length2 - patches[x].length1;\n    } else {\n      // Found a match.  :)\n      results[x] = true;\n      delta = start_loc - expected_loc;\n      var text2;\n      if (end_loc == -1) {\n        text2 = text.substring(start_loc, start_loc + text1.length);\n      } else {\n        text2 = text.substring(start_loc, end_loc + this.Match_MaxBits);\n      }\n      if (text1 == text2) {\n        // Perfect match, just shove the replacement text in.\n        text = text.substring(0, start_loc) +\n               this.diff_text2(patches[x].diffs) +\n               text.substring(start_loc + text1.length);\n      } else {\n        // Imperfect match.  Run a diff to get a framework of equivalent\n        // indices.\n        var diffs = this.diff_main(text1, text2, false);\n        if (text1.length > this.Match_MaxBits &&\n            this.diff_levenshtein(diffs) / text1.length >\n            this.Patch_DeleteThreshold) {\n          // The end points match, but the content is unacceptably bad.\n          results[x] = false;\n        } else {\n          this.diff_cleanupSemanticLossless(diffs);\n          var index1 = 0;\n          var index2;\n          for (var y = 0; y < patches[x].diffs.length; y++) {\n            var mod = patches[x].diffs[y];\n            if (mod[0] !== DIFF_EQUAL) {\n              index2 = this.diff_xIndex(diffs, index1);\n            }\n            if (mod[0] === DIFF_INSERT) {  // Insertion\n              text = text.substring(0, start_loc + index2) + mod[1] +\n                     text.substring(start_loc + index2);\n            } else if (mod[0] === DIFF_DELETE) {  // Deletion\n              text = text.substring(0, start_loc + index2) +\n                     text.substring(start_loc + this.diff_xIndex(diffs,\n                         index1 + mod[1].length));\n            }\n            if (mod[0] !== DIFF_DELETE) {\n              index1 += mod[1].length;\n            }\n          }\n        }\n      }\n    }\n  }\n  // Strip the padding off.\n  text = text.substring(nullPadding.length, text.length - nullPadding.length);\n  return [text, results];\n};\n\n\n/**\n * Add some padding on text start and end so that edges can match something.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} The padding string added to each side.\n */\ndiff_match_patch.prototype.patch_addPadding = function(patches) {\n  var paddingLength = this.Patch_Margin;\n  var nullPadding = '';\n  for (var x = 1; x <= paddingLength; x++) {\n    nullPadding += String.fromCharCode(x);\n  }\n\n  // Bump all the patches forward.\n  for (var x = 0; x < patches.length; x++) {\n    patches[x].start1 += paddingLength;\n    patches[x].start2 += paddingLength;\n  }\n\n  // Add some padding on start of first diff.\n  var patch = patches[0];\n  var diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[0][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.unshift(new diff_match_patch.Diff(DIFF_EQUAL, nullPadding));\n    patch.start1 -= paddingLength;  // Should be 0.\n    patch.start2 -= paddingLength;  // Should be 0.\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[0][1].length) {\n    // Grow first equality.\n    var extraLength = paddingLength - diffs[0][1].length;\n    diffs[0][1] = nullPadding.substring(diffs[0][1].length) + diffs[0][1];\n    patch.start1 -= extraLength;\n    patch.start2 -= extraLength;\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  // Add some padding on end of last diff.\n  patch = patches[patches.length - 1];\n  diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[diffs.length - 1][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, nullPadding));\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[diffs.length - 1][1].length) {\n    // Grow last equality.\n    var extraLength = paddingLength - diffs[diffs.length - 1][1].length;\n    diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength);\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  return nullPadding;\n};\n\n\n/**\n * Look through the patches and break up any which are longer than the maximum\n * limit of the match algorithm.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_splitMax = function(patches) {\n  var patch_size = this.Match_MaxBits;\n  for (var x = 0; x < patches.length; x++) {\n    if (patches[x].length1 <= patch_size) {\n      continue;\n    }\n    var bigpatch = patches[x];\n    // Remove the big old patch.\n    patches.splice(x--, 1);\n    var start1 = bigpatch.start1;\n    var start2 = bigpatch.start2;\n    var precontext = '';\n    while (bigpatch.diffs.length !== 0) {\n      // Create one of several smaller patches.\n      var patch = new diff_match_patch.patch_obj();\n      var empty = true;\n      patch.start1 = start1 - precontext.length;\n      patch.start2 = start2 - precontext.length;\n      if (precontext !== '') {\n        patch.length1 = patch.length2 = precontext.length;\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, precontext));\n      }\n      while (bigpatch.diffs.length !== 0 &&\n             patch.length1 < patch_size - this.Patch_Margin) {\n        var diff_type = bigpatch.diffs[0][0];\n        var diff_text = bigpatch.diffs[0][1];\n        if (diff_type === DIFF_INSERT) {\n          // Insertions are harmless.\n          patch.length2 += diff_text.length;\n          start2 += diff_text.length;\n          patch.diffs.push(bigpatch.diffs.shift());\n          empty = false;\n        } else if (diff_type === DIFF_DELETE && patch.diffs.length == 1 &&\n                   patch.diffs[0][0] == DIFF_EQUAL &&\n                   diff_text.length > 2 * patch_size) {\n          // This is a large deletion.  Let it pass in one chunk.\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n          empty = false;\n          patch.diffs.push(new diff_match_patch.Diff(diff_type, diff_text));\n          bigpatch.diffs.shift();\n        } else {\n          // Deletion or equality.  Only take as much as we can stomach.\n          diff_text = diff_text.substring(0,\n              patch_size - patch.length1 - this.Patch_Margin);\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n          if (diff_type === DIFF_EQUAL) {\n            patch.length2 += diff_text.length;\n            start2 += diff_text.length;\n          } else {\n            empty = false;\n          }\n          patch.diffs.push(new diff_match_patch.Diff(diff_type, diff_text));\n          if (diff_text == bigpatch.diffs[0][1]) {\n            bigpatch.diffs.shift();\n          } else {\n            bigpatch.diffs[0][1] =\n                bigpatch.diffs[0][1].substring(diff_text.length);\n          }\n        }\n      }\n      // Compute the head context for the next patch.\n      precontext = this.diff_text2(patch.diffs);\n      precontext =\n          precontext.substring(precontext.length - this.Patch_Margin);\n      // Append the end context for this patch.\n      var postcontext = this.diff_text1(bigpatch.diffs)\n                            .substring(0, this.Patch_Margin);\n      if (postcontext !== '') {\n        patch.length1 += postcontext.length;\n        patch.length2 += postcontext.length;\n        if (patch.diffs.length !== 0 &&\n            patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL) {\n          patch.diffs[patch.diffs.length - 1][1] += postcontext;\n        } else {\n          patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, postcontext));\n        }\n      }\n      if (!empty) {\n        patches.splice(++x, 0, patch);\n      }\n    }\n  }\n};\n\n\n/**\n * Take a list of patches and return a textual representation.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} Text representation of patches.\n */\ndiff_match_patch.prototype.patch_toText = function(patches) {\n  var text = [];\n  for (var x = 0; x < patches.length; x++) {\n    text[x] = patches[x];\n  }\n  return text.join('');\n};\n\n\n/**\n * Parse a textual representation of patches and return a list of Patch objects.\n * @param {string} textline Text representation of patches.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.patch_fromText = function(textline) {\n  var patches = [];\n  if (!textline) {\n    return patches;\n  }\n  var text = textline.split('\\n');\n  var textPointer = 0;\n  var patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/;\n  while (textPointer < text.length) {\n    var m = text[textPointer].match(patchHeader);\n    if (!m) {\n      throw new Error('Invalid patch string: ' + text[textPointer]);\n    }\n    var patch = new diff_match_patch.patch_obj();\n    patches.push(patch);\n    patch.start1 = parseInt(m[1], 10);\n    if (m[2] === '') {\n      patch.start1--;\n      patch.length1 = 1;\n    } else if (m[2] == '0') {\n      patch.length1 = 0;\n    } else {\n      patch.start1--;\n      patch.length1 = parseInt(m[2], 10);\n    }\n\n    patch.start2 = parseInt(m[3], 10);\n    if (m[4] === '') {\n      patch.start2--;\n      patch.length2 = 1;\n    } else if (m[4] == '0') {\n      patch.length2 = 0;\n    } else {\n      patch.start2--;\n      patch.length2 = parseInt(m[4], 10);\n    }\n    textPointer++;\n\n    while (textPointer < text.length) {\n      var sign = text[textPointer].charAt(0);\n      try {\n        var line = decodeURI(text[textPointer].substring(1));\n      } catch (ex) {\n        // Malformed URI sequence.\n        throw new Error('Illegal escape in patch_fromText: ' + line);\n      }\n      if (sign == '-') {\n        // Deletion.\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_DELETE, line));\n      } else if (sign == '+') {\n        // Insertion.\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_INSERT, line));\n      } else if (sign == ' ') {\n        // Minor equality.\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, line));\n      } else if (sign == '@') {\n        // Start of next patch.\n        break;\n      } else if (sign === '') {\n        // Blank line?  Whatever.\n      } else {\n        // WTF?\n        throw new Error('Invalid patch mode \"' + sign + '\" in: ' + line);\n      }\n      textPointer++;\n    }\n  }\n  return patches;\n};\n\n\n/**\n * Class representing one patch operation.\n * @constructor\n */\ndiff_match_patch.patch_obj = function() {\n  /** @type {!Array.<!diff_match_patch.Diff>} */\n  this.diffs = [];\n  /** @type {?number} */\n  this.start1 = null;\n  /** @type {?number} */\n  this.start2 = null;\n  /** @type {number} */\n  this.length1 = 0;\n  /** @type {number} */\n  this.length2 = 0;\n};\n\n\n/**\n * Emulate GNU diff's format.\n * Header: @@ -382,8 +481,9 @@\n * Indices are printed as 1-based, not 0-based.\n * @return {string} The GNU diff string.\n */\ndiff_match_patch.patch_obj.prototype.toString = function() {\n  var coords1, coords2;\n  if (this.length1 === 0) {\n    coords1 = this.start1 + ',0';\n  } else if (this.length1 == 1) {\n    coords1 = this.start1 + 1;\n  } else {\n    coords1 = (this.start1 + 1) + ',' + this.length1;\n  }\n  if (this.length2 === 0) {\n    coords2 = this.start2 + ',0';\n  } else if (this.length2 == 1) {\n    coords2 = this.start2 + 1;\n  } else {\n    coords2 = (this.start2 + 1) + ',' + this.length2;\n  }\n  var text = ['@@ -' + coords1 + ' +' + coords2 + ' @@\\n'];\n  var op;\n  // Escape the body of the patch with %xx notation.\n  for (var x = 0; x < this.diffs.length; x++) {\n    switch (this.diffs[x][0]) {\n      case DIFF_INSERT:\n        op = '+';\n        break;\n      case DIFF_DELETE:\n        op = '-';\n        break;\n      case DIFF_EQUAL:\n        op = ' ';\n        break;\n    }\n    text[x + 1] = op + encodeURI(this.diffs[x][1]) + '\\n';\n  }\n  return text.join('').replace(/%20/g, ' ');\n};\n\n\n// The following export code was added by @ForbesLindesay\nmodule.exports = diff_match_patch;\nmodule.exports['diff_match_patch'] = diff_match_patch;\nmodule.exports['DIFF_DELETE'] = DIFF_DELETE;\nmodule.exports['DIFF_INSERT'] = DIFF_INSERT;\nmodule.exports['DIFF_EQUAL'] = DIFF_EQUAL;","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PropTypes = require(\"prop-types\");\nvar React = require(\"react\");\nvar isEqual = require(\"lodash.isequal\");\nvar editorOptions_1 = require(\"./editorOptions\");\nvar ace = editorOptions_1.getAceInstance();\nvar Range = ace.require(\"ace/range\").Range;\nvar ReactAce = /** @class */ (function (_super) {\n    __extends(ReactAce, _super);\n    function ReactAce(props) {\n        var _this = _super.call(this, props) || this;\n        editorOptions_1.editorEvents.forEach(function (method) {\n            _this[method] = _this[method].bind(_this);\n        });\n        _this.debounce = editorOptions_1.debounce;\n        return _this;\n    }\n    ReactAce.prototype.componentDidMount = function () {\n        var _this = this;\n        var _a = this.props, className = _a.className, onBeforeLoad = _a.onBeforeLoad, onValidate = _a.onValidate, mode = _a.mode, focus = _a.focus, theme = _a.theme, fontSize = _a.fontSize, value = _a.value, defaultValue = _a.defaultValue, cursorStart = _a.cursorStart, showGutter = _a.showGutter, wrapEnabled = _a.wrapEnabled, showPrintMargin = _a.showPrintMargin, _b = _a.scrollMargin, scrollMargin = _b === void 0 ? [0, 0, 0, 0] : _b, keyboardHandler = _a.keyboardHandler, onLoad = _a.onLoad, commands = _a.commands, annotations = _a.annotations, markers = _a.markers, placeholder = _a.placeholder;\n        this.editor = ace.edit(this.refEditor);\n        if (onBeforeLoad) {\n            onBeforeLoad(ace);\n        }\n        var editorProps = Object.keys(this.props.editorProps);\n        for (var i = 0; i < editorProps.length; i++) {\n            this.editor[editorProps[i]] = this.props.editorProps[editorProps[i]];\n        }\n        if (this.props.debounceChangePeriod) {\n            this.onChange = this.debounce(this.onChange, this.props.debounceChangePeriod);\n        }\n        this.editor.renderer.setScrollMargin(scrollMargin[0], scrollMargin[1], scrollMargin[2], scrollMargin[3]);\n        this.editor.getSession().setMode(\"ace/mode/\" + mode);\n        this.editor.setTheme(\"ace/theme/\" + theme);\n        this.editor.setFontSize(fontSize);\n        this.editor\n            .getSession()\n            .setValue(!defaultValue ? value : defaultValue, cursorStart);\n        if (this.props.navigateToFileEnd) {\n            this.editor.navigateFileEnd();\n        }\n        this.editor.renderer.setShowGutter(showGutter);\n        this.editor.getSession().setUseWrapMode(wrapEnabled);\n        this.editor.setShowPrintMargin(showPrintMargin);\n        this.editor.on(\"focus\", this.onFocus);\n        this.editor.on(\"blur\", this.onBlur);\n        this.editor.on(\"copy\", this.onCopy);\n        this.editor.on(\"paste\", this.onPaste);\n        this.editor.on(\"change\", this.onChange);\n        this.editor.on(\"input\", this.onInput);\n        if (placeholder) {\n            this.updatePlaceholder();\n        }\n        this.editor\n            .getSession()\n            .selection.on(\"changeSelection\", this.onSelectionChange);\n        this.editor.getSession().selection.on(\"changeCursor\", this.onCursorChange);\n        if (onValidate) {\n            this.editor.getSession().on(\"changeAnnotation\", function () {\n                // tslint:disable-next-line:no-shadowed-variable\n                var annotations = _this.editor.getSession().getAnnotations();\n                _this.props.onValidate(annotations);\n            });\n        }\n        this.editor.session.on(\"changeScrollTop\", this.onScroll);\n        this.editor.getSession().setAnnotations(annotations || []);\n        if (markers && markers.length > 0) {\n            this.handleMarkers(markers);\n        }\n        // get a list of possible options to avoid 'misspelled option errors'\n        var availableOptions = this.editor.$options;\n        editorOptions_1.editorOptions.forEach(function (option) {\n            if (availableOptions.hasOwnProperty(option)) {\n                _this.editor.setOption(option, _this.props[option]);\n            }\n            else if (_this.props[option]) {\n                console.warn(\"ReactAce: editor option \" + option + \" was activated but not found. Did you need to import a related tool or did you possibly mispell the option?\");\n            }\n        });\n        this.handleOptions(this.props);\n        if (Array.isArray(commands)) {\n            commands.forEach(function (command) {\n                if (typeof command.exec === \"string\") {\n                    _this.editor.commands.bindKey(command.bindKey, command.exec);\n                }\n                else {\n                    _this.editor.commands.addCommand(command);\n                }\n            });\n        }\n        if (keyboardHandler) {\n            this.editor.setKeyboardHandler(\"ace/keyboard/\" + keyboardHandler);\n        }\n        if (className) {\n            this.refEditor.className += \" \" + className;\n        }\n        if (onLoad) {\n            onLoad(this.editor);\n        }\n        this.editor.resize();\n        if (focus) {\n            this.editor.focus();\n        }\n    };\n    ReactAce.prototype.componentDidUpdate = function (prevProps) {\n        var oldProps = prevProps;\n        var nextProps = this.props;\n        for (var i = 0; i < editorOptions_1.editorOptions.length; i++) {\n            var option = editorOptions_1.editorOptions[i];\n            if (nextProps[option] !== oldProps[option]) {\n                this.editor.setOption(option, nextProps[option]);\n            }\n        }\n        if (nextProps.className !== oldProps.className) {\n            var appliedClasses = this.refEditor.className;\n            var appliedClassesArray_1 = appliedClasses.trim().split(\" \");\n            var oldClassesArray = oldProps.className.trim().split(\" \");\n            oldClassesArray.forEach(function (oldClass) {\n                var index = appliedClassesArray_1.indexOf(oldClass);\n                appliedClassesArray_1.splice(index, 1);\n            });\n            this.refEditor.className =\n                \" \" + nextProps.className + \" \" + appliedClassesArray_1.join(\" \");\n        }\n        // First process editor value, as it may create a new session (see issue #300)\n        if (this.editor && this.editor.getValue() !== nextProps.value) {\n            // editor.setValue is a synchronous function call, change event is emitted before setValue return.\n            this.silent = true;\n            var pos = this.editor.session.selection.toJSON();\n            this.editor.setValue(nextProps.value, nextProps.cursorStart);\n            this.editor.session.selection.fromJSON(pos);\n            this.silent = false;\n        }\n        if (nextProps.placeholder !== oldProps.placeholder) {\n            this.updatePlaceholder();\n        }\n        if (nextProps.mode !== oldProps.mode) {\n            this.editor.getSession().setMode(\"ace/mode/\" + nextProps.mode);\n        }\n        if (nextProps.theme !== oldProps.theme) {\n            this.editor.setTheme(\"ace/theme/\" + nextProps.theme);\n        }\n        if (nextProps.keyboardHandler !== oldProps.keyboardHandler) {\n            if (nextProps.keyboardHandler) {\n                this.editor.setKeyboardHandler(\"ace/keyboard/\" + nextProps.keyboardHandler);\n            }\n            else {\n                this.editor.setKeyboardHandler(null);\n            }\n        }\n        if (nextProps.fontSize !== oldProps.fontSize) {\n            this.editor.setFontSize(nextProps.fontSize);\n        }\n        if (nextProps.wrapEnabled !== oldProps.wrapEnabled) {\n            this.editor.getSession().setUseWrapMode(nextProps.wrapEnabled);\n        }\n        if (nextProps.showPrintMargin !== oldProps.showPrintMargin) {\n            this.editor.setShowPrintMargin(nextProps.showPrintMargin);\n        }\n        if (nextProps.showGutter !== oldProps.showGutter) {\n            this.editor.renderer.setShowGutter(nextProps.showGutter);\n        }\n        if (!isEqual(nextProps.setOptions, oldProps.setOptions)) {\n            this.handleOptions(nextProps);\n        }\n        if (!isEqual(nextProps.annotations, oldProps.annotations)) {\n            this.editor.getSession().setAnnotations(nextProps.annotations || []);\n        }\n        if (!isEqual(nextProps.markers, oldProps.markers) &&\n            Array.isArray(nextProps.markers)) {\n            this.handleMarkers(nextProps.markers);\n        }\n        // this doesn't look like it works at all....\n        if (!isEqual(nextProps.scrollMargin, oldProps.scrollMargin)) {\n            this.handleScrollMargins(nextProps.scrollMargin);\n        }\n        if (prevProps.height !== this.props.height ||\n            prevProps.width !== this.props.width) {\n            this.editor.resize();\n        }\n        if (this.props.focus && !prevProps.focus) {\n            this.editor.focus();\n        }\n    };\n    ReactAce.prototype.handleScrollMargins = function (margins) {\n        if (margins === void 0) { margins = [0, 0, 0, 0]; }\n        this.editor.renderer.setScrollMargins(margins[0], margins[1], margins[2], margins[3]);\n    };\n    ReactAce.prototype.componentWillUnmount = function () {\n        this.editor.destroy();\n        this.editor = null;\n    };\n    ReactAce.prototype.onChange = function (event) {\n        if (this.props.onChange && !this.silent) {\n            var value = this.editor.getValue();\n            this.props.onChange(value, event);\n        }\n    };\n    ReactAce.prototype.onSelectionChange = function (event) {\n        if (this.props.onSelectionChange) {\n            var value = this.editor.getSelection();\n            this.props.onSelectionChange(value, event);\n        }\n    };\n    ReactAce.prototype.onCursorChange = function (event) {\n        if (this.props.onCursorChange) {\n            var value = this.editor.getSelection();\n            this.props.onCursorChange(value, event);\n        }\n    };\n    ReactAce.prototype.onInput = function (event) {\n        if (this.props.onInput) {\n            this.props.onInput(event);\n        }\n        if (this.props.placeholder) {\n            this.updatePlaceholder();\n        }\n    };\n    ReactAce.prototype.onFocus = function (event) {\n        if (this.props.onFocus) {\n            this.props.onFocus(event, this.editor);\n        }\n    };\n    ReactAce.prototype.onBlur = function (event) {\n        if (this.props.onBlur) {\n            this.props.onBlur(event, this.editor);\n        }\n    };\n    ReactAce.prototype.onCopy = function (text) {\n        if (this.props.onCopy) {\n            this.props.onCopy(text);\n        }\n    };\n    ReactAce.prototype.onPaste = function (text) {\n        if (this.props.onPaste) {\n            this.props.onPaste(text);\n        }\n    };\n    ReactAce.prototype.onScroll = function () {\n        if (this.props.onScroll) {\n            this.props.onScroll(this.editor);\n        }\n    };\n    ReactAce.prototype.handleOptions = function (props) {\n        var setOptions = Object.keys(props.setOptions);\n        for (var y = 0; y < setOptions.length; y++) {\n            this.editor.setOption(setOptions[y], props.setOptions[setOptions[y]]);\n        }\n    };\n    ReactAce.prototype.handleMarkers = function (markers) {\n        var _this = this;\n        // remove foreground markers\n        var currentMarkers = this.editor.getSession().getMarkers(true);\n        for (var i in currentMarkers) {\n            if (currentMarkers.hasOwnProperty(i)) {\n                this.editor.getSession().removeMarker(currentMarkers[i].id);\n            }\n        }\n        // remove background markers except active line marker and selected word marker\n        currentMarkers = this.editor.getSession().getMarkers(false);\n        for (var i in currentMarkers) {\n            if (currentMarkers.hasOwnProperty(i) &&\n                currentMarkers[i].clazz !== \"ace_active-line\" &&\n                currentMarkers[i].clazz !== \"ace_selected-word\") {\n                this.editor.getSession().removeMarker(currentMarkers[i].id);\n            }\n        }\n        // add new markers\n        markers.forEach(function (_a) {\n            var startRow = _a.startRow, startCol = _a.startCol, endRow = _a.endRow, endCol = _a.endCol, className = _a.className, type = _a.type, _b = _a.inFront, inFront = _b === void 0 ? false : _b;\n            var range = new Range(startRow, startCol, endRow, endCol);\n            _this.editor.getSession().addMarker(range, className, type, inFront);\n        });\n    };\n    ReactAce.prototype.updatePlaceholder = function () {\n        // Adapted from https://stackoverflow.com/questions/26695708/how-can-i-add-placeholder-text-when-the-editor-is-empty\n        var editor = this.editor;\n        var placeholder = this.props.placeholder;\n        var showPlaceholder = !editor.session.getValue().length;\n        var node = editor.renderer.placeholderNode;\n        if (!showPlaceholder && node) {\n            editor.renderer.scroller.removeChild(editor.renderer.placeholderNode);\n            editor.renderer.placeholderNode = null;\n        }\n        else if (showPlaceholder && !node) {\n            node = editor.renderer.placeholderNode = document.createElement(\"div\");\n            node.textContent = placeholder || \"\";\n            node.className = \"ace_comment ace_placeholder\";\n            node.style.padding = \"0 9px\";\n            node.style.position = \"absolute\";\n            node.style.zIndex = \"3\";\n            editor.renderer.scroller.appendChild(node);\n        }\n        else if (showPlaceholder && node) {\n            node.textContent = placeholder;\n        }\n    };\n    ReactAce.prototype.updateRef = function (item) {\n        this.refEditor = item;\n    };\n    ReactAce.prototype.render = function () {\n        var _a = this.props, name = _a.name, width = _a.width, height = _a.height, style = _a.style;\n        var divStyle = __assign({ width: width, height: height }, style);\n        return React.createElement(\"div\", { ref: this.updateRef, id: name, style: divStyle });\n    };\n    ReactAce.propTypes = {\n        mode: PropTypes.string,\n        focus: PropTypes.bool,\n        theme: PropTypes.string,\n        name: PropTypes.string,\n        className: PropTypes.string,\n        height: PropTypes.string,\n        width: PropTypes.string,\n        fontSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        showGutter: PropTypes.bool,\n        onChange: PropTypes.func,\n        onCopy: PropTypes.func,\n        onPaste: PropTypes.func,\n        onFocus: PropTypes.func,\n        onInput: PropTypes.func,\n        onBlur: PropTypes.func,\n        onScroll: PropTypes.func,\n        value: PropTypes.string,\n        defaultValue: PropTypes.string,\n        onLoad: PropTypes.func,\n        onSelectionChange: PropTypes.func,\n        onCursorChange: PropTypes.func,\n        onBeforeLoad: PropTypes.func,\n        onValidate: PropTypes.func,\n        minLines: PropTypes.number,\n        maxLines: PropTypes.number,\n        readOnly: PropTypes.bool,\n        highlightActiveLine: PropTypes.bool,\n        tabSize: PropTypes.number,\n        showPrintMargin: PropTypes.bool,\n        cursorStart: PropTypes.number,\n        debounceChangePeriod: PropTypes.number,\n        editorProps: PropTypes.object,\n        setOptions: PropTypes.object,\n        style: PropTypes.object,\n        scrollMargin: PropTypes.array,\n        annotations: PropTypes.array,\n        markers: PropTypes.array,\n        keyboardHandler: PropTypes.string,\n        wrapEnabled: PropTypes.bool,\n        enableSnippets: PropTypes.bool,\n        enableBasicAutocompletion: PropTypes.oneOfType([\n            PropTypes.bool,\n            PropTypes.array\n        ]),\n        enableLiveAutocompletion: PropTypes.oneOfType([\n            PropTypes.bool,\n            PropTypes.array\n        ]),\n        navigateToFileEnd: PropTypes.bool,\n        commands: PropTypes.array,\n        placeholder: PropTypes.string\n    };\n    ReactAce.defaultProps = {\n        name: \"ace-editor\",\n        focus: false,\n        mode: \"\",\n        theme: \"\",\n        height: \"500px\",\n        width: \"500px\",\n        value: \"\",\n        fontSize: 12,\n        enableSnippets: false,\n        showGutter: true,\n        onChange: null,\n        onPaste: null,\n        onLoad: null,\n        onScroll: null,\n        minLines: null,\n        maxLines: null,\n        readOnly: false,\n        highlightActiveLine: true,\n        showPrintMargin: true,\n        tabSize: 4,\n        cursorStart: 1,\n        editorProps: {},\n        style: {},\n        scrollMargin: [0, 0, 0, 0],\n        setOptions: {},\n        wrapEnabled: false,\n        enableBasicAutocompletion: false,\n        enableLiveAutocompletion: false,\n        placeholder: null,\n        navigateToFileEnd: true\n    };\n    return ReactAce;\n}(React.Component));\nexports.default = ReactAce;\n//# sourceMappingURL=ace.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PropTypes = require(\"prop-types\");\nvar React = require(\"react\");\nvar split_1 = require(\"./split\");\nvar DiffMatchPatch = require(\"diff-match-patch\");\nvar DiffComponent = /** @class */ (function (_super) {\n    __extends(DiffComponent, _super);\n    function DiffComponent(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            value: _this.props.value\n        };\n        _this.onChange = _this.onChange.bind(_this);\n        _this.diff = _this.diff.bind(_this);\n        return _this;\n    }\n    DiffComponent.prototype.componentDidUpdate = function () {\n        var value = this.props.value;\n        if (value !== this.state.value) {\n            this.setState({ value: value });\n        }\n    };\n    DiffComponent.prototype.onChange = function (value) {\n        this.setState({\n            value: value\n        });\n        if (this.props.onChange) {\n            this.props.onChange(value);\n        }\n    };\n    DiffComponent.prototype.diff = function () {\n        var dmp = new DiffMatchPatch();\n        var lhString = this.state.value[0];\n        var rhString = this.state.value[1];\n        if (lhString.length === 0 && rhString.length === 0) {\n            return [];\n        }\n        var diff = dmp.diff_main(lhString, rhString);\n        dmp.diff_cleanupSemantic(diff);\n        var diffedLines = this.generateDiffedLines(diff);\n        var codeEditorSettings = this.setCodeMarkers(diffedLines);\n        return codeEditorSettings;\n    };\n    DiffComponent.prototype.generateDiffedLines = function (diff) {\n        var C = {\n            DIFF_EQUAL: 0,\n            DIFF_DELETE: -1,\n            DIFF_INSERT: 1\n        };\n        var diffedLines = {\n            left: [],\n            right: []\n        };\n        var cursor = {\n            left: 1,\n            right: 1\n        };\n        diff.forEach(function (chunk) {\n            var chunkType = chunk[0];\n            var text = chunk[1];\n            var lines = text.split(\"\\n\").length - 1;\n            // diff-match-patch sometimes returns empty strings at random\n            if (text.length === 0) {\n                return;\n            }\n            var firstChar = text[0];\n            var lastChar = text[text.length - 1];\n            var linesToHighlight = 0;\n            switch (chunkType) {\n                case C.DIFF_EQUAL:\n                    cursor.left += lines;\n                    cursor.right += lines;\n                    break;\n                case C.DIFF_DELETE:\n                    // If the deletion starts with a newline, push the cursor down to that line\n                    if (firstChar === \"\\n\") {\n                        cursor.left++;\n                        lines--;\n                    }\n                    linesToHighlight = lines;\n                    // If the deletion does not include a newline, highlight the same line on the right\n                    if (linesToHighlight === 0) {\n                        diffedLines.right.push({\n                            startLine: cursor.right,\n                            endLine: cursor.right\n                        });\n                    }\n                    // If the last character is a newline, we don't want to highlight that line\n                    if (lastChar === \"\\n\") {\n                        linesToHighlight -= 1;\n                    }\n                    diffedLines.left.push({\n                        startLine: cursor.left,\n                        endLine: cursor.left + linesToHighlight\n                    });\n                    cursor.left += lines;\n                    break;\n                case C.DIFF_INSERT:\n                    // If the insertion starts with a newline, push the cursor down to that line\n                    if (firstChar === \"\\n\") {\n                        cursor.right++;\n                        lines--;\n                    }\n                    linesToHighlight = lines;\n                    // If the insertion does not include a newline, highlight the same line on the left\n                    if (linesToHighlight === 0) {\n                        diffedLines.left.push({\n                            startLine: cursor.left,\n                            endLine: cursor.left\n                        });\n                    }\n                    // If the last character is a newline, we don't want to highlight that line\n                    if (lastChar === \"\\n\") {\n                        linesToHighlight -= 1;\n                    }\n                    diffedLines.right.push({\n                        startLine: cursor.right,\n                        endLine: cursor.right + linesToHighlight\n                    });\n                    cursor.right += lines;\n                    break;\n                default:\n                    throw new Error(\"Diff type was not defined.\");\n            }\n        });\n        return diffedLines;\n    };\n    // Receives a collection of line numbers and iterates through them to highlight appropriately\n    // Returns an object that tells the render() method how to display the code editors\n    DiffComponent.prototype.setCodeMarkers = function (diffedLines) {\n        if (diffedLines === void 0) { diffedLines = { left: [], right: [] }; }\n        var codeEditorSettings = [];\n        var newMarkerSet = {\n            left: [],\n            right: []\n        };\n        for (var i = 0; i < diffedLines.left.length; i++) {\n            var markerObj = {\n                startRow: diffedLines.left[i].startLine - 1,\n                endRow: diffedLines.left[i].endLine,\n                type: \"text\",\n                className: \"codeMarker\"\n            };\n            newMarkerSet.left.push(markerObj);\n        }\n        for (var i = 0; i < diffedLines.right.length; i++) {\n            var markerObj = {\n                startRow: diffedLines.right[i].startLine - 1,\n                endRow: diffedLines.right[i].endLine,\n                type: \"text\",\n                className: \"codeMarker\"\n            };\n            newMarkerSet.right.push(markerObj);\n        }\n        codeEditorSettings[0] = newMarkerSet.left;\n        codeEditorSettings[1] = newMarkerSet.right;\n        return codeEditorSettings;\n    };\n    DiffComponent.prototype.render = function () {\n        var markers = this.diff();\n        return (React.createElement(split_1.default, { name: this.props.name, className: this.props.className, focus: this.props.focus, orientation: this.props.orientation, splits: this.props.splits, mode: this.props.mode, theme: this.props.theme, height: this.props.height, width: this.props.width, fontSize: this.props.fontSize, showGutter: this.props.showGutter, onChange: this.onChange, onPaste: this.props.onPaste, onLoad: this.props.onLoad, onScroll: this.props.onScroll, minLines: this.props.minLines, maxLines: this.props.maxLines, readOnly: this.props.readOnly, highlightActiveLine: this.props.highlightActiveLine, showPrintMargin: this.props.showPrintMargin, tabSize: this.props.tabSize, cursorStart: this.props.cursorStart, editorProps: this.props.editorProps, style: this.props.style, scrollMargin: this.props.scrollMargin, setOptions: this.props.setOptions, wrapEnabled: this.props.wrapEnabled, enableBasicAutocompletion: this.props.enableBasicAutocompletion, enableLiveAutocompletion: this.props.enableLiveAutocompletion, value: this.state.value, markers: markers }));\n    };\n    DiffComponent.propTypes = {\n        cursorStart: PropTypes.number,\n        editorProps: PropTypes.object,\n        enableBasicAutocompletion: PropTypes.bool,\n        enableLiveAutocompletion: PropTypes.bool,\n        focus: PropTypes.bool,\n        fontSize: PropTypes.number,\n        height: PropTypes.string,\n        highlightActiveLine: PropTypes.bool,\n        maxLines: PropTypes.number,\n        minLines: PropTypes.number,\n        mode: PropTypes.string,\n        name: PropTypes.string,\n        className: PropTypes.string,\n        onLoad: PropTypes.func,\n        onPaste: PropTypes.func,\n        onScroll: PropTypes.func,\n        onChange: PropTypes.func,\n        orientation: PropTypes.string,\n        readOnly: PropTypes.bool,\n        scrollMargin: PropTypes.array,\n        setOptions: PropTypes.object,\n        showGutter: PropTypes.bool,\n        showPrintMargin: PropTypes.bool,\n        splits: PropTypes.number,\n        style: PropTypes.object,\n        tabSize: PropTypes.number,\n        theme: PropTypes.string,\n        value: PropTypes.array,\n        width: PropTypes.string,\n        wrapEnabled: PropTypes.bool\n    };\n    DiffComponent.defaultProps = {\n        cursorStart: 1,\n        editorProps: {},\n        enableBasicAutocompletion: false,\n        enableLiveAutocompletion: false,\n        focus: false,\n        fontSize: 12,\n        height: \"500px\",\n        highlightActiveLine: true,\n        maxLines: null,\n        minLines: null,\n        mode: \"\",\n        name: \"ace-editor\",\n        onLoad: null,\n        onScroll: null,\n        onPaste: null,\n        onChange: null,\n        orientation: \"beside\",\n        readOnly: false,\n        scrollMargin: [0, 0, 0, 0],\n        setOptions: {},\n        showGutter: true,\n        showPrintMargin: true,\n        splits: 2,\n        style: {},\n        tabSize: 4,\n        theme: \"github\",\n        value: [\"\", \"\"],\n        width: \"500px\",\n        wrapEnabled: true\n    };\n    return DiffComponent;\n}(React.Component));\nexports.default = DiffComponent;\n//# sourceMappingURL=diff.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar editorOptions = [\n    \"minLines\",\n    \"maxLines\",\n    \"readOnly\",\n    \"highlightActiveLine\",\n    \"tabSize\",\n    \"enableBasicAutocompletion\",\n    \"enableLiveAutocompletion\",\n    \"enableSnippets\"\n];\nexports.editorOptions = editorOptions;\nvar editorEvents = [\n    \"onChange\",\n    \"onFocus\",\n    \"onInput\",\n    \"onBlur\",\n    \"onCopy\",\n    \"onPaste\",\n    \"onSelectionChange\",\n    \"onCursorChange\",\n    \"onScroll\",\n    \"handleOptions\",\n    \"updateRef\"\n];\nexports.editorEvents = editorEvents;\nvar getAceInstance = function () {\n    var ace;\n    // Fallback for ace.require when vanilla ACE is hosted over a CDN\n    if (window.ace) {\n        ace = window.ace;\n        ace.acequire = window.ace.require || window.ace.acequire;\n    }\n    else {\n        ace = require(\"ace-builds\");\n    }\n    return ace;\n};\nexports.getAceInstance = getAceInstance;\nvar debounce = function (fn, delay) {\n    var timer = null;\n    return function () {\n        var context = this;\n        var args = arguments;\n        clearTimeout(timer);\n        timer = setTimeout(function () {\n            fn.apply(context, args);\n        }, delay);\n    };\n};\nexports.debounce = debounce;\n//# sourceMappingURL=editorOptions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ace_1 = require(\"./ace\");\nvar diff_1 = require(\"./diff\");\nexports.diff = diff_1.default;\nvar split_1 = require(\"./split\");\nexports.split = split_1.default;\nexports.default = ace_1.default;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar editorOptions_1 = require(\"./editorOptions\");\nvar ace = editorOptions_1.getAceInstance();\nvar ace_builds_1 = require(\"ace-builds\");\nvar ext_split_1 = require(\"ace-builds/src-noconflict/ext-split\");\nvar PropTypes = require(\"prop-types\");\nvar React = require(\"react\");\nvar isEqual = require(\"lodash.isequal\");\nvar get = require(\"lodash.get\");\nvar SplitComponent = /** @class */ (function (_super) {\n    __extends(SplitComponent, _super);\n    function SplitComponent(props) {\n        var _this = _super.call(this, props) || this;\n        editorOptions_1.editorEvents.forEach(function (method) {\n            _this[method] = _this[method].bind(_this);\n        });\n        _this.debounce = editorOptions_1.debounce;\n        return _this;\n    }\n    SplitComponent.prototype.componentDidMount = function () {\n        var _this = this;\n        var _a = this.props, className = _a.className, onBeforeLoad = _a.onBeforeLoad, mode = _a.mode, focus = _a.focus, theme = _a.theme, fontSize = _a.fontSize, value = _a.value, defaultValue = _a.defaultValue, cursorStart = _a.cursorStart, showGutter = _a.showGutter, wrapEnabled = _a.wrapEnabled, showPrintMargin = _a.showPrintMargin, _b = _a.scrollMargin, scrollMargin = _b === void 0 ? [0, 0, 0, 0] : _b, keyboardHandler = _a.keyboardHandler, onLoad = _a.onLoad, commands = _a.commands, annotations = _a.annotations, markers = _a.markers, splits = _a.splits;\n        this.editor = ace.edit(this.refEditor);\n        this.editor.setTheme(\"ace/theme/\" + theme);\n        if (onBeforeLoad) {\n            onBeforeLoad(ace);\n        }\n        var editorProps = Object.keys(this.props.editorProps);\n        var split = new ext_split_1.Split(this.editor.container, \"ace/theme/\" + theme, splits);\n        this.editor.env.split = split;\n        this.splitEditor = split.getEditor(0);\n        this.split = split;\n        // in a split scenario we don't want a print margin for the entire application\n        this.editor.setShowPrintMargin(false);\n        this.editor.renderer.setShowGutter(false);\n        // get a list of possible options to avoid 'misspelled option errors'\n        var availableOptions = this.splitEditor.$options;\n        if (this.props.debounceChangePeriod) {\n            this.onChange = this.debounce(this.onChange, this.props.debounceChangePeriod);\n        }\n        split.forEach(function (editor, index) {\n            for (var i = 0; i < editorProps.length; i++) {\n                editor[editorProps[i]] = _this.props.editorProps[editorProps[i]];\n            }\n            var defaultValueForEditor = get(defaultValue, index);\n            var valueForEditor = get(value, index, \"\");\n            editor.session.setUndoManager(new ace.UndoManager());\n            editor.setTheme(\"ace/theme/\" + theme);\n            editor.renderer.setScrollMargin(scrollMargin[0], scrollMargin[1], scrollMargin[2], scrollMargin[3]);\n            editor.getSession().setMode(\"ace/mode/\" + mode);\n            editor.setFontSize(fontSize);\n            editor.renderer.setShowGutter(showGutter);\n            editor.getSession().setUseWrapMode(wrapEnabled);\n            editor.setShowPrintMargin(showPrintMargin);\n            editor.on(\"focus\", _this.onFocus);\n            editor.on(\"blur\", _this.onBlur);\n            editor.on(\"input\", _this.onInput);\n            editor.on(\"copy\", _this.onCopy);\n            editor.on(\"paste\", _this.onPaste);\n            editor.on(\"change\", _this.onChange);\n            editor\n                .getSession()\n                .selection.on(\"changeSelection\", _this.onSelectionChange);\n            editor.getSession().selection.on(\"changeCursor\", _this.onCursorChange);\n            editor.session.on(\"changeScrollTop\", _this.onScroll);\n            editor.setValue(defaultValueForEditor === undefined\n                ? valueForEditor\n                : defaultValueForEditor, cursorStart);\n            var newAnnotations = get(annotations, index, []);\n            var newMarkers = get(markers, index, []);\n            editor.getSession().setAnnotations(newAnnotations);\n            if (newMarkers && newMarkers.length > 0) {\n                _this.handleMarkers(newMarkers, editor);\n            }\n            for (var i = 0; i < editorOptions_1.editorOptions.length; i++) {\n                var option = editorOptions_1.editorOptions[i];\n                if (availableOptions.hasOwnProperty(option)) {\n                    editor.setOption(option, _this.props[option]);\n                }\n                else if (_this.props[option]) {\n                    console.warn(\"ReaceAce: editor option \" + option + \" was activated but not found. Did you need to import a related tool or did you possibly mispell the option?\");\n                }\n            }\n            _this.handleOptions(_this.props, editor);\n            if (Array.isArray(commands)) {\n                commands.forEach(function (command) {\n                    if (typeof command.exec === \"string\") {\n                        editor.commands.bindKey(command.bindKey, command.exec);\n                    }\n                    else {\n                        editor.commands.addCommand(command);\n                    }\n                });\n            }\n            if (keyboardHandler) {\n                editor.setKeyboardHandler(\"ace/keyboard/\" + keyboardHandler);\n            }\n        });\n        if (className) {\n            this.refEditor.className += \" \" + className;\n        }\n        if (focus) {\n            this.splitEditor.focus();\n        }\n        var sp = this.editor.env.split;\n        sp.setOrientation(this.props.orientation === \"below\" ? sp.BELOW : sp.BESIDE);\n        sp.resize(true);\n        if (onLoad) {\n            onLoad(sp);\n        }\n    };\n    SplitComponent.prototype.componentDidUpdate = function (prevProps) {\n        var _this = this;\n        var oldProps = prevProps;\n        var nextProps = this.props;\n        var split = this.editor.env.split;\n        if (nextProps.splits !== oldProps.splits) {\n            split.setSplits(nextProps.splits);\n        }\n        if (nextProps.orientation !== oldProps.orientation) {\n            split.setOrientation(nextProps.orientation === \"below\" ? split.BELOW : split.BESIDE);\n        }\n        split.forEach(function (editor, index) {\n            if (nextProps.mode !== oldProps.mode) {\n                editor.getSession().setMode(\"ace/mode/\" + nextProps.mode);\n            }\n            if (nextProps.keyboardHandler !== oldProps.keyboardHandler) {\n                if (nextProps.keyboardHandler) {\n                    editor.setKeyboardHandler(\"ace/keyboard/\" + nextProps.keyboardHandler);\n                }\n                else {\n                    editor.setKeyboardHandler(null);\n                }\n            }\n            if (nextProps.fontSize !== oldProps.fontSize) {\n                editor.setFontSize(nextProps.fontSize);\n            }\n            if (nextProps.wrapEnabled !== oldProps.wrapEnabled) {\n                editor.getSession().setUseWrapMode(nextProps.wrapEnabled);\n            }\n            if (nextProps.showPrintMargin !== oldProps.showPrintMargin) {\n                editor.setShowPrintMargin(nextProps.showPrintMargin);\n            }\n            if (nextProps.showGutter !== oldProps.showGutter) {\n                editor.renderer.setShowGutter(nextProps.showGutter);\n            }\n            for (var i = 0; i < editorOptions_1.editorOptions.length; i++) {\n                var option = editorOptions_1.editorOptions[i];\n                if (nextProps[option] !== oldProps[option]) {\n                    editor.setOption(option, nextProps[option]);\n                }\n            }\n            if (!isEqual(nextProps.setOptions, oldProps.setOptions)) {\n                _this.handleOptions(nextProps, editor);\n            }\n            var nextValue = get(nextProps.value, index, \"\");\n            if (editor.getValue() !== nextValue) {\n                // editor.setValue is a synchronous function call, change event is emitted before setValue return.\n                _this.silent = true;\n                var pos = editor.session.selection.toJSON();\n                editor.setValue(nextValue, nextProps.cursorStart);\n                editor.session.selection.fromJSON(pos);\n                _this.silent = false;\n            }\n            var newAnnotations = get(nextProps.annotations, index, []);\n            var oldAnnotations = get(oldProps.annotations, index, []);\n            if (!isEqual(newAnnotations, oldAnnotations)) {\n                editor.getSession().setAnnotations(newAnnotations);\n            }\n            var newMarkers = get(nextProps.markers, index, []);\n            var oldMarkers = get(oldProps.markers, index, []);\n            if (!isEqual(newMarkers, oldMarkers) && Array.isArray(newMarkers)) {\n                _this.handleMarkers(newMarkers, editor);\n            }\n        });\n        if (nextProps.className !== oldProps.className) {\n            var appliedClasses = this.refEditor.className;\n            var appliedClassesArray_1 = appliedClasses.trim().split(\" \");\n            var oldClassesArray = oldProps.className.trim().split(\" \");\n            oldClassesArray.forEach(function (oldClass) {\n                var index = appliedClassesArray_1.indexOf(oldClass);\n                appliedClassesArray_1.splice(index, 1);\n            });\n            this.refEditor.className =\n                \" \" + nextProps.className + \" \" + appliedClassesArray_1.join(\" \");\n        }\n        if (nextProps.theme !== oldProps.theme) {\n            split.setTheme(\"ace/theme/\" + nextProps.theme);\n        }\n        if (nextProps.focus && !oldProps.focus) {\n            this.splitEditor.focus();\n        }\n        if (nextProps.height !== this.props.height ||\n            nextProps.width !== this.props.width) {\n            this.editor.resize();\n        }\n    };\n    SplitComponent.prototype.componentWillUnmount = function () {\n        this.editor.destroy();\n        this.editor = null;\n    };\n    SplitComponent.prototype.onChange = function (event) {\n        if (this.props.onChange && !this.silent) {\n            var value_1 = [];\n            this.editor.env.split.forEach(function (editor) {\n                value_1.push(editor.getValue());\n            });\n            this.props.onChange(value_1, event);\n        }\n    };\n    SplitComponent.prototype.onSelectionChange = function (event) {\n        if (this.props.onSelectionChange) {\n            var value_2 = [];\n            this.editor.env.split.forEach(function (editor) {\n                value_2.push(editor.getSelection());\n            });\n            this.props.onSelectionChange(value_2, event);\n        }\n    };\n    SplitComponent.prototype.onCursorChange = function (event) {\n        if (this.props.onCursorChange) {\n            var value_3 = [];\n            this.editor.env.split.forEach(function (editor) {\n                value_3.push(editor.getSelection());\n            });\n            this.props.onCursorChange(value_3, event);\n        }\n    };\n    SplitComponent.prototype.onFocus = function (event) {\n        if (this.props.onFocus) {\n            this.props.onFocus(event);\n        }\n    };\n    SplitComponent.prototype.onInput = function (event) {\n        if (this.props.onInput) {\n            this.props.onInput(event);\n        }\n    };\n    SplitComponent.prototype.onBlur = function (event) {\n        if (this.props.onBlur) {\n            this.props.onBlur(event);\n        }\n    };\n    SplitComponent.prototype.onCopy = function (text) {\n        if (this.props.onCopy) {\n            this.props.onCopy(text);\n        }\n    };\n    SplitComponent.prototype.onPaste = function (text) {\n        if (this.props.onPaste) {\n            this.props.onPaste(text);\n        }\n    };\n    SplitComponent.prototype.onScroll = function () {\n        if (this.props.onScroll) {\n            this.props.onScroll(this.editor);\n        }\n    };\n    SplitComponent.prototype.handleOptions = function (props, editor) {\n        var setOptions = Object.keys(props.setOptions);\n        for (var y = 0; y < setOptions.length; y++) {\n            editor.setOption(setOptions[y], props.setOptions[setOptions[y]]);\n        }\n    };\n    SplitComponent.prototype.handleMarkers = function (markers, editor) {\n        // remove foreground markers\n        var currentMarkers = editor.getSession().getMarkers(true);\n        for (var i in currentMarkers) {\n            if (currentMarkers.hasOwnProperty(i)) {\n                editor.getSession().removeMarker(currentMarkers[i].id);\n            }\n        }\n        // remove background markers\n        currentMarkers = editor.getSession().getMarkers(false);\n        for (var i in currentMarkers) {\n            if (currentMarkers.hasOwnProperty(i)) {\n                editor.getSession().removeMarker(currentMarkers[i].id);\n            }\n        }\n        // add new markers\n        markers.forEach(function (_a) {\n            var startRow = _a.startRow, startCol = _a.startCol, endRow = _a.endRow, endCol = _a.endCol, className = _a.className, type = _a.type, _b = _a.inFront, inFront = _b === void 0 ? false : _b;\n            var range = new ace_builds_1.Range(startRow, startCol, endRow, endCol);\n            editor\n                .getSession()\n                .addMarker(range, className, type, inFront);\n        });\n    };\n    SplitComponent.prototype.updateRef = function (item) {\n        this.refEditor = item;\n    };\n    SplitComponent.prototype.render = function () {\n        var _a = this.props, name = _a.name, width = _a.width, height = _a.height, style = _a.style;\n        var divStyle = __assign({ width: width, height: height }, style);\n        return React.createElement(\"div\", { ref: this.updateRef, id: name, style: divStyle });\n    };\n    SplitComponent.propTypes = {\n        className: PropTypes.string,\n        debounceChangePeriod: PropTypes.number,\n        defaultValue: PropTypes.arrayOf(PropTypes.string),\n        focus: PropTypes.bool,\n        fontSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        height: PropTypes.string,\n        mode: PropTypes.string,\n        name: PropTypes.string,\n        onBlur: PropTypes.func,\n        onChange: PropTypes.func,\n        onCopy: PropTypes.func,\n        onFocus: PropTypes.func,\n        onInput: PropTypes.func,\n        onLoad: PropTypes.func,\n        onPaste: PropTypes.func,\n        onScroll: PropTypes.func,\n        orientation: PropTypes.string,\n        showGutter: PropTypes.bool,\n        splits: PropTypes.number,\n        theme: PropTypes.string,\n        value: PropTypes.arrayOf(PropTypes.string),\n        width: PropTypes.string,\n        onSelectionChange: PropTypes.func,\n        onCursorChange: PropTypes.func,\n        onBeforeLoad: PropTypes.func,\n        minLines: PropTypes.number,\n        maxLines: PropTypes.number,\n        readOnly: PropTypes.bool,\n        highlightActiveLine: PropTypes.bool,\n        tabSize: PropTypes.number,\n        showPrintMargin: PropTypes.bool,\n        cursorStart: PropTypes.number,\n        editorProps: PropTypes.object,\n        setOptions: PropTypes.object,\n        style: PropTypes.object,\n        scrollMargin: PropTypes.array,\n        annotations: PropTypes.array,\n        markers: PropTypes.array,\n        keyboardHandler: PropTypes.string,\n        wrapEnabled: PropTypes.bool,\n        enableBasicAutocompletion: PropTypes.oneOfType([\n            PropTypes.bool,\n            PropTypes.array\n        ]),\n        enableLiveAutocompletion: PropTypes.oneOfType([\n            PropTypes.bool,\n            PropTypes.array\n        ]),\n        commands: PropTypes.array\n    };\n    SplitComponent.defaultProps = {\n        name: \"ace-editor\",\n        focus: false,\n        orientation: \"beside\",\n        splits: 2,\n        mode: \"\",\n        theme: \"\",\n        height: \"500px\",\n        width: \"500px\",\n        value: [],\n        fontSize: 12,\n        showGutter: true,\n        onChange: null,\n        onPaste: null,\n        onLoad: null,\n        onScroll: null,\n        minLines: null,\n        maxLines: null,\n        readOnly: false,\n        highlightActiveLine: true,\n        showPrintMargin: true,\n        tabSize: 4,\n        cursorStart: 1,\n        editorProps: {},\n        style: {},\n        scrollMargin: [0, 0, 0, 0],\n        setOptions: {},\n        wrapEnabled: false,\n        enableBasicAutocompletion: false,\n        enableLiveAutocompletion: false\n    };\n    return SplitComponent;\n}(React.Component));\nexports.default = SplitComponent;\n//# sourceMappingURL=split.js.map"],"sourceRoot":""}