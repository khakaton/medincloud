{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/components/altrp-template/AltrpTemplate.js"],"names":["AltrpTemplate","props","state","templateGUID","settings","template","this","updateTemplate","loading","templateLoader","setState","_","get","frontElementsFabric","className","React","componentClass","element","ElementWrapper","children","Component"],"mappings":"0zBAKMA,E,0cACJ,WAAYC,GAAO,6BACjB,cAAMA,IACDC,MAAQ,CACXC,aAAc,EAAKF,MAAMG,SAASC,UAHnB,E,gDAMnB,WACEC,KAAKC,mB,gCAEP,WACED,KAAKC,mB,iDAOP,0FAEQJ,EAAeG,KAAKL,MAAMG,SAASC,YAEtBC,KAAKJ,MAAMC,eAC1BG,KAAKJ,MAAMG,UAAYC,KAAKE,SALlC,oBAQSL,EART,wDAWMG,KAAKE,SAAU,EAXrB,SAYuBC,6BAAkCN,GAZzD,OAYME,EAZN,OAaMC,KAAKE,SAAU,EACfF,KAAKD,SAAW,KAdtB,QAgBIC,KAAKI,UAAS,SAAAR,GAAK,cAAUA,GAAV,IAAiBG,WAAUF,oBAhBlD,iD,iEAoBA,WACE,IAAKG,KAAKL,MAAMG,SAASC,SACvB,OAAO,KAET,GAAIM,EAAEC,IAAIN,KAAKJ,MAAO,2BAA4B,CAChD,IAAIG,EACFC,KAAKD,UAAYQ,uBAAiCP,KAAKJ,MAAMG,UAE/D,OADAC,KAAKD,SAAWA,EAEd,uBAAKS,UAAU,eACb,uBAAKA,UAAU,cACZC,gBAAoBV,EAASW,eAAgB,CAC5CC,QAASZ,EACTa,eAAgBA,UAChBC,SAAUd,EAASc,aAM7B,OAAO,S,GA1DiBC,aA8D5B","file":"1982.editor.js","sourcesContent":["import React, { Component } from \"react\";\nimport templateLoader from \"../../classes/modules/TemplateLoader\";\nimport ElementWrapper from \"../../../../../front-app/src/js/components/ElementWrapper\";\nimport frontElementsFabric from \"../../../../../front-app/src/js/classes/FrontElementsFabric\";\n\nclass AltrpTemplate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      templateGUID: this.props.settings.template\n    };\n  }\n  componentDidMount() {\n    this.updateTemplate();\n  }\n  componentDidUpdate() {\n    this.updateTemplate();\n  }\n\n  /**\n   * Обновляем данные шалона\n   * @return {Promise<void>}\n   */\n  async updateTemplate() {\n    // console.log(this.props.element.getSettings('template'));\n    const templateGUID = this.props.settings.template;\n    if (\n      templateGUID !== this.state.templateGUID ||\n      !(this.state.template || this.loading)\n    ) {\n      let template;\n      if (!templateGUID) {\n        return;\n      } else {\n        this.loading = true;\n        template = await templateLoader.loadParsedTemplate(templateGUID);\n        this.loading = false;\n        this.template = null;\n      }\n      this.setState(state => ({ ...state, template, templateGUID }));\n    }\n  }\n\n  render() {\n    if (!this.props.settings.template) {\n      return null;\n    }\n    if (_.get(this.state, \"template.componentClass\")) {\n      let template =\n        this.template || frontElementsFabric.cloneElement(this.state.template);\n      this.template = template;\n      return (\n        <div className=\"altrp-posts\">\n          <div className=\"altrp-post\">\n            {React.createElement(template.componentClass, {\n              element: template,\n              ElementWrapper: ElementWrapper,\n              children: template.children\n            })}\n          </div>\n        </div>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AltrpTemplate;\n"],"sourceRoot":""}