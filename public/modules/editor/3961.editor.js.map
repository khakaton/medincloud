{"version":3,"sources":["webpack:///./resources/modules/front-app/src/js/store/routes/reducers.js","webpack:///./resources/modules/front-app/src/js/store/forms-data-storage/reducers.js","webpack:///./resources/modules/front-app/src/js/store/scroll-position/actions.js","webpack:///./resources/modules/front-app/src/js/store/scroll-position/reducers.js","webpack:///./resources/modules/front-app/src/js/store/popup-trigger/reducers.js","webpack:///./resources/modules/front-app/src/js/store/responses-storage/reducers.js","webpack:///./resources/modules/front-app/src/js/store/user-local-storage/reducers.js","webpack:///./resources/modules/front-app/src/js/store/current-title/reducers.js","webpack:///./resources/modules/front-app/src/js/store/areas/reducers.js","webpack:///./resources/modules/front-app/src/js/store/reducers.js","webpack:///./resources/modules/front-app/src/js/store/user-local-storage/actions.js","webpack:///./resources/modules/front-app/src/js/store/current-title/actions.js","webpack:///./resources/modules/front-app/src/js/store/current-email-template/reducers.js","webpack:///./resources/modules/front-app/src/js/store/store.js","webpack:///./resources/modules/front-app/src/js/classes/Routes.js","webpack:///./resources/modules/front-app/src/js/store/current-email-template/actions.js","webpack:///./resources/modules/front-app/src/js/store/popup-trigger/actions.js"],"names":["routes","window","altrpPages","_data","push","Route","defaultState","SET_SCROLL_TOP","initialState","popupID","defaultResponsesStorage","defaultLocalStorage","element","defaultTitle","document","title","defaultAreas","page_areas","map","a","altrpHelpers","Area","areaFactory","combineReducers","appRoutes","state","action","type","CHANGE_APP_ROUTES","currentModel","currentModelReducer","formsStore","formId","fieldName","value","changedField","CHANGE_FORM_FIELD_VALUE","_","get","cloneDeep","set","CLEAR_FORM_FIELD_VALUE","currentUser","currentUserReducer","currentDataStorage","currentDataStorageReducer","scrollPosition","payload","popupTrigger","TRIGGER_POPUP","elements","elementsStorageReducer","hideTriggers","hideTriggersReducer","altrpresponses","responsesStorage","AltrpModel","ADD_RESPONSE_DATA","data","isArray","setAltrpIndex","setProperty","CLEAR_ALL_RESPONSE_DATA","editElement","elementReducer","altrpMeta","altrpMetaReducer","altrpPageState","altrpPageStateReducer","altrpFonts","fontsReducer","userLocalStorage","result","exportDashboard","currentScreen","mediaScreenReducer","currentTitle","currentEmailTemplate","template","CHANGE_CURRENT_EMAIL_TEMPLATE","altrpPage","currentPageReducer","altrpMenus","menusReducer","elementsSettings","elementsSettingsReducer","areas","SET_AREAS","preloadedState","__PRELOADED_STATE__","appStore","createStore","rootReducer","ALTRP_DEBUG","_dis","dispatch","console","trace","bind","this","resource","Resource","route","loadRoutes","changeAppRoutes","getAll","then","routesData","pages","catch","err","error","changeCurrentEmailTemplate","togglePopup"],"mappings":"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","file":"3961.editor.js","sourcesContent":["import {CHANGE_APP_ROUTES,} from './actions'\r\nimport Route from \"../../classes/Route\";\r\n\r\nlet routes = [];\r\nif(window.altrpPages){\r\n  for (let _data of window.altrpPages) {\r\n    routes.push(Route.routeFabric(_data));\r\n  }\r\n}\r\nconst defaultState = {\r\n  routes,\r\n};\r\n\r\nexport function appRoutesReducer(state, action) {\r\n  state = state || defaultState;\r\n  switch (action.type) {\r\n    case CHANGE_APP_ROUTES:{\r\n      state = {\r\n        routes: action.routes,\r\n      };\r\n    }break;\r\n  }\r\n  return state;\r\n}\r\n","import {CHANGE_FORM_FIELD_VALUE, CLEAR_FORM_FIELD_VALUE} from './actions'\r\n\r\nconst defaultState = {\r\n\r\n};\r\n\r\nexport function formsStoreReducer(state, {type, formId, fieldName, value, changedField}) {\r\n  state = state || defaultState;\r\n  switch (type) {\r\n    case CHANGE_FORM_FIELD_VALUE:{\r\n      if(_.get(state, [formId, fieldName]) !== value){\r\n        state = _.cloneDeep(state);\r\n        state.changedField = changedField;\r\n        _.set(state, [formId, fieldName], value);\r\n      }\r\n\r\n    }break;\r\n    case CLEAR_FORM_FIELD_VALUE:{\r\n      if(formId){\r\n        state = _.cloneDeep(state);\r\n        _.set(state, [formId], {});\r\n      } else {\r\n        state = {};\r\n      }\r\n    }break;\r\n  }\r\n  return state;\r\n}","export const SET_SCROLL_TOP = \"SET_SCROLL_TOP\";\r\n/**\r\n *\r\n * @param {{\r\n *  top: int\r\n * }} payload\r\n * @return {{type: string, payload: {}}}\r\n */\r\nexport const setScrollValue = payload => {\r\n  if(payload.top) {\r\n\r\n    if(window.pageUpdater){\r\n      window.pageUpdater.startUpdating();\r\n    }\r\n  }\r\n  return {\r\n    type: SET_SCROLL_TOP,\r\n    payload\r\n  };\r\n};\r\n","import { SET_SCROLL_TOP } from \"./actions\";\r\n\r\nconst initialState = {}\r\n\r\nexport const scrollReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_SCROLL_TOP:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import { TRIGGER_POPUP } from \"./actions\";\r\n\r\nconst initialState = { popupID: null };\r\n\r\nexport const popupReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case TRIGGER_POPUP: {\r\n      return {popupID: state.popupID === payload ? null : payload};\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};","import {ADD_RESPONSE_DATA, CLEAR_ALL_RESPONSE_DATA} from './actions'\r\nimport AltrpModel from \"../../../../../editor/src/js/classes/AltrpModel\";\r\nimport {setAltrpIndex} from \"../../helpers\";\r\n\r\nconst defaultResponsesStorage = {\r\n  \r\n};\r\n\r\nexport function responsesStorageReducer(responsesStorage, action) {\r\n  responsesStorage = responsesStorage || new AltrpModel(defaultResponsesStorage);\r\n  switch (action.type) {\r\n    case ADD_RESPONSE_DATA:{\r\n      let data = action.data;\r\n      if(_.isArray(data)){\r\n        setAltrpIndex(data);\r\n      }\r\n      responsesStorage = _.cloneDeep(responsesStorage);\r\n      responsesStorage.setProperty(action.formId, data);\r\n    }break;\r\n    case CLEAR_ALL_RESPONSE_DATA:{\r\n      responsesStorage = new AltrpModel({});\r\n    }break;\r\n  }\r\n  if(responsesStorage instanceof AltrpModel){\r\n    return responsesStorage;\r\n  }\r\n  return new AltrpModel(responsesStorage);\r\n}","import { CHANGE_USER_LOCAL_STORAGE } from \"./actions\";\r\n\r\nconst defaultLocalStorage = {\r\n  element: \"test\"\r\n};\r\n\r\nexport function changeLocalStorageReducer(data, action) {\r\n  let result = data || defaultLocalStorage;\r\n  switch (action.type) {\r\n    case CHANGE_USER_LOCAL_STORAGE:\r\n      {\r\n        result = data;\r\n      }\r\n      break;\r\n  }\r\n  return result;\r\n}\r\n","if (typeof document === \"undefined\") {\r\n  global.document = {};\r\n}\r\nimport { CHANGE_CURRENT_TITLE } from \"./actions\";\r\n\r\nconst defaultTitle = document?.title || \"\";\r\n\r\nexport function currentTitleReducer(title, action) {\r\n  title = title || defaultTitle;\r\n  switch (action.type) {\r\n    case CHANGE_CURRENT_TITLE:\r\n      {\r\n        title = action.title;\r\n      }\r\n      break;\r\n  }\r\n  return title;\r\n}\r\n","import { SET_AREAS,} from \"./actions\";\r\n\r\nlet defaultAreas = [];\r\nif(window['h-altrp']){\r\n  defaultAreas = window.page_areas.map(a=> new window.altrpHelpers.Area.areaFactory(a));\r\n}\r\nexport function areasReducer(areas, action) {\r\n  areas = areas || defaultAreas;\r\n  switch (action.type) {\r\n    case SET_AREAS: {\r\n      areas = action.areas;\r\n    }\r\n    break;\r\n  }\r\n  return areas;\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { appRoutesReducer } from \"./routes/reducers\";\r\nimport { currentModelReducer } from \"./current-model/reducers\";\r\nimport { formsStoreReducer } from \"./forms-data-storage/reducers\";\r\nimport { currentUserReducer } from \"./current-user/reducers\";\r\nimport { currentDataStorageReducer } from \"./current-data-storage/reducers\";\r\nimport { scrollReducer } from \"./scroll-position/reducers\";\r\nimport { popupReducer } from \"./popup-trigger/reducers\";\r\nimport { elementsStorageReducer } from \"./elements-storage/reducers\";\r\nimport { hideTriggersReducer } from \"./hide-triggers/reducers\";\r\nimport { responsesStorageReducer } from \"./responses-storage/reducers\";\r\nimport { elementReducer } from \"../../../../editor/src/js/store/altrp-dashboard/reducers\";\r\nimport { altrpMetaReducer } from \"./altrp-meta-storage/reducers\";\r\nimport { altrpPageStateReducer } from \"./altrp-page-state-storage/reducers\";\r\nimport { fontsReducer } from \"./fonts-storage/reducers\";\r\nimport { changeLocalStorageReducer } from \"./user-local-storage/reducers\";\r\nimport { exportDashboard } from \"./altrp-dashboard-export/reducers\";\r\nimport { mediaScreenReducer } from \"./media-screen-storage/reducers\";\r\nimport { currentTitleReducer } from \"./current-title/reducers\";\r\nimport { currentEmailTemplateReducer } from \"./current-email-template/reducers\";\r\nimport { currentPageReducer } from \"./current-page/reducers\";\r\nimport {menusReducer} from \"./menus-storage/reducers\";\r\nimport {elementsSettingsReducer} from \"./elements-settings/reducers\";\r\nimport {areasReducer} from \"./areas/reducers\";\r\n\r\nexport default combineReducers({\r\n  appRoutes: appRoutesReducer,\r\n  currentModel: currentModelReducer,\r\n  formsStore: formsStoreReducer,\r\n  currentUser: currentUserReducer,\r\n  currentDataStorage: currentDataStorageReducer,\r\n  scrollPosition: scrollReducer,\r\n  popupTrigger: popupReducer,\r\n  elements: elementsStorageReducer,\r\n  hideTriggers: hideTriggersReducer,\r\n  altrpresponses: responsesStorageReducer,\r\n  editElement: elementReducer,\r\n  altrpMeta: altrpMetaReducer,\r\n  altrpPageState: altrpPageStateReducer,\r\n  altrpFonts: fontsReducer,\r\n  userLocalStorage: changeLocalStorageReducer,\r\n  exportDashboard: exportDashboard,\r\n  currentScreen: mediaScreenReducer,\r\n  currentTitle: currentTitleReducer,\r\n  currentEmailTemplate: currentEmailTemplateReducer,\r\n  altrpPage: currentPageReducer,\r\n  altrpMenus: menusReducer,\r\n  elementsSettings: elementsSettingsReducer,\r\n  areas: areasReducer,\r\n});\r\n","export const CHANGE_USER_LOCAL_STORAGE = \"CHANGE_USER_LOCAL_STORAGE\";\r\n\r\nexport function changeStorageData(user) {\r\n  return {\r\n    type: CHANGE_USER_LOCAL_STORAGE,\r\n    user: user || {}\r\n  };\r\n}\r\n","export const CHANGE_CURRENT_TITLE = 'CHANGE_CURRENT_TITLE';\r\n\r\nexport function changeCurrentTitle(title) {\r\n  return {\r\n    type: CHANGE_CURRENT_TITLE,\r\n    title\r\n  };\r\n}\r\n\r\n","import {\r\n  CHANGE_CURRENT_EMAIL_TEMPLATE\r\n} from \"./actions\";\r\n\r\n\r\nconst defaultTemplate = null;\r\n\r\nexport function currentEmailTemplateReducer(template, action) {\r\n  template = template || defaultTemplate;\r\n  switch (action.type) {\r\n    case CHANGE_CURRENT_EMAIL_TEMPLATE:\r\n      {\r\n        template = action.template;\r\n      }\r\n      break;\r\n  }\r\n  return template;\r\n}\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n// Grab the state from a global variable injected into the server-generated HTML\r\nconst preloadedState = window.__PRELOADED_STATE__;\r\n\r\n// Allow the passed state to be garbage-collected\r\ndelete window.__PRELOADED_STATE__;\r\nlet appStore = createStore(rootReducer, preloadedState);\r\nwindow.appStore = appStore;\r\nif (window.ALTRP_DEBUG) {\r\n  let _dis = appStore.dispatch;\r\n  appStore.dispatch = function(action) {\r\n    console.trace(action);\r\n    _dis.bind(appStore)(action);\r\n  };\r\n}\r\nexport default appStore;\r\n","import Resource from \"../../../../editor/src/js/classes/Resource\";\r\nimport Route from \"./Route\";\r\nimport appStore from \"../store/store\";\r\nimport { changeAppRoutes } from \"../store/routes/actions\";\r\n\r\nclass Routes {\r\n  constructor() {\r\n    this.resource = new Resource({\r\n      route: \"/ajax/routes\"\r\n    });\r\n    this.loadRoutes();\r\n  }\r\n  loadRoutes() {\r\n    if(window.altrpPages){\r\n      let routes = [];\r\n      for (let _data of window.altrpPages) {\r\n        routes.push(Route.routeFabric(_data));\r\n      }\r\n      appStore.dispatch(changeAppRoutes(routes));\r\n      return\r\n    }\r\n    this.resource\r\n      .getAll()\r\n      .then(routesData => {\r\n        let routes = [];\r\n        for (let _data of routesData.pages) {\r\n          routes.push(Route.routeFabric(_data));\r\n        }\r\n        appStore.dispatch(changeAppRoutes(routes));\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  }\r\n}\r\nexport default new Routes();\r\n","export const CHANGE_CURRENT_EMAIL_TEMPLATE = \"CHANGE_CURRENT_EMAIL_TEMPLATE\";\r\n\r\n\r\nexport function changeCurrentEmailTemplate(template) {\r\n  return {\r\n    type: CHANGE_CURRENT_EMAIL_TEMPLATE,\r\n    template\r\n  };\r\n}\r\n","export const TRIGGER_POPUP = \"TRIGGER_POPUP\";\r\n\r\nexport const togglePopup = payload => ({\r\n  type: TRIGGER_POPUP,\r\n  payload\r\n});"],"sourceRoot":""}