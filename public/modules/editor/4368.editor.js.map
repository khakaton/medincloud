{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/classes/modules/SettingsChangeModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/TemplateSettingsChangeModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/TemplateDataStorage.js","webpack:///./resources/modules/editor/src/js/classes/Modules.js","webpack:///./resources/modules/editor/src/js/components/WidgetIcon.js","webpack:///./resources/modules/editor/src/js/components/WidgetsPanel.js","webpack:///./resources/modules/editor/src/js/components/SettingSection.js","webpack:///./resources/modules/editor/src/js/components/DynamicContent/DynamicContent.js","webpack:///./resources/modules/editor/src/js/components/PanelTabContent.js","webpack:///./resources/modules/editor/src/js/components/state-section/GlobalStyles.js","webpack:///./resources/modules/editor/src/js/components/StateSection.js","webpack:///./resources/modules/editor/src/js/components/SettingsPanel.js","webpack:///./resources/modules/editor/src/js/components/EditorWindow.js","webpack:///./resources/modules/editor/src/js/components/HistoryPanel.js","webpack:///./node_modules/react-dnd/dist/esm/decorators/utils.js","webpack:///./node_modules/react-dnd/dist/esm/decorators/disposables.js","webpack:///./node_modules/react-dnd/dist/esm/decorators/decorateHandler.js","webpack:///./node_modules/react-dnd/dist/esm/decorators/createSourceFactory.js","webpack:///./resources/modules/editor/src/js/components/NavigationItem.js","webpack:///./node_modules/react-dnd/dist/esm/decorators/DragSource.js","webpack:///./resources/modules/editor/src/js/components/NavigationPanel.js","webpack:///./resources/modules/editor/src/js/components/CommonPanel.js","webpack:///./resources/modules/editor/src/js/components/GlobalColors.js","webpack:///./resources/modules/editor/src/js/components/GlobalEffectItemAdd.js","webpack:///./resources/modules/editor/src/js/components/GlobalEffectItem.js","webpack:///./resources/modules/editor/src/js/components/GlobalEffects.js","webpack:///./resources/modules/editor/src/js/components/GlobalFontItemAdd.js","webpack:///./resources/modules/editor/src/js/components/GlobalFontItem.js","webpack:///./resources/modules/editor/src/js/components/GlobalFonts.js","webpack:///./resources/modules/editor/src/js/components/UpdateButton.js","webpack:///./resources/modules/editor/src/js/classes/modules/AssetsBrowser.js","webpack:///./resources/modules/editor/src/js/helpers/to-data-url.js","webpack:///./resources/modules/editor/src/js/components/ResponsiveDdFooter.js","webpack:///./resources/modules/editor/src/js/components/DialogTab.js","webpack:///./resources/modules/editor/src/js/components/DialogConditionsTab.js","webpack:///./resources/modules/editor/src/js/components/DialogTriggersTab.js","webpack:///./resources/modules/editor/src/js/components/DialogWindow.js","webpack:///./resources/modules/editor/src/Editor.js","webpack:///./node_modules/invert-color/lib/invert.min.js"],"names":["modules","elementsIds","element","RootElement","this","rootElement","getIds","setCurrentRootElement","toObject","data","getTemplateData","title","name","type","currentElement","store","setCurrentElement","BaseElement","elementId","stack","children","length","pop","id","push","elementName","newSection","Section","getId","newColumn","Column","newWidget","window","elementsManager","getElementClass","appendColumn","appendNewSection","changeTemplateStatus","CONSTANTS","getEditor","showSettingsPanel","appendWidget","BaseModule","editor","elementsFactory","ElementsFactory","saveImportModule","SaveImportModule","settingsChangeModule","SettingsChangeModule","templateSettingsChangeModule","TemplateSettingsChangeModule","templateDataStorage","TemplateDataStorage","load","WidgetIcon","props","state","onDragStart","bind","e","startDrag","dataTransfer","effectAllowed","setData","getName","className","draggable","React","getIconComponent","height","getTitle","Component","widgets","getWidgetsList","autoHide","autoHideTimeout","autoHideDuration","map","widget","key","ChevronIcon","SettingSection","open","hidden","toggle","sectionId","console","log","currentElementName","getCurrentElement","currentTab","getCurrentTab","settingSection","undefined","dispatch","setActiveSection","checkSectionDisplay","sectionID","conditionsCallback","setState","conditions","_","toPairs","forEach","condition","controlId","comparedValue","negative","indexOf","replace","_value","getSettings","isArray","value","isString","isBoolean","activeSectionID","controllers","controls","hideOnEmail","getTemplateType","filter","controller","onClick","label","ControllerComponent","controllersManager","getController","connect","settingSectionMenu","controllerValue","DATA_TYPES_OPTIONS","MORPHS_TYPES_OPTIONS","array","DynamicContent","wrapperClickHandler","stopPropagation","typeChange","data_type","unset","setSettings","convertChange","convert_type","changeArgument","index","argument","resource","Resource","route","updateDynamicValue","setDynamicSetting","settingName","getDynamicSetting","prevProps","prevState","top","offsetTop","offsetHeight","left","classes","show","argument1","selectDataTypeProps","onChange","find","item","options","classNamePrefix","placeholder","noOptionsMessage","isClearable","convertsOptions","selectConvertTypeProps","join","style","getPositionProps","AltrpSelect","target","dynamicContentState","get","sections","section","idx","ItemPredicate","query","findIndex","split","char","similar","queryChar","ItemRenderer","handleClick","settings","AltrpMeta","meta","getMetaValue","save","needUpdate","findSimilar","altrpEditor","getRootElement","global_styles_presets","elem","appStore","deleteGlobalStylesPresets","modifiers","minimal","fill","text","alignText","Alignment","intent","icon","ItemCreateRenderer","active","controlsNames","getControls","tab","control","metaValue","keys","setMetaValue","updateGlobalStylesPresets","GlobalStyles","presets","globalStylesPresets","styles","items","currentPreset","currentElementId","current","updateCurrent","updateQuery","removeCurrent","isEqual","s","currentElementSettings","JSON","stringify","isNewPreset","preset","presetSettings","controllerName","setSettingValue","then","r","widgetName","deleteSetting","createNewItemFromQuery","onQueryChange","createNewItemRenderer","itemPredicate","createNewItemPosition","noResults","disabled","itemRenderer","onItemSelect","popoverProps","targetClassName","payload","firstElement","getChildren","child","StateSection","buttons","setCurrentState","button","currentState","ContentIcon","StyleIcon","AdvancedIcon","SettingsPanel","activeTab","setCurrentTab","pair","Controller","contentTabClasses","TAB_CONTENT","styleTabClasses","TAB_STYLE","advancedTabClasses","TAB_ADVANCED","setActiveTab","EditorWindow","width","currentScreen","historyStoreActive","src","historyStore","UserSvg","StartFilled","HistoryPanel","ActionsTabContent","RevisionTabContent","actionsTabClasses","revisionTabClasses","renderTabContent","controllerHistory","useSelector","history","handlerHistory","i","undo","redo","iconsManager","renderIcon","restoreItemClasses","arrayRevisions","setArrayRevisions","currentRevision","setCurrentRevision","oldRootElement","setOldRootElement","cloneDeep","getTemplateDataStorage","templateId","getState","templateData","getAll","reverse","fetchRevisions","parent","setActiveHistoryStore","handleSetCurrentRevision","parent_template","response","revisionRootElement","parse","parsedData","getFactory","parseData","replaceAll","showWidgetsPanel","addHistoryStoreItem","old","new","dateString","secondsAgo","Date","now","updated_at","Math","floor","date","toLocaleString","month","getDate","getHours","getMinutes","author","_typeof","obj","Symbol","iterator","constructor","prototype","isFunction","input","noop","isPlainObject","isObjectLike","Object","getPrototypeOf","proto","isValidType","allowArray","Array","every","t","_classCallCheck","instance","Constructor","TypeError","_defineProperties","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","Disposable","action","isDisposed","d","Boolean","dispose","result","isDisposable","empty","CompositeDisposable","_len","arguments","disposables","_key","shouldDispose","splice","len","currentDisposables","_i","_i2","SerialDisposable","_arrayLikeToArray","arr","arr2","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_possibleConstructorReturn","self","call","ReferenceError","_assertThisInitialized","_getPrototypeOf","decorateHandler","_ref","DecoratedComponent","createHandler","createMonitor","createConnector","registerHandler","containerDisplayName","getType","collect","_options$arePropsEqua","arePropsEqual","Decorated","displayName","DragDropContainer","_Component","subClass","superClass","create","_inherits","Derived","hasNativeReflectConstruct","_super","Reflect","construct","sham","Proxy","valueOf","Super","NewTarget","apply","_this","decoratedRef","createRef","handleChange","nextState","getCurrentState","disposable","receiveProps","handlerId","nextProps","currentType","handler","receiveType","handlerMonitor","manager","handlerConnector","_registerHandler2","_arrayWithHoles","_arr","_n","_d","_e","_s","next","done","err","_iterableToArrayLimit","minLen","n","toString","slice","from","test","_unsupportedIterableToArray","_nonIterableRest","unregister","receiveHandlerId","unsubscribe","getMonitor","subscribeToStateChange","handlerIds","setDisposable","hooks","_this2","DndContext","_ref2","C","dragDropManager","receiveDragDropManager","requestAnimationFrame","_this2$handlerConnect","reconnect","assign","ref","render","_item$$$typeof","$$typeof","isRefForwardingComponent","getBackend","concat","ALLOWED_SPEC_METHODS","REQUIRED_SPEC_METHODS","SourceImpl","spec","monitor","beginDrag","canDrag","globalMonitor","sourceId","isDragging","getSourceId","currentRef","endDrag","createSourceFactory","NavigationItem","connectDragSource","opacity","cursor","createSource","backend","SourceConnector","DragSourceMonitorImpl","DragSource","dragSource","NavigationPanel","template","parseTemplate","dragOver","isDrag","handleExpand","handleCollapse","showItem","deleteItem","storeListener","node","nodePath","currentTree","Tree","isExpanded","editorSetCurrentElementByID","newTemplate","currentTemplate","elementID","confirm","preventDefault","deleteCurrentElementByID","newTree","removeElementFromArray","f","childNodes","expandable","isExpandable","depth","hasCaret","overflow","contents","onNodeExpand","onNodeCollapse","onNodeDoubleClick","StyledWrapper","styled","Heading","MenuGroup","MenuItems","Item","showGlobalColorsPanel","showGlobalFontsPanel","showGlobalEffectsPanel","Panel","GlobalColors","colorChange","rgba","rgb","g","b","a","hex","colors","currentColor","color","colorPickedHex","colorRGB","setColors","guid","debounceChangeColor","debounce","globalStyleResource","put","res","editColor","updateEffectColors","recursiveWalkTree","nameChange","debounceChangeName","toggleColorPanel","addItem","colorPanelOpen","effects","effect","globalColor","newEffectColor","editEffect","templateItem","hasGlobal","updateAllGlobals","recursiveUpdate","createGlobalColor","post","delete","marginBottom","backgroundColor","invert","black","white","threshold","presetColors","padding","boxShadow","globalStyles","setGlobalColors","editGlobalColor","editGlobalEffect","typeOptions","defaultValues","blur","horizontal","spread","vertical","isNew","edit","onSlide","onSelect","onSaveEffect","event","string","setting","send","success","addEffect","onSaveEffectClose","onSubmit","required","defaultValue","position","marginTop","GlobalPresetColors","changeValue","min","max","stepSize","labelStepSize","showTrackFill","inline","activeItem","rightIcon","onDeleteEffect","updateAllTree","confirmation","deleteEffect","isOpen","GlobalEffects","setEffect","addGlobalEffect","deleteGlobalEffect","familyOptions","altrpFontsSet","font","units","weightOptions","transformOptions","styleOptions","decorationOptions","decoration","family","lineHeight","size","spacing","sizeUnit","weight","transform","changeUnit","changeSize","changeWeight","changeTransform","changeStyle","changeDecoration","changeLineHeight","changeSpacing","onSaveFont","addFont","onSaveFontClose","unit","onValueChange","defaultChecked","onDeleteFont","editFont","deleteFont","GlobalFonts","fonts","addGlobalFont","editGlobalFont","deleteGlobalFont","Chevron","TEMPLATE_TYPES_WITHOUT_CONDITIONS","UpdateButton","isShowed","saveTemplate","toggleModalWindow","buttonClasses","templateStatus","showTemplateConditions","template_type","showModal","status","Times","AssetsBrowser","insertRaw","asset","url","callback","xhr","assets","selectedAsset","getAsText","rawSVG","onChoose","assetsToggle","dataUrl","XMLHttpRequest","onload","reader","FileReader","onloadend","readAsDataURL","responseType","tabClick","toggleBrowser","selectAsset","chooseAsset","tabs","svgAssets","getAssets","mediaAssets","videoAssets","mediaResource","svgResource","videoResource","nextContext","resSvg","resMedia","document","addEventListener","currentTarget","dataset","assetname","rawEnable","tabClasses","AssetContent","assetProps","iconComponent","filename","assetType","video","xmlns","assetsManagerSettings","ResponsiveDdFooter","screens","screen","setCurrentScreen","toggleOpen","desc","DialogConditionsTab","handleObjectTypeChange","conditionId","v","object_type","object_ids","handleIdsSelect","ids","handleChangeConditionType","condition_type","currentLogic","searchValue","pageOptions","reportsOptions","getTemplateId","close","randomNumber","random","forceUpdate","filteredData","include","exclude","logic_options","main_options","isMulti","closeMenuOnSelect","removeCondition","addCondition","updateConditions","DialogTriggersTab","onLoad","onScroll","scrollElement","afterInactivity","on_exit","inactivity","on_click","on_page_load","on_scroll","to_element","triggers","direction","checked","htmlFor","handleChangePage","step","handleCheck","updateTriggers","Logo","DialogWindow","handleClose","handleOpen","renderSwitch","Link","Navigation","History","Preview","Settings","Dots","Hamburger","activePanel","showDialogWindow","effectRef","openPageSettings","openNavigratonPanel","showNavigationPanel","showHistoryPanel","showCommonPanel","onDragEnd","Modules","loaded","contextMenu","closeDynamicContent","draggableElement","elementDrag","stopDrag","initModules","currentUser","changeCurrentUser","presetGlobalStyles","setEditorMeta","setGlobalStylesPresets","setGlobalEffects","setGlobalFonts","settingsActive","navigationActive","templateClasses","DndProvider","HTML5Backend","onKeyDown","href","admin_logo","renderAsset","viewBox","module","exports","sqrt","Error","parseInt","u","pow","asRGB","asRgbArray","defaultThreshold","asRgbObject"],"mappings":";yTAGA,E,8BCAA,E,wJC8GA,E,wcAlGE,WAAYA,GAAS,6BACnB,cAAMA,IACDC,YAAc,GAFA,E,yCAKrB,SAAWC,GACT,IAAKA,aAAmBC,IACtB,KAAM,wCAERC,KAAKC,YAAcH,EACnBE,KAAKH,YAAcC,EAAQI,SAC3BF,KAAKG,0B,6BAGP,WACE,OAAOH,KAAKC,YAAYG,a,oCAE1B,WACE,IAAIC,EAAO,GAKX,OAHAA,EAAKA,KAAOL,KAAKM,kBACjBD,EAAKE,MAAQP,KAAKO,OAAS,GAC3BF,EAAKG,KAAOR,KAAKQ,MAAQ,GAClBH,I,sBAGT,SAASE,GACPP,KAAKO,MAAQA,I,qBAGf,SAAQC,GACNR,KAAKQ,KAAOA,I,qBAEd,SAAQC,GACNT,KAAKS,KAAOA,I,mCAGd,WAGE,OAFAT,KAAKU,eAAiBV,KAAKC,YAC3BU,eAAeC,QAAkBZ,KAAKU,iBAC/BV,KAAKU,iB,+BAGd,SAAkBZ,GAChB,IAAKA,aAAmBe,IACtB,KAAM,0CAERb,KAAKU,eAAiBZ,EACtBa,eAAeC,QAAkBd,M,+BAGnC,WACE,OAAKE,KAAKU,eAGHV,KAAKU,eAFHV,KAAKG,0B,4BAKhB,SAAeW,GAGb,IAFA,IACIhB,EADAiB,GAAQ,OAAIf,KAAKC,YAAYe,UAEP,IAAjBD,EAAME,QAAe,CAE5B,IADAnB,EAAUiB,EAAMG,OACJC,IAAML,EAAW,OAAOhB,EACpCiB,EAAMK,KAAN,MAAAL,GAAK,OAASjB,EAAQkB,c,4BAI1B,WACE,OAAOhB,KAAKC,c,gCAGd,SAAmBoB,GACjB,IAAIC,EAAa,IAAIC,IACrBvB,KAAKH,YAAYuB,KAAKE,EAAWE,SAEjC,IAAIC,EAAY,IAAIC,IACpB1B,KAAKH,YAAYuB,KAAKK,EAAUD,SAEhC,IAAIG,EAAY,IAAKC,OAAOC,gBAAgBC,gBAAgBT,IAE5D,GADArB,KAAKH,YAAYuB,KAAKO,EAAUH,SACZ,mBAAhBH,EAMF,OALAC,EAAWS,aAAaN,GACxBzB,KAAKC,YAAY+B,iBAAiBV,GAClCtB,KAAKY,kBAAkBU,GACvBX,eAAesB,OAAqBC,sCACpCC,UAAYC,oBAGdX,EAAUY,aAAaV,GACvBL,EAAWS,aAAaN,GACxBzB,KAAKC,YAAY+B,iBAAiBV,GAClCtB,KAAKY,kBAAkBe,GACvBhB,eAAesB,OAAqBC,kCACpCC,UAAYC,wB,GA/FkBE,KCQlC,E,WAZE,WAAYC,IAAO,eACjBvC,KAAKwC,gBAAkB,IAAIC,IAAgBzC,MAC3CA,KAAK0C,iBAAmB,IAAIC,IAAiB3C,MAC7C4B,OAAOc,iBAAmB,IAAIC,IAAiB3C,MAC/CA,KAAK4C,qBAAuB,IAAIC,EAAqB7C,MACrDA,KAAK8C,6BAA+B,IAAKC,EAA6B/C,MACtEA,KAAKgD,oBAAsB,IAAIC,EAAoBjD,M,qCAErD,WACEA,KAAK0C,iBAAiBQ,W,oBCdLC,E,wcACnB,WAAYC,GAAM,6BAChB,cAAMA,IAEDC,MAAQ,CACXvD,QAAS,EAAKsD,MAAMtD,SAEtB,EAAKwD,YAAc,EAAKA,YAAYC,MAAjB,WANH,E,0CAQlB,SAAYC,GACV7C,eAAe8C,QAAU,OACzBD,EAAEE,aAAaC,cAAgB,OAC/BH,EAAEE,aAAaE,QAAQ,aAAc5D,KAAKqD,MAAMvD,QAAQ+D,a,oBAE1D,WACE,IAAK7D,KAAKqD,MAAMvD,mBAAmBe,IACjC,KAAM,6CAER,OAAO,uBAAKiD,UAAU,cAAcC,UAAU,OAAOT,YAAatD,KAAKsD,aAEnEU,gBAAoBhE,KAAKqD,MAAMvD,QAAQmE,mBAAoB,CAACC,OAAQ,KAEtE,uBAAKJ,UAAU,sBACZ9D,KAAKqD,MAAMvD,QAAQqE,iB,GAvBcC,a,eCmB1C,E,wcAnBE,WAAYhB,GAAO,6BACjB,cAAMA,IACDC,MAAQ,CAAEgB,QAASzC,OAAOC,gBAAgByC,kBAF9B,E,qCAInB,WACE,OACE,uBAAKR,UAAU,wBACb,gBAAC,KAAD,CAAYS,UAAQ,EAACC,gBAAiB,IAAKC,iBAAkB,KAC3D,uBAAKX,UAAU,gBACZ9D,KAAKqD,MAAMgB,QAAQK,KAAI,SAAAC,GACtB,OAAO,gBAACxB,EAAD,CAAYrD,QAAS6E,EAAQC,IAAKD,EAAOd,sB,GAXnCO,a,0mBCHpBS,E,6HAAAA,E,2GAMDC,E,wcACJ,WAAY1B,GAAO,6BACjB,cAAMA,IACDC,MAAQ,CACX0B,MAAM,EACNC,QAAQ,GAEV,EAAKC,OAAS,EAAKA,OAAO1B,MAAZ,WACS,0BAApBH,EAAM8B,WACPC,QAAQC,IAAIhC,GARG,E,gDAYnB,WAME,IAAIiC,GAAqBC,UAAoBzB,UACzC0B,GAAaC,UACVxF,KAAKoD,MAAMqC,eAAeJ,SACqCK,IAA9D1F,KAAKoD,MAAMqC,eAAeJ,GAAoBE,IACpDvF,KAAKoD,MAAMuC,UAASC,QAAiBN,UAAoBzB,WAAW2B,UAAiB,IAEvFxF,KAAK6F,wB,gCAGP,WACE7F,KAAK6F,wB,oBAGP,WACE7F,KAAKoD,MAAMuC,UAASC,QAAiBN,UAAoBzB,WAAW2B,UAAiBxF,KAAKoD,MAAM0C,c,iCAOlG,WAEE,GAAG9F,KAAKoD,MAAM2C,mBAAd,CACE,IAAIf,GAAWhF,KAAKoD,MAAM2C,qBAC1B,GAAG/F,KAAKqD,MAAM2B,SAAWA,EACvB,OAEFhF,KAAKgG,UAAS,SAAA3C,GAAK,cAASA,GAAT,IAAgB2B,mBAGrC,GAAKhF,KAAKoD,MAAM6C,WAAhB,CAGA,IAAIjB,GAAS,EAEQkB,EAAEC,QAAQnG,KAAKoD,MAAM6C,YAC3BG,SAAQ,SAAAC,GACrB,cAAiCA,EAAjC,GAAKC,EAAL,KAAgBC,EAAhB,KACIC,EAAWF,EAAUG,QAAQ,MAAQ,EACzCH,EAAYA,EAAUI,QAAQ,IAAK,IACnC,IAAIC,GAASrB,UAAoBsB,YAAYN,GACxCJ,EAAEW,QAAQF,GAEc,IAAlBA,EAAO1F,SAChB+D,GAAS,GAFT2B,EAAS,CAACA,GAIZA,EAAOP,SAAQ,SAAAU,GACT9B,KAGAkB,EAAEa,SAASR,IAAkBL,EAAEc,UAAUT,MAC3CvB,EAAS8B,IAAUP,GAAiBC,EAAWA,GAE7CN,EAAEW,QAAQN,KACZvB,GAA2C,IAAlCuB,EAAcE,QAAQK,IAAiBN,EAAWA,UAI9DxG,KAAKqD,MAAM2B,SAAWA,GACvBhF,KAAKgG,UAAS,SAAA3C,GAAK,cAASA,GAAT,IAAgB2B,iB,oBAGvC,WACE,GAAGhF,KAAKqD,MAAM2B,OACZ,OAAO,KAET,IAAIK,GAAqBC,UAAoBzB,UACzC0B,GAAaC,UACbyB,EAAkB,EAIlBjH,KAAKoD,MAAMqC,eAAeJ,SACwCK,IAA9D1F,KAAKoD,MAAMqC,eAAeJ,GAAoBE,KACpD0B,EAAkBjH,KAAKoD,MAAMqC,eAAeJ,GAAoBE,IAElE,IAAI2B,EAAclH,KAAKoD,MAAM+D,UAAY,GACzC,OAAGnH,KAAKoD,MAAMgE,aAAqC,WAAtBC,UACpB,IAETH,EAAcA,EAAYI,QAAO,SAAAC,GAC/B,QAAUA,EAAWH,aAAqC,WAAtBC,cAGpC,uBAAMvD,UAAW,qBAAuB9D,KAAKoD,MAAM0C,YAAcmB,EAAkB,OAAS,KAC1F,uBAAKnD,UAAU,iCAAiC0D,QAASxH,KAAKiF,QAC5D,uBAAKnB,UAAU,kCACb,gBAACe,EAAD,OAEF,uBAAKf,UAAU,2BACZ9D,KAAKoD,MAAMqE,QAGhB,uBAAK3D,UAAU,uBAEXoD,EAAYxC,KAAI,SAAC6C,GACf,IAAIG,EAAsB9F,OAAO+F,mBAAmBC,cAAcL,EAAW9G,MAC7E,OAAOuD,gBAAoB0D,EAApB,OAA8CH,GAA9C,IAA0D3C,IAAK2C,EAAWjB,uB,GArHlElC,aAsI7B,GAAeyD,cARS,SAACxE,GACvB,MAAO,CACLoC,eAAgBpC,EAAMyE,mBACtBC,gBAAiB1E,EAAM0E,mBAKa,KAAxC,CAA8CjD,G,qmBC5I9C,gCACA,gCAQA,IAAMkD,EAAqB,CACzB,CACElB,MAAO,QACPW,MAAO,UAGLQ,EAAuB,CAK3BC,MAAO,CACL,CAIET,MAAO,UACPX,MAAO,WAET,CAIEW,MAAO,MACPX,MAAO,SAOPqB,G,wcACJ,WAAY/E,GAAO,6BACjB,cAAMA,IAsBRgF,oBAAsB,SAAC5E,GACrBA,EAAE6E,mBAxBe,EA+DnBC,WAAa,SAAC9E,GACZ,IAAIsD,EAAQ,KAAI,EAAKzD,MAAMyD,OACtBtD,EAGHsD,EAAMyB,UAAY/E,EAAEsD,MAFpBZ,EAAEsC,MAAM1B,EAAO,aAIjBZ,EAAEsC,MAAM1B,EAAO,gBACf,EAAKd,UAAS,SAAA3C,GAAK,cAASA,GAAT,IAAgByD,YAAS,EAAK2B,cAvEhC,EA6EnBC,cAAgB,SAAClF,GACf,IAAIsD,EAAQ,KAAI,EAAKzD,MAAMyD,OACtBtD,EAGHsD,EAAM6B,aAAenF,EAAEsD,MAFvBZ,EAAEsC,MAAM1B,EAAO,gBAIjB,EAAKd,UAAS,SAAA3C,GAAK,cAASA,GAAT,IAAgByD,YAAS,EAAK2B,cApFhC,EA2FnBG,eAAiB,SAACC,EAAOC,GACvB,IAAIhC,EAAQ,KAAI,EAAKzD,MAAMyD,OACtBgC,EAGHhC,EAAM,WAAD,OAAY+B,GAAS,IAAOC,EAFjC5C,EAAEsC,MAAM1B,EAAR,kBAA0B+B,GAAS,IAIrC,EAAK7C,UAAS,SAAA3C,GAAK,cAASA,GAAT,IAAgByD,YAAS,EAAK2B,cAhGjD,EAAKpF,MAAQ,CACXyD,MAAO,IAET,EAAKiC,SAAW,IAAIC,UAAS,CAACC,MAAO,2CALpB,E,gDAQnB,WACEjJ,KAAKkJ,uB,yBAMP,WACEvI,eAAesB,OAAqBC,iCACpClC,KAAKoD,MAAM1C,eAAeyI,kBAAkBnJ,KAAKoD,MAAMgG,YAAapJ,KAAKqD,MAAMyD,S,gCAYjF,WACE,GAAK9G,KAAKoD,MAAMgG,aAAiBpJ,KAAKoD,MAAM1C,eAA5C,CAGA,IAAIoG,EAAQ9G,KAAKoD,MAAM1C,eAAe2I,kBAAkBrJ,KAAKoD,MAAMgG,aAC9DtC,IACHA,EAAQ,IAEV9G,KAAKgG,UAAS,SAAA3C,GAAK,cAASA,GAAT,IAAgByD,gB,gCAGrC,SAAmBwC,EAAWC,GACzBvJ,KAAKoD,MAAM1C,iBAAmB4I,EAAU5I,gBACzCV,KAAKkJ,qBAEJlJ,KAAKoD,MAAMgG,cAAgBE,EAAUF,aACtCpJ,KAAKkJ,uB,8BAGT,WACE,IAAIpJ,EAAUE,KAAKoD,MAAMtD,QACzB,OAAKA,EAGC,CACJ0J,IAAK1J,EAAQ2J,UAAY3J,EAAQ4J,aAAe,EAChDC,KAAK,GAJC,CAACH,IAAI,EAAGG,KAAK,K,oBAkDvB,WAAS,WACHC,EAAU,CAAC,yBACZ5J,KAAKoD,MAAMyG,MACZD,EAAQxI,KAAK,8BAEf,MAA6CpB,KAAKqD,MAAMyD,MAAjDyB,EAAP,EAAOA,UAAWI,EAAlB,EAAkBA,aAAcmB,EAAhC,EAAgCA,UAE5BC,EAAsB,CACxBC,SAAUhK,KAAKsI,WACfxB,MAAOZ,EAAE+D,KAAKjC,GAAoB,SAAAkC,GAAI,OAAIA,EAAKpD,QAAUyB,MAAc,KACvE4B,QAASnC,EACToC,gBAAiB,iBACjBC,YAAa,mBACbC,iBAAkB,iBAAM,YACxBC,aAAa,GAEXC,EAAkBvC,EAAqBM,IAAc,GACrDkC,EAAyB,CAC3BT,SAAUhK,KAAK0I,cACf5B,MAAOZ,EAAE+D,KAAKO,GAAiB,SAAAN,GAAI,OAAIA,EAAKpD,QAAU6B,MAAiB,KACvEwB,QAASK,EACTJ,gBAAiB,iBACjBC,YAAa,mBACbC,iBAAkB,iBAAM,YACxBC,aAAa,GAEf,OAAO,uBAAKzG,UAAW8F,EAAQc,KAAK,KAAOC,MAAO3K,KAAK4K,mBAAoBpD,QAASxH,KAAKoI,qBACzF,uBAAKtE,UAAU,qDACb,uBAAKA,UAAU,0BACb,uBAAKA,UAAU,0BAAf,gBAEF,uBAAKA,UAAU,qCACb,gBAAC+G,EAAA,GAAD,QAAaN,aAAa,GAAUR,MAGrCS,EAAgBvJ,OAAS,uBAAK6C,UAAU,qDACvC,uBAAKA,UAAU,0BACb,uBAAKA,UAAU,0BAAf,kBAEF,uBAAKA,UAAU,qCACb,gBAAC+G,EAAA,GAAD,QAAaN,aAAa,GAAUE,MAE/B,KACRlC,GAAa,uBAAKzE,UAAU,sDAC3B,uBAAKA,UAAU,+BAAf,gBAGA,4BAAUA,UAAU,iCACVgD,MAAOgD,GAAa,GACpBE,SAAU,SAACxG,GAAO,EAAKoF,eAAe,EAAGpF,EAAEsH,OAAOhE,gB,GAvJvC1C,aAqK7B,IAAeyD,cARf,SAAyBxE,GACvB,cACKA,EAAM0H,qBADX,IAEE3B,YAAalD,EAAE8E,IAAI3H,EAAM0H,oBAAqB,sBAC9CrK,eAAgB2C,EAAM3C,eAAeA,mBAIzC,CAAwCyH,I,6kBC7KxC,G,wiBA1BE,WACE,IAAI8C,EAAWjL,KAAKoD,MAAM6H,UAAY,GACtC,OAAO,uBAAKnH,UAAU,wBACpB,gBAAC,KAAD,CACES,UAAQ,EACRC,gBAAiB,IACjBC,iBAAkB,KAElB,uBAAKtD,GAAG,uBAEJ8J,EAASvG,KAAI,SAACwG,EAASC,GACrB,OAAOnH,gBAAoBc,EAApB,SACFoG,GADE,IAELtG,IAAKsG,EAAQhG,UACbY,UAAWqF,QAKjB,gBAAC,GAAD,a,GArBoB/G,a,4rBCe9B,SAASgH,GAAcC,EAAOvE,GAE5B,OAAIuE,IAcU,IAVAnF,EAAEoF,UAAUpF,EAAEqF,MAAMzE,EAAO,KAAK,SAAA0E,GAC5C,IAAIC,GAAU,EAMd,OALAvF,EAAEqF,MAAMF,EAAO,IAAIjF,SAAQ,SAAAsF,GACtBA,IAAcF,IACfC,GAAU,MAGPA,KAUX,SAASE,GAAaN,EAAtB,GAAyD,IAA1BO,EAA0B,EAA1BA,YAA0B,wCAEvD,iGACQlL,GAAiB4E,UACjBuG,EAAWnL,EAAekG,cAFlC,SAIqBkF,mBAAwB,iBAJ7C,qBAIQC,EAJR,QAKyBC,aAAa,IAEnBtL,EAAemD,WAAWwH,GAP7C,SASQU,EAAKE,OATb,OAWQC,EAAa,GAKnBC,GAHcC,YAAYxM,QAAQoD,oBAAoBqJ,iBAGjCH,UAEdL,EAASS,sBAEhBJ,EAAW9F,SAAQ,SAAAmG,GACjBA,EAAK9D,YAAYoD,MAGnBW,SAAS7G,UACP8G,SAA0B/L,EAAemD,UAAWwH,IAzBxD,6CAFuD,sBA+BvD,OA/BuD,EAAbqB,UA+BnC,gBAAC,MAAD,CAAa9H,IAAKyG,EAAOvH,UAAU,6BAA6B6I,SAAO,GAC5E,gBAAC,MAAD,CACEC,MAAI,EACJC,KAAMxB,EACNyB,UAAWC,UACXvF,QAASoE,IAEX,gBAAC,MAAD,CACErL,MAAM,qBACNiH,QAxCmD,2CAyCnDwF,OAAO,SACPC,KAAK,WAMX,SAASC,GAAmB7B,EAAO8B,EAAQvB,GAAa,wCAEtD,mGACQwB,EAAgB,IAEhB1M,GAAiB4E,WAEJzB,SACN8D,mBAAmB0F,YAAY3M,EAAemD,WAEpD8G,MAAMvE,SAAQ,SAAAkH,GACjBA,EAAInG,SAASf,SAAQ,SAAAmH,GACnBH,EAAchM,KAAKmM,EAAQjH,iBAK3Ba,EAAW,GAEjBiG,EAAchH,SAAQ,SAAA5F,GACjBE,EAAemL,SAASrL,KACzB2G,EAAS3G,GAAQE,EAAemL,SAASrL,OAnB/C,SAuBmBsL,mBAAwB,iBAvB3C,cAuBMC,EAvBN,QAwBQyB,EAAYzB,EAAKC,aAAa,KAEvBtL,EAAemD,YAC1BqC,EAAEuH,KAAKD,EAAU9M,EAAemD,YAAYuC,SAAQ,SAAC5F,GACnD,GAAG6K,IAAU7K,EACX,KAAM,0CAKZuL,EAAK2B,aAAL,SACKF,GADL,cAEG9M,EAAemD,UAFlB,SAGO2J,EAAU9M,EAAemD,YAHhC,cAIKwH,EAAQlE,OAtCf,UA0CQ4E,EAAKE,OA1Cb,QA4CEO,SAAS7G,UACPgI,SAA0BjN,EAAemD,UAAWwH,EAAOlE,IAG7DyE,IAhDF,6CAFsD,sBAqDtD,OAAO,gBAAC,MAAD,CACLqB,KAAK,MACLJ,KAAI,gBACJrF,QAxDoD,6C,IA4DlDoG,G,wcACJ,WAAYxK,GAAO,sBACjB,cAAMA,GACN,IAAM1C,EAAiB0C,EAAM1C,eAAeA,eACtCmN,EAAUzK,EAAM0K,oBAAoBC,OAEtCC,EAAQ,GACTH,GACEA,EAAQnN,EAAemD,aACxBmK,EAAO9H,EAAEuH,KAAKI,EAAQnN,EAAemD,aAGzC,IAAMoK,EAAgBvN,EAAekG,YAAY,wBAAyB,IAXzD,OAajB,EAAKvD,MAAQ,CACX6K,iBAAkBxN,EAAec,QACjC6J,MAAO,GACP8C,QAASF,EACTD,SAGF,EAAKI,cAAgB,EAAKA,cAAc7K,MAAnB,WACrB,EAAK8K,YAAc,EAAKA,YAAY9K,MAAjB,WACnB,EAAK+K,cAAgB,EAAKA,cAAc/K,MAAnB,WAtBJ,E,iDAyBnB,SAAmB+F,EAAWC,GAAW,WACjC7I,EAAiBV,KAAKoD,MAAM1C,eAAeA,eAC3CmN,EAAU7N,KAAKoD,MAAM0K,oBAAoBC,OAC3CC,EAAQ,GAYZ,GAXIH,EAAQnN,EAAemD,aACzBmK,EAAQ9H,EAAEuH,KAAKI,EAAQnN,EAAemD,aAGnCqC,EAAEqI,QAAQvO,KAAKqD,MAAM2K,MAAOA,IAC/BhO,KAAKgG,UAAS,SAACwI,GAAD,UAAC,MACVA,GADS,IAEZR,aAIDtN,EAAec,UAAYxB,KAAKqD,MAAM6K,iBAAkB,CACzD,IAAMO,EAAyB/N,EAAekG,YAAY,wBAAyB,IAC/EoH,EAAQhO,KAAKoD,MAAM0K,oBAAoBC,OAAOrN,EAAemD,YAAc,GAE/E7D,KAAKgG,UAAS,SAACwI,GAAD,UAAC,MACVA,GADS,IAEZN,iBAAkBxN,EAAec,QACjC2M,QAASM,EACTpD,MAAO,GACP2C,MAAO9H,EAAEuH,KAAKO,QAGfhO,KAAKqD,MAAM8K,UAGU,IAFFjI,EAAEoF,UAAUtL,KAAKqD,MAAM2K,OAAO,SAAC9D,GAAD,OAAUA,IAAS,EAAK7G,MAAM8K,YAG9EnO,KAAKgG,UAAS,SAACwI,GAAD,UAAC,MACVA,GADS,IAEZL,QAAS,QAKZO,KAAKC,UAAU3O,KAAKoD,MAAM2E,mBAAqB2G,KAAKC,UAAUrF,EAAUvB,kBAAoB/H,KAAKqD,MAAM8K,SACxGnO,KAAKiM,S,2BAIT,SAAckC,GACZ,IAAMzN,EAAiBV,KAAKoD,MAAM1C,eAAeA,eAC7CkO,EAAc5O,KAAKqD,MAAM2K,MAAM1C,WAAU,SAAAuD,GAAM,OAAIV,IAAYU,KAE7DC,EAAiB9O,KAAKoD,MAAM0K,oBAAoBC,OAAOrN,EAAemD,WAAWsK,GAEvFjI,EAAEuH,KAAKqB,GAAgB1I,SAAQ,SAAC2I,GAC9BrO,EAAesO,gBAAgBD,EAAgBD,EAAeC,OAEhErO,EAAesO,gBAAgB,wBAAyBb,IAUpC,IAAjBS,EACD5O,KAAKgG,UAAS,SAACwI,GAAD,UAAC,MACVA,GADS,IAEZL,UACA9C,MAAO,GACP2C,MAAO,CAACG,GAAH,eAAeK,EAAER,aAGxBhO,KAAKgG,UAAS,SAACwI,GAAD,UAAC,MACVA,GADS,IAEZnD,MAAO,GACP8C,iB,kBAKN,WAAO,WACCzN,EAAiBV,KAAKoD,MAAM1C,eAAeA,eAG3C0M,EAAgB,GAElB1M,EAAemD,SACN8D,mBAAmB0F,YAAY3M,EAAemD,WAEpD8G,MAAMvE,SAAQ,SAAAkH,GACjBA,EAAInG,SAASf,SAAQ,SAAAmH,GACnBH,EAAchM,KAAKmM,EAAQjH,iBAKjC,IAAMa,EAAW,GAEjBiG,EAAchH,SAAQ,SAAA5F,GACjBE,EAAemL,SAASrL,KACzB2G,EAAS3G,GAAQE,EAAemL,SAASrL,OAI7CsL,mBAAwB,iBAAiBmD,MAAK,SAACC,GAC7C,IAAI1B,EAAY0B,EAAE7O,KAAKmN,UAEvBA,EAAY,SACPA,GADI,cAEN9M,EAAemD,UAFT,SAGF2J,EAAU9M,EAAemD,YAHvB,cAIJ,EAAKR,MAAM8K,QAAUhH,MAI1B2E,6BAAkC0B,GAAWyB,MAAK,SAAAC,UAYjDlP,KAAKoD,MAAM0K,oBAAoBC,OAAOrN,EAAemD,YACtD7D,KAAKoD,MAAMuK,0BAA0B,CACnCwB,WAAYzO,EAAemD,UAC3BrD,KAAMR,KAAKqD,MAAM8K,QACjBtC,SAAU1E,IAId,IAAM+E,EAAa,GAInBC,GAFcC,YAAYxM,QAAQoD,oBAAoBqJ,iBAEjCH,GACrBA,EAAW9F,SAAQ,SAAAmG,GACjB,IAAMV,EAAWU,EAAK3F,cACnB2F,KAASjH,WAMZiH,EAAK9D,YAAL,SACKoD,GACA1E,S,yBAKT,SAAYkE,GACVA,EAAQnF,EAAEQ,QAAQ2E,EAAO,IAAM,KAE/BrL,KAAKgG,UAAS,SAACwI,GAAD,UAAC,MACVA,GADS,IAEZnD,e,2BAIJ,WACErL,KAAKgG,UAAS,SAAAwI,GAAC,gBACVA,GADU,IAEbL,QAAS,QAGYnO,KAAKoD,MAAM1C,eAAeA,eAElC0O,cAAc,2B,oBAG/B,WACE,IAAMpB,EAAQhO,KAAKqD,MAAM2K,OAAS,GAC5B3C,EAAQrL,KAAKqD,MAAMgI,OAAS,GAE5BzB,EAAU,CAAC,+BAMjB,OAJG5J,KAAKqD,MAAM8K,SACZvE,EAAQxI,KAAK,sCAGR,uBAAK0C,UAAWoC,EAAEwE,KAAKd,EAAS,MACrC,gBAAC,KAAD,CACEyF,uBAAwB,SAAChE,GAAD,OAAWA,GACnCiE,cAAetP,KAAKqO,YACpBhD,MAAOA,EACPkE,sBAAuBrC,GACvBsC,cAAepE,GACf4C,MAAOA,EACPyB,sBAAsB,QACtBC,UAAW,gBAAC,MAAD,CAAUC,UAAU,EAAM9C,KAAK,gBAC1C+C,aAAcjE,GACdkE,aAAc7P,KAAKoO,cACnB0B,aAAc,CACZC,gBAAiB,+BAGnB,0BAAQjM,UAAU,kCAEd9D,KAAKqD,MAAM8K,QAAUnO,KAAKqD,MAAM8K,QAAU,YAK9CnO,KAAKqD,MAAM8K,QACT,0BACE3G,QAASxH,KAAKsO,cACdxK,UAAU,iCACVvD,MAAM,iBAEN,gBAAC,MAAD,CAAM0M,KAAK,WAEX,Q,GAhPejJ,aAkQ3B,IAAe6D,cAZf,SAAyBxE,GACvB,MAAO,CACL3C,eAAgB2C,EAAM3C,eACtBoN,oBAAqBzK,EAAMyK,oBAC3B/F,gBAAiB1E,EAAM0E,oBAIA,SAAApC,GAAQ,MAAK,CACtCgI,0BAA2B,SAAAqC,GAAO,OAAIrK,GAASgI,SAA0BqC,EAAQb,WAAYa,EAAQxP,KAAMwP,EAAQnE,eAGrH,CAA4D+B,IAO5D,SAASzB,GAAY8D,EAAc/D,GACjC,IAAMlL,EAAWiP,EAAaC,cACxBxP,GAAiB4E,UACA,IAApBtE,EAASC,QACVD,EAASoF,SAAQ,SAAA+J,GACf,IAAM3P,EAAO2P,EAAMtM,UAEhBnD,EAAemD,YAAcrD,GACf2P,EAAMvJ,YAAY,wBAAyB,MACpClG,EAAekG,YAAY,wBAAyB,KAGxEsF,EAAW9K,KAAK+O,GAIpBhE,GAAYgE,EAAOjE,MC/azB,gC,IAMMkE,G,wcAEJ,WAAYhN,GAAO,6BACjB,cAAMA,IACDC,MAAQ,CACXgN,QAAS,CACP,CAAE9P,MAAO,IAAKuG,MAAO,IACrB,CAAEvG,MAAO,IAAKuG,MAAO,UACrB,CAAEvG,MAAO,IAAKuG,MAAO,WACrB,CAAEvG,MAAO,IAAKuG,MAAO,UACrB,CAAEvG,MAAO,IAAKuG,MAAO,gBACrB,CAAEvG,MAAO,IAAKuG,MAAO,qBATR,E,mDAcnB,WACE9G,KAAKoD,MAAMuC,UAAS2K,QAAgB,IAAK,O,6BAG3C,SAAgBC,GACdvQ,KAAKoD,MAAMuC,UAAS2K,QAAgBC,EAAOhQ,MAAOgQ,EAAOzJ,U,oBAG3D,WAAS,WACP,OACE,uBAAKhD,UAAU,yBACb,uBAAKA,UAAU,iBAEX9D,KAAKqD,MAAMgN,QAAQ3L,KAAI,SAAC6L,EAAQ1H,GAC9B,OAAO,0BACLjE,IAAKiE,EACL/E,UAAW,0BAA4B,EAAKV,MAAMoN,aAAajQ,QAAUgQ,EAAOhQ,MAAQ,+BAAiC,IACzHiH,QAAS,kBAAM,EAAK8I,gBAAgBC,KACpCA,EAAOhQ,WAIf,gBAAC,GAAD,W,GAtCmB6D,aAkD3B,IAAeyD,cANS,SAACxE,GACvB,MAAO,CACLmN,aAAcnN,EAAMmN,gBAIgB,KAAxC,CAA8CJ,I,6kBCvDvCK,G,w/BAAAA,G,0EACAC,G,smCAAAA,G,6GACAC,G,ynNAAAA,G,6GAcDC,G,wcACJ,WAAYxN,GAAO,6BACjB,cAAMA,IACDC,MAAQ,CACXwN,UAAW,WAHI,E,2CAWnB,SAAaA,GACX7Q,KAAKgG,SAAL,SACKhG,KAAKqD,OADV,IAEEwN,eAEF7Q,KAAKoD,MAAM0N,cAAcD,K,+BAG3B,WACE7Q,KAAKoD,MAAM0N,cAAc9Q,KAAKqD,MAAMwN,a,oBAGtC,WAAS,WACHlJ,EAAqB/F,OAAO+F,mBAC5BsD,EAAW,GACXjL,KAAKoD,MAAM1C,eAAemD,SACFqC,EAAEC,QAC1BwB,EAAmB0F,YAAYrN,KAAKoD,MAAM1C,eAAemD,YAEvCuC,SAAQ,SAAA2K,GAC1BA,EAAK,GAAG3K,SAAQ,SAAA8E,GACdA,EAAQ/D,SAAW+D,EAAQ/D,SAASzC,KAAI,SAAA6I,GACtC,gBACKA,GADL,IAEEhG,WAAY,IAAIyJ,KAAWzD,WAI7BwD,EAAK,KAAO,EAAK1N,MAAMwN,YACzB5F,GAAW,OAAI8F,EAAK,QAK1B,IAAIE,EACF,qBACCjR,KAAKqD,MAAMwN,YAAcK,KAAc,SAAW,IACjDC,EACF,qBACCnR,KAAKqD,MAAMwN,YAAcO,KAAY,SAAW,IAC/CC,EACF,qBACCrR,KAAKqD,MAAMwN,YAAcS,KAAe,SAAW,IACtD,OACE,uBAAKxN,UAAU,+BACb,uBAAKA,UAAU,qBACb,0BACEA,UAAWmN,EACXzJ,QAAS,kBAAM,EAAK+J,aAAaL,QAEjC,wBAAMpN,UAAU,mBACd,gBAAC2M,GAAD,OAEF,wBAAM3M,UAAU,mBAAhB,YAEF,0BACEA,UAAWqN,EACX3J,QAAS,kBAAM,EAAK+J,aAAaH,QAEjC,wBAAMtN,UAAU,mBACd,gBAAC4M,GAAD,OAEF,wBAAM5M,UAAU,mBAAhB,UAEF,0BACEA,UAAWuN,EACX7J,QAAS,kBAAM,EAAK+J,aAAaD,QAEjC,wBAAMxN,UAAU,mBACd,gBAAC6M,GAAD,OAEF,wBAAM7M,UAAU,mBAAhB,cAGsB,UAAzB9D,KAAKqD,MAAMwN,WAAyB,gBAAC,GAAD,MACrC,gBAAC,GAAD,CAAiB5F,SAAUA,S,GAvFP7G,aAoG5B,IAAeyD,cAPf,SAAyBxE,GACvB,MAAO,CACL3C,eAAgB2C,EAAM3C,eAAeA,eACrC8P,aAAcnN,EAAMmN,gBAIgB,CAAEM,mBAAeR,sBAAzD,CACEM,I,ICpHIY,G,wcAEJ,WAAYpO,GAAO,6BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qCAMnB,WACE,OAAO,uBAAKsH,MAAO,CAAE8G,MAAOzR,KAAKoD,MAAMsO,cAAcD,MAAOvN,OAAQlE,KAAKoD,MAAMsO,cAAcxN,QAAUJ,UAAW,gBAAiB3C,GAAG,iBAClInB,KAAKoD,MAAMuO,oBAAsB,uBAAK7N,UAAU,mBAClD,0BAAQ8N,IAAI,wBAAwBzQ,GAAG,gBAAgBsQ,MAAM,c,GAXxCrN,aAwB3B,IAAeyD,cARf,SAAyBxE,GACvB,MAAO,CACLqO,cAAerO,EAAMqO,cACrBC,mBAAoBtO,EAAMwO,aAAa1E,UAK3C,CAAwCqE,I,qmBCjBjCM,G,opCAAAA,G,6GACAC,G,+VAAAA,G,gIAKDC,G,wcACJ,WAAY5O,GAAO,6BACjB,cAAMA,IACDC,MAAQ,CACXwN,UAAW,WAHI,E,2CAOnB,SAAaA,GAAW,WACtB,OAAO,WACL,EAAK7K,UAAS,SAAA3C,GAAK,gBACdA,GADc,IAEjBwN,oB,8BAKN,WACE,OAAQ7Q,KAAKqD,MAAMwN,WACjB,IAAK,UACH,OAAO,gBAACoB,GAAD,MACT,IAAK,WACH,OAAO,gBAACC,GAAD,MACT,QACE,MAAO,M,oBAIb,WACE,IAAIC,EACF,uBAC0B,YAAzBnS,KAAKqD,MAAMwN,UAA0B,6BAA+B,IACnEuB,EACF,uBAC0B,aAAzBpS,KAAKqD,MAAMwN,UAA2B,6BAA+B,IAExE,OACE,uBAAK/M,UAAU,iBACb,uBAAKA,UAAU,uBACb,0BACE0D,QAASxH,KAAKuR,aAAa,WAC3BzN,UAAWqO,GAEX,wCAEF,0BACE3K,QAASxH,KAAKuR,aAAa,YAC3BzN,UAAWsO,GAEX,0CAGJ,uBAAKtO,UAAU,8BACZ9D,KAAKqS,yB,GArDWjO,aA4DrB6N,GAAoB,WACxB,IAAMK,EAAoB1Q,OAAO0Q,kBAC3BT,GAAeU,kBAAY,SAAAlP,GAAK,OAAIA,EAAMwO,aAAaW,WACvDrE,GAAUoE,kBAAY,SAAAlP,GAAK,OAAIA,EAAMwO,aAAa1D,WAElDsE,EAAiB,SAAA5J,GACrB,OAAO,WACL,GAAIsF,EAAUtF,EACZ,IAAK,IAAI6J,EAAI,EAAGA,EAAIvE,EAAUtF,EAAO6J,IACnCJ,EAAkBK,YAEf,GAAIxE,EAAUtF,EACnB,IAAK,IAAI6J,EAAI,EAAGA,EAAI7J,EAAQsF,EAASuE,IACnCJ,EAAkBM,SAM1B,OACE,uBAAK9O,UAAU,0BACb,gBAAC,KAAD,CAAYS,UAAQ,EAACC,gBAAiB,IAAKC,iBAAkB,KAC3D,uBACEG,KAAM,EACNd,WACe,IAAbqK,EACI,kEACA,8BAEN3G,QAASiL,GAAgB,IAEzB,wBAAM3O,UAAU,qCAAhB,eACc,IAAbqK,GACG0E,qBAAeC,WAAW,QAAS,CACjCnI,MAAO,CAAE8G,MAAO,GAAIvN,OAAQ,IAC5BJ,UAAW,qCAEb,IAEL+N,EAAanN,KAAI,SAACwF,EAAMrB,GACvB,IAAItI,EAAQ,GACR2J,EAAK7J,MAAQ6J,EAAK7J,KAAKP,UACzBS,EAAQ2J,EAAK7J,KAAKP,QAAQqE,YAG5B,IAAI1D,EAAO,GACX,OAAQyJ,EAAKzJ,MACX,IAAK,MACHA,EAAO,QACP,MACF,IAAK,OACHA,EAAO,SACP,MACF,IAAK,SACHA,EAAO,UACP,MACF,IAAK,WACHF,EAAQ,WAIZ,IAAIwS,EAAqB,+BAKzB,OAJI5E,IAAYtF,IACdkK,GAAsB,wCAItB,uBACEnO,IAAKiE,EACL/E,UAAWiP,EACXvL,QAASiL,EAAe5J,IAExB,wBAAM/E,UAAU,qCAAqCvD,GACrD,wBAAMuD,UAAU,oCAAoCrD,GACnD0N,IAAYtF,GACTgK,qBAAeC,WAAW,QAAS,CACjCnI,MAAO,CAAE8G,MAAO,GAAIvN,OAAQ,IAC5BJ,UAAW,qCAEb,OAIV,uBAAKA,UAAU,wCAAf,gDAQFoO,GAAqB,WACzB,MAA4ClO,WAAe,IAA3D,eAAOgP,EAAP,KAAuBC,EAAvB,KACA,EAA8CjP,YAAgB,GAA9D,eAAOkP,EAAP,KAAwBC,EAAxB,KACA,EAA4CnP,aAA5C,eAAOoP,EAAP,KAAuBC,EAAvB,KAEArP,aAAgB,WACdqP,EAAkBnN,EAAEoN,WAAUC,UAAyBtT,cACvD,IAAIuT,EAAahH,SAASiH,WAAWC,aAAavS,GAUlD,OARoB,mCAAG,oGACM,IAAI6H,UAAS,CACtCC,MAAO,yBAAF,OAA2BuK,EAA3B,cACJG,SAHkB,OACjBX,EADiB,OAIrBC,EAAkBD,EAAeY,WAJZ,2CAAH,oDAMpBC,CAAe,GACfjS,OAAOkS,OAAOtH,SAAS7G,UAASoO,UAAsB,IAC/C,WACLnS,OAAOkS,OAAOtH,SAAS7G,UAASoO,UAAsB,OAEvD,IAEH,IAiBMC,EAA2B,SAACnL,EAAOqB,GAAR,wBAAiB,+FAChDiJ,EAAmBtK,GAD6B,SAE3B,IAAIG,UAAS,CAChCC,MAAO,yBAAF,OAA2BiB,EAAK+J,gBAAhC,oBAA2D/J,EAAK/I,MACpEwS,SAJ6C,OAE5CO,EAF4C,OAK5CC,EAAsBzF,KAAK0F,MAAMF,EAAS7T,KAAK,GAAGA,MAElDgU,GAAaC,UAAaC,UAAUJ,IACxCZ,UAAyBiB,WAAWH,GARY,4CAUlD,OACE,gBAAC,WAAD,KACE,uBAAKvQ,UAAU,mCACb,uBAAKA,UAAU,yBAAyB0D,QA9BnB,YACzB+L,UAAyBiB,WAAWpB,IACpCjR,UAAYsS,sBA6BL5B,qBAAeC,WAAW,YAAa,CACtCnI,MAAO,CAAE8G,MAAO,GAAIvN,OAAQ,IAC5BJ,UAAW,gCAHf,WAOA,uBAAKA,UAAU,uBAAuB0D,QAhCnB,WACvB5F,OAAOkS,OAAOtH,SAAS7G,UACrB+O,SAAoB,WAAY,CAC9BC,IAAKvB,EACLwB,IAAK1O,EAAEoN,WAAUC,UAAyBtT,gBAI9C2B,OAAOkS,OAAOtH,SAAS7G,UAAS1D,OAAqBC,kCACrDC,UAAYsS,qBAuBR,UAIF,uBAAK3Q,UAAU,wBAAf,aACA,uBAAKA,UAAU,2DACb,gBAAC,KAAD,CAAYS,UAAQ,EAACC,gBAAiB,IAAKC,iBAAkB,KAC1DuO,EAAetO,KAAI,SAACwF,EAAMrB,GACzB,IACIgM,EADAC,GAAcC,KAAKC,MAAQD,KAAKX,MAAMlK,EAAK+K,aAAe,IAG5DJ,EADEC,EAAa,IACF,GAAH,OAAMA,EAAN,gBACDA,EAAa,IACT,GAAH,OAAMI,KAAKC,MAAML,EAAa,KAA9B,gBACDA,EAAa,MACT,GAAH,OAAMI,KAAKC,MAAML,EAAa,KAA9B,cACDA,EAAa,MACT,GAAH,OAAMI,KAAKC,MAAML,EAAa,OAA9B,aACDA,EAAa,OACT,GAAH,OAAMI,KAAKC,MAAML,EAAa,OAA9B,eAEG,GAAH,OAAMI,KAAKC,MAAML,EAAa,QAA9B,cAEZ,IAAIM,EAAO,IAAIL,KAAK7K,EAAK+K,YAQzB,OAPAJ,GAAc,KAAJ,OAASO,EAAKC,eAAe,KAAM,CAC3CC,MAAO,UADC,YAEJF,EAAKG,UAFD,cAEgBH,EAAKI,WAFrB,YAGRJ,EAAKK,aAAe,EAChBL,EAAKK,aADT,WAEQL,EAAKK,cALL,KAQR,uBACE3R,UACE+E,IAAUqK,EACN,oEACA,+BAEN1L,QAASwM,EAAyBnL,EAAOqB,GACzCtF,IAAKiE,GAEL,gBAACiJ,GAAD,CAAShO,UAAU,+BACnB,uBAAKA,UAAU,+BACb,uBAAKA,UAAU,4BAA4B+Q,GAC3C,uBAAK/Q,UAAU,8BAAf,eACeoG,EAAKwL,SAGrB7M,IAAUqK,GACT,gBAACnB,GAAD,CAAajO,UAAU,qCAWzC,M,+CC9RA,SAAS6R,GAAQC,GAAmV,OAAtOD,GAArD,mBAAXE,QAAoD,iBAApBA,OAAOC,SAAmC,SAAiBF,GAAO,cAAcA,GAA2B,SAAiBA,GAAO,OAAOA,GAAyB,mBAAXC,QAAyBD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,IAAyBA,GAuC5W,SAASK,GAAWC,GACzB,MAAwB,mBAAVA,EAET,SAASC,MAOT,SAASC,GAAcF,GAC5B,IALF,SAAsBA,GACpB,MAA0B,WAAnBP,GAAQO,IAAiC,OAAVA,EAIjCG,CAAaH,GAChB,OAAO,EAGT,GAAqC,OAAjCI,OAAOC,eAAeL,GACxB,OAAO,EAKT,IAFA,IAAIM,EAAQN,EAE4B,OAAjCI,OAAOC,eAAeC,IAC3BA,EAAQF,OAAOC,eAAeC,GAGhC,OAAOF,OAAOC,eAAeL,KAAWM,EAEnC,SAASC,GAAYhW,EAAMiW,GAChC,MAAuB,iBAATjW,GAAuC,WAAlBkV,GAAQlV,MAAwBiW,GAAcC,MAAM9P,QAAQpG,IAASA,EAAKmW,OAAM,SAAUC,GAC3H,OAAOJ,GAAYI,GAAG,M,wCCpE1B,SAASC,GAAgBC,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCAEhH,SAASC,GAAkBpM,EAAQ1H,GAAS,IAAK,IAAIsP,EAAI,EAAGA,EAAItP,EAAMnC,OAAQyR,IAAK,CAAE,IAAIyE,EAAa/T,EAAMsP,GAAIyE,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAMhB,OAAOiB,eAAezM,EAAQqM,EAAWvS,IAAKuS,IAE7S,SAASK,GAAaR,EAAaS,EAAYC,GAAmJ,OAAhID,GAAYP,GAAkBF,EAAYhB,UAAWyB,GAAiBC,GAAaR,GAAkBF,EAAaU,GAAqBV,EASlM,IAAIW,GAA0B,WACnC,SAASA,EAAWC,GAClBd,GAAgB9W,KAAM2X,GAEtB3X,KAAK6X,YAAa,EAClB7X,KAAK4X,OAAS3B,GAAW2B,GAAUA,EAASzB,GA2C9C,OAlCAqB,GAAaG,EAAY,CAAC,CACxB/S,IAAK,UACLkC,MAEA,WACO9G,KAAK6X,aACR7X,KAAK4X,SACL5X,KAAK6X,YAAa,MAGpB,CAAC,CACHjT,IAAK,eACLkC,MAAO,SAAsBgR,GAC3B,OAAOC,QAAQD,GAAK7B,GAAW6B,EAAEE,YAElC,CACDpT,IAAK,SACLkC,MAAO,SAAgBmR,GACrB,OAAON,EAAWO,aAAaD,GAAUA,EAASN,EAAWQ,QAS9D,CACDvT,IAAK,SACLkC,MAAO,SAAgB8Q,GACrB,OAAO,IAAID,EAAWC,OAInBD,EAhD4B,GAsDrCA,GAAWQ,MAAQ,CACjBH,QAAS7B,IAOJ,IAAIiC,GAAmC,WAC5C,SAASA,IACPtB,GAAgB9W,KAAMoY,GAEtBpY,KAAK6X,YAAa,EAElB,IAAK,IAAIQ,EAAOC,UAAUrX,OAAQsX,EAAc,IAAI5B,MAAM0B,GAAOG,EAAO,EAAGA,EAAOH,EAAMG,IACtFD,EAAYC,GAAQF,UAAUE,GAGhCxY,KAAKuY,YAAcA,EAwFrB,OAhFAf,GAAaY,EAAqB,CAAC,CACjCxT,IAAK,MACLkC,MAAO,SAAaoD,GACdlK,KAAK6X,WACP3N,EAAK8N,UAELhY,KAAKuY,YAAYnX,KAAK8I,KASzB,CACDtF,IAAK,SACLkC,MAAO,SAAgBoD,GACrB,IAAIuO,GAAgB,EAEpB,IAAKzY,KAAK6X,WAAY,CACpB,IAAI1M,EAAMnL,KAAKuY,YAAY9R,QAAQyD,IAEtB,IAATiB,IACFsN,GAAgB,EAChBzY,KAAKuY,YAAYG,OAAOvN,EAAK,GAC7BjB,EAAK8N,WAIT,OAAOS,IAOR,CACD7T,IAAK,QACLkC,MAAO,WACL,IAAK9G,KAAK6X,WAAY,CAIpB,IAHA,IAAIc,EAAM3Y,KAAKuY,YAAYtX,OACvB2X,EAAqB,IAAIjC,MAAMgC,GAE1BjG,EAAI,EAAGA,EAAIiG,EAAKjG,IACvBkG,EAAmBlG,GAAK1S,KAAKuY,YAAY7F,GAG3C1S,KAAKuY,YAAc,GAEnB,IAAK,IAAIM,EAAK,EAAGA,EAAKF,EAAKE,IACzBD,EAAmBC,GAAIb,aAQ5B,CACDpT,IAAK,UACLkC,MAAO,WACL,IAAK9G,KAAK6X,WAAY,CACpB7X,KAAK6X,YAAa,EAIlB,IAHA,IAAIc,EAAM3Y,KAAKuY,YAAYtX,OACvB2X,EAAqB,IAAIjC,MAAMgC,GAE1BjG,EAAI,EAAGA,EAAIiG,EAAKjG,IACvBkG,EAAmBlG,GAAK1S,KAAKuY,YAAY7F,GAG3C1S,KAAKuY,YAAc,GAEnB,IAAK,IAAIO,EAAM,EAAGA,EAAMH,EAAKG,IAC3BF,EAAmBE,GAAKd,eAMzBI,EAlGqC,GA0GnCW,GAAgC,WACzC,SAASA,IACPjC,GAAgB9W,KAAM+Y,GAEtB/Y,KAAK6X,YAAa,EAgDpB,OAxCAL,GAAauB,EAAkB,CAAC,CAC9BnU,IAAK,gBACLkC,MAAO,WACL,OAAO9G,KAAKmO,UAEb,CACDvJ,IAAK,gBACLkC,MAAO,SAAuBA,GAC5B,IAAI2R,EAAgBzY,KAAK6X,WAEzB,IAAKY,EAAe,CAClB,IAAI9D,EAAM3U,KAAKmO,QACfnO,KAAKmO,QAAUrH,EAEX6N,GACFA,EAAIqD,UAIJS,GAAiB3R,GACnBA,EAAMkR,YAKT,CACDpT,IAAK,UACLkC,MAAO,WACL,IAAK9G,KAAK6X,WAAY,CACpB7X,KAAK6X,YAAa,EAClB,IAAIlD,EAAM3U,KAAKmO,QACfnO,KAAKmO,aAAUzI,EAEXiP,GACFA,EAAIqD,eAMLe,EApDkC,G,sBCrL3C,SAAS,GAAQnD,GAAmV,OAAtO,GAArD,mBAAXC,QAAoD,iBAApBA,OAAOC,SAAmC,SAAiBF,GAAO,cAAcA,GAA2B,SAAiBA,GAAO,OAAOA,GAAyB,mBAAXC,QAAyBD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,IAAyBA,GAQnX,SAASoD,GAAkBC,EAAKN,IAAkB,MAAPA,GAAeA,EAAMM,EAAIhY,UAAQ0X,EAAMM,EAAIhY,QAAQ,IAAK,IAAIyR,EAAI,EAAGwG,EAAO,IAAIvC,MAAMgC,GAAMjG,EAAIiG,EAAKjG,IAAOwG,EAAKxG,GAAKuG,EAAIvG,GAAM,OAAOwG,EAQhL,SAAS,GAAkBpO,EAAQ1H,GAAS,IAAK,IAAIsP,EAAI,EAAGA,EAAItP,EAAMnC,OAAQyR,IAAK,CAAE,IAAIyE,EAAa/T,EAAMsP,GAAIyE,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAMhB,OAAOiB,eAAezM,EAAQqM,EAAWvS,IAAKuS,IAM7S,SAASgC,GAAgBC,EAAGC,GAA+G,OAA1GF,GAAkB7C,OAAOgD,gBAAkB,SAAyBF,EAAGC,GAAsB,OAAjBD,EAAEG,UAAYF,EAAUD,IAA6BA,EAAGC,GAIrK,SAASG,GAA2BC,EAAMC,GAAQ,OAAIA,GAA2B,WAAlB,GAAQA,IAAsC,mBAATA,EAEpG,SAAgCD,GAAQ,QAAa,IAATA,EAAmB,MAAM,IAAIE,eAAe,6DAAgE,OAAOF,EAFbG,CAAuBH,GAAtCC,EAMnI,SAASG,GAAgBT,GAAwJ,OAAnJS,GAAkBvD,OAAOgD,eAAiBhD,OAAOC,eAAiB,SAAyB6C,GAAK,OAAOA,EAAEG,WAAajD,OAAOC,eAAe6C,KAA8BA,GAWjM,SAASU,GAAgBC,GAC9B,IAAIC,EAAqBD,EAAKC,mBAC1BC,EAAgBF,EAAKE,cACrBC,EAAgBH,EAAKG,cACrBC,EAAkBJ,EAAKI,gBACvBC,EAAkBL,EAAKK,gBACvBC,EAAuBN,EAAKM,qBAC5BC,EAAUP,EAAKO,QACfC,EAAUR,EAAKQ,QAEfC,EADUT,EAAK5P,QACiBsQ,cAChCA,OAA0C,IAA1BD,EAAmC,KAAeA,EAClEE,EAAYV,EACZW,EAAcX,EAAmBW,aAAeX,EAAmBxZ,MAAQ,YAE3Eoa,EAAiC,SAAUC,IAtCjD,SAAmBC,EAAUC,GAAc,GAA0B,mBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAI9D,UAAU,sDAAyD6D,EAAS9E,UAAYM,OAAO0E,OAAOD,GAAcA,EAAW/E,UAAW,CAAED,YAAa,CAAEjP,MAAOgU,EAAUxD,UAAU,EAAMD,cAAc,KAAe0D,GAAY5B,GAAgB2B,EAAUC,GAuC/WE,CAAUL,EAAmBC,GAE7B,IA3CkB7D,EAAaS,EAMbyD,EAAeC,EAqC7BC,GArCcF,EAqCQN,EArCOO,EAMrC,WAAuC,GAAuB,oBAAZE,UAA4BA,QAAQC,UAAW,OAAO,EAAO,GAAID,QAAQC,UAAUC,KAAM,OAAO,EAAO,GAAqB,mBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhFzD,QAAQ/B,UAAUyF,QAAQ/B,KAAK2B,QAAQC,UAAUvD,QAAS,IAAI,iBAAyB,EAAQ,MAAOvU,GAAK,OAAO,GAN9P,GAAoC,WAAkC,IAAsCyU,EAAlCyD,EAAQ7B,GAAgBqB,GAAkB,GAAIC,EAA2B,CAAE,IAAIQ,EAAY9B,GAAgB7Z,MAAM+V,YAAakC,EAASoD,QAAQC,UAAUI,EAAOpD,UAAWqD,QAAqB1D,EAASyD,EAAME,MAAM5b,KAAMsY,WAAc,OAAOkB,GAA2BxZ,KAAMiY,KAuCxZ,SAAS2C,EAAkBxX,GACzB,IAAIyY,EAqBJ,OAvEN,SAAyB9E,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCAoD1G,CAAgBjX,KAAM4a,IAEtBiB,EAAQT,EAAO1B,KAAK1Z,KAAMoD,IACpB0Y,cAAe,IAAAC,aAErBF,EAAMG,aAAe,WACnB,IAAIC,EAAYJ,EAAMK,mBAEjB,QAAaD,EAAWJ,EAAMxY,QACjCwY,EAAM7V,SAASiW,IAInBJ,EAAMM,WAAa,IAAIpD,GAEvB8C,EAAMO,aAAahZ,GAEnByY,EAAM7D,UAEC6D,EAmJT,OAtNkB7E,EAsEL4D,GAtEkBnD,EAsEC,CAAC,CAC/B7S,IAAK,eACLkC,MAAO,WACL,OAAO9G,KAAKqc,YAEb,CACDzX,IAAK,gCACLkC,MAAO,WAEL,OADA,QAAU9G,KAAK8b,aAAa3N,QAAS,4HAC9BnO,KAAK8b,aAAa3N,UAE1B,CACDvJ,IAAK,wBACLkC,MAAO,SAA+BwV,EAAWL,GAC/C,OAAQxB,EAAc6B,EAAWtc,KAAKoD,UAAW,QAAa6Y,EAAWjc,KAAKqD,SAE/E,CACDuB,IAAK,oBACLkC,MAAO,WACL9G,KAAKmc,WAAa,IAAIpD,GACtB/Y,KAAKuc,iBAAc7W,EACnB1F,KAAKoc,aAAapc,KAAKoD,OACvBpD,KAAKgc,iBAEN,CACDpX,IAAK,qBACLkC,MAAO,SAA4BwC,GAC5BmR,EAAcza,KAAKoD,MAAOkG,KAC7BtJ,KAAKoc,aAAapc,KAAKoD,OACvBpD,KAAKgc,kBAGR,CACDpX,IAAK,uBACLkC,MAAO,WACL9G,KAAKgY,YAEN,CACDpT,IAAK,eACLkC,MAAO,SAAsB1D,GACtBpD,KAAKwc,UAIVxc,KAAKwc,QAAQJ,aAAahZ,GAC1BpD,KAAKyc,YAAYnC,EAAQlX,OAE1B,CACDwB,IAAK,cACLkC,MAAO,SAAqBrG,GAC1B,GAAKT,KAAK0c,gBAAmB1c,KAAK2c,SAAY3c,KAAK4c,kBAI/Cnc,IAAST,KAAKuc,YAAlB,CAIAvc,KAAKuc,YAAc9b,EAEnB,IACIoc,GAnJY5D,EAkJOmB,EAAgB3Z,EAAMT,KAAKwc,QAASxc,KAAK2c,SAlJ3CjK,EAmJoC,EAzIjE,SAAyBuG,GAAO,GAAItC,MAAM9P,QAAQoS,GAAM,OAAOA,EAVtB6D,CAAgB7D,IAQzD,SAA+BA,EAAKvG,GAAK,GAAsB,oBAAXmD,QAA4BA,OAAOC,YAAYQ,OAAO2C,GAAjE,CAAgF,IAAI8D,EAAO,GAAQC,GAAK,EAAUC,GAAK,EAAWC,OAAKxX,EAAW,IAAM,IAAK,IAAiCyX,EAA7BtE,EAAKI,EAAIpD,OAAOC,cAAmBkH,GAAMG,EAAKtE,EAAGuE,QAAQC,QAAoBN,EAAK3b,KAAK+b,EAAGrW,QAAY4L,GAAKqK,EAAK9b,SAAWyR,GAA3DsK,GAAK,IAAoE,MAAOM,GAAOL,GAAK,EAAMC,EAAKI,EAAO,QAAU,IAAWN,GAAsB,MAAhBnE,EAAW,QAAWA,EAAW,SAAO,QAAU,GAAIoE,EAAI,MAAMC,GAAQ,OAAOH,GARjaQ,CAAsBtE,EAAKvG,IAI5F,SAAqC0G,EAAGoE,GAAU,GAAKpE,EAAL,CAAgB,GAAiB,iBAANA,EAAgB,OAAOJ,GAAkBI,EAAGoE,GAAS,IAAIC,EAAInH,OAAON,UAAU0H,SAAShE,KAAKN,GAAGuE,MAAM,GAAI,GAAiE,MAAnD,WAANF,GAAkBrE,EAAErD,cAAa0H,EAAIrE,EAAErD,YAAYvV,MAAgB,QAANid,GAAqB,QAANA,EAAoB9G,MAAMiH,KAAKxE,GAAc,cAANqE,GAAqB,2CAA2CI,KAAKJ,GAAWzE,GAAkBI,EAAGoE,QAAzG,GAJ3MM,CAA4B7E,EAAKvG,IAEnI,WAA8B,MAAM,IAAIuE,UAAU,6IAFuF8G,IAoJ7H1B,EAAYQ,EAAkB,GAC9BmB,EAAanB,EAAkB,GAEnC7c,KAAKqc,UAAYA,EACjBrc,KAAK0c,eAAeuB,iBAAiB5B,GACrCrc,KAAK4c,iBAAiBqB,iBAAiB5B,GACvC,IACI6B,EADgBle,KAAK2c,QAAQwB,aACDC,uBAAuBpe,KAAKgc,aAAc,CACxEqC,WAAY,CAAChC,KAEfrc,KAAKmc,WAAWmC,cAAc,IAAIlG,GAAoB,IAAIT,GAAWuG,GAAc,IAAIvG,GAAWqG,KA9J1G,IAAwB/E,EAAKvG,IAgKtB,CACD9N,IAAK,UACLkC,MAAO,WACL9G,KAAKmc,WAAWnE,UAEZhY,KAAK4c,kBACP5c,KAAK4c,iBAAiBqB,iBAAiB,QAG1C,CACDrZ,IAAK,kBACLkC,MAAO,WACL,OAAK9G,KAAK4c,iBAIMrC,EAAQva,KAAK4c,iBAAiB2B,MAAOve,KAAK0c,eAAgB1c,KAAKoD,OAHtE,KAWV,CACDwB,IAAK,SACLkC,MAAO,WACL,IAAI0X,EAASxe,KAEb,OAAO,UAAKye,GAAA,WAAqB,CAC/Bzd,SAAU,SAAkB0d,GAC1B,IF1KcC,EATOva,EEmLjBwa,EAAkBF,EAAME,gBAY5B,OAVAJ,EAAOK,uBAAuBD,GAEO,oBAA1BE,uBACTA,uBAAsB,WACpB,IAAIC,EAEJ,OAA6D,QAArDA,EAAwBP,EAAO5B,wBAAwD,IAA1BmC,OAAmC,EAASA,EAAsBC,gBAIpI,UAAKtE,EAAWpE,OAAO2I,OAAO,GAAIT,EAAOpb,MAAOob,EAAOtC,kBAAmB,CAE/EgD,KFxLYP,EEwLGjE,GFjMItW,EAUPua,IATJva,EAAU4R,WAAmD,mBAA/B5R,EAAU4R,UAAUmJ,QAEjE,SAAkCR,GACvC,IAAIS,EAGJ,MAAqK,+BAA7JlV,MADGyU,GAC8E,QAApCS,EAD1CT,EACgEU,gBAAyC,IAAnBD,OAAtD,EAA2FA,EAAe1B,YAGvH4B,CAAyBX,GEuLfH,EAAO1C,aAAe,aAChD,UAEL,KAEJ,CACDlX,IAAK,yBACLkC,MAAO,SAAgC8X,QAChBlZ,IAAjB1F,KAAK2c,WAIT,aAA8BjX,IAApBkZ,EAA+B,uQAAkRjE,EAAaA,QAEhTjV,IAApBkZ,IAIJ5e,KAAK2c,QAAUiC,EACf5e,KAAK0c,eAAiBxC,EAAc0E,GACpC5e,KAAK4c,iBAAmBzC,EAAgByE,EAAgBW,cACxDvf,KAAKwc,QAAUvC,EAAcja,KAAK0c,eAAgB1c,KAAK8b,qBAlNe,GAAkB9E,EAAYhB,UAAWyB,GAsN5GmD,EA9K4B,CA+KnC,EAAAxW,WAIF,OAFAwW,EAAkBZ,mBAAqBA,EACvCY,EAAkBD,YAAc,GAAG6E,OAAOnF,EAAsB,KAAKmF,OAAO7E,EAAa,KAClF,KAAaC,EAAmBZ,GC3OzC,SAAS,GAAkBlP,EAAQ1H,GAAS,IAAK,IAAIsP,EAAI,EAAGA,EAAItP,EAAMnC,OAAQyR,IAAK,CAAE,IAAIyE,EAAa/T,EAAMsP,GAAIyE,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAMhB,OAAOiB,eAAezM,EAAQqM,EAAWvS,IAAKuS,IAM7S,IAAIsI,GAAuB,CAAC,UAAW,YAAa,aAAc,WAC9DC,GAAwB,CAAC,aAEzBC,GAA0B,WAC5B,SAASA,EAAWC,EAAMC,EAASX,GACjC,IAAIrD,EAAQ7b,MAbhB,SAAyB+W,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCAe5G,CAAgBjX,KAAM2f,GAEtB3f,KAAKoD,MAAQ,KAEbpD,KAAK8f,UAAY,WACf,GAAKjE,EAAMzY,MAUX,OANWyY,EAAM+D,KAAKE,UAAUjE,EAAMzY,MAAOyY,EAAMgE,QAAShE,EAAMqD,IAAI/Q,UASxEnO,KAAK4f,KAAOA,EACZ5f,KAAK6f,QAAUA,EACf7f,KAAKkf,IAAMA,EA/Bf,IAAsBlI,EAAaS,EAgFjC,OAhFoBT,EAkCP2I,GAlCoBlI,EAkCR,CAAC,CACxB7S,IAAK,eACLkC,MAAO,SAAsB1D,GAC3BpD,KAAKoD,MAAQA,IAEd,CACDwB,IAAK,UACLkC,MAAO,WACL,QAAK9G,KAAKoD,SAILpD,KAAK4f,KAAKG,SAIR/f,KAAK4f,KAAKG,QAAQ/f,KAAKoD,MAAOpD,KAAK6f,YAE3C,CACDjb,IAAK,aACLkC,MAAO,SAAoBkZ,EAAeC,GACxC,QAAKjgB,KAAKoD,QAILpD,KAAK4f,KAAKM,WAIRlgB,KAAK4f,KAAKM,WAAWlgB,KAAKoD,MAAOpD,KAAK6f,SAHpCI,IAAaD,EAAcG,iBAKrC,CACDvb,IAAK,UACLkC,MAAO,WHrEJ,IACDsZ,EGqEKpgB,KAAKoD,OAILpD,KAAK4f,KAAKS,SAIfrgB,KAAK4f,KAAKS,QAAQrgB,KAAKoD,MAAOpD,KAAK6f,QH3ErB,OAFdO,EG6EkEpgB,KAAKkf,IH7E9C/Q,SAGpB,KACEiS,EAAWtE,aAEbsE,EAAWtE,aAAa3N,QAExBiS,QGPmE,GAAkBpJ,EAAYhB,UAAWyB,GAgF9GkI,EAzEqB,GA4EvB,SAASW,GAAoBV,GAQlC,OAPAtJ,OAAO7I,KAAKmS,GAAMxZ,SAAQ,SAAUxB,IAClC,QAAU6a,GAAqBhZ,QAAQ7B,IAAQ,EAAG,yNAAyO6a,GAAqB/U,KAAK,MAAO9F,IAC5T,QAA+B,mBAAdgb,EAAKhb,GAAqB,oLAA+LA,EAAKA,EAAKgb,EAAKhb,OAE3P8a,GAAsBtZ,SAAQ,SAAUxB,IACtC,QAA+B,mBAAdgb,EAAKhb,GAAqB,oLAA+LA,EAAKA,EAAKgb,EAAKhb,OAEpP,SAAsBib,EAASX,GACpC,OAAO,IAAIS,GAAWC,EAAMC,EAASX,I,IC1EnCqB,G,wiBACJ,WACE,MAAqDvgB,KAAKoD,MAAlD8c,EAAR,EAAQA,WAAYM,EAApB,EAAoBA,kBAAmB3T,EAAvC,EAAuCA,KAAMjI,EAA7C,EAA6CA,IAC7C,OAAO4b,EACL,uBACE5b,IAAKA,EACL+F,MAAO,CAAE8V,QAASP,EAAa,GAAM,EAAGQ,OAAQ,YAE/C7T,Q,GARoBzI,aAc7B,GCvBO,SAAoB3D,EAAMmf,EAAMrF,GACrC,IAAIpQ,EAAUmO,UAAUrX,OAAS,QAAsByE,IAAjB4S,UAAU,GAAmBA,UAAU,GAAK,GAE9EgC,EAAU7Z,EAEM,mBAATA,KACT,QAAUgW,GAAYhW,GAAO,uOAAuPA,GAEpR6Z,EAAU,WACR,OAAO7Z,KAIX,QAAU2V,GAAcwJ,GAAO,iLAA4LA,GAC3N,IAAIe,EAAeL,GAAoBV,GAGvC,OAFA,QAA6B,mBAAZrF,EAAwB,8NAA8OA,IACvR,QAAUnE,GAAcjM,GAAU,mMAAmNoQ,GAC9O,SAAwBP,GAC7B,OAAOF,GAAgB,CACrBO,qBAAsB,aACtBJ,cAAe0G,EACfvG,gBAAiB,KACjBD,gBAAiB,SAAyByG,GACxC,OAAO,IAAIC,GAAA,EAAgBD,IAE7B1G,cAAe,SAAuByC,GACpC,OAAO,IAAImE,GAAA,EAAsBnE,IAEnC3C,mBAAoBA,EACpBM,QAASA,EACTC,QAASA,EACTpQ,QAASA,KDRA4W,CAAW,OA9BP,CACjBjB,UADiB,SACP1c,GACR,MAAO,CACLyJ,KAAMzJ,EAAMyJ,SAOlB,SAAiBhF,EAASgY,GACxB,MAAO,CACLW,kBAAmB3Y,EAAQmZ,aAC3Bd,WAAYL,EAAQK,gBAiBxB,CAAuDK,I,4lBEJjDU,G,wcACJ,WAAY7d,GAAO,sBAEjB,IAAI8d,EAAW,EADf,cAAM9d,IACe+d,cAAc/d,EAAMsQ,eAFxB,OAGjB,EAAKrQ,MAAQ,CACX6d,SAAUA,EACVE,UAAU,EACVC,QAAQ,GAEV,EAAKC,aAAe,EAAKA,aAAa/d,MAAlB,WACpB,EAAKge,eAAiB,EAAKA,eAAehe,MAApB,WACtB,EAAKie,SAAW,EAAKA,SAASje,MAAd,WAChB,EAAKke,WAAa,EAAKA,WAAWle,MAAhB,WAClB5C,eAAgB,EAAK+gB,cAAcne,MAAnB,YAZC,E,2CAenB,SAAaoe,EAAMC,GACjB,IAAIC,EAAc3b,EAAEoN,UAAUtT,KAAKqD,MAAM6d,UACvBY,mBAAkBF,EAAUC,GAClCE,YAAa,EACzB/hB,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAa0S,SAAUW,S,4BAGxC,SAAeF,EAAMC,GACnB,IAAIC,EAAc3b,EAAEoN,UAAUtT,KAAKqD,MAAM6d,UACvBY,mBAAkBF,EAAUC,GAClCE,YAAa,EACzB/hB,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAa0S,SAAUW,S,sBAGxC,SAASF,EAAMC,IACbI,QAA4BL,EAAKxgB,KACjCgB,UAAYC,sB,2BAGd,WACE,IAAM6f,EAAc,CAClBjiB,KAAKmhB,eACHhf,UAAYvC,QAAQoD,oBAAoBqJ,mBAGtC6V,EAAkBhc,EAAEoN,UAAUtT,KAAKqD,MAAM6d,SAAU,IACpDhb,EAAEqI,QAAQ0T,EAAaC,IAC1BliB,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAa0S,SAAUe,S,wBAI1C,SAAWze,EAAG2e,GACZ,IAAMC,EAAUxgB,OAAOwgB,QAAQ,kBAE/B,GADA5e,EAAE6e,iBACED,IACcE,QAAyBH,GAC5B,CACX,IAAIN,EAAc3b,EAAEoN,UAAUtT,KAAKqD,MAAM6d,UACrCqB,EAAUviB,KAAKwiB,uBAAuBX,EAAaM,GACvDniB,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAa0S,SAAUqB,U,oCAK5C,SAAuBrB,EAAUiB,GAC/B,OAAOjB,EAAS5Z,QAAO,SAASmb,EAAEvY,GAChC,OAAIA,EAAKwY,WAAWzhB,OAAS,GACnBiJ,EAAKwY,WAAaxY,EAAKwY,WAAWpb,OAAOmb,IAAIxhB,OAC5CiJ,EAAK/I,KAAOghB,O,2BAS3B,SAAcjB,GAAU,aAChByB,EAxFV,SAAsBniB,GACpB,OAAQA,GACN,IAAK,eAEL,IAAK,UAEL,IAAK,iBAEL,IAAK,SACH,OAAO,EACT,QACE,OAAO,GA6EUoiB,CAAa1B,EAASrd,WACzC,UACE4D,MACE,gBAAC,GAAD,CACE7C,IAAKsc,EAAS/f,GACd0L,KAAMqU,EAASrd,UACf1C,GAAI+f,EAAS/f,KAGjB0hB,MAAO,EACPriB,KAAM0gB,EAASrd,UACfoJ,KAAM0V,GAAc,eACpBD,WAAYxB,EAASlgB,SAAS0D,KAAI,SAACwF,EAAMrB,GAAP,OAChC,EAAKsY,cAAcjX,MAErB4Y,SAAUH,EACV/d,IAAKsc,EAAS/f,GACd4gB,WAAYY,EACZxhB,GAAI+f,EAAS/f,GACbqG,QAAS,SAACma,EAAMne,GAAP,OAAa,EAAKge,SAAShe,EAAGme,EAAKxgB,OAlB9C,SAmBa,MAAV2S,QAAkB,SAAWA,SAnBhC,0BAoBoC,iBAAlBoN,EAAS1gB,MACvB,2BACE,gBAAC,MAAD,CACEyM,KAAK,QACLtC,MAAO,CAAE+V,OAAQ,WACjBlZ,QAAS,SAAAhE,GAAC,OAAI,EAAKie,WAAWje,EAAG0d,EAAS/f,SAzBlD,I,oBAgCF,WACE,OACE,uBAAKwJ,MAAO,CAAEoY,SAAU,SACtB,gBAAC,MAAD,CACEC,SAAUhjB,KAAKqD,MAAM6d,SACrB+B,aAAcjjB,KAAKshB,aACnB4B,eAAgBljB,KAAKuhB,eACrB4B,kBAAmBnjB,KAAKwhB,gB,GAlHJpd,aAyH9B,IAAeyD,cA7IS,SAAAxE,GACtB,MAAO,CACLqQ,cAAcvR,UAAYvC,QAAQoD,oBAAoBqJ,oBA2I1D,CAAwC4U,I,wBCtJxC,I,GAAMmC,GAAgBC,UAAH,uFAMbC,GAAUD,QAAH,6EAKPE,GAAYF,UAAH,yBAETG,GAAYH,UAAH,8HAOTI,GAAOJ,UAAH,uKA8BV,G,wiBAnBE,WACE,OACE,gBAACD,GAAD,KACE,gBAACG,GAAD,KACE,gBAACD,GAAD,sBACA,gBAACE,GAAD,KACE,gBAACC,GAAD,CAAMjc,QAASxH,KAAKoD,MAAMsgB,uBAA1B,iBAGA,gBAACD,GAAD,CAAMjc,QAASxH,KAAKoD,MAAMugB,sBAA1B,gBACA,gBAACF,GAAD,CAAMjc,QAASxH,KAAKoD,MAAMwgB,wBAA1B,yB,GAXcxf,a,wnBCZ1B,IAAMyf,GAAQR,UAAH,mIAmBLS,G,wcACJ,WAAY1gB,GAAO,6BACjB,cAAMA,IAwBR2gB,YAAc,SAACjd,EAAO3F,GACpB,IAAM6iB,EAAO,QAAH,OAAWld,EAAMmd,IAAI/U,EAArB,aAA2BpI,EAAMmd,IAAIC,EAArC,aAA2Cpd,EAAMmd,IAAIE,EAArD,aAA2Drd,EAAMmd,IAAIG,EAArE,KACJC,EAAMvd,EAAMud,IACZJ,EAAMnd,EAAMmd,IACZK,EAASpe,EAAEoN,UAAU,EAAKjQ,MAAMihB,OAAQ,IAC1CC,EAAere,EAAE+D,KAAKqa,GAAQ,SAAAE,GAAK,OAAIA,EAAMrjB,KAAOA,KACxDojB,EAAaC,MAAQR,EACrBO,EAAaE,eAAiBJ,EAC9BE,EAAaG,SAAWT,EACxB,EAAKje,UACH,SAAAwI,GAAC,gBAAUA,GAAV,IAAa8V,OAAQA,OACtB,kBAAM,EAAKlhB,MAAMuhB,UAAUL,MAE7B,IAAMjkB,EAAO,CACXmkB,MAAOR,EACPS,eAAgBJ,EAChBK,SAAUT,EACVW,KAAML,EAAaK,MAErB,EAAKC,oBAAoBxkB,EAAMc,IA5Cd,EA+CnB0jB,oBAAsB3e,EAAE4e,UAAS,SAACN,EAAOrjB,GACvCgE,QAAQC,IAAIof,GACZ,EAAKO,oBACFC,IAAI7jB,EAAI,CACP0K,SAAU,MAAK2Y,GACf/jB,KAAM,UAEPwO,MAAK,SAAAgW,GACJ,EAAK7hB,MAAM8hB,UAAX,SAA0BV,GAA1B,IAAiCrjB,GAAIA,KACrC,EAAKgkB,mBAAmBX,IACxBjR,UACGlH,iBACArL,SAASoF,SAAQ,SAAA+J,GAChB,EAAKiV,kBAAkBjV,EAAOqU,EAAMI,KAAMJ,WAGjD,IA/DgB,EAkJnBa,WAAa,SAACve,EAAO3F,GACnB,GAAqB,IAAjB2F,EAAM7F,OAAc,KAAM,wBAC9B,IAAMqjB,EAASpe,EAAEoN,UAAU,EAAKjQ,MAAMihB,OAAQ,IAClCpe,EAAE+D,KAAKqa,GAAQ,SAAAE,GAAK,OAAIA,EAAMrjB,KAAOA,KAC3CX,KAAOsG,EACb,EAAKd,UACH,SAAAwI,GAAC,gBAAUA,GAAV,IAAa8V,OAAQA,OACtB,kBAAM,EAAKlhB,MAAMuhB,UAAUL,MAE7B,EAAKgB,mBAAmBxe,EAAO3F,IA3Jd,EA8JnBmkB,mBAAqBpf,EAAE4e,UAAS,SAAChe,EAAO3F,GACtC,EAAK4jB,oBAAoBC,IAAI7jB,EAAI,CAC/B0K,SAAU,CAAErL,KAAMsG,GAClBrG,KAAM,YAEP,KAjKD,EAAK4C,MAAQ,CACXihB,OAAQlhB,EAAMkhB,QAEhB,EAAKiB,iBAAmB,EAAKA,iBAAiBhiB,MAAtB,WACxB,EAAKwgB,YAAc,EAAKA,YAAYxgB,MAAjB,WACnB,EAAK8hB,WAAa,EAAKA,WAAW9hB,MAAhB,WAClB,EAAKiiB,QAAU,EAAKA,QAAQjiB,MAAb,WACf,EAAKke,WAAa,EAAKA,WAAWle,MAAhB,WAClB,EAAKshB,oBAAsB,EAAKA,oBAAoBthB,MAAzB,WAC3B,EAAK+hB,mBAAqB,EAAKA,mBAAmB/hB,MAAxB,WAC1B,EAAK4hB,mBAAqB,EAAKA,mBAAmB5hB,MAAxB,WAC1B,EAAKwhB,oBAAsB,IAAI/b,UAAS,CACtCC,MAAO,uCAdQ,E,+CAkBnB,SAAiB9H,GACf,IAAMmjB,EAASpe,EAAEoN,UAAUtT,KAAKqD,MAAMihB,OAAQ,IAC1CE,EAAQte,EAAE+D,KAAKqa,GAAQ,SAAAE,GAAK,OAAIA,EAAMrjB,KAAOA,KACjDqjB,EAAMiB,gBAAkBjB,EAAMiB,eAC9BzlB,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAa8V,OAAQA,S,gCA+CtC,SAAmBE,GAAO,WAClBI,EAAOJ,EAAMI,KACnB5kB,KAAKoD,MAAMsiB,QAAQtf,SAAQ,SAAAuf,GAEzB,GADcA,EAAOC,aAAehB,EACzB,CACT,IAAMiB,EAAiB,SAClBF,GADe,IAElBjB,SAAUF,EAAME,SAChBF,MAAOA,EAAMA,MACbC,eAAgBD,EAAMC,iBAExB,EAAKM,oBACFC,IAAIW,EAAOxkB,GAAI,CAAE0K,SAAUga,IAC3B5W,MAAK,SAAAgW,GACJ,EAAK7hB,MAAM0iB,WAAWD,IACtBtS,UACGlH,iBACArL,SAASoF,SAAQ,SAAA+J,GAChB,EAAKiV,kBACHjV,EACA0V,EAAejB,KACfiB,e,+BAehB,SAAkB3E,EAAU0D,EAAMJ,GAAO,WACnC7N,MAAM9P,QAAQqa,GAChBA,WAAU9a,SAIR,SAAA2f,GACoBhO,QAAQgO,EAAaC,UAAUpB,KAE/CmB,EAAaE,iBAAiBrB,EAAMJ,GAEtC,EAAKY,kBAAkBW,EAAcnB,EAAMJ,MAG1CxkB,KAAKkmB,gBAAgBhF,EAAU0D,EAAMJ,K,6BAQ9C,SAAgBtD,EAAU0D,EAAMJ,GAAO,aACjCtD,EAAS8E,UAAUpB,IACrB1D,EAAS+E,iBAAiBrB,EAAMJ,GAElC,UAAAtD,EAASlgB,gBAAT,SAAmBoF,SAIjB,SAAA+J,GACMA,EAAM6V,UAAUpB,IAClBzU,EAAM8V,iBAAiBrB,EAAMJ,GAG/BrU,EAAMnP,SAASC,OAAS,GACtB,EAAKmkB,kBAAkBjV,EAAMnP,SAAU4jB,EAAMJ,Q,qBAwBrD,SAAQhhB,GAAG,WACHghB,EAAQ,GACdA,EAAM3Y,SAAW6C,KAAKC,WAAUwX,WAChC3B,EAAM/jB,KAAO,QACbT,KAAK+kB,oBAAoBqB,KAAK5B,GAAOvV,MAAK,SAAAiF,GACxC,IAAMoQ,EAAS,GAAH,eACP,EAAKjhB,MAAMihB,QADJ,KAGRnjB,GAAI+S,EAAS/S,GACbyjB,KAAM1Q,EAAS0Q,MACZ1Q,EAASrI,YAGhB,EAAK7F,UACH,SAAAwI,GAAC,gBAAUA,GAAV,IAAa8V,OAAQA,OACtB,kBAAM,EAAKlhB,MAAMuhB,UAAUL,W,wBAKjC,SAAWnjB,GAAI,WAEb,GADgBS,OAAOwgB,QAAQ,kBAClB,CACX,IAAIkC,EAASpe,EAAEoN,UAAUtT,KAAKqD,MAAMihB,OAAQ,IAC5CA,EAASA,EAAOhd,QAAO,SAAA4C,GAAI,OAAIA,EAAK/I,KAAOA,KAC3CnB,KAAKgG,UACH,SAAAwI,GAAC,gBAAUA,GAAV,IAAa8V,OAAQA,OACtB,kBAAM,EAAKlhB,MAAMuhB,UAAUL,MAE7BtkB,KAAK+kB,oBAAoBsB,OAAOllB,M,oBAIpC,WAAS,WACP,OACE,gBAAC0iB,GAAD,KACG7jB,KAAKqD,MAAMihB,OAAOrjB,OAAS,EAC1BjB,KAAKqD,MAAMihB,OAAO5f,KAAI,SAAAwF,GACpB,OACE,gBAAC,WAAD,CAAgBtF,IAAKsF,EAAK/I,IACxB,gBAAC,MAAD,CACEyD,IAAKsF,EAAK/I,GACVwJ,MAAO,CACL2b,aAAc,SAGhB,gBAAC,MAAD,CACE3b,MAAO,CACL8G,MAAO,SAETzH,SAAU,SAAAxG,GAAC,OAAI,EAAK6hB,WAAW7hB,EAAEsH,OAAOhE,MAAOoD,EAAK/I,KACpD2F,MAAOoD,EAAK1J,OAGd,gBAAC,MAAD,CAAQgH,QAAS,SAAAhE,GAAC,OAAI,EAAKie,WAAWvX,EAAK/I,MACzC,gBAAC,MAAD,CAAM8L,KAAK,WAEb,gBAAC,MAAD,CACEzF,QAAS,SAAAhE,GAAC,OAAI,EAAK+hB,iBAAiBrb,EAAK/I,KACzCwJ,MAAO,CACL4b,gBAAiBrc,EAAKsa,MACtB/S,MAAO,OACP+S,MAAOgC,KAAOtc,EAAKua,eAAgB,CACjCgC,MAAO,UACPC,MAAO,UACPC,UAAW,QAIdzc,EAAKua,iBAGV,uBACE3gB,UAAYoG,EAAKub,eAAyC,GAAxB,uBAElC,gBAAC,MAAD,CACEmB,aAAc,GACdpC,MAAOta,EAAKsa,MACZxa,SAAU,SAAAwa,GAAK,OAAI,EAAKT,YAAYS,EAAOta,EAAK/I,KAChDwJ,MAAO,CACLkc,QAAS,EACTC,UAAW,eAQvB,+CAEF,gBAAC,MAAD,MACA,gBAAC,MAAD,CAAQnc,MAAO,CAAE8G,MAAO,QAAUjK,QAASxH,KAAKwlB,SAAhD,iB,GAlQmBphB,aAyQ3B,IAAeyD,cApRS,SAAAxE,GAAK,MAAK,CAChCihB,OAAQjhB,EAAM0jB,aAAazC,OAC3BoB,QAASriB,EAAM0jB,aAAarB,YAGH,SAAA/f,GAAQ,MAAK,CACtCgf,UAAW,SAAAL,GAAM,OAAI3e,GAASqhB,SAAgB1C,KAC9CY,UAAW,SAAAV,GAAK,OAAI7e,GAASshB,SAAgBzC,KAC7CsB,WAAY,SAAAH,GAAM,OAAIhgB,GAASuhB,SAAiBvB,QA4QlD,CAA4D7B,I,qlBCnS5D,IAAMqD,GAAc,CAClB,CACErgB,MAAO,IACPW,MAAO,UACP7C,IAAK,GAEP,CACEkC,MAAO,QACPW,MAAO,QACP7C,IAAK,IAiPT,G,wcA5OE,WAAYxB,GAAO,uBACjB,cAAMA,IAmCRwiB,YAAc,SAAA9e,GACZ,IAAM8d,EAAO9d,EAAM8d,KACnBzf,QAAQC,IAAI0B,GACZ,IAAMkd,EAAO,QAAH,OAAWld,EAAM4d,SAASxV,EAA1B,aAAgCpI,EAAM4d,SAASR,EAA/C,aAAqDpd,EAAM4d,SAASP,EAApE,aAA0Erd,EAAM4d,SAASN,EAAzF,KACJC,EAAMvd,EAAM2d,eACZR,EAAMnd,EAAM4d,SAClB,EAAK1e,UAAS,SAAAwI,GAAC,gBACVA,GADU,IAEbmX,OAAQ,SACHnX,EAAEmX,QADD,IAEJnB,MAAOR,EACPS,eAAgBJ,EAChBK,SAAUT,EACV2B,YAAahB,UAjDA,EAsDnBb,YAAc,SAAAjd,GACZ,IAAMkd,EAAO,QAAH,OAAWld,EAAMmd,IAAI/U,EAArB,aAA2BpI,EAAMmd,IAAIC,EAArC,aAA2Cpd,EAAMmd,IAAIE,EAArD,aAA2Drd,EAAMmd,IAAIG,EAArE,KACJC,EAAMvd,EAAMud,IACZJ,EAAMnd,EAAMmd,IAClB,EAAKje,UAAS,SAAAwI,GAAC,gBACVA,GADU,IAEbmX,OAAQ,SACHnX,EAAEmX,QADD,IAEJnB,MAAOR,EACPS,eAAgBJ,EAChBK,SAAUT,EACV2B,YAAa,WA/DjB,EAAKwB,cAAgB,CACnBC,KAAM,EACN7C,MAAO,yBACPC,eAAgB,UAChBC,SAAU,CACRxV,EAAG,IACHgV,EAAG,IACHC,EAAG,IACHC,EAAG,GAELwB,YAAa,GACb0B,WAAY,EACZ7G,QAAS,EACT8G,OAAQ,EACR9mB,KAAM,IACN+mB,SAAU,EACVhnB,KAAM,IAER,IAAQinB,EAAkBrkB,EAAlBqkB,MAAO9B,EAAWviB,EAAXuiB,OApBE,OAqBjB,EAAKtiB,MAAQ,CACXsiB,OAAQ8B,EAAQ,EAAKL,cAAgBzB,EACrC+B,MAAM,GAER,EAAKrC,WAAa,EAAKA,WAAW9hB,MAAhB,WAClB,EAAKwgB,YAAc,EAAKA,YAAYxgB,MAAjB,WACnB,EAAKokB,QAAU,EAAKA,QAAQpkB,MAAb,WACf,EAAKqkB,SAAW,EAAKA,SAASrkB,MAAd,WAChB,EAAKqiB,YAAc,EAAKA,YAAYriB,MAAjB,WACnB,EAAKskB,aAAe,EAAKA,aAAatkB,MAAlB,WACpB,EAAKwhB,oBAAsB,IAAI/b,UAAS,CACtCC,MAAO,uCAhCQ,E,yCAyEnB,SAAW6e,GACT,IAAMC,EAASD,EAAMhd,OAAOhE,MAC5B9G,KAAKgG,UAAS,SAAAwI,GAAC,gBACVA,GADU,IAEbmX,OAAQ,SACHnX,EAAEmX,QADD,IAEJnlB,KAAMunB,W,qBAKZ,SAAQjhB,EAAOkhB,GACb,IAAQrC,EAAW3lB,KAAKqD,MAAhBsiB,OACRA,EAAOqC,GAAWlhB,EAClB9G,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAamX,OAAQA,S,sBAGtC,SAASmC,EAAOhhB,GACd9G,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAamX,OAAQ,SAAKnX,EAAEmX,QAAT,IAAiBllB,KAAMqG,W,0BAG3D,SAAaghB,GAAO,WAClBA,EAAMzF,iBACN,IAAQsD,EAAW3lB,KAAKqD,MAAhBsiB,OACFsC,EAAO,CACXxnB,KAAM,SACNoL,SAAU6C,KAAKC,UAAUgX,IAE3B3lB,KAAK+kB,oBAAoBqB,KAAK6B,GAAMhZ,MAAK,SAAAiZ,GACvC,IAAMvC,EAAS,IACbxkB,GAAI+mB,EAAQ/mB,GACZyjB,KAAMsD,EAAQtD,MACXsD,EAAQrc,UAEb,EAAKzI,MAAM+kB,UAAUxC,GACrB,EAAKviB,MAAMglB,yB,oBAIf,WAAS,WACCzC,EAAW3lB,KAAKqD,MAAhBsiB,OACR,OACE,gCACE,gBAAC,MAAD,CAAc6B,UAAQ,GACpB,wBAAMa,SAAUroB,KAAK6nB,cACnB,gBAAC,MAAD,CAAWpgB,MAAM,qBACf,gBAAC,MAAD,CACE6gB,UAAQ,EACR9nB,KAAK,OACLW,GAAG,aACHkJ,YAAY,oBACZke,aAAc5C,EAAOnlB,KACrBwJ,SAAUhK,KAAKqlB,cAInB,gBAAC,MAAD,CAAW5d,MAAM,uBACf,uBACE3D,UAAW,4BACX6G,MAAO,CACL6d,SAAU,WACVC,UAAW,MAGb,gBAAC,MAAD,CACEjE,MAAOmB,EAAOnB,MACdoC,aAAc,GACd5c,SAAU,SAAAwa,GAAK,OAAI,EAAKT,YAAYS,IACpC7Z,MAAO,CACLkc,QAAS,EACTC,UAAW,UAGf,gBAAC4B,GAAA,EAAD,CACEC,YAAa,SAAAnE,GACXrf,QAAQC,IAAIof,GACZ,EAAKoB,YAAYpB,QAOzB,gBAAC,MAAD,CAAW/c,MAAM,QACf,gBAAC,MAAD,CACEuC,SAAU,SAAAlD,GAAK,OAAI,EAAK6gB,QAAQ7gB,EAAO,SACvC8hB,IAAK,EACLC,IAAK,IACLC,SAAU,EACVC,cAAe,GACfC,eAAe,EACfliB,MAAO6e,EAAO0B,QAGlB,gBAAC,MAAD,CAAW5f,MAAM,2BACf,gBAAC,MAAD,CACEuC,SAAU,SAAAlD,GAAK,OAAI,EAAK6gB,QAAQ7gB,EAAO,eACvC8hB,KAAM,IACNC,IAAK,IACLC,SAAU,EACVC,cAAe,GACfjiB,MAAO6e,EAAO2B,WACd0B,eAAe,KAGnB,gBAAC,MAAD,CAAWvhB,MAAM,yBACf,gBAAC,MAAD,CACEuC,SAAU,SAAAlD,GAAK,OAAI,EAAK6gB,QAAQ7gB,EAAO,aACvC8hB,KAAM,IACNC,IAAK,IACLC,SAAU,EACVC,cAAe,GACfjiB,MAAO6e,EAAO6B,SACdwB,eAAe,KAGnB,gBAAC,MAAD,CAAWvhB,MAAM,UACf,gBAAC,MAAD,CACEuC,SAAU,SAAAlD,GAAK,OAAI,EAAK6gB,QAAQ7gB,EAAO,WACvC8hB,KAAM,IACNC,IAAK,IACLC,SAAU,EACVC,cAAe,GACfjiB,MAAO6e,EAAO4B,OACdyB,eAAe,KAGnB,gBAAC,MAAD,CAAWvhB,MAAM,WAAWwhB,QAAQ,GAClC,gBAAC,KAAD,CACEC,WACE/B,GAAY7f,QAAO,SAAA4C,GAAI,OAAIA,EAAKpD,OAAS6e,EAAOllB,QAAM,GAExDmP,aAAc,SAAA1F,GAAI,OAChB,gBAAC,MAAD,CACEtF,IAAKsF,EAAKtF,IACViI,KAAM3C,EAAKzC,MACXD,QAAS,SAAAhE,GAAC,OAAI,EAAKokB,SAASpkB,EAAG0G,EAAKpD,WAGxCkH,MAAOmZ,GACPzX,UAAW,gBAAC,MAAD,CAAUC,UAAU,EAAM9C,KAAK,iBAE1C,gBAAC,MAAD,CACEA,KACEsa,GAAY7f,QAAO,SAAA4C,GAAI,OAAIA,EAAKpD,OAAS6e,EAAOllB,QAAM,GACnDgH,MAEL0hB,UAAU,4BAIhB,gBAAC,MAAD,KACE,gBAAC,MAAD,CAAQ1oB,KAAK,SAASkK,MAAO,CAAE8G,MAAO,SAAtC,gB,GAlOoBrN,a,ykBCZlC,I,GAAM+iB,GAAc,CAClB,CACErgB,MAAO,IACPW,MAAO,UACP7C,IAAK,GAEP,CACEkC,MAAO,QACPW,MAAO,QACP7C,IAAK,IA+QT,G,wcA1QE,WAAYxB,GAAO,uBACjB,cAAMA,IAmCR2gB,YAAc,SAAAjd,GACZ,IAAMkd,EAAO,QAAH,OAAWld,EAAMmd,IAAI/U,EAArB,aAA2BpI,EAAMmd,IAAIC,EAArC,aAA2Cpd,EAAMmd,IAAIE,EAArD,aAA2Drd,EAAMmd,IAAIG,EAArE,KACJC,EAAMvd,EAAMud,IACZJ,EAAMnd,EAAMmd,IAClB,EAAKje,UAAS,SAAAwI,GAAC,gBACVA,GADU,IAEbmX,OAAQ,SACHnX,EAAEmX,QADD,IAEJnB,MAAOR,EACPS,eAAgBJ,EAChBK,SAAUT,EACV2B,YAAa,WA/CA,EAwGnBA,YAAc,SAAA9e,GACZ,IAAM8d,EAAO9d,EAAM8d,KACnBzf,QAAQC,IAAIwf,GACZ,IAAMZ,EAAO,QAAH,OAAWld,EAAM4d,SAASxV,EAA1B,aAAgCpI,EAAM4d,SAASR,EAA/C,aAAqDpd,EAAM4d,SAASP,EAApE,aAA0Erd,EAAM4d,SAASN,EAAzF,KACJC,EAAMvd,EAAM2d,eACZR,EAAMnd,EAAM4d,SAClB,EAAK1e,UAAS,SAAAwI,GAAC,gBACVA,GADU,IAEbmX,OAAQ,SACHnX,EAAEmX,QADD,IAEJnB,MAAOR,EACPS,eAAgBJ,EAChBK,SAAUT,EACV2B,YAAahB,UAnHjB,EAAKwC,cAAgB,CACnBC,KAAM,EACN7C,MAAO,yBACPC,eAAgB,UAChBC,SAAU,CACRxV,EAAG,IACHgV,EAAG,IACHC,EAAG,IACHC,EAAG,GAELkD,WAAY,EACZ7G,QAAS,EACT8G,OAAQ,EACR9mB,KAAM,IACN+mB,SAAU,EACVhnB,KAAM,IAER,IAAQinB,EAAkBrkB,EAAlBqkB,MAAO9B,EAAWviB,EAAXuiB,OAnBE,OAoBjB,EAAKtiB,MAAQ,CACXsiB,OAAQ8B,EAAQ,EAAKL,cAAgBzB,EACrC+B,MAAM,GAER,EAAKrC,WAAa,EAAKA,WAAW9hB,MAAhB,WAClB,EAAKwgB,YAAc,EAAKA,YAAYxgB,MAAjB,WACnB,EAAKokB,QAAU,EAAKA,QAAQpkB,MAAb,WACf,EAAKqkB,SAAW,EAAKA,SAASrkB,MAAd,WAChB,EAAKskB,aAAe,EAAKA,aAAatkB,MAAlB,WACpB,EAAK6lB,eAAiB,EAAKA,eAAe7lB,MAApB,WACtB,EAAKqiB,YAAc,EAAKA,YAAYriB,MAAjB,WACnB,EAAKwhB,oBAAsB,IAAI/b,UAAS,CACtCC,MAAO,uCAhCQ,E,yCAuDnB,SAAW6e,GACT,IAAMC,EAASD,EAAMhd,OAAOhE,MAC5B9G,KAAKgG,UAAS,SAAAwI,GAAC,gBACVA,GADU,IAEbmX,OAAQ,SACHnX,EAAEmX,QADD,IAEJnlB,KAAMunB,W,qBAKZ,SAAQjhB,EAAOkhB,GACb,IAAQrC,EAAW3lB,KAAKqD,MAAhBsiB,OACRA,EAAOqC,GAAWlhB,EAClB9G,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAamX,OAAQA,S,sBAGtC,SAASmC,EAAOhhB,GACd9G,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAamX,OAAQ,SAAKnX,EAAEmX,QAAT,IAAiBllB,KAAMqG,W,0BAG3D,SAAaghB,GAAO,WAClBA,EAAMzF,iBACN,IAAQsD,EAAW3lB,KAAKqD,MAAhBsiB,OACRxgB,QAAQC,IAAIugB,GACZ,IAAMsC,EAAO,CACXxnB,KAAM,SACNoL,SAAU8Z,GAEZ3lB,KAAK+kB,oBAAoBC,IAAIW,EAAOxkB,GAAI8mB,GAAMhZ,MAAK,SAAAiZ,GACjD,EAAK9kB,MAAM0iB,WAAWH,GACtB,EAAK3f,UACH,SAAAwI,GAAC,gBAAUA,GAAV,IAAakZ,MAAM,OACpB,kBAAM,EAAKtkB,MAAMimB,cAAc1D,W,4BAIrC,SAAemC,GAAO,WACdwB,EAAe1nB,OAAOwgB,QAAQ,kBAEpC,GADA0F,EAAMzF,iBACFiH,EAAc,CAChB,IAAQ3D,EAAW3lB,KAAKqD,MAAhBsiB,OACR3lB,KAAK+kB,oBAAoBsB,OAAOV,EAAOxkB,IAAI8N,MAAK,SAAAiZ,GAC9C,EAAK9kB,MAAMmmB,aAAa5D,S,oBAwB9B,WAAS,WACCA,EAAW3lB,KAAKqD,MAAhBsiB,OACR,OACE,gBAAC,WAAD,MACI3lB,KAAKoD,MAAMqkB,OACX,gBAAC,MAAD,CACE9c,MAAO,CAAE8G,MAAO,QAChBjK,QAAS,SAAAhE,GAAC,OAAI,EAAKwC,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAakZ,MAAOlZ,EAAEkZ,aAEjD1nB,KAAKoD,MAAMqkB,OAAS9B,EAAOnlB,MAGjC,gBAAC,MAAD,CAAUgpB,OAAQxpB,KAAKqD,MAAMqkB,MAC3B,gBAAC,MAAD,CAAcF,UAAQ,GACpB,wBAAMa,SAAUroB,KAAK6nB,cACnB,gBAAC,MAAD,CAAWpgB,MAAM,qBACf,gBAAC,MAAD,CACE6gB,UAAQ,EACR9nB,KAAK,OACLW,GAAG,aACHkJ,YAAY,oBACZke,aAAc5C,EAAOnlB,KACrBwJ,SAAUhK,KAAKqlB,cAInB,gBAAC,MAAD,CAAW5d,MAAM,uBACf,uBACE3D,UAAW,4BACX6G,MAAO,CACL6d,SAAU,WACVC,UAAW,MAGb,gBAAC,MAAD,CACEjE,MAAOmB,EAAOnB,MACdoC,aAAc,GACd5c,SAAU,SAAAwa,GAAK,OAAI,EAAKT,YAAYS,IACpC7Z,MAAO,CACLkc,QAAS,EACTC,UAAW,UAGf,gBAAC4B,GAAA,EAAD,CACEC,YAAa,SAAAnE,GACXrf,QAAQC,IAAIof,GACZ,EAAKoB,YAAYpB,QAOzB,gBAAC,MAAD,CAAW/c,MAAM,QACf,gBAAC,MAAD,CACEuC,SAAU,SAAAlD,GAAK,OAAI,EAAK6gB,QAAQ7gB,EAAO,SACvC8hB,IAAK,EACLC,IAAK,IACLC,SAAU,EACVC,cAAe,GACfC,eAAe,EACfliB,MAAO6e,EAAO0B,QAGlB,gBAAC,MAAD,CAAW5f,MAAM,2BACf,gBAAC,MAAD,CACEuC,SAAU,SAAAlD,GAAK,OAAI,EAAK6gB,QAAQ7gB,EAAO,eACvC8hB,KAAM,IACNC,IAAK,IACLC,SAAU,EACVC,cAAe,GACfjiB,MAAO6e,EAAO2B,WACd0B,eAAe,KAGnB,gBAAC,MAAD,CAAWvhB,MAAM,yBACf,gBAAC,MAAD,CACEuC,SAAU,SAAAlD,GAAK,OAAI,EAAK6gB,QAAQ7gB,EAAO,aACvC8hB,KAAM,IACNC,IAAK,IACLC,SAAU,EACVC,cAAe,GACfjiB,MAAO6e,EAAO6B,SACdwB,eAAe,KAGnB,gBAAC,MAAD,CAAWvhB,MAAM,UACf,gBAAC,MAAD,CACEuC,SAAU,SAAAlD,GAAK,OAAI,EAAK6gB,QAAQ7gB,EAAO,WACvC8hB,KAAM,IACNC,IAAK,IACLC,SAAU,EACVC,cAAe,GACfjiB,MAAO6e,EAAO4B,OACdyB,eAAe,KAGnB,gBAAC,MAAD,CAAWvhB,MAAM,WAAWwhB,QAAQ,GAClC,gBAAC,KAAD,CACEC,WACE/B,GAAY7f,QAAO,SAAA4C,GAAI,OAAIA,EAAKpD,OAAS6e,EAAOllB,QAAM,GAExDmP,aAAc,SAAA1F,GAAI,OAChB,gBAAC,MAAD,CACEtF,IAAKsF,EAAKtF,IACViI,KAAM3C,EAAKzC,MACXD,QAAS,SAAAhE,GAAC,OAAI,EAAKokB,SAASpkB,EAAG0G,EAAKpD,WAGxCkH,MAAOmZ,GACPzX,UAAW,gBAAC,MAAD,CAAUC,UAAU,EAAM9C,KAAK,iBAE1C,gBAAC,MAAD,CACEA,KACEsa,GAAY7f,QAAO,SAAA4C,GAAI,OAAIA,EAAKpD,OAAS6e,EAAOllB,QAAM,GACnDgH,MAEL0hB,UAAU,4BAIhB,gBAAC,MAAD,KACE,gBAAC,MAAD,CACE1oB,KAAK,SACLkK,MAAO,CAAE8G,MAAO,OAAQ6U,aAAc,QAFxC,QAMA,gBAAC,MAAD,CACEtZ,OAAO,SACPxF,QAASxH,KAAKopB,eACdze,MAAO,CAAE8G,MAAO,SAHlB,mB,GA3PerN,a,ykBCd/B,IAAMyf,GAAQR,UAAH,mIAmBLoG,G,wcACJ,WAAYrmB,GAAO,6BACjB,cAAMA,IACDC,MAAQ,CACXuR,KAAK,EACL8Q,QAAStiB,EAAMsiB,SAEjB,EAAKF,QAAU,EAAKA,QAAQjiB,MAAb,WACf,EAAKke,WAAa,EAAKA,WAAWle,MAAhB,WAClB,EAAKskB,aAAe,EAAKA,aAAatkB,MAAlB,WACpB,EAAK8lB,cAAgB,EAAKA,cAAc9lB,MAAnB,WATJ,E,iDAYnB,SAAmBgG,EAAWD,GAEzBpD,EAAEqI,QACDG,KAAKC,UAAUrF,EAAUgb,QACzB5V,KAAKC,UAAU3O,KAAKoD,MAAMkhB,UAG5Bnf,QAAQC,IAAI,yB,+BAShB,SAAkB8b,EAAU0D,EAAMe,GAAQ,WACxCxgB,QAAQC,IAAI8b,GACRvK,MAAM9P,QAAQqa,GAChBA,WAAU9a,SAIR,SAAA2f,GACoBhO,QAAQgO,EAAaC,UAAUpB,KAE/CmB,EAAaE,iBAAiBrB,EAAMe,GAEtC,EAAKP,kBAAkBW,EAAcnB,EAAMe,MAG1C3lB,KAAKkmB,gBAAgBhF,EAAU0D,EAAMe,K,6BAQ9C,SAAgBzE,EAAU0D,EAAMe,GAAQ,aAClCzE,EAAS8E,UAAUpB,IACrB1D,EAAS+E,iBAAiBrB,EAAMe,GAElC,UAAAzE,EAASlgB,gBAAT,SAAmBoF,SAIjB,SAAA+J,GACMA,EAAM6V,UAAUpB,IAClBzU,EAAM8V,iBAAiBrB,EAAMe,GAG/BxV,EAAMnP,SAASC,OAAS,GACtB,EAAKmkB,kBAAkBjV,EAAMnP,SAAU4jB,EAAMe,Q,qBAKrD,SAAQniB,GACNxD,KAAKgG,UAAS,SAAAwI,GAAC,MAAK,CAAEoG,KAAMpG,EAAEoG,U,wBAGhC,SAAWzT,GAAI,WAEb,GADgBS,OAAOwgB,QAAQ,kBAClB,CACX,IAAIsD,EAAUxf,EAAEoN,UAAUtT,KAAKqD,MAAMqiB,QAAS,IAC9CA,EAAUA,EAAQpe,QAAO,SAAA4C,GAAI,OAAIA,EAAK/I,KAAOA,KAC7CnB,KAAKgG,UACH,SAAAwI,GAAC,gBAAUA,GAAV,IAAakX,QAASA,OACvB,kBAAM,EAAKtiB,MAAMsmB,UAAUhE,MAE7B1lB,KAAK+kB,oBAAoBsB,OAAOllB,M,2BAOpC,SAAcwkB,GAAQ,YACpBpS,UACGlH,iBACArL,SAASoF,SAAQ,SAAA+J,GAChB,EAAKiV,kBAAkBjV,EAAOwV,EAAOf,KAAMe,Q,0BAQjD,WACE3lB,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAaoG,KAAK,S,oBAGnC,WAAS,WACP,OACE,gBAAC,GAAD,KACE,gBAAC,MAAD,CAAU4U,OAAQxpB,KAAKqD,MAAMuR,KAC3B,gBAAC,GAAD,CACEuT,UAAWnoB,KAAKoD,MAAM+kB,UACtBC,kBAAmBpoB,KAAK6nB,aACxBJ,OAAO,MAGTznB,KAAKqD,MAAMuR,MACV5U,KAAKoD,MAAMsiB,QAAQzkB,OAAS,EAC3BjB,KAAKoD,MAAMsiB,QAAQhhB,KAAI,SAACwF,EAAMrB,GAAP,OACrB,uBAAKjE,IAAKiE,EAAO8B,MAAO,CAAE2b,aAAc,SACtC,gBAAC,GAAD,CACEX,OAAQzb,EACR4b,WAAY,EAAK1iB,MAAM0iB,WACvByD,aAAc,EAAKnmB,MAAMmmB,aACzBnB,kBAAmB,EAAKP,aACxBwB,cAAe,EAAKA,oBAK1B,kDAEJ,gBAAC,MAAD,MACA,gBAAC,MAAD,CAAQ1e,MAAO,CAAE8G,MAAO,QAAUjK,QAASxH,KAAKwlB,SAC5CxlB,KAAKqD,MAAMuR,IAAmB,SAAb,iB,GAvIDxQ,aA6I5B,IAAeyD,cAxJS,SAAAxE,GAAK,MAAK,CAChCqiB,QAASriB,EAAM0jB,aAAarB,SAAW,GACvCpB,OAAQjhB,EAAM0jB,aAAazC,QAAU,OAGZ,SAAA3e,GAAQ,MAAK,CACtCwiB,UAAW,SAAAxC,GAAM,OAAIhgB,GAASgkB,SAAgBhE,KAC9CG,WAAY,SAAAH,GAAM,OAAIhgB,GAASuhB,SAAiBvB,KAChD4D,aAAc,SAAA5D,GAAM,OAAIhgB,GAASikB,SAAmBjE,QAgJtD,CAA4D8D,I,qlBChK5D,IAAMI,GAAgB3jB,EAAEC,QAAQ2jB,OAAeplB,KAAI,YAAkB,mBAAhBqlB,EAAgB,KACnE,OADmE,KAC5D,CACLtiB,MAAOsiB,EACPjjB,MAAOijB,MAILC,GAAQ,CAAC,KAAM,KAAM,MAAO,IAAK,KAAM,MAEvCC,GAAgB,CACpB,CACEnjB,MAAO,MACPW,MAAO,OAET,CACEX,MAAO,MACPW,MAAO,OAET,CACEX,MAAO,MACPW,MAAO,OAET,CACEX,MAAO,MACPW,MAAO,OAET,CACEX,MAAO,MACPW,MAAO,OAET,CACEX,MAAO,MACPW,MAAO,OAET,CACEX,MAAO,MACPW,MAAO,OAET,CACEX,MAAO,MACPW,MAAO,OAET,CACEX,MAAO,MACPW,MAAO,OAET,CACEX,MAAO,OACPW,MAAO,QAET,CACEX,MAAO,SACPW,MAAO,UAET,CACEX,MAAO,SACPW,MAAO,UAET,CACEX,MAAO,UACPW,MAAO,YAGLyiB,GAAmB,CACvB,CACEpjB,MAAO,OACPW,MAAO,UACP7C,IAAK,GAEP,CACEkC,MAAO,aACPW,MAAO,aACP7C,IAAK,GAEP,CACEkC,MAAO,YACPW,MAAO,YACP7C,IAAK,GAEP,CACEkC,MAAO,YACPW,MAAO,YACP7C,IAAK,IAGHulB,GAAe,CACnB,CACErjB,MAAO,SACPW,MAAO,SACP7C,IAAK,GAEP,CACEkC,MAAO,SACPW,MAAO,SACP7C,IAAK,GAEP,CACEkC,MAAO,UACPW,MAAO,UACP7C,IAAK,IAGHwlB,GAAoB,CACxB,CACEtjB,MAAO,OACPW,MAAO,OACP7C,IAAK,GAEP,CACEkC,MAAO,YACPW,MAAO,YACP7C,IAAK,GAEP,CACEkC,MAAO,WACPW,MAAO,WACP7C,IAAK,GAEP,CACEkC,MAAO,eACPW,MAAO,eACP7C,IAAK,IAkQT,G,wcA9PE,WAAYxB,GAAO,uBACjB,cAAMA,IACDgkB,cAAgB,CACnB5mB,KAAM,GACN6pB,WAAY,GACZC,OAAQ,SACRC,WAAY,EACZC,KAAM,GACNC,QAAS,EACTC,SAAU,KACVC,OAAQ,SACRhgB,MAAO,GACPigB,UAAW,IAEb,IAAQnD,EAAgBrkB,EAAhBqkB,MAAOsC,EAAS3mB,EAAT2mB,KAdE,OAejB,EAAK1mB,MAAQ,CACX0mB,KAAMtC,EAAQ,EAAKL,cAAgB2C,EACnCrC,MAAM,GAER,EAAKrC,WAAa,EAAKA,WAAW9hB,MAAhB,WAClB,EAAKqkB,SAAW,EAAKA,SAASrkB,MAAd,WAChB,EAAKsnB,WAAa,EAAKA,WAAWtnB,MAAhB,WAClB,EAAKunB,WAAa,EAAKA,WAAWvnB,MAAhB,WAClB,EAAKwnB,aAAe,EAAKA,aAAaxnB,MAAlB,WACpB,EAAKynB,gBAAkB,EAAKA,gBAAgBznB,MAArB,WACvB,EAAK0nB,YAAc,EAAKA,YAAY1nB,MAAjB,WACnB,EAAK2nB,iBAAmB,EAAKA,iBAAiB3nB,MAAtB,WACxB,EAAK4nB,iBAAmB,EAAKA,iBAAiB5nB,MAAtB,WACxB,EAAK6nB,cAAgB,EAAKA,cAAc7nB,MAAnB,WACrB,EAAK8nB,WAAa,EAAKA,WAAW9nB,MAAhB,WAClB,EAAKwhB,oBAAsB,IAAI/b,UAAS,CACtCC,MAAO,uCA/BQ,E,yCAsCnB,SAAW6e,GACT,IAAMC,EAASD,EAAMhd,OAAOhE,MAC5B9G,KAAKgG,UAAS,SAAAwI,GAAC,gBACVA,GADU,IAEbub,KAAM,SACDvb,EAAEub,MADH,IAEFvpB,KAAMunB,W,sBAKZ,SAASD,EAAOiC,GACd/pB,KAAKgG,UAAS,SAAAwI,GAAC,gBACVA,GADU,IAEbub,KAAM,SAAKvb,EAAEub,MAAT,IAAeO,OAAQP,EAAKjjB,MAAOW,MAAOsiB,EAAKtiB,e,wBAIvD,SAAWqgB,GAAO,WAChBA,EAAMzF,iBACN,IAAQ0H,EAAS/pB,KAAKqD,MAAd0mB,KACF9B,EAAO,CACXxnB,KAAM,OACNoL,SAAU6C,KAAKC,UAAUob,IAE3B/pB,KAAK+kB,oBAAoBqB,KAAK6B,GAAMhZ,MAAK,SAAAiZ,GACvC,IAAM6B,EAAO,IACX5oB,GAAI+mB,EAAQ/mB,GACZyjB,KAAMsD,EAAQtD,MACXsD,EAAQrc,UAEb,EAAKzI,MAAMkoB,QAAQvB,GACnB,EAAK3mB,MAAMmoB,uB,wBAIf,SAAWzD,GACT,IAAM0D,EAAO1D,EAAMhd,OAAOhE,MAC1B9G,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAaub,KAAM,SAAKvb,EAAEub,MAAT,IAAeW,SAAUc,W,wBAG3D,SAAW1kB,GACT9G,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAaub,KAAM,SAAKvb,EAAEub,MAAT,IAAeS,KAAM1jB,W,8BAGvD,SAAiBA,GACf9G,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAaub,KAAM,SAAKvb,EAAEub,MAAT,IAAeQ,WAAYzjB,W,2BAG7D,SAAcA,GACZ9G,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAaub,KAAM,SAAKvb,EAAEub,MAAT,IAAeU,QAAS3jB,W,0BAG1D,SAAaghB,GACX,IAAM6C,EAAS7C,EAAMhd,OAAOhE,MAC5B9G,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAaub,KAAM,SAAKvb,EAAEub,MAAT,IAAeY,OAAQA,W,6BAGzD,SAAgB7C,GACd,IAAM8C,EAAY9C,EAAMhd,OAAOhE,MAC/B9G,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAaub,KAAM,SAAKvb,EAAEub,MAAT,IAAea,UAAWA,W,yBAG5D,SAAY9C,GACV,IAAMnd,EAAQmd,EAAMhd,OAAOhE,MAC3B9G,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAaub,KAAM,SAAKvb,EAAEub,MAAT,IAAepf,MAAOA,W,8BAGxD,SAAiBmd,GACf,IAAMuC,EAAavC,EAAMhd,OAAOhE,MAChC9G,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAaub,KAAM,SAAKvb,EAAEub,MAAT,IAAeM,WAAYA,W,oBAG7D,WAAS,WACCN,EAAS/pB,KAAKqD,MAAd0mB,KACR,OACE,gCACE,gBAAC,MAAD,CAAcvC,UAAQ,GACpB,wBAAMa,SAAUroB,KAAKqrB,YACnB,gBAAC,MAAD,CAAW5jB,MAAM,mBACf,gBAAC,MAAD,CACE6gB,UAAQ,EACR9nB,KAAK,OACLW,GAAG,aACHkJ,YAAY,kBACZke,cAAcwB,aAAA,EAAAA,EAAMvpB,OAAQ,GAC5BwJ,SAAUhK,KAAKqlB,cAGnB,gBAAC,MAAD,CAAW5d,MAAM,SAASwhB,QAAQ,GAChC,gBAAC,KAAD,CACEzZ,cAAe,SAACnE,EAAOnB,GAAR,OAAiBA,EAAKzC,MAAMhB,QAAQ4E,IAAU,GAC7D6d,WACEW,GAAcviB,QAAO,SAAA4C,GAAI,OAAIA,EAAKpD,OAASijB,EAAKO,UAAQ,GAE1D1a,aAAc,SAAA1F,GAAI,OAChB,gBAAC,MAAD,CACE2C,KAAM3C,EAAKzC,MACXD,QAAS,SAAAhE,GAAC,OAAI,EAAKokB,SAASpkB,EAAG0G,OAGnC8D,MAAO6b,GACPna,UAAW,gBAAC,MAAD,CAAUC,UAAU,EAAM9C,KAAK,iBAE1C,gBAAC,MAAD,CACEA,KACEgd,GAAcviB,QAAO,SAAA4C,GAAI,OAAIA,EAAKpD,OAASijB,EAAKO,UAAQ,GACrD7iB,MAEL0hB,UAAU,4BAIhB,gBAAC,MAAD,CAAW1hB,MAAM,OAAOwhB,QAAQ,GAC9B,gBAAC,MAAD,CAAcrc,MAAM,EAAM4a,UAAU,GAClC,gBAAC,MAAD,CACE7c,MAAO,CACL8G,MAAO,SAET3K,MAAOijB,EAAKS,KACZngB,YAAY,aACZue,IAAK,EACLC,IAAK,IACLC,SAAU,GACV2C,cAAezrB,KAAK8qB,aAEtB,gBAAC,MAAD,CACE9gB,SAAUhK,KAAK6qB,WACf1gB,QAAS6f,GACT0B,eAAgB3B,EAAKW,SACrB5jB,MAAOijB,EAAKW,aAIlB,gBAAC,MAAD,CAAWjjB,MAAM,SAASwhB,QAAQ,GAChC,gBAAC,MAAD,CAAcrc,MAAM,EAAM4a,UAAU,GAClC,gBAAC,MAAD,CACExd,SAAUhK,KAAK+qB,aACf5gB,QAAS8f,GACTyB,eAAgB3B,EAAKY,OACrB7jB,MAAOijB,EAAKY,WAIlB,gBAAC,MAAD,CAAWljB,MAAM,YAAYwhB,QAAQ,GACnC,gBAAC,MAAD,CAAcrc,MAAM,EAAM4a,UAAU,GAClC,gBAAC,MAAD,CACExd,SAAUhK,KAAKgrB,gBACf7gB,QAAS+f,GACTwB,eAAgB3B,EAAKa,UACrB9jB,MAAOijB,EAAKa,cAIlB,gBAAC,MAAD,CAAWnjB,MAAM,QAAQwhB,QAAQ,GAC/B,gBAAC,MAAD,CAAcrc,MAAM,EAAM4a,UAAU,GAClC,gBAAC,MAAD,CACExd,SAAUhK,KAAKirB,YACf9gB,QAASggB,GACTuB,eAAgB3B,EAAKpf,MACrB7D,MAAOijB,EAAKpf,UAIlB,gBAAC,MAAD,CAAWlD,MAAM,aAAawhB,QAAQ,GACpC,gBAAC,MAAD,CAAcrc,MAAM,EAAM4a,UAAU,GAClC,gBAAC,MAAD,CACExd,SAAUhK,KAAKkrB,iBACf/gB,QAASigB,GACTsB,eAAgB3B,EAAKM,WACrBvjB,MAAOijB,EAAKM,eAIlB,gBAAC,MAAD,CAAW5iB,MAAM,cAAcwhB,QAAQ,GACrC,gBAAC,MAAD,CAAcrc,MAAM,EAAM4a,UAAU,GAClC,gBAAC,MAAD,CACE7c,MAAO,CACL8G,MAAO,SAET3K,MAAOijB,EAAKQ,WACZlgB,YAAY,oBACZye,SAAU,GACVF,IAAK,GACLC,IAAK,GACL4C,cAAezrB,KAAKmrB,qBAI1B,gBAAC,MAAD,CAAW1jB,MAAM,iBAAiBwhB,QAAQ,GACxC,gBAAC,MAAD,CAAcrc,MAAM,EAAM4a,UAAU,GAClC,gBAAC,MAAD,CACE7c,MAAO,CACL8G,MAAO,SAET3K,MAAOijB,EAAKU,QACZpgB,YAAY,uBACZye,SAAU,GACVF,KAAM,EACNC,IAAK,GACL4C,cAAezrB,KAAKorB,kBAI1B,gBAAC,MAAD,KACE,gBAAC,MAAD,CAAQ3qB,KAAK,SAASkK,MAAO,CAAE8G,MAAO,SAAtC,gB,GApPkBrN,a,ykBC3HhC,I,GAAMylB,GAAgB3jB,EAAEC,QAAQ2jB,OAAeplB,KAAI,YAAkB,mBAAhBqlB,EAAgB,KACnE,OADmE,KAC5D,CACLtiB,MAAOsiB,EACPjjB,MAAOijB,MAILC,GAAQ,CAAC,KAAM,KAAM,MAAO,IAAK,KAAM,MAEvCC,GAAgB,CACpB,CACEnjB,MAAO,MACPW,MAAO,OAET,CACEX,MAAO,MACPW,MAAO,OAET,CACEX,MAAO,MACPW,MAAO,OAET,CACEX,MAAO,MACPW,MAAO,OAET,CACEX,MAAO,MACPW,MAAO,OAET,CACEX,MAAO,MACPW,MAAO,OAET,CACEX,MAAO,MACPW,MAAO,OAET,CACEX,MAAO,MACPW,MAAO,OAET,CACEX,MAAO,MACPW,MAAO,OAET,CACEX,MAAO,OACPW,MAAO,QAET,CACEX,MAAO,SACPW,MAAO,UAET,CACEX,MAAO,SACPW,MAAO,UAET,CACEX,MAAO,UACPW,MAAO,YAGLyiB,GAAmB,CACvB,CACEpjB,MAAO,OACPW,MAAO,UACP7C,IAAK,GAEP,CACEkC,MAAO,aACPW,MAAO,aACP7C,IAAK,GAEP,CACEkC,MAAO,YACPW,MAAO,YACP7C,IAAK,GAEP,CACEkC,MAAO,YACPW,MAAO,YACP7C,IAAK,IAGHulB,GAAe,CACnB,CACErjB,MAAO,SACPW,MAAO,SACP7C,IAAK,GAEP,CACEkC,MAAO,SACPW,MAAO,SACP7C,IAAK,GAEP,CACEkC,MAAO,UACPW,MAAO,UACP7C,IAAK,IAGHwlB,GAAoB,CACxB,CACEtjB,MAAO,OACPW,MAAO,OACP7C,IAAK,GAEP,CACEkC,MAAO,YACPW,MAAO,YACP7C,IAAK,GAEP,CACEkC,MAAO,WACPW,MAAO,WACP7C,IAAK,GAEP,CACEkC,MAAO,eACPW,MAAO,eACP7C,IAAK,IAwST,G,wcApSE,WAAYxB,GAAO,uBACjB,cAAMA,IAEDgkB,cAAgB,CACnB5mB,KAAM,GACN6pB,WAAY,GACZC,OAAQ,SACRC,WAAY,EACZC,KAAM,GACNC,QAAS,EACTC,SAAU,KACVC,OAAQ,SACRhgB,MAAO,GACPigB,UAAW,IAGb,IAAQnD,EAAgBrkB,EAAhBqkB,MAAOsC,EAAS3mB,EAAT2mB,KAhBE,OAiBjB,EAAK1mB,MAAQ,CACX0mB,KAAMtC,EAAQ,EAAKL,cAAgB2C,EACnCrC,MAAM,GAER,EAAKrC,WAAa,EAAKA,WAAW9hB,MAAhB,WAClB,EAAKqkB,SAAW,EAAKA,SAASrkB,MAAd,WAChB,EAAKsnB,WAAa,EAAKA,WAAWtnB,MAAhB,WAClB,EAAKunB,WAAa,EAAKA,WAAWvnB,MAAhB,WAClB,EAAKwnB,aAAe,EAAKA,aAAaxnB,MAAlB,WACpB,EAAKynB,gBAAkB,EAAKA,gBAAgBznB,MAArB,WACvB,EAAK0nB,YAAc,EAAKA,YAAY1nB,MAAjB,WACnB,EAAK2nB,iBAAmB,EAAKA,iBAAiB3nB,MAAtB,WACxB,EAAK4nB,iBAAmB,EAAKA,iBAAiB5nB,MAAtB,WACxB,EAAK6nB,cAAgB,EAAKA,cAAc7nB,MAAnB,WACrB,EAAK8nB,WAAa,EAAKA,WAAW9nB,MAAhB,WAClB,EAAKooB,aAAe,EAAKA,aAAapoB,MAAlB,WACpB,EAAKwhB,oBAAsB,IAAI/b,UAAS,CACtCC,MAAO,uCAlCQ,E,yCA0CnB,SAAW6e,GACT,IAAMC,EAASD,EAAMhd,OAAOhE,MAC5B9G,KAAKgG,UAAS,SAAAwI,GAAC,gBACVA,GADU,IAEbub,KAAM,SACDvb,EAAEub,MADH,IAEFvpB,KAAMunB,W,sBAKZ,SAASD,EAAOiC,GACd5kB,QAAQC,IAAI2kB,GACZ/pB,KAAKgG,UAAS,SAAAwI,GAAC,gBACVA,GADU,IAEbub,KAAM,SAAKvb,EAAEub,MAAT,IAAeO,OAAQP,EAAKjjB,MAAOW,MAAOsiB,EAAKtiB,e,wBAIvD,SAAWqgB,GACT,IAAM0D,EAAO1D,EAAMhd,OAAOhE,MAC1B9G,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAaub,KAAM,SAAKvb,EAAEub,MAAT,IAAeW,SAAUc,W,wBAG3D,SAAW1kB,GACT9G,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAaub,KAAM,SAAKvb,EAAEub,MAAT,IAAeS,KAAM1jB,W,8BAGvD,SAAiBA,GACf9G,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAaub,KAAM,SAAKvb,EAAEub,MAAT,IAAeQ,WAAYzjB,W,2BAG7D,SAAcA,GACZ9G,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAaub,KAAM,SAAKvb,EAAEub,MAAT,IAAeU,QAAS3jB,W,0BAG1D,SAAaghB,GACX,IAAM6C,EAAS7C,EAAMhd,OAAOhE,MAC5B9G,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAaub,KAAM,SAAKvb,EAAEub,MAAT,IAAeY,OAAQA,W,6BAGzD,SAAgB7C,GACd,IAAM8C,EAAY9C,EAAMhd,OAAOhE,MAC/B9G,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAaub,KAAM,SAAKvb,EAAEub,MAAT,IAAea,UAAWA,W,yBAG5D,SAAY9C,GACV,IAAMnd,EAAQmd,EAAMhd,OAAOhE,MAC3B9G,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAaub,KAAM,SAAKvb,EAAEub,MAAT,IAAepf,MAAOA,W,8BAGxD,SAAiBmd,GACf,IAAMuC,EAAavC,EAAMhd,OAAOhE,MAChC9G,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAaub,KAAM,SAAKvb,EAAEub,MAAT,IAAeM,WAAYA,W,wBAG7D,SAAWvC,GAAO,WAChBA,EAAMzF,iBACN,IAAQ0H,EAAS/pB,KAAKqD,MAAd0mB,KACF9B,EAAO,CACXxnB,KAAM,OACNoL,SAAUke,GAEZ/pB,KAAK+kB,oBAAoBC,IAAI+E,EAAK5oB,GAAI8mB,GAAMhZ,MAAK,SAAAiZ,GAC/C,EAAK9kB,MAAMwoB,SAAS7B,GACpB,EAAK/jB,UACH,SAAAwI,GAAC,gBAAUA,GAAV,IAAakZ,MAAM,OACpB,kBAAM,EAAKtkB,MAAMimB,cAAcU,W,0BAKrC,SAAajC,GAAO,WACZwB,EAAe1nB,OAAOwgB,QAAQ,kBAEpC,GADA0F,EAAMzF,iBACFiH,EAAc,CAChB,IAAQS,EAAS/pB,KAAKqD,MAAd0mB,KACR/pB,KAAK+kB,oBAAoBsB,OAAO0D,EAAK5oB,IAAI8N,MAAK,SAAAiZ,GAC5C,EAAK9kB,MAAMyoB,WAAW9B,S,oBAM5B,WAAS,WACCA,EAAS/pB,KAAKqD,MAAd0mB,KAER,OACE,gCACG,KACC/pB,KAAKoD,MAAMqkB,OACX,gBAAC,MAAD,CACE9c,MAAO,CAAE8G,MAAO,QAChBjK,QAAS,SAAAhE,GAAC,OAAI,EAAKwC,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAakZ,MAAOlZ,EAAEkZ,aAEjD1nB,KAAKoD,MAAMqkB,OAASsC,EAAKvpB,MAG/B,gBAAC,MAAD,CAAUgpB,OAAQxpB,KAAKqD,MAAMqkB,MAC3B,gBAAC,MAAD,CAAcF,UAAQ,GACpB,wBAAMa,SAAUroB,KAAKqrB,YACnB,gBAAC,MAAD,CAAW5jB,MAAM,mBACf,gBAAC,MAAD,CACE6gB,UAAQ,EACR9nB,KAAK,OACLW,GAAG,aACHkJ,YAAY,kBACZke,aAAcwB,EAAKvpB,KACnBwJ,SAAUhK,KAAKqlB,cAGnB,gBAAC,MAAD,CAAW5d,MAAM,SAASwhB,QAAQ,GAChC,gBAAC,KAAD,CACEzZ,cAAe,SAACnE,EAAOnB,GAAR,OACbA,EAAKzC,MAAMhB,QAAQ4E,IAAU,GAE/B6d,WACEW,GAAcviB,QAAO,SAAA4C,GAAI,OAAIA,EAAKpD,OAASijB,EAAKO,UAAQ,GAE1D1a,aAAc,SAAA1F,GAAI,OAChB,gBAAC,MAAD,CACE2C,KAAM3C,EAAKzC,MACXD,QAAS,SAAAhE,GAAC,OAAI,EAAKokB,SAASpkB,EAAG0G,OAGnC8D,MAAO6b,GACPna,UAAW,gBAAC,MAAD,CAAUC,UAAU,EAAM9C,KAAK,iBAE1C,gBAAC,MAAD,CACEA,KACEgd,GAAcviB,QAAO,SAAA4C,GAAI,OAAIA,EAAKpD,OAASijB,EAAKO,UAAQ,GACrD7iB,MAEL0hB,UAAU,4BAIhB,gBAAC,MAAD,CAAW1hB,MAAM,OAAOwhB,QAAQ,GAC9B,gBAAC,MAAD,CAAcrc,MAAM,EAAM4a,UAAU,GAClC,gBAAC,MAAD,CACE7c,MAAO,CACL8G,MAAO,SAET3K,MAAOijB,EAAKS,KACZngB,YAAY,aACZue,IAAK,EACLC,IAAK,IACLC,SAAU,GACV2C,cAAezrB,KAAK8qB,aAEtB,gBAAC,MAAD,CACE9gB,SAAUhK,KAAK6qB,WACf1gB,QAAS6f,GACT0B,eAAgB3B,EAAKW,SACrB5jB,MAAOijB,EAAKW,aAIlB,gBAAC,MAAD,CAAWjjB,MAAM,SAASwhB,QAAQ,GAChC,gBAAC,MAAD,CAAcrc,MAAM,EAAM4a,UAAU,GAClC,gBAAC,MAAD,CACExd,SAAUhK,KAAK+qB,aACf5gB,QAAS8f,GACTyB,eAAgB3B,EAAKY,OACrB7jB,MAAOijB,EAAKY,WAIlB,gBAAC,MAAD,CAAWljB,MAAM,YAAYwhB,QAAQ,GACnC,gBAAC,MAAD,CAAcrc,MAAM,EAAM4a,UAAU,GAClC,gBAAC,MAAD,CACExd,SAAUhK,KAAKgrB,gBACf7gB,QAAS+f,GACTwB,eAAgB3B,EAAKa,UACrB9jB,MAAOijB,EAAKa,cAIlB,gBAAC,MAAD,CAAWnjB,MAAM,QAAQwhB,QAAQ,GAC/B,gBAAC,MAAD,CAAcrc,MAAM,EAAM4a,UAAU,GAClC,gBAAC,MAAD,CACExd,SAAUhK,KAAKirB,YACf9gB,QAASggB,GACTuB,eAAgB3B,EAAKpf,MACrB7D,MAAOijB,EAAKpf,UAIlB,gBAAC,MAAD,CAAWlD,MAAM,aAAawhB,QAAQ,GACpC,gBAAC,MAAD,CAAcrc,MAAM,EAAM4a,UAAU,GAClC,gBAAC,MAAD,CACExd,SAAUhK,KAAKkrB,iBACf/gB,QAASigB,GACTsB,eAAgB3B,EAAKM,WACrBvjB,MAAOijB,EAAKM,eAIlB,gBAAC,MAAD,CAAW5iB,MAAM,cAAcwhB,QAAQ,GACrC,gBAAC,MAAD,CAAcrc,MAAM,EAAM4a,UAAU,GAClC,gBAAC,MAAD,CACE7c,MAAO,CACL8G,MAAO,SAET3K,MAAOijB,EAAKQ,WACZlgB,YAAY,oBACZye,SAAU,GACVF,IAAK,GACLC,IAAK,GACL4C,cAAezrB,KAAKmrB,qBAI1B,gBAAC,MAAD,CAAW1jB,MAAM,iBAAiBwhB,QAAQ,GACxC,gBAAC,MAAD,CAAcrc,MAAM,EAAM4a,UAAU,GAClC,gBAAC,MAAD,CACE7c,MAAO,CACL8G,MAAO,SAET3K,MAAOijB,EAAKU,QACZpgB,YAAY,uBACZye,SAAU,GACVF,KAAM,EACNC,IAAK,GACL4C,cAAezrB,KAAKorB,kBAI1B,gBAAC,MAAD,KACE,gBAAC,MAAD,CAAQ3qB,KAAK,SAASkK,MAAO,CAAE8G,MAAO,SAAtC,SAIF,gBAAC,MAAD,KACE,gBAAC,MAAD,CACEzE,OAAO,SACPxF,QAASxH,KAAK2rB,aACdhhB,MAAO,CAAE8G,MAAO,SAHlB,mB,GArRarN,a,ykBC7H7B,IAAMyf,GAAQR,UAAH,mIAkBLyI,G,wcACJ,WAAY1oB,GAAO,6BACjB,cAAMA,IACDC,MAAQ,CACXuR,KAAK,EACLmX,MAAO3oB,EAAM2oB,OAEf,EAAKvG,QAAU,EAAKA,QAAQjiB,MAAb,WACf,EAAKke,WAAa,EAAKA,WAAWle,MAAhB,WAClB,EAAK8nB,WAAa,EAAKA,WAAW9nB,MAAhB,WAClB,EAAK8lB,cAAgB,EAAKA,cAAc9lB,MAAnB,WATJ,E,gDAiBnB,SAAkB2d,EAAU0D,EAAMmF,GAAM,WACtC5kB,QAAQC,IAAI8b,GACRvK,MAAM9P,QAAQqa,GAChBA,WAAU9a,SAIR,SAAA2f,GACoBhO,QAAQgO,EAAaC,UAAUpB,KAE/CmB,EAAaE,iBAAiBrB,EAAMmF,GAEtC,EAAK3E,kBAAkBW,EAAcnB,EAAMmF,MAG1C/pB,KAAKkmB,gBAAgBhF,EAAU0D,EAAMmF,K,6BAQ9C,SAAgB7I,EAAU0D,EAAMmF,GAAM,aAChC7I,EAAS8E,UAAUpB,IACrB1D,EAAS+E,iBAAiBrB,EAAMmF,GAElC,UAAA7I,EAASlgB,gBAAT,SAAmBoF,SAIjB,SAAA+J,GACMA,EAAM6V,UAAUpB,IAClBzU,EAAM8V,iBAAiBrB,EAAMmF,GAG/B5Z,EAAMnP,SAASC,OAAS,GACtB,EAAKmkB,kBAAkBjV,EAAMnP,SAAU4jB,EAAMmF,Q,qBAKrD,SAAQvmB,GAAG,WACTxD,KAAKgG,UACH,SAAAwI,GAAC,MAAK,CAAEoG,KAAMpG,EAAEoG,QAChB,WACEzP,QAAQC,IAAI,EAAK/B,MAAMuR,U,wBAK7B,SAAWzT,GAAI,WAEb,GADgBS,OAAOwgB,QAAQ,kBAClB,CACX,IAAIsD,EAAUxf,EAAEoN,UAAUtT,KAAKqD,MAAMqiB,QAAS,IAC9CA,EAAUA,EAAQpe,QAAO,SAAA4C,GAAI,OAAIA,EAAK/I,KAAOA,KAC7CnB,KAAKgG,UACH,SAAAwI,GAAC,gBAAUA,GAAV,IAAakX,QAASA,OACvB,kBAAM,EAAKtiB,MAAMsmB,UAAUhE,MAE7B1lB,KAAK+kB,oBAAoBsB,OAAOllB,M,2BAOpC,SAAcwkB,GAAQ,YACpBpS,UACGlH,iBACArL,SAASoF,SAAQ,SAAA+J,GAChB,EAAKiV,kBAAkBjV,EAAOwV,EAAOf,KAAMe,Q,wBAQjD,WACE3lB,KAAKgG,UAAS,SAAAwI,GAAC,gBAAUA,GAAV,IAAaoG,KAAK,S,oBAGnC,WAAS,WACP,OACE,gBAAC,GAAD,KACE,gBAAC,MAAD,CAAU4U,OAAQxpB,KAAKqD,MAAMuR,KAC3B,gBAAC,GAAD,CACE0W,QAAStrB,KAAKoD,MAAMkoB,QACpBC,gBAAiBvrB,KAAKqrB,WACtB5D,OAAO,MAGTznB,KAAKqD,MAAMuR,MACV5U,KAAKoD,MAAM2oB,MAAM9qB,OAAS,EACzBjB,KAAKoD,MAAM2oB,MAAMrnB,KAAI,SAACwF,EAAMrB,GAAP,OACnB,uBAAKjE,IAAKiE,EAAO8B,MAAO,CAAE2b,aAAc,SACtC,gBAAC,GAAD,CACEyD,KAAM7f,EACN0hB,SAAU,EAAKxoB,MAAMwoB,SACrBC,WAAY,EAAKzoB,MAAMyoB,WACvBN,gBAAiB,EAAKF,WACtBhC,cAAe,EAAKA,oBAK1B,+CAEJ,gBAAC,MAAD,MACA,gBAAC,MAAD,CAAQ1e,MAAO,CAAE8G,MAAO,QAAUjK,QAASxH,KAAKwlB,SAC5CxlB,KAAKqD,MAAMuR,IAAmB,SAAb,iB,GAjIHxQ,aAuI1B,IAAeyD,cAjJS,SAAAxE,GAAK,MAAK,CAChC0oB,MAAO1oB,EAAM0jB,aAAagF,OAAS,OAGV,SAAApmB,GAAQ,MAAK,CACtC2lB,QAAS,SAAAvB,GAAI,OAAIpkB,GAASqmB,SAAcjC,KACxC6B,SAAU,SAAA7B,GAAI,OAAIpkB,GAASsmB,SAAelC,KAC1C8B,WAAY,SAAA9B,GAAI,OAAIpkB,GAASumB,SAAiBnC,QA0IhD,CAA4D+B,I,ICvKrDK,G,6HAAAA,G,uGAKP,IAAMC,GAAoC,CACxC,SAEIC,G,wcACJ,WAAYjpB,GAAO,6BACjB,cAAMA,IACDC,MAAQ,CACXipB,UAAU,GAEZ,EAAKC,aAAe,EAAKA,aAAahpB,MAAlB,WALH,E,2CAOnB,SAAaC,IACXrB,UAAYvC,QAAQ8C,iBAAiB6pB,iB,uBAEvC,WACEvsB,KAAKoD,MAAMopB,sB,oBAGb,WAAS,WACHC,EAAgB,wCACpB,OAAQzsB,KAAKoD,MAAMspB,gBACjB,KAAKxqB,2BAEDuqB,GAAiB,iBAEnB,MACF,KAAKvqB,+BAEDuqB,GAAiB,eAIvB,IAAIE,GAAyB,EAK7B,OAJG3sB,KAAKoD,MAAMsQ,aAAakZ,eACnBR,GAAkC3lB,QAAQzG,KAAKoD,MAAMsQ,aAAakZ,gBAAkB,IAC1FD,GAAyB,GAGzB,uBAAK7oB,UAAW,yBAA2B6oB,EAAyB,GAAK,yBACvE,0BAAQ7oB,UAAW2oB,EAAejlB,QAASxH,KAAKusB,cAAhD,UAGCI,GAA0B,0BAAQnlB,QAAS,kBAAM,EAAKqlB,aAAa/oB,UAAU,gBAC5E,gBAACqoB,GAAD,CAASroB,UAAU,e,GAxCFM,aAqD3B,IAAeyD,cANf,SAAyBxE,GACvB,MAAO,CACLqpB,eAAgBrpB,EAAMqpB,eAAeI,OACrCpZ,aAAcrQ,EAAMqQ,gBAGxB,CAAwC2Y,I,ylBC3DjCU,G,k8CAAAA,G,6GAODC,G,0cACJ,WAAY5pB,GAAO,6BACjB,cAAMA,IAiJR6pB,UAAY,WAEV,IAAIC,ECzJ0BC,EAAKC,EACjCC,ED8JF,GALA,EAAKhqB,MAAMiqB,OAAOlnB,SAAQ,SAAA8D,GACpBA,EAAK1J,OAAS,EAAK6C,MAAMkqB,gBAC3BL,EAAQhjB,OAGPgjB,EACH,+BAAyB,EAAK7pB,MAAMkqB,cAApC,yCAAkF,EAAKlqB,MAAMwN,UAA7F,MAEgB,QAAfqc,EAAMzsB,KACU,IAAIuI,UAAS,CAACC,MAAOikB,EAAMC,MACnCK,YAAYve,MAAK,SAAAwe,GAGxBA,GADAA,GADAA,EAASA,EAAO/mB,QAAQ,mBAAoB,KAC5BA,QAAQ,eAAgB,KACxBA,QAAQ,kBAAmB,IAC3C,EAAKtD,MAAMsqB,SAAX,SAAwBR,GAAxB,IAA+BO,YAC/B,EAAKrqB,MAAMuC,UAASgoB,gBCzKMR,ED4KlBD,EAAMC,IC5KiBC,ED4KZ,SAACQ,GACpB,EAAKxqB,MAAMsqB,SAAX,SAAwBR,GAAxB,IAA+BU,aAC/B,EAAKxqB,MAAMuC,UAASgoB,cC7KtBN,EAAM,IAAIQ,gBACVC,OAAS,WACX,IAAIC,EAAS,IAAIC,WACjBD,EAAOE,UAAY,WACjBb,EAASW,EAAO9V,SAElB8V,EAAOG,cAAcb,EAAInZ,WAE3BmZ,EAAItoB,KAAK,MAAOooB,GAChBE,EAAIc,aAAe,OACnBd,EAAIpF,SDJF,EAAKmG,SAAW,EAAKA,SAAS7qB,MAAd,WAChB,EAAK8qB,cAAgB,EAAKA,cAAc9qB,MAAnB,WACrB,EAAK+qB,YAAc,EAAKA,YAAY/qB,MAAjB,WACnB,EAAKgrB,YAAc,EAAKA,YAAYhrB,MAAjB,WACnB,EAAKF,MAAQ,CAEXwN,UAAW,QACX2d,KAAM,CAKJ,CACEhuB,KAAM,QACND,MAAO,iBAET,CACEC,KAAM,QACND,MAAO,iBAET,CACEC,KAAM,QACND,MAAO,kBAGXkuB,UAAW,GACXnB,OAAQ,EAAKoB,UAAU,SAEvBnB,cAAe,KACfoB,YAAa,GACbC,YAAa,IAEf,EAAKC,cAAgB,IAAI7lB,UAAS,CAAEC,MAAO,iCAC3C,EAAK6lB,YAAc,IAAI9lB,UAAS,CAAEC,MAAO,+BACzC,EAAK8lB,cAAgB,IAAI/lB,UAAS,CAAEC,MAAO,iCApC1B,E,iDAuCnB,SAAmBK,EAAW0lB,GAAa,WACzC,GAAGhvB,KAAKoD,MAAMorB,MAAQllB,EAAUklB,OAASxuB,KAAKoD,MAAMorB,KAAM,CACxD,IACI3d,EADA2d,GAAO,OAAIxuB,KAAKqD,MAAMmrB,MAE1BA,EAAOA,EAAKlnB,QAAO,SAAAgG,GAIjB,OAH0C,IAAvC,EAAKlK,MAAMorB,KAAK/nB,QAAQ6G,EAAI9M,OAAkBqQ,IAC/CA,EAAYvD,EAAI9M,OAE4B,IAAvC,EAAK4C,MAAMorB,KAAK/nB,QAAQ6G,EAAI9M,SAEhCqQ,IACHA,EAAY,SAEd7Q,KAAKgG,UAAS,SAAA3C,GAAK,gBAAOA,GAAP,IAAcmrB,OAAM3d,iBAAc,WAAK,EAAKU,aAAaV,S,oDAIhF,6GAEI7Q,KAAK+uB,cAAcpb,SAChB1E,MAAK,SAAA2f,GAAW,OAAI,EAAK5oB,SAAS,CAAE4oB,mBAH3C,SAKuB5uB,KAAK8uB,YAAYnb,SALxC,cAKQsb,EALR,OAMIjvB,KAAKgG,UAAS,SAAA3C,GACZ,gBAAYA,GAAZ,IAAmBorB,UAAWQ,OAPpC,SAUyBjvB,KAAK6uB,cAAclb,SAV5C,OAUQub,EAVR,OAWIlvB,KAAKgG,UAAS,SAAA3C,GAKZ,MAHwB,WADxBA,EAAQ,SAAKA,GAAR,IAAesrB,YAAaO,KACvBre,YACRxN,EAAMiqB,OAAS4B,GAEV7rB,KAhBb,kDAmBI8B,QAAQC,IAAI,QAAZ,MAnBJ,QAsBE+pB,SAASC,iBAAiB,WAAW,SAACtH,GAClB,WAAdA,EAAMljB,KACN,EAAKypB,mBAxBb,0D,oEA4BA,SAAU/gB,GAKR,OAJMA,IACJA,EAAMtN,KAAKqD,MAAMwN,WAGXvD,GACN,IAAK,QACH,OAAOtN,KAAKqD,MAAMorB,UAGpB,IAAK,QACH,OAAOzuB,KAAKqD,MAAQrD,KAAKqD,MAAMsrB,YAAc,GAGjD,MAAO,K,yBAGT,SAAYnrB,GACV,IAAI+pB,EAAgB/pB,EAAE6rB,cAAcC,QAAQC,UAC5CvvB,KAAKgG,UAAS,SAAA3C,GACZ,gBAAYA,GAAZ,IAAmBkqB,uB,sBAIvB,SAAS/pB,GACPxD,KAAKuR,aAAa/N,EAAEsH,OAAOwkB,QAAQhiB,O,0BAGrC,SAAaA,GAAK,WAChBtN,KAAKgG,UAAS,SAAA3C,GACZ,gBAAYA,GAAZ,IAAmBwN,UAAWvD,EAAKggB,OAAQ,EAAKoB,UAAUphB,U,2BAI9D,WACEtN,KAAKgG,UAAS,SAAA3C,GACZ,gBAAYA,GAAZ,IAAmBkqB,cAAe,UAEpCvtB,KAAKoD,MAAMuC,UAASgoB,c,yBAGtB,WAAc,IACRT,EADQ,OAOZ,GALAltB,KAAKqD,MAAMiqB,OAAOlnB,SAAQ,SAAA8D,GACpBA,EAAK1J,OAAS,EAAK6C,MAAMkqB,gBAC3BL,EAAQhjB,OAGPgjB,EACH,+BAAyBltB,KAAKqD,MAAMkqB,cAApC,yCAAkFvtB,KAAKqD,MAAMwN,UAA7F,MAEF7Q,KAAKoD,MAAMsqB,SAASR,GACpBltB,KAAKgG,UAAS,SAAA3C,GACZ,gBAAYA,GAAZ,IAAmBkqB,cAAe,UAEpCvtB,KAAKoD,MAAMuC,UAASgoB,c,oBAmCtB,WAAS,WACP,EAAmC3tB,KAAKqD,MAAhCurB,EAAR,EAAQA,YAAa/d,EAArB,EAAqBA,UACb2e,EAAexvB,KAAKoD,MAApBosB,UACJ5lB,EAAU,iBACV5J,KAAKoD,MAAM+J,SACbvD,GAAW,0BAEb,IAAI6iB,EAAgB,MAMpB,OALKzsB,KAAKqD,MAAMkqB,cAGdd,GAAiB,eAFjBA,GAAiB,gBAIdzsB,KAAKoD,MAAM+J,OAId,uBAAKrJ,UAAW8F,GACd,uBAAK9F,UAAU,qBAAqB0D,QAASxH,KAAKquB,gBAClD,uBAAKvqB,UAAU,0BACb,uBAAKA,UAAU,sBACb,uBAAKA,UAAU,WAAf,gBACA,0BAAQA,UAAU,qCAAqC0D,QAASxH,KAAKquB,eACnE,gBAACtB,GAAD,CAAOjpB,UAAU,UAEnB,uBAAKA,UAAU,sBACZ9D,KAAKqD,MAAMmrB,KAAK9pB,KAAI,SAAA4I,GACnB,IAAImiB,EAAa,sBAIjB,OAHI,EAAKpsB,MAAMwN,YAAcvD,EAAI9M,OAC/BivB,GAAc,+BAGd,0BACE3rB,UAAW2rB,EACXjoB,QAAS,EAAK4mB,SACdxpB,IAAK0I,EAAI9M,KACT,WAAU8M,EAAI9M,MAEb8M,EAAI/M,YAMdP,KAAKqD,MAAMiqB,OAAOrsB,OACjB,uBAAK6C,UAAU,+BACZ9D,KAAKqD,MAAMiqB,OAAO5oB,KAAI,SAAAwoB,GACrB,IAAIwC,EACA9lB,EAAU,eACV+lB,EAAa,CACf7rB,UAAW,yBA4Bb,MA1B6B,UAAzB,EAAKT,MAAMwN,YACVqc,EAAM0C,cACPF,EAAexC,EAAM0C,eAErBF,EAAe,MACfxC,EAAM1sB,KAAO0sB,EAAM2C,SACnBF,EAAW/d,IAAMsb,EAAMC,KAGzBvjB,GAAW,qBAGX+lB,EAAWle,MAAQ,KACnBke,EAAWzrB,OAAS,MAEO,UAAzB,EAAKb,MAAMwN,YACb6e,EAAe,MACfC,EAAW/d,IAAMsb,EAAMC,IACvBvjB,GAAW,sBACXsjB,EAAM1sB,KAAO0sB,EAAM2C,SACnB3C,EAAM4C,UAAY,SAEpB5C,EAAM4C,UAAY,EAAKzsB,MAAMwN,UACzB,EAAKxN,MAAMkqB,gBAAkBL,EAAM1sB,OACrCoJ,GAAW,0BAGX,uBACE9F,UAAW8F,EACX,iBAAgBsjB,EAAM1sB,KACtBoE,IAAKsoB,EAAM1sB,KACXgH,QAAS,EAAK8mB,aAEd,gBAACoB,EAAiBC,QAM1B,GAEa,UAAd9e,GAAyB,uBAAK/M,UAAU,+BACtC8qB,EAAYlqB,KAAI,SAAAqrB,GAAK,OAAI,uBAAKjsB,UAAU,+BAA+B0D,QAAS,EAAK8mB,aACpF,uBAAK7c,MAAM,KAAKvN,OAAO,KAAK0I,KAAK,OAAOojB,MAAM,6BAA6BlsB,UAAU,yBACnF,wBAAMgU,EAAE,qKAAqKlL,KAAK,YAAiB,wBAAMkL,EAAE,8BAA8BlL,KAAK,YAAiB,wBAAMkL,EAAE,wFAAwFlL,KAAK,YAAiB,wBAAMkL,EAAE,kfAAkflL,KAAK,SAAc,wBAAMkL,EAAE,mPAAmPlL,KAAK,YAAiB,wBAAMkL,EAAE,0NAA0NlL,KAAK,kBAIh4C,uBAAK9I,UAAU,yBACb,0BAAQA,UAAW2oB,EAAejlB,QAASxH,KAAKuuB,aAAhD,UAGCiB,GAAa,0BAAQ1rB,UAAW2oB,EAAgB,QAASjlB,QAASxH,KAAKitB,WAA1D,iBA1FZ,O,GA7Lc7oB,aAqS5B,IAAeyD,cANf,SAAyBxE,GACvB,aACKA,EAAM4sB,yBAIb,CAAwCjD,I,uCExSlCkD,G,wcACJ,WAAY9sB,GAAO,6BACjB,cAAMA,IACDC,MAAQ,CACX8sB,QAASjuB,kBACT6C,MAAM,GAJS,E,yCAOnB,WACE/E,KAAKgG,SAAS,CACZjB,MAAO/E,KAAKqD,MAAM0B,S,8BAGtB,SAAiBqrB,GACfpwB,KAAKoD,MAAMitB,iBAAiBD,GAC5BpwB,KAAKgG,SAAS,CACZjB,MAAO/E,KAAKqD,MAAM0B,S,oBAGtB,WAAS,WACP,OACE,uBAAKjB,UAAU,6BACb,wBAAMA,UAAW,4BAA8B9D,KAAKqD,MAAM0B,KAAO,gCAAkC,IAAKyC,QAAS,kBAAM,EAAK8oB,gBAAezd,UAAeC,WAAW9S,KAAKoD,MAAMsO,cAAczE,OAC9L,uBAAKnJ,UAAW,8BAAgC9D,KAAKqD,MAAM0B,KAAO,iCAAmC,KAEjG/E,KAAKqD,MAAM8sB,QAAQzrB,KAAI,SAAA0rB,GACrB,OAAO,0BACLtsB,UAAW,oCAAsC,EAAKV,MAAMsO,cAAcvQ,KAAOivB,EAAOjvB,GAAK,0CAA4C,IACzIqG,QAAS,kBAAM,EAAK6oB,iBAAiBD,IACrC7vB,MAAO6vB,EAAO5vB,KACdoE,IAAKwrB,EAAOjvB,KACX0R,UAAeC,WAAWsd,EAAOnjB,gB,GA/BjB7I,aAgDjC,IAAeyD,cANf,SAAyBxE,GACvB,MAAO,CACLqO,cAAerO,EAAMqO,iBAIe,CAAE2e,uBAA1C,CAA8DH,ICrD9D,gC,IAwBA,G,wcApBE,WAAY9sB,GAAO,kCACXA,G,qCAER,WACE,OACE,uBAAKU,UAAW,sBAAwB9D,KAAKoD,MAAM+J,OAAS,2BAA6B,KACvF,uBAAKrJ,UAAU,qBAEX+O,qBAAeC,WAAW9S,KAAKoD,MAAMkK,IAAIL,OAG7C,uBAAKnJ,UAAU,sBACb,uBAAKA,UAAU,oBAAoB9D,KAAKoD,MAAMkK,IAAI/M,OAClD,uBAAKuD,UAAU,0BAA0B9D,KAAKoD,MAAMkK,IAAIijB,Y,GAd1CnsB,a,ykBCHxB,gC,IAOqBosB,G,4cACnB,WAAYptB,GAAO,6BACjB,cAAMA,IAqGRqtB,uBAAyB,SAACjtB,EAAGktB,GAC3B,IAAI5pB,EAAQZ,EAAEoN,UAAU,EAAKjQ,MAAMyD,OACnCA,EAAMV,SAAQ,SAAAuqB,GACRA,EAAExvB,KAAOuvB,IACXC,EAAEC,YAAcptB,EAAEsD,MAClB6pB,EAAEE,WAAa,OAGnB,EAAK7qB,UAAS,SAAA3C,GAAK,gBACdA,GADc,IAEjByD,cAhHe,EAwHnBgqB,gBAAkB,SAACC,EAAKL,GACtB,IAAI5pB,EAAQZ,EAAEoN,UAAU,EAAKjQ,MAAMyD,OACnCA,EAAMV,SAAQ,SAAAuqB,GACRA,EAAExvB,KAAOuvB,GAAuB,OAARK,IAC1BJ,EAAEE,WAAaE,EAAIrsB,KAAI,SAAAvD,GAAE,OAAIA,EAAG2F,UAE9B6pB,EAAExvB,KAAOuvB,GAAuB,OAARK,IAC1BJ,EAAEE,WAAa,OAGnB,EAAK7qB,UAAS,SAAA3C,GAAK,gBACdA,GADc,IAEjByD,cApIe,EA4InBkqB,0BAA4B,SAACxtB,EAAGktB,GAC9B,IAAI5pB,EAAQZ,EAAEoN,UAAU,EAAKjQ,MAAMyD,OACnCA,EAAMV,SAAQ,SAAAuqB,GACRA,EAAExvB,KAAOuvB,IACXC,EAAEM,eAAiBztB,EAAEsD,UAGzB,EAAKd,UAAS,SAAA3C,GAAK,gBACdA,GADc,IAEjByD,cAnJF,EAAKzD,MAAQ,CACXyD,MAAO,GACPoqB,aAAc,UACdC,YAAa,GACbC,YAAa,GACbC,eAAgB,IAElB,EAAKtoB,SAAW,IAAIC,UAAS,CAC3BC,MAAO,yBAAF,QAA2BqoB,UAA3B,iBAVU,E,qEAcnB,wGACyBtxB,KAAK+I,SAAS4K,SADvC,cACM1N,EADN,gBAE0B,IAAI+C,UAAS,CACnCC,MAAO,8BACN0K,SAJL,cAEMyd,EAFN,gBAK6B,IAAIpoB,UAAS,CACtCC,MAAO,gCACN0K,SAPL,OAKM0d,EALN,OAQErxB,KAAKgG,SAAS,CACZc,MAAOb,EAAW5F,MAAQ,GAC1B+wB,cACAC,mBAXJ,iD,gGAqBA,uGAAuBE,EAAvB,yCACkB,IAAIvoB,UAAS,CAC3BC,MAAO,yBAAF,QAA2BqoB,UAA3B,iBACJtM,IAAI,GAAI,CAAE3kB,KAAML,KAAKqD,MAAMyD,QAHhC,cAIMyqB,IACFpvB,UAAYqqB,oBALhB,gD,uEASA,WACE,IAAIgF,EAAetc,KAAKC,MAAM,EAAI,IAAAD,KAAKuc,UACnC3qB,EAAQZ,EAAEoN,UAAUtT,KAAKqD,MAAMyD,OACnCA,EAAM1F,KAAK,CACTwvB,YAAa,WACbC,WAAY,GACZ1vB,GAAIqwB,EACJP,eAAgB,YAElBjxB,KAAKgG,UAAS,SAAA3C,GAAK,gBACdA,GADc,IAEjByD,aAEF9G,KAAK0xB,gB,6BAGP,SAAgBvwB,GACd,IAAIwwB,EAAe3xB,KAAKqD,MAAMyD,MAAMQ,QAAO,SAAAjH,GAAI,OAAIA,EAAKc,KAAOA,KAC/DnB,KAAKgG,SAAS,CACZc,MAAO6qB,M,0BAIX,SAAanuB,EAAGqa,GACd,GAAgB,YAAZra,EAAEsD,MAKC,GAAgB,YAAZtD,EAAEsD,OAMb,GAAgC,YAA5B9G,KAAKqD,MAAM6tB,aAA4B,CACzC,IAAI7wB,GAAO,OAAIL,KAAKqD,MAAMyD,OACtB+B,EAAQxI,EAAKiL,WAAU,SAAAsK,GAAG,OAAIA,EAAIzU,KAAO0c,EAAK1c,MAClDd,EAAKwI,GAAO+oB,QAAQ,GAApB,SAA8BvxB,EAAKwI,GAAO+oB,QAAQ,IAAlD,cAAuDpuB,EAAEhD,KAAOgD,EAAEsD,QAClEzG,EAAKwI,GAAOgpB,QAAU,GACtB7xB,KAAKgG,SAAS,CACZc,MAAOzG,SAEJ,GAAgC,YAA5BL,KAAKqD,MAAM6tB,aAA4B,CAChD,IAAI7wB,GAAO,OAAIL,KAAKqD,MAAMyD,OACtB+B,EAAQxI,EAAKiL,WAAU,SAAAsK,GAAG,OAAIA,EAAIzU,KAAO0c,EAAK1c,MAClDd,EAAKwI,GAAOgpB,QAAQ,GAApB,SAA8BxxB,EAAKwI,GAAOgpB,QAAQ,IAAlD,cAAuDruB,EAAEhD,KAAOgD,EAAEsD,QAClEzG,EAAKwI,GAAO+oB,QAAU,GACtB5xB,KAAKgG,SAAS,CACZc,MAAOzG,UAnBTL,KAAKgG,SAAS,CACZkrB,aAAc1tB,EAAEsD,aANlB9G,KAAKgG,SAAS,CACZkrB,aAAc1tB,EAAEsD,U,0BAkFtB,SAAatD,M,oBAEb,WAAS,WACDsuB,EAAgB,CACpB,CAAEtxB,KAAM,aAAcsG,MAAO,UAAWW,MAAO,WAC/C,CAAEjH,KAAM,aAAcsG,MAAO,UAAWW,MAAO,YAE3CsqB,EAAe,CACnB,CAAEvxB,KAAM,OAAQsG,MAAO,WAAYW,MAAO,YAC1C,CAAEjH,KAAM,OAAQsG,MAAO,OAAQW,MAAO,QACtC,CAAEjH,KAAM,OAAQsG,MAAO,SAAUW,MAAO,UACxC,CAAEjH,KAAM,OAAQsG,MAAO,MAAOW,MAAO,SAKvC,OACE,uBAAK3D,UAAU,uBACb,uBAAKA,UAAU,0BACZ+O,qBAAeC,WAAW,mBAE7B,uBAAKhP,UAAU,yBAAf,+CAGA,uBAAKA,UAAU,wBAAf,sFAGE,2BAHF,+EAOA,uBAAKA,UAAU,iCACb,uBAAKA,UAAU,yBACZ9D,KAAKqD,MAAMyD,MAAMpC,KAAI,SAAAmZ,GACpB,OACE,uBAAK/Z,UAAU,uBAAuBc,IAAKiZ,EAAK1c,IAC9C,gBAAC0J,EAAA,EAAD,CACEb,SAAU,SAAAxG,GAAC,OAAI,EAAKwtB,0BAA0BxtB,EAAGqa,EAAK1c,KACtD2C,UAAU,0BACVqG,QAAS2nB,EACThrB,MACEZ,EAAE+D,KACA6nB,GACA,SAAA1Y,GAAC,OAAIA,EAAEtS,QAAU+W,EAAKoT,mBACnBa,EAAc,KAGvB,gBAACjnB,EAAA,EAAD,CACEb,SAAU,SAAAlD,GAAK,OACb,EAAK2pB,uBAAuB3pB,EAAO+W,EAAK1c,KAE1C2C,UAAU,0BACVqG,QAAS4nB,EACTjrB,MACEZ,EAAE+D,KAAK8nB,GAAc,SAAA3Y,GAAC,OAAIA,EAAEtS,QAAU+W,EAAK+S,gBAC3CmB,EAAa,KAyBK,SAArBlU,EAAK+S,aACJ,gBAAC/lB,EAAA,EAAD,CAEE/D,MAAOZ,EAAEoB,OACP,EAAKjE,MAAM+tB,aACX,SAAA/X,GAAC,OACCwE,EAAKgT,YACLhT,EAAKgT,WAAWpqB,QAAQ4S,EAAEvS,QAAU,KAExCkD,SAAU,SAAAxG,GAAC,OAAI,EAAKstB,gBAAgBttB,EAAGqa,EAAK1c,KAC5C6wB,SAAS,EACTC,mBAAmB,EACnB5nB,YAAY,eACZF,QAAS,EAAK9G,MAAM+tB,YACpBttB,UAAU,4BAIQ,WAArB+Z,EAAK+S,aACJ,gBAAC/lB,EAAA,EAAD,CAEE/D,MAAOZ,EAAEoB,OACP,EAAKjE,MAAMguB,gBACX,SAAAhY,GAAC,OACCwE,EAAKgT,YACLhT,EAAKgT,WAAWpqB,QAAQ4S,EAAEvS,QAAU,KAExCkD,SAAU,SAAAxG,GAAC,OAAI,EAAKstB,gBAAgBttB,EAAGqa,EAAK1c,KAC5C6wB,SAAS,EACTC,mBAAmB,EACnB5nB,YAAY,eACZF,QAAS,EAAK9G,MAAMguB,eACpBvtB,UAAU,4BAGd,0BACE0D,QAAS,kBAAM,EAAK0qB,gBAAgBrU,EAAK1c,KACzC2C,UAAU,8BAFZ,WAWV,uBAAKA,UAAU,kCACb,0BACE0D,QAAS,kBAAM,EAAK2qB,gBACpBruB,UAAU,0BAFZ,kBAOF,uBAAKA,UAAU,gBACb,0BACE0D,QAAS,kBAAM,EAAK4qB,kBAAiB,IACrCtuB,UAAU,mCAFZ,gBAMA,0BACE0D,QAAS,kBAAM,EAAK4qB,oBACpBtuB,UAAU,mCAFZ,c,GAtSuCM,a,ykBCPjD,gC,IAKqBiuB,G,4cACnB,WAAYjvB,GAAO,6BACjB,cAAMA,IACDC,MAAQ,CACXyD,MAAO,GACPwrB,QAAQ,EACRC,UAAU,EACVC,eAAe,EACfhrB,SAAS,EACTirB,iBAAiB,EACjBC,SAAS,GAEX,EAAK3pB,SAAW,IAAIC,UAAS,CAAEC,MAAO,yBAAF,QAA2BqoB,UAA3B,eAXnB,E,kEAcnB,yHACiFtxB,KAAKqD,MAAMyD,MAAlF6rB,EADV,EACUA,WAAYC,EADtB,EACsBA,SAAUF,EADhC,EACgCA,QAASG,EADzC,EACyCA,aAAcC,EADvD,EACuDA,UAAWC,EADlE,EACkEA,WADlE,EAEwE/yB,KAAKqD,MAAnEovB,EAFV,EAEUA,gBAAiBjrB,EAF3B,EAE2BA,QAAS8qB,EAFpC,EAEoCA,OAAQC,EAF5C,EAE4CA,SAAUC,EAFtD,EAEsDA,cAC9CnyB,EAAO,CACXsyB,WAAYF,GAAmBE,EAC/BC,SAAUprB,GAAWorB,EACrBF,UACAG,aAAcP,GAAUO,EACxBC,UAAWP,GAAYO,EACvBC,WAAYP,GAAiBO,GATjC,SAWkB/yB,KAAK+I,SAASic,IAAI,WAAY,CAAE3kB,SAXlD,OAWM4kB,EAXN,OAYE9f,QAAQC,IAAI6f,GAZd,gD,iGAkBA,oGACuBjlB,KAAK+I,SAASiC,IAAI,YADzC,OACMgoB,EADN,OAEEhzB,KAAKgG,SAAS,CACZc,MAAOksB,EAAS3yB,OAHpB,gD,2EAOA,SAAiBmD,GACO,cAAlBA,EAAEsH,OAAOtK,KAWgB,SAAlBgD,EAAEsH,OAAOtK,KAYpBR,KAAKgG,SAAS,CACZc,MAAO,SACF9G,KAAKqD,MAAMyD,OADX,cAEFtD,EAAEsH,OAAOtK,KAAOgD,EAAEsH,OAAOhE,UAd5B9G,KAAKgG,SAAS,CACZc,MAAO,SACF9G,KAAKqD,MAAMyD,OADX,IAEHgsB,UAAW,SACN9yB,KAAKqD,MAAMyD,MAAMgsB,WADb,IAEPtI,KAAMhnB,EAAEsH,OAAOhE,YAhBrB9G,KAAKgG,SAAS,CACZc,MAAO,SACF9G,KAAKqD,MAAMyD,OADX,IAEHgsB,UAAW,SACN9yB,KAAKqD,MAAMyD,MAAMgsB,WADb,IAEPG,UAAWzvB,EAAEsH,OAAOhE,c,yBAyB9B,SAAYtD,GACuB,MAAX,YAAlBA,EAAEsH,OAAOtK,MACXR,KAAKgG,UAAL,eACGxC,EAAEsH,OAAOtK,KAAOgD,EAAEsH,OAAOooB,UAD5B,0BAGOlzB,KAAKqD,MAAMyD,OAHlB,cAIKtD,EAAEsH,OAAOtK,KAAOgD,EAAEsH,OAAOooB,WAJ9B,IAQFlzB,KAAKgG,UAAL,UACGxC,EAAEsH,OAAOtK,KAAOgD,EAAEsH,OAAOooB,Y,oBAI9B,WAAS,WACP,OACE,uBAAKpvB,UAAU,gBACb,uBAAKA,UAAU,oBACb,uBAAKA,UAAU,0BAEX+O,qBAAeC,WAAW,cAG9B,uBAAKhP,UAAU,kBAAf,gBACA,uBAAKA,UAAU,4BACZ9D,KAAKqD,MAAMivB,QACV,uBAAKxuB,UAAU,0BACb,yBAAOqvB,QAAQ,mCAAf,eACA,uBAAKrvB,UAAU,kCACb,yBAAOA,UAAU,yBACf3C,GAAG,kCACH6I,SAAU,SAACxG,GAAD,OAAO,EAAK4vB,iBAAiB5vB,IAAI/C,KAAK,SAChDmoB,IAAI,IACJyK,KAAK,MACLvsB,MAAO9G,KAAKqD,MAAMwvB,aAClBryB,KAAK,oBAMf,uBAAKsD,UAAU,mCACb,uBAAKA,UAAU,iBACb,yBACErD,KAAK,WACLqD,UAAU,yBACVtD,KAAK,SACL0yB,QAASlzB,KAAKqD,MAAM7C,MACpBW,GAAG,eACH6I,SAAU,SAACxG,GAAD,OAAO,EAAK8vB,YAAY9vB,MAEpC,yBAAOM,UAAU,sBAAsBqvB,QAAQ,gBAC7C,wBAAMrvB,UAAU,wBAChB,wBAAMA,UAAU,6BAKxB,uBAAKA,UAAU,oBACb,uBAAKA,UAAU,0BAEX+O,qBAAeC,WAAW,cAG9B,uBAAKhP,UAAU,kBAAf,aACA,uBAAKA,UAAU,4BACZ9D,KAAKqD,MAAMkvB,UACV,uBAAKzuB,UAAU,0BACb,yBAAOqvB,QAAQ,sCAAf,aACA,uBAAKrvB,UAAU,kCACb,0BACEtD,KAAK,YACLwJ,SAAU,SAACxG,GAAD,OAAO,EAAK4vB,iBAAiB5vB,IACvCrC,GAAG,sCACH,0BAAQ2F,MAAM,QAAd,QACA,0BAAQA,MAAM,MAAd,UAMV,uBAAKhD,UAAU,4BAEX9D,KAAKqD,MAAMkvB,UACX,uBAAKzuB,UAAU,0BACb,yBAAOqvB,QAAQ,uCAAf,aACA,uBAAKrvB,UAAU,kCACb,yBAAOrD,KAAK,SACVmoB,IAAI,IACJC,IAAI,MACJ1nB,GAAG,sCACHX,KAAK,OACLwJ,SAAU,SAACxG,GAAD,OAAO,EAAK4vB,iBAAiB5vB,SAMjD,uBAAKM,UAAU,mCACb,uBAAKA,UAAU,iBACb,yBACErD,KAAK,WACLqD,UAAU,yBACVtD,KAAK,WACL0yB,QAASlzB,KAAKqD,MAAM7C,MACpBgH,QAAS,SAAChE,GAAD,OAAO,EAAK8vB,YAAY9vB,IACjCrC,GAAG,kBAEL,yBAAO2C,UAAU,sBAAsBqvB,QAAQ,iBAC7C,wBAAMrvB,UAAU,wBAChB,wBAAMA,UAAU,6BAKxB,uBAAKA,UAAU,oBACb,uBAAKA,UAAU,0BAEX+O,qBAAeC,WAAW,iBAG9B,uBAAKhP,UAAU,kBAAf,wBACA,uBAAKA,UAAU,4BAEX9D,KAAKqD,MAAMmvB,eACX,uBAAK1uB,UAAU,0BACb,yBAAOqvB,QAAQ,oCAAf,YACA,uBAAKrvB,UAAU,kCACb,yBAAOA,UAAU,6BACf3C,GAAG,8BACHV,KAAK,OACLD,KAAK,aACL6J,YAAY,YACZke,aAAa,GACbve,SAAU,SAACxG,GAAD,OAAO,EAAK4vB,iBAAiB5vB,SAMjD,uBAAKM,UAAU,mCACb,uBAAKA,UAAU,iBACb,yBACErD,KAAK,WACLqD,UAAU,yBACVovB,QAASlzB,KAAKqD,MAAM7C,MACpBA,KAAK,gBACLgH,QAAS,SAAChE,GAAD,OAAO,EAAK8vB,YAAY9vB,IACjCrC,GAAG,qBAEL,yBAAO2C,UAAU,sBAAsBqvB,QAAQ,oBAC7C,wBAAMrvB,UAAU,wBAChB,wBAAMA,UAAU,6BAKxB,uBAAKA,UAAU,oBACb,uBAAKA,UAAU,0BAEX+O,qBAAeC,WAAW,UAG9B,uBAAKhP,UAAU,kBAAf,YACA,uBAAKA,UAAU,4BAEX9D,KAAKqD,MAAMmE,SACX,uBAAK1D,UAAU,0BACb,yBAAOqvB,QAAQ,iCAAf,UACA,uBAAKrvB,UAAU,kCACb,yBAAOA,UAAU,yBACf3C,GAAG,gCACHV,KAAK,SACLmoB,IAAI,IACJpoB,KAAK,WACLsG,MAAO9G,KAAKqD,MAAMuvB,SAClB5oB,SAAU,SAACxG,GAAD,OAAO,EAAK4vB,iBAAiB5vB,SAMjD,uBAAKM,UAAU,mCACb,uBAAKA,UAAU,iBACb,yBACErD,KAAK,WACLqD,UAAU,yBACVovB,QAASlzB,KAAKqD,MAAM7C,MACpBA,KAAK,UACLgH,QAAS,SAAChE,GAAD,OAAO,EAAK8vB,YAAY9vB,IACjCrC,GAAG,uBAEL,yBAAO2C,UAAU,sBAAsBqvB,QAAQ,sBAC7C,wBAAMrvB,UAAU,wBAChB,wBAAMA,UAAU,6BAKxB,uBAAKA,UAAU,oBACb,uBAAKA,UAAU,yBACb,uBAAKA,UAAU,kBAEX+O,qBAAeC,WAAW,gBAIhC,uBAAKhP,UAAU,kBAAf,oBACA,uBAAKA,UAAU,4BACZ9D,KAAKqD,MAAMovB,iBACV,uBAAK3uB,UAAU,0BACb,yBAAOqvB,QAAQ,qCAAf,eACA,uBAAKrvB,UAAU,kCACb,yBAAOA,UAAU,yBACf3C,GAAG,oCACHV,KAAK,SACLqG,MAAO9G,KAAKqD,MAAMsvB,WAClB/J,IAAI,IACJyK,KAAK,MACL7yB,KAAK,aACLwJ,SAAU,SAACxG,GAAD,OAAO,EAAK4vB,iBAAiB5vB,SAMjD,uBAAKM,UAAU,mCACb,uBAAKA,UAAU,iBACb,yBACErD,KAAK,WACLqD,UAAU,yBACVovB,QAASlzB,KAAKqD,MAAM7C,MACpBA,KAAK,kBACLgH,QAAS,SAAChE,GAAD,OAAO,EAAK8vB,YAAY9vB,IACjCrC,GAAG,2BAEL,yBAAO2C,UAAU,sBAAsBqvB,QAAQ,0BAC7C,wBAAMrvB,UAAU,wBAChB,wBAAMA,UAAU,6BAKxB,uBAAKA,UAAU,oBACb,uBAAKA,UAAU,yBACb,uBAAKA,UAAU,kBAEX+O,qBAAeC,WAAW,iBAIhC,uBAAKhP,UAAU,kBAAf,uBACA,uBAAKA,UAAU,mCACb,uBAAKA,UAAU,iBACb,yBACErD,KAAK,WACLqD,UAAU,yBACVovB,QAASlzB,KAAKqD,MAAM7C,MACpBA,KAAK,UACLgH,QAAS,SAAChE,GAAD,OAAO,EAAK8vB,YAAY9vB,IACjCrC,GAAG,qBACH6I,SAAU,SAACxG,GAAD,OAAO,EAAKwC,SAAS,CAAE0sB,SAAU,EAAKrvB,MAAMqvB,aAExD,yBAAO5uB,UAAU,sBAAsBqvB,QAAQ,sBAC7C,wBAAMrvB,UAAU,wBAChB,wBAAMA,UAAU,6BAKxB,uBAAKA,UAAU,gBACb,0BAAQ0D,QAAS,kBAAM,EAAK+rB,kBAAkBzvB,UAAU,mCAAxD,gBACA,0BAAQ0D,QAAS,kBAAM,EAAK+rB,kBAAkBzvB,UAAU,mCAAxD,c,GAzVqCM,a,ICLxCovB,G,2jFAAAA,G,yGACP,gC,IAMMC,G,wcACJ,WAAYrwB,GAAO,sBACjB,cAAMA,GACN,IAAIorB,EAAO,CACT,CAAEvhB,KAAM,iBAAkB1M,MAAO,aAAcgwB,KAAM,0CAHtC,MAKd,CAAC,SAAS9pB,QAAQ,EAAKrD,MAAMsQ,aAAakZ,gBAAkB,IAC7D4B,EAAO,CACL,CAAEvhB,KAAM,iBAAkB1M,MAAO,aAAcgwB,KAAM,yCACrD,CAAEtjB,KAAM,eAAgB1M,MAAO,WAAYgwB,KAAM,2DACjD,CAAEtjB,KAAM,eAAgB1M,MAAO,iBAAkBgwB,KAAM,6DAG3D,EAAKltB,MAAQ,CACXwN,UAAW,aACX2d,QAde,E,yCAmBnB,SAAWjuB,GACTP,KAAKgG,SAAS,CACZ6K,UAAWtQ,M,yBAIf,WACEP,KAAKoD,MAAMopB,sB,0BAGb,SAAa3b,GACX,OAAQ7Q,KAAKqD,MAAMwN,WACjB,IAAK,aACH,OAAO,gBAAC2f,GAAD,MACT,IAAK,WACH,OAAO,gBAAC6B,GAAD,MACT,IAAK,iBACH,OAAO,uCACT,QACE,OAAO,Q,oBASb,WAAS,WACP,OACE,uBAAKvuB,UAAU,iBACb,uBAAKA,UAAU,gBACb,uBAAKA,UAAU,gBACb,gBAAC0vB,GAAD,CAAM1vB,UAAU,uBAChB,0BAAQ0D,QAAS,kBAAM,EAAKksB,gBAA5B,MAEF,uBAAK5vB,UAAU,cACb,uBAAKA,UAAU,oBAEX9D,KAAKqD,MAAMmrB,KAAK9pB,KAAI,SAAC4I,EAAKzE,GACxB,OAAO,uBAAKjE,IAAK0I,EAAI/M,MAAOiH,QAAS,kBAAM,EAAKmsB,WAAWrmB,EAAI/M,SAC7D,gBAAC,GAAD,CAAW4M,OAAQ,EAAK9J,MAAMwN,YAAcvD,EAAI/M,MAAsB+M,IAAKA,SAKnF,uBAAKxJ,UAAU,uBACZ9D,KAAK4zB,aAAa5zB,KAAKqD,MAAMwN,mB,GAnEjBzM,aA8E3B,IAAeyD,cAHf,SAAyBxE,GACvB,MAAO,CAACqQ,aAAcrQ,EAAMqQ,gBAE9B,CAAwC+f,I,imBClExC7xB,OAAOiyB,KAAO,I,IAMPL,G,2jFAAAA,G,6GACAM,G,+XAAAA,G,6GACAC,G,odAAAA,G,6GACAC,G,4fAAAA,G,6GACAC,G,w3BAAAA,G,6GACAC,G,oMAAAA,G,6GACAC,G,+HAAAA,G,yGAmXP,O,0cAxVE,WAAY/wB,GAAO,4BACjB,cAAMA,GACNxB,OAAOwK,aAAP,UACA,EAAK/I,MAAQ,CAEX+wB,YAAa,WACb1H,eAAgBxqB,2BAChBmyB,kBAAkB,GAEpB,EAAKC,UAAYtwB,cACjB,EAAKuwB,iBAAmB,EAAKA,iBAAiBhxB,MAAtB,WACxB,EAAKixB,oBAAsB,EAAKA,oBAAoBjxB,MAAzB,WAC3B,EAAKnB,kBAAoB,EAAKA,kBAAkBmB,MAAvB,WACzB,EAAKkxB,oBAAsB,EAAKA,oBAAoBlxB,MAAzB,WAC3B,EAAKmxB,iBAAmB,EAAKA,iBAAiBnxB,MAAtB,WACxB,EAAKkR,iBAAmB,EAAKA,iBAAiBlR,MAAtB,WACxB,EAAKoxB,gBAAkB,EAAKA,gBAAgBpxB,MAArB,WACvB,EAAKmgB,sBAAwB,EAAKA,sBAAsBngB,MAA3B,WAC7B,EAAKogB,qBAAuB,EAAKA,qBAAqBpgB,MAA1B,WAC5B,EAAKqgB,uBAAyB,EAAKA,uBAAuBrgB,MAA5B,WAC9B,EAAKqxB,UAAY,EAAKA,UAAUrxB,MAAf,WACjB,EAAKiE,QAAU,EAAKA,QAAQjE,MAAb,WArBE,E,0CAsCnB,WACEvD,KAAKJ,QAAU,IAAIi1B,EAAQ70B,MAC3BA,KAAKJ,QAAQk1B,W,8BAMf,WACE90B,KAAKgG,SAAL,SACKhG,KAAKqD,OADV,IAEE+wB,YAAa,e,+BAOjB,WACEp0B,KAAKgG,SAAS,CACZquB,kBAAmBr0B,KAAKqD,MAAMgxB,qB,+BAOlC,WACEr0B,KAAKgG,SAAL,SACKhG,KAAKqD,OADV,IAEE+wB,YAAa,gB,iCAMjB,WACEp0B,KAAKgG,SAAL,SACKhG,KAAKqD,OADV,IAEE+wB,YAAa,kB,8BAIjB,WACEp0B,KAAKgG,SAAL,SACKhG,KAAKqD,OADV,IAEE+wB,YAAa,e,6BAIjB,WACEp0B,KAAKgG,SAAL,SACKhG,KAAKqD,OADV,IAEE+wB,YAAa,c,mCAIjB,WACEp0B,KAAKgG,SAAL,SACKhG,KAAKqD,OADV,IAEE+wB,YAAa,qB,kCAIjB,WACEp0B,KAAKgG,SAAL,SACKhG,KAAKqD,OADV,IAEE+wB,YAAa,oB,oCAIjB,WACEp0B,KAAKgG,SAAL,SACKhG,KAAKqD,OADV,IAEE+wB,YAAa,sB,qBAOjB,WACEW,gBACAp0B,eAAeq0B,c,uBAOjB,WACE,IAAIC,EAAmBt0B,gBAAiBu0B,YAAYp1B,QAChDm1B,GAAoBA,EAAiBE,UACvCF,EAAiBE,WAEnBx0B,eAAew0B,a,wBAMjB,WACEhwB,QAAQC,IAAI,mB,oDAOd,uGACEpF,KAAKo1B,cADP,SAG0B,IAAIpsB,UAAS,CACnCC,MAAO,uBACN0K,SALL,cAME0hB,GAHIA,EAHN,QAM4Bh1B,KAC1BmM,SAAS7G,UAAS2vB,SAAkBD,IAPtC,SAQ6BvpB,mBAAwB,iBARrD,cAQQ8a,EARR,iBASiC9a,mBAAwB,iBATzD,eASMypB,EATN,OAUE/oB,SAAS7G,UAAS6vB,QAAc5O,IAVlC,UAW6B,IAAI5d,UAAS,CACtCC,MAAO,uCACN0K,SAbL,QAWQoT,EAXR,OAeEva,SAAS7G,UACP8vB,SAAuBF,EAAmBvpB,aAAa,MAGzDQ,SAAS7G,UACPqhB,UACE,UAAAD,EAAavC,aAAb,eAAoB9f,KAAI,SAAA8f,GAAK,WAC3BrjB,GAAIqjB,EAAMrjB,GACVyjB,KAAMJ,EAAMI,MACTJ,EAAM3Y,eACJ,KAIXW,SAAS7G,UACP+vB,UACE,UAAA3O,EAAapB,cAAb,eAAqBjhB,KAAI,SAAAihB,GAAM,WAC7BxkB,GAAIwkB,EAAOxkB,GACXyjB,KAAMe,EAAOf,MACVe,EAAO9Z,eACL,KAIXW,SAAS7G,UACPgwB,UACE,UAAA5O,EAAagD,YAAb,eAAmBrlB,KAAI,SAAAqlB,GAAI,WACzB5oB,GAAI4oB,EAAK5oB,GACTyjB,KAAMmF,EAAKnF,MACRmF,EAAKle,eACH,KA7Cb,iD,2EAsDA,WACE7L,KAAKJ,QAAQoD,oBAAoB7C,wBACjCH,KAAKoC,sB,iCAGP,WACEpC,KAAKJ,QAAQoD,oBAAoB7C,wBACjCH,KAAKy0B,wB,oBAMP,WAAS,WACHmB,EAAiB,GACjBC,EAAmB,GACnBC,EAAkB,iBAAH,OACjBn1B,gBAAiB+S,aAAakZ,eAqBhC,OAnBI5sB,KAAKoD,MAAMspB,iBAAmBxqB,4BAChC4zB,GAAmB,kBAGnBn1B,gBAAiBD,eAAeA,eAAe4Z,SAE7C,iBADF3Z,gBAAiBD,eAAeA,eAAe4Z,WAEpB,aAA3Bta,KAAKqD,MAAM+wB,cAEXwB,EAAiB,WAGjBj1B,gBAAiBD,eAAeA,eAAe4Z,SAE7C,iBADF3Z,gBAAiBD,eAAeA,eAAe4Z,WAEpB,eAA3Bta,KAAKqD,MAAM+wB,cAEXyB,EAAmB,WAGnB,gBAACE,EAAA,EAAD,CAAanV,QAASoV,MACpB,uBACElyB,UAAWgyB,EACXtuB,QAASxH,KAAKwH,QACdotB,UAAW50B,KAAK40B,UAChBqB,UAAWj2B,KAAKi2B,WAEhB,uBAAKnyB,UAAU,cACb,uBAAKA,UAAU,oBACb,0BACEA,UAAU,oBACV0D,QAASxH,KAAK20B,iBAEd,gBAACR,GAAD,CAAWrwB,UAAU,UAEvB,qBAAGoyB,KAAK,mBAAmBprB,OAAO,SAAShH,UAAU,QAClDlC,OAAOu0B,YACNC,kBAAYx0B,OAAOu0B,WAAY,CAAEryB,UAAW,iBAE5C,gBAAC,GAAD,CAAMuyB,QAAQ,YAAYvyB,UAAU,kBAGxC,0BAAQA,UAAU,eAAe0D,QAASxH,KAAKyU,kBAC7C,gBAACyf,GAAD,CAAMpwB,UAAU,WAGpB,uBAAKA,UAAU,mBACe,YAA3B9D,KAAKqD,MAAM+wB,aAA6B,gBAAC,EAAD,MACb,aAA3Bp0B,KAAKqD,MAAM+wB,aAA8B,gBAAC,GAAD,MACd,YAA3Bp0B,KAAKqD,MAAM+wB,aAA6B,gBAAC,GAAD,MACb,eAA3Bp0B,KAAKqD,MAAM+wB,aAAgC,gBAAC,GAAD,MAChB,WAA3Bp0B,KAAKqD,MAAM+wB,aACV,gBAAC,GAAD,CACE1Q,sBAAuB1jB,KAAK0jB,sBAC5BC,qBAAsB3jB,KAAK2jB,qBAC3BC,uBAAwB5jB,KAAK4jB,yBAGL,kBAA3B5jB,KAAKqD,MAAM+wB,aAAmC,gBAAC,GAAD,MACnB,iBAA3Bp0B,KAAKqD,MAAM+wB,aAAkC,gBAAC,GAAD,MAClB,mBAA3Bp0B,KAAKqD,MAAM+wB,aAAoC,gBAAC,GAAD,OAElD,uBAAKtwB,UAAU,kEACb,0BACEA,UAAW,mBAAqB8xB,EAChCpuB,QAASxH,KAAKu0B,kBAEd,gBAACN,GAAD,CAAUnwB,UAAU,UAEtB,0BACEA,UAAW,mBAAqB+xB,EAChCruB,QAASxH,KAAKw0B,qBAEd,gBAACV,GAAD,CAAYhwB,UAAU,UAExB,0BAAQA,UAAU,OAAO0D,QAASxH,KAAK00B,kBACrC,gBAACX,GAAD,CAASjwB,UAAU,UAErB,uBAAKA,UAAU,QACb,gBAAC,GAAD,OAEF,0BAAQA,UAAU,QAChB,gBAACkwB,GAAD,CAASlwB,UAAU,UAErB,gBAAC,GAAD,CACE0D,QAAS,kBAAM,EAAKglB,qBACpBA,kBAAmB,kBAAM,EAAKA,yBAIpC,uBAAK1oB,UAAU,eACZ9D,KAAKqD,MAAMgxB,kBACV,gBAAC,GAAD,CACEhxB,MAAOrD,KAAKqD,MAAMgxB,iBAClB7H,kBAAmB,kBAAM,EAAKA,uBAGlC,gBAAC,GAAD,QAGJ,gBAAC,GAAD,CAAegD,WAAW,S,GApUbprB,c,kBCtD+CkyB,EAAOC,QAA+E,WAAW,aAAa,IAAI1f,EAAE3B,KAAKshB,KAAK,KAAK,KAAK,IAAI/Y,EAAE,0BAA0B/K,EAAE,CAAC+T,MAAM,UAAUC,MAAM,UAAUC,UAAU9P,GAAG,SAASuC,EAAElK,GAAG,GAAG,MAAMA,EAAEyO,MAAM,EAAE,KAAKzO,EAAEA,EAAEyO,MAAM,KAAKF,EAAEI,KAAK3O,GAAG,MAAM,IAAIunB,MAAM,uBAAuBvnB,EAAE,KAAK,OAAO,IAAIA,EAAEjO,SAASiO,EAAEA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IAAI,CAACwnB,SAASxnB,EAAEyO,MAAM,EAAE,GAAG,IAAI+Y,SAASxnB,EAAEyO,MAAM,EAAE,GAAG,IAAI+Y,SAASxnB,EAAEyO,MAAM,EAAE,GAAG,KAAK,SAAS8E,EAAEvT,GAAG,IAAIA,EAAE,MAAM,IAAIunB,MAAM,uBAAuB,OAAO9f,MAAM9P,QAAQqI,GAAGA,EAAE,iBAAiBA,EAAEkK,EAAElK,GAAG,CAACA,EAAEA,EAAEA,EAAEgV,EAAEhV,EAAEiV,GAAG,SAASwS,EAAEznB,EAAEuO,EAAE5G,GAAG,IAAIrT,GAAE,IAAKia,EAAE/K,EAAE4D,OAAO2I,OAAO,GAAGvM,EAAE+K,GAAG,OAAO,SAASvO,GAAG,IAAIuO,EAAE5G,EAAErT,EAAE,GAAG,IAAIia,EAAE,EAAEA,EAAEvO,EAAEjO,OAAOwc,IAAI5G,EAAE3H,EAAEuO,GAAG,IAAIja,EAAEia,GAAG5G,GAAG,OAAOA,EAAE,MAAM3B,KAAK0hB,KAAK/f,EAAE,MAAM,MAAM,KAAK,MAAM,MAAMrT,EAAE,GAAG,MAAMA,EAAE,GAAG,MAAMA,EAAE,GAAnJ,CAAuJ0L,GAAG1L,EAAEmjB,UAAU9P,EAAEuC,EAAE5V,EAAEijB,OAAOjjB,EAAEijB,MAAM5P,EAAEuC,EAAE5V,EAAEkjB,OAAOljB,EAAEkjB,MAAM,SAASxX,EAAEA,EAAEuO,GAAG,YAAO,IAASA,IAAIA,GAAE,GAAIvO,EAAEuT,EAAEvT,GAAGuO,EAAEkZ,EAAEznB,EAAEuO,GAAG,IAAIvO,EAAExK,KAAI,SAASwK,GAAG,OAAOuO,GAAG,IAAIvO,GAAGwO,SAAS,SAAI,IAAS7G,IAAIA,EAAE,IAAI,IAAIF,MAAME,GAAGnM,KAAK,KAAK+S,GAAGE,OAAO9G,GAAG,IAAI4G,EAAE5G,KAAInM,KAAK,IAAI,OAAO,SAASwE,GAAG,SAASuO,EAAEvO,EAAEuO,GAAU,IAAI5G,EAAiD,OAA5D3H,EAAEuT,EAAEvT,GAA8D,CAACA,GAAG2H,EAAvD4G,EAAEkZ,EAAEznB,EAAEuO,GAAE,GAAIvO,EAAExK,KAAI,SAASwK,GAAG,OAAO,IAAIA,MAAmB,GAAGgV,EAAErN,EAAE,GAAGsN,EAAEtN,EAAE,IAAI3H,EAAE2nB,MAAMpZ,EAAEvO,EAAE4nB,WAAW,SAAS5nB,EAAEuO,GAAG,OAAOvO,EAAEuT,EAAEvT,GAAGuO,EAAEkZ,EAAEznB,EAAEuO,GAAE,GAAIvO,EAAExK,KAAI,SAASwK,GAAG,OAAO,IAAIA,MAAKA,EAAE6nB,iBAAiBlgB,EAAE3H,EAAE8nB,YAAYvZ,EAA7P,CAAgQvO,IAAIA,EAAE,KAAKA,EAAhxCuO","file":"4368.editor.js","sourcesContent":["class SettingsChangeModule {\r\n\r\n}\r\nexport default SettingsChangeModule;","class TemplateSettingsChangeModule {\r\n\r\n}\r\nexport default TemplateSettingsChangeModule;","import RootElement from \"../elements/RootElement\";\r\nimport { getEditor, getTemplateId } from \"../../helpers\";\r\nimport CONSTANTS from \"../../consts\";\r\nimport BaseModule from \"./BaseModule\";\r\nimport store from \"../../store/store\";\r\nimport {\r\n  setCurrentElement,\r\n  SET_CURRENT_ELEMENT\r\n} from \"../../store/current-element/actions\";\r\nimport BaseElement from \"../elements/BaseElement\";\r\nimport Section from \"../elements/Section\";\r\nimport Column from \"../elements/Column\";\r\nimport { changeTemplateStatus } from \"../../store/template-status/actions\";\r\n\r\nclass TemplateDataStorage extends BaseModule {\r\n  constructor(modules) {\r\n    super(modules);\r\n    this.elementsIds = [];\r\n  }\r\n\r\n  replaceAll(element) {\r\n    if (!element instanceof RootElement) {\r\n      throw \"Expect Root Element as root element;)\";\r\n    }\r\n    this.rootElement = element;\r\n    this.elementsIds = element.getIds();\r\n    this.setCurrentRootElement();\r\n  }\r\n\r\n  getTemplateData() {\r\n    return this.rootElement.toObject();\r\n  }\r\n  getTemplateDataForSave() {\r\n    let data = {};\r\n\r\n    data.data = this.getTemplateData();\r\n    data.title = this.title || \"\";\r\n    data.name = this.name || \"\";\r\n    return data;\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.title = title;\r\n  }\r\n\r\n  setName(name) {\r\n    this.name = name;\r\n  }\r\n  setType(type) {\r\n    this.type = type;\r\n  }\r\n\r\n  setCurrentRootElement() {\r\n    this.currentElement = this.rootElement;\r\n    store.dispatch(setCurrentElement(this.currentElement));\r\n    return this.currentElement;\r\n  }\r\n\r\n  setCurrentElement(element) {\r\n    if (!element instanceof BaseElement) {\r\n      throw \"Only Base Element Can Be Set as Default\";\r\n    }\r\n    this.currentElement = element;\r\n    store.dispatch(setCurrentElement(element));\r\n  }\r\n\r\n  getCurrentElement() {\r\n    if (!this.currentElement) {\r\n      return this.setCurrentRootElement();\r\n    }\r\n    return this.currentElement;\r\n  }\r\n\r\n  getElementById(elementId) {\r\n    let stack = [...this.rootElement.children];\r\n    let element;\r\n    while (!(stack.length === 0)) {\r\n      element = stack.pop();\r\n      if (element.id == elementId) return element;\r\n      stack.push(...element.children);\r\n    }\r\n  }\r\n\r\n  getRootElement() {\r\n    return this.rootElement;\r\n  }\r\n\r\n  addWidgetInSection(elementName) {\r\n    let newSection = new Section();\r\n    this.elementsIds.push(newSection.getId());\r\n\r\n    let newColumn = new Column();\r\n    this.elementsIds.push(newColumn.getId());\r\n\r\n    let newWidget = new (window.elementsManager.getElementClass(elementName))();\r\n    this.elementsIds.push(newWidget.getId());\r\n    if (elementName === \"section_widget\") {\r\n      newSection.appendColumn(newColumn);\r\n      this.rootElement.appendNewSection(newSection);\r\n      this.setCurrentElement(newSection);\r\n      store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_NEED_UPDATE));\r\n      getEditor().showSettingsPanel();\r\n      return;\r\n    }\r\n    newColumn.appendWidget(newWidget);\r\n    newSection.appendColumn(newColumn);\r\n    this.rootElement.appendNewSection(newSection);\r\n    this.setCurrentElement(newWidget);\r\n    store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_NEED_UPDATE));\r\n    getEditor().showSettingsPanel();\r\n  }\r\n}\r\n\r\nexport default TemplateDataStorage;\r\n","import ElementsFactory from './modules/ElementsFactory';\r\nimport SaveImportModule from \"./modules/SaveImportModule\";\r\nimport SettingsChangeModule from \"./modules/SettingsChangeModule\";\r\nimport TemplateSettingsChangeModule from \"./modules/TemplateSettingsChangeModule\";\r\nimport TemplateDataStorage from \"./modules/TemplateDataStorage\";\r\n\r\nclass Modules {\r\n  /**\r\n   * @param {Editor} editor\r\n   * */\r\n  constructor(editor){\r\n    this.elementsFactory = new ElementsFactory(this);\r\n    this.saveImportModule = new SaveImportModule(this);\r\n    window.saveImportModule = new SaveImportModule(this);\r\n    this.settingsChangeModule = new SettingsChangeModule(this);\r\n    this.templateSettingsChangeModule = new  TemplateSettingsChangeModule(this);\r\n    this.templateDataStorage = new TemplateDataStorage(this);\r\n  }\r\n  loaded(){\r\n    this.saveImportModule.load();\r\n  }\r\n}\r\nexport default Modules;","import React, {Component} from \"react\";\r\nimport BaseElement from \"../classes/elements/BaseElement\";\r\nimport store from '../store/store'\r\nimport {startDrag} from \"../store/element-drag/actions\";\r\n\r\nexport default class WidgetIcon  extends  Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      element: this.props.element,\r\n    };\r\n    this.onDragStart = this.onDragStart.bind(this);\r\n  }\r\n  onDragStart(e){\r\n    store.dispatch(startDrag(null));\r\n    e.dataTransfer.effectAllowed = \"copy\";\r\n    e.dataTransfer.setData('text/plain', this.state.element.getName());\r\n  }\r\n  render() {\r\n    if (!this.state.element instanceof BaseElement) {\r\n      throw 'Widget Component must has Element in props';\r\n    }\r\n    return <div className='widget-icon' draggable=\"true\" onDragStart={this.onDragStart}>\r\n      {\r\n        React.createElement(this.state.element.getIconComponent(), {height: 35})\r\n      }\r\n      <div className=\"widget-icon__title\">\r\n        {this.state.element.getTitle()}\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport WidgetIcon from \"./WidgetIcon\";\r\nimport Scrollbars from \"react-custom-scrollbars\";\r\n\r\nclass WidgetsPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { widgets: window.elementsManager.getWidgetsList() };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"widget-panel-wrapper\">\r\n        <Scrollbars autoHide autoHideTimeout={500} autoHideDuration={200}>\r\n          <div className=\"widget-panel\">\r\n            {this.state.widgets.map(widget => {\r\n              return <WidgetIcon element={widget} key={widget.getName()} />;\r\n            })}\r\n          </div>\r\n        </Scrollbars>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WidgetsPanel;\r\n","import React, { Component } from \"react\";\r\nimport ChevronIcon from '../../svgs/chevron.svg'\r\nimport { connect } from \"react-redux\";\r\nimport { getCurrentElement, getCurrentTab, getElementState } from \"../store/store\";\r\nimport { setActiveSection } from \"../store/setting-section/actions\";\r\nimport {getTemplateType} from \"../helpers\";\r\n\r\nclass SettingSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      hidden: false,\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n    if(props.sectionId === 'wrapper_click_section'){\r\n      console.log(props);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n    /**\r\n     * Если еще ни разу не открывали текущую вкладку у элемента,\r\n     * то в setActiveSection передадим 0\r\n     */\r\n    let currentElementName = getCurrentElement().getName();\r\n    let currentTab = getCurrentTab();\r\n    if (! (this.props.settingSection[currentElementName]\r\n        && (this.props.settingSection[currentElementName][currentTab] !== undefined))) {\r\n      this.props.dispatch(setActiveSection(getCurrentElement().getName(), getCurrentTab(), 0));\r\n    }\r\n    this.checkSectionDisplay();\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    this.checkSectionDisplay();\r\n  }\r\n\r\n  toggle() {\r\n    this.props.dispatch(setActiveSection(getCurrentElement().getName(), getCurrentTab(), this.props.sectionID));\r\n  };\r\n\r\n  /**\r\n   * Проверим условие отображения\r\n   * @return {undefined}\r\n   */\r\n  checkSectionDisplay(){\r\n\r\n    if(this.props.conditionsCallback){\r\n      let hidden = ! this.props.conditionsCallback();\r\n      if(this.state.hidden === hidden) {\r\n        return\r\n      }\r\n      this.setState(state => ({...state, hidden }));\r\n      return ;\r\n    }\r\n    if(! this.props.conditions){\r\n      return;\r\n    }\r\n    let hidden = false;\r\n\r\n    let conditionPairs = _.toPairs(this.props.conditions);\r\n    conditionPairs.forEach(condition => {\r\n      let [controlId, comparedValue] = condition;\r\n      let negative = controlId.indexOf(\"!\") >= 0;\r\n      controlId = controlId.replace(\"!\", \"\");\r\n      let _value = getCurrentElement().getSettings(controlId);\r\n      if (!_.isArray(_value)) {\r\n        _value = [_value];\r\n      } else if (_value.length === 0) {\r\n        hidden = true;\r\n      }\r\n      _value.forEach(value => {\r\n        if (hidden) {\r\n          return;\r\n        }\r\n        if (_.isString(comparedValue) || _.isBoolean(comparedValue)) {\r\n          hidden = value !== comparedValue ? !negative : negative;\r\n        }\r\n        if (_.isArray(comparedValue)) {\r\n          hidden = comparedValue.indexOf(value) === -1 ? !negative : negative;\r\n        }\r\n      });\r\n    });\r\n    if(this.state.hidden !== hidden){\r\n      this.setState(state => ({...state, hidden}));\r\n    }\r\n  }\r\n  render() {\r\n    if(this.state.hidden){\r\n      return null;\r\n    }\r\n    let currentElementName = getCurrentElement().getName();\r\n    let currentTab = getCurrentTab();\r\n    let activeSectionID = 0;\r\n    /**\r\n     * Сравниваем с undefined\r\n     */\r\n    if (this.props.settingSection[currentElementName]\r\n        && (this.props.settingSection[currentElementName][currentTab] !== undefined)) {\r\n      activeSectionID = this.props.settingSection[currentElementName][currentTab];\r\n    }\r\n    let controllers = this.props.controls || [];\r\n    if(this.props.hideOnEmail && getTemplateType() === 'email'){\r\n      return '';\r\n    }\r\n    controllers = controllers.filter(controller => {\r\n      return ! (controller.hideOnEmail && getTemplateType() === 'email');\r\n    });\r\n    return (\r\n      <div  className={\"settings-section \" + (this.props.sectionID === activeSectionID ? 'open' : '')}>\r\n        <div className=\"settings-section__title d-flex\" onClick={this.toggle}>\r\n          <div className=\"settings-section__icon d-flex \">\r\n            <ChevronIcon />\r\n          </div>\r\n          <div className=\"settings-section__label\">\r\n            {this.props.label}\r\n          </div>\r\n        </div>\r\n        <div className=\"controllers-wrapper\">\r\n          {\r\n            controllers.map((controller) => {\r\n              let ControllerComponent = window.controllersManager.getController(controller.type);\r\n              return React.createElement(ControllerComponent, { ...controller, key: controller.controlId });\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    settingSection: state.settingSectionMenu,\r\n    controllerValue: state.controllerValue,\r\n  }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, null)(SettingSection);\r\n","import React, {Component} from \"react\";\r\nimport ('./DynamicContent.scss');\r\nimport ('./../../../sass/altrp-menu.scss');\r\nimport {connect} from \"react-redux\";\r\nimport Resource from \"../../classes/Resource\";\r\nimport AltrpSelect from \"../../../../../admin/src/components/altrp-select/AltrpSelect\";\r\nimport CONSTANTS from \"../../consts\";\r\nimport {changeTemplateStatus} from \"../../store/template-status/actions\";\r\nimport store from \"../../store/store\";\r\n\r\nconst DATA_TYPES_OPTIONS = [\r\n  {\r\n    value: 'array',\r\n    label: 'Array'\r\n  },\r\n];\r\nconst MORPHS_TYPES_OPTIONS = {\r\n  /**\r\n   * @see {ArrayConverter}\r\n   * @link https://altrp.com/layouts/converters\r\n   */\r\n  array: [\r\n    {\r\n      /**\r\n       * @see {ArrayConverter#extract}\r\n       */\r\n      label: 'Extract',\r\n      value: 'extract',\r\n    },\r\n    {\r\n      /**\r\n       * @see {ArrayConverter#map}\r\n       */\r\n      label: 'Map',\r\n      value: 'map',\r\n    },\r\n  ],\r\n};\r\n/**\r\n * Класс реализующий список динамических конверторов для данных\r\n */\r\nclass DynamicContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: {},\r\n      };\r\n    this.resource = new Resource({route: '/admin/ajax/models_with_fields_options'});\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.updateDynamicValue();\r\n  }\r\n\r\n  /**\r\n   * Сохранйем значение в свойства элемента\r\n   */\r\n  setSettings(){\r\n    store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_NEED_UPDATE));\r\n    this.props.currentElement.setDynamicSetting(this.props.settingName, this.state.value);\r\n  }\r\n  /**\r\n   * Чтобы не закрывалось предотвращаем всплытие клика\r\n   * @param e\r\n   */\r\n  wrapperClickHandler = (e)=>{\r\n    e.stopPropagation();\r\n  };\r\n  /**\r\n   * Обновляем значение при смене свойства или активного элемента (this.props.currentElement)\r\n   */\r\n  updateDynamicValue(){\r\n    if(! this.props.settingName || ! this.props.currentElement){\r\n      return;\r\n    }\r\n    let value = this.props.currentElement.getDynamicSetting(this.props.settingName);\r\n    if(! value){\r\n      value = {};\r\n    }\r\n    this.setState(state => ({...state, value}));\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n    if(this.props.currentElement !== prevProps.currentElement){\r\n      this.updateDynamicValue();\r\n    }\r\n    if(this.props.settingName !== prevProps.settingName){\r\n      this.updateDynamicValue();\r\n    }\r\n  }\r\n  getPositionProps(){\r\n    let element = this.props.element;\r\n    if(! element){\r\n      return{top:0, left:7};\r\n    }\r\n    return{\r\n      top: element.offsetTop + element.offsetHeight + 2,\r\n      left:7\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Сменим тип данных\r\n   * @param {{}} e\r\n   */\r\n  typeChange = (e) => {\r\n    let value = {...this.state.value};\r\n    if(! e){\r\n      _.unset(value, 'data_type')\r\n    } else {\r\n      value.data_type = e.value;\r\n    }\r\n    _.unset(value, 'convert_type');\r\n    this.setState(state => ({...state, value}), this.setSettings);\r\n  };\r\n  /**\r\n   * Сменим тип данных\r\n   * @param {{}} e\r\n   */\r\n  convertChange = (e) => {\r\n    let value = {...this.state.value};\r\n    if(! e){\r\n      _.unset(value, 'convert_type')\r\n    } else {\r\n      value.convert_type = e.value;\r\n    }\r\n    this.setState(state => ({...state, value}), this.setSettings);\r\n  };\r\n  /**\r\n   * Сменим аргумент\r\n   * @param {number} index\r\n   * @param {string} argument\r\n   */\r\n  changeArgument = (index, argument) => {\r\n    let value = {...this.state.value};\r\n    if(! argument){\r\n      _.unset(value, `argument${index || 1}`)\r\n    } else {\r\n      value[`argument${index || 1}`] = argument;\r\n    }\r\n    this.setState(state => ({...state, value}), this.setSettings);\r\n  };\r\n\r\n  render() {\r\n    let classes = ['altrp-dynamic-content'];\r\n    if(this.props.show){\r\n      classes.push('altrp-dynamic-content_show')\r\n    }\r\n    const {data_type, convert_type, argument1} = this.state.value;\r\n\r\n    let selectDataTypeProps = {\r\n      onChange: this.typeChange,\r\n      value: _.find(DATA_TYPES_OPTIONS, item => item.value === data_type) || null,\r\n      options: DATA_TYPES_OPTIONS,\r\n      classNamePrefix: 'dynamic-select',\r\n      placeholder: 'Choose Data Type',\r\n      noOptionsMessage: () => \"no found\",\r\n      isClearable: true,\r\n    };\r\n    let convertsOptions = MORPHS_TYPES_OPTIONS[data_type] || [];\r\n    let selectConvertTypeProps = {\r\n      onChange: this.convertChange,\r\n      value: _.find(convertsOptions, item => item.value === convert_type) || null,\r\n      options: convertsOptions,\r\n      classNamePrefix: 'dynamic-select',\r\n      placeholder: 'Choose Data Type',\r\n      noOptionsMessage: () => \"no found\",\r\n      isClearable: true,\r\n    };\r\n    return <div className={classes.join(' ')}  style={this.getPositionProps()} onClick={this.wrapperClickHandler}>\r\n    <div className=\"controller-container controller-container_select2\">\r\n      <div className=\"control-select2-header\">\r\n        <div className=\"control-select2__label\">Select Type</div>\r\n      </div>\r\n      <div className=\"control-container_select2-wrapper\">\r\n        <AltrpSelect isClearable={true} {...selectDataTypeProps} />\r\n      </div>\r\n    </div>\r\n      {convertsOptions.length ? <div className=\"controller-container controller-container_select2\">\r\n        <div className=\"control-select2-header\">\r\n          <div className=\"control-select2__label\">Data Converts</div>\r\n        </div>\r\n        <div className=\"control-container_select2-wrapper\">\r\n          <AltrpSelect isClearable={true} {...selectConvertTypeProps} />\r\n        </div>\r\n      </div> : null}\r\n      {data_type && <div className=\"controller-container controller-container_textarea\">\r\n        <div className=\"controller-container__label\">\r\n          Argument № 1\r\n        </div>\r\n        <textarea className=\"controller-container__textarea\"\r\n                  value={argument1 || ''}\r\n                  onChange={(e) => {this.changeArgument(1, e.target.value)}} />\r\n      </div>}\r\n    </div>\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.dynamicContentState,\r\n    settingName: _.get(state.dynamicContentState, 'params.settingName'),\r\n    currentElement: state.currentElement.currentElement\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(DynamicContent);\r\n","import React, { Component } from \"react\";\r\nimport SettingSection from \"./SettingSection\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport DynamicContent from \"./DynamicContent/DynamicContent\";\r\n\r\nclass PanelTabContent extends Component {\r\n\r\n  render() {\r\n    let sections = this.props.sections || [];\r\n    return <div className=\"settings-controllers\">\r\n      <Scrollbars\r\n        autoHide\r\n        autoHideTimeout={500}\r\n        autoHideDuration={200}\r\n      >\r\n        <div id=\"settingsControllers\">\r\n          {\r\n            sections.map((section, idx) => {\r\n              return React.createElement(SettingSection, {\r\n                ...section,\r\n                key: section.sectionId,\r\n                sectionID: idx,\r\n              });\r\n            }\r\n            )\r\n          }\r\n          <DynamicContent />\r\n        </div>\r\n      </Scrollbars>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default PanelTabContent\r\n","import React from \"react\";\r\nimport {Select} from \"@blueprintjs/select\";\r\nimport {Button, MenuItem, ButtonGroup, Alignment, Icon} from \"@blueprintjs/core\";\r\nimport ButtonController from \"../controllers/ButtonController\";\r\nimport AltrpMeta from \"../../classes/AltrpMeta\";\r\nimport {connect} from \"react-redux\";\r\nimport {controllerMapStateToProps} from \"../../decorators/controller\";\r\nimport {getCurrentElement} from \"../../store/store\";\r\nimport Controller from \"../../classes/Controller\";\r\nimport {editGlobalColor, editGlobalEffect, setGlobalColors} from \"../../store/altrp-global-colors/actions\";\r\nimport {\r\n  addUpdateGlobalStylesPreset,\r\n  deleteGlobalStylesPresets,\r\n  updateGlobalStylesPresets\r\n} from \"../../store/altrp-global-styles/actions\";\r\nimport CONSTANTS from \"../../consts\";\r\n\r\n/**\r\n * @return {boolean}\r\n */\r\nfunction ItemPredicate(query, value) {\r\n\r\n  if(!query) {\r\n    return true\r\n  }\r\n\r\n  const index = _.findIndex(_.split(value, \"\"), char => {\r\n    let similar = false;\r\n    _.split(query, \"\").forEach(queryChar => {\r\n      if(queryChar === char) {\r\n        similar = true\r\n      }\r\n    });\r\n    return similar\r\n  });\r\n\r\n  if(index !== -1) {\r\n    return true\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nfunction ItemRenderer(query, { handleClick, modifiers }) {\r\n\r\n  async function deletePreset() {\r\n    const currentElement = getCurrentElement();\r\n    const settings = currentElement.getSettings();\r\n\r\n    const meta = await AltrpMeta.getMetaByName(\"global_styles\");\r\n    const metaValue = meta.getMetaValue({});\r\n\r\n    delete metaValue[currentElement.getName()][query];\r\n\r\n    await meta.save();\r\n\r\n    const needUpdate = [];\r\n\r\n    let element = altrpEditor.modules.templateDataStorage.getRootElement();\r\n\r\n\r\n    findSimilar(element, needUpdate);\r\n\r\n    delete settings.global_styles_presets;\r\n\r\n    needUpdate.forEach(elem => {\r\n      elem.setSettings(settings);\r\n    })\r\n\r\n    appStore.dispatch(\r\n      deleteGlobalStylesPresets(currentElement.getName(), query)\r\n    );\r\n  }\r\n\r\n  return <ButtonGroup key={query} className=\"state-section-style-preset\" minimal>\r\n    <Button\r\n      fill\r\n      text={query}\r\n      alignText={Alignment.LEFT}\r\n      onClick={handleClick}\r\n    />\r\n    <Button\r\n      title=\"delete this preset\"\r\n      onClick={deletePreset}\r\n      intent=\"danger\"\r\n      icon=\"cross\"\r\n    />\r\n  </ButtonGroup>\r\n\r\n}\r\n\r\nfunction ItemCreateRenderer(query, active, handleClick) {\r\n\r\n  async function create() {\r\n    const controlsNames = [];\r\n\r\n    const currentElement = getCurrentElement();\r\n\r\n    if (currentElement.getName) {\r\n      let tabs = controllersManager.getControls(currentElement.getName());\r\n\r\n      tabs.style.forEach(tab => {\r\n        tab.controls.forEach(control => {\r\n          controlsNames.push(control.controlId)\r\n        });\r\n      });\r\n    }\r\n\r\n    const controls = {};\r\n\r\n    controlsNames.forEach(name => {\r\n      if(currentElement.settings[name]) {\r\n        controls[name] = currentElement.settings[name]\r\n      }\r\n    });\r\n\r\n    let meta = await AltrpMeta.getMetaByName(\"global_styles\");\r\n    const metaValue = meta.getMetaValue({});\r\n\r\n    if(metaValue[currentElement.getName()]) {\r\n      _.keys(metaValue[currentElement.getName()]).forEach((name) => {\r\n        if(query === name) {\r\n          throw \"для пресета требуется уникальное имя\"\r\n        }\r\n      })\r\n    }\r\n\r\n    meta.setMetaValue({\r\n      ...metaValue,\r\n      [currentElement.getName()]: {\r\n        ...metaValue[currentElement.getName()],\r\n        [query]: controls\r\n      }\r\n    });\r\n\r\n    await meta.save();\r\n\r\n    appStore.dispatch(\r\n      updateGlobalStylesPresets(currentElement.getName(), query, controls)\r\n    );\r\n\r\n    handleClick()\r\n  }\r\n\r\n  return <MenuItem\r\n    icon=\"add\"\r\n    text={`Create preset`}\r\n    onClick={create}\r\n  />\r\n}\r\n\r\nclass GlobalStyles extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const currentElement = props.currentElement.currentElement;\r\n    const presets = props.globalStylesPresets.styles;\r\n\r\n    let items = [];\r\n    if(presets) {\r\n      if(presets[currentElement.getName()]) {\r\n        items =_.keys(presets[currentElement.getName()])\r\n      }\r\n    }\r\n    const currentPreset = currentElement.getSettings(\"global_styles_presets\", \"\")\r\n\r\n    this.state = {\r\n      currentElementId: currentElement.getId(),\r\n      query: \"\",\r\n      current: currentPreset,\r\n      items,\r\n    };\r\n\r\n    this.updateCurrent = this.updateCurrent.bind(this);\r\n    this.updateQuery = this.updateQuery.bind(this);\r\n    this.removeCurrent = this.removeCurrent.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const currentElement = this.props.currentElement.currentElement;\r\n    const presets = this.props.globalStylesPresets.styles;\r\n    let items = [];\r\n    if (presets[currentElement.getName()]) {\r\n      items = _.keys(presets[currentElement.getName()])\r\n    }\r\n\r\n    if (!_.isEqual(this.state.items, items)) {\r\n      this.setState((s) => ({\r\n        ...s,\r\n        items,\r\n      }))\r\n    }\r\n\r\n    if(currentElement.getId() !== this.state.currentElementId) {\r\n      const currentElementSettings = currentElement.getSettings(\"global_styles_presets\", \"\");\r\n      let items = this.props.globalStylesPresets.styles[currentElement.getName()] || {};\r\n\r\n      this.setState((s) => ({\r\n        ...s,\r\n        currentElementId: currentElement.getId(),\r\n        current: currentElementSettings,\r\n        query: \"\",\r\n        items: _.keys(items),\r\n      }))\r\n    }\r\n    if(this.state.current) {\r\n      let removeCurrent = _.findIndex(this.state.items, (item) => item === this.state.current);\r\n\r\n      if(removeCurrent === -1) {\r\n        this.setState((s) => ({\r\n          ...s,\r\n          current: \"\"\r\n        }))\r\n      }\r\n    }\r\n\r\n    if(JSON.stringify(this.props.controllerValue) !== JSON.stringify(prevProps.controllerValue) && this.state.current) {\r\n      this.save()\r\n    }\r\n  }\r\n\r\n  updateCurrent(current) {\r\n    const currentElement = this.props.currentElement.currentElement;\r\n    let isNewPreset = this.state.items.findIndex(preset => current === preset);\r\n\r\n    const presetSettings = this.props.globalStylesPresets.styles[currentElement.getName()][current];\r\n\r\n    _.keys(presetSettings).forEach((controllerName) => {\r\n      currentElement.setSettingValue(controllerName, presetSettings[controllerName])\r\n    })\r\n    currentElement.setSettingValue(\"global_styles_presets\", current)\r\n\r\n    // setSettingValue\r\n\r\n    // currentElement.setSettings({\r\n    //   ...settings,\r\n    //   ...this.props.globalStylesPresets.styles[currentElement.getName()][current],\r\n    //   global_styles_presets: current,\r\n    // });\r\n\r\n    if(isNewPreset === -1) {\r\n      this.setState((s) => ({\r\n        ...s,\r\n        current,\r\n        query: \"\",\r\n        items: [current, ...s.items]\r\n      }))\r\n    } else {\r\n      this.setState((s) => ({\r\n        ...s,\r\n        query: \"\",\r\n        current\r\n      }))\r\n    }\r\n  }\r\n\r\n  save() {\r\n    const currentElement = this.props.currentElement.currentElement;\r\n    // настроки елемента\r\n\r\n    const controlsNames = [];\r\n\r\n    if (currentElement.getName) {\r\n      let tabs = controllersManager.getControls(currentElement.getName());\r\n\r\n      tabs.style.forEach(tab => {\r\n        tab.controls.forEach(control => {\r\n          controlsNames.push(control.controlId)\r\n        });\r\n      });\r\n    }\r\n\r\n    const controls = {};\r\n\r\n    controlsNames.forEach(name => {\r\n      if(currentElement.settings[name]) {\r\n        controls[name] = currentElement.settings[name]\r\n      }\r\n    });\r\n\r\n    AltrpMeta.getMetaByName(\"global_styles\").then((r) => {\r\n      let metaValue = r.data.metaValue;\r\n\r\n      metaValue = {\r\n        ...metaValue,\r\n        [currentElement.getName()]: {\r\n          ...metaValue[currentElement.getName()],\r\n          [this.state.current]: controls\r\n        }\r\n      }\r\n\r\n      AltrpMeta.saveGlobalStylesPresets(metaValue).then(r => {\r\n      })\r\n      // meta.setMetaValue({\r\n      //   ...metaValue,\r\n      //   [currentElement.getName()]: {\r\n      //     ...metaValue[currentElement.getName()],\r\n      //     [this.state.current]: controls\r\n      //   }\r\n      // });\r\n      // meta.save();\r\n    })\r\n\r\n    if(this.props.globalStylesPresets.styles[currentElement.getName()]) {\r\n      this.props.updateGlobalStylesPresets({\r\n        widgetName: currentElement.getName(),\r\n        name: this.state.current,\r\n        settings: controls,\r\n      });\r\n    }\r\n\r\n    const needUpdate = [];\r\n\r\n    let element = altrpEditor.modules.templateDataStorage.getRootElement();\r\n\r\n    findSimilar(element, needUpdate);\r\n    needUpdate.forEach(elem => {\r\n      const settings = elem.getSettings();\r\n      if(elem === getCurrentElement()){\r\n        return;\r\n      }\r\n      // _.keys(controls).forEach((controllerName) => {\r\n      //   elem.setSettingValue(controllerName, controls[controllerName])\r\n      // })\r\n      elem.setSettings({\r\n        ...settings,\r\n        ...controls,\r\n      });\r\n    })\r\n  }\r\n\r\n  updateQuery(query) {\r\n    query = _.replace(query, \" \" , \"_\");\r\n\r\n    this.setState((s) => ({\r\n      ...s,\r\n      query\r\n    }))\r\n  }\r\n\r\n  removeCurrent() {\r\n    this.setState(s => ({\r\n      ...s,\r\n      current: \"\"\r\n    }))\r\n\r\n    const currentElement = this.props.currentElement.currentElement;\r\n\r\n    currentElement.deleteSetting(\"global_styles_presets\")\r\n  }\r\n\r\n  render() {\r\n    const items = this.state.items || [];\r\n    const query = this.state.query || \"\";\r\n\r\n    const classes = [\"state-section-style-presets\"];\r\n\r\n    if(this.state.current) {\r\n      classes.push(\"state-section-style-presets_active\")\r\n    }\r\n\r\n    return <div className={_.join(classes, \" \")}>\r\n      <Select\r\n        createNewItemFromQuery={(query) => query}\r\n        onQueryChange={this.updateQuery}\r\n        query={query}\r\n        createNewItemRenderer={ItemCreateRenderer}\r\n        itemPredicate={ItemPredicate}\r\n        items={items}\r\n        createNewItemPosition=\"first\"\r\n        noResults={<MenuItem disabled={true} text=\"No results.\" />}\r\n        itemRenderer={ItemRenderer}\r\n        onItemSelect={this.updateCurrent}\r\n        popoverProps={{\r\n          targetClassName: \"state-section-style-target\"\r\n        }}\r\n      >\r\n        <button className=\"state-section-style-button btn\">\r\n          {\r\n            this.state.current ? this.state.current : \"Presets\"\r\n          }\r\n        </button>\r\n      </Select>\r\n      {\r\n        this.state.current ? (\r\n          <button\r\n            onClick={this.removeCurrent}\r\n            className=\"btn state-section-style-button\"\r\n            title=\"remove preset\"\r\n          >\r\n            <Icon icon=\"cross\"/>\r\n          </button>\r\n        ) : \"\"\r\n      }\r\n    </div>\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentElement: state.currentElement,\r\n    globalStylesPresets: state.globalStylesPresets,\r\n    controllerValue: state.controllerValue,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateGlobalStylesPresets: payload => dispatch(updateGlobalStylesPresets(payload.widgetName, payload.name, payload.settings)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GlobalStyles);\r\n\r\n/**\r\n *\r\n * @param {BaseElement} firstElement\r\n * @param {BaseElement[]} needUpdate\r\n */\r\nfunction findSimilar(firstElement, needUpdate) {\r\n  const children = firstElement.getChildren();\r\n  const currentElement = getCurrentElement();\r\n  if(children.length !== 0) {\r\n    children.forEach(child => {\r\n      const name = child.getName();\r\n\r\n      if(currentElement.getName() === name) {\r\n        const preset = child.getSettings(\"global_styles_presets\", \"\");\r\n        const currentPreset = currentElement.getSettings(\"global_styles_presets\", \"\");\r\n\r\n        if(preset === currentPreset) {\r\n          needUpdate.push(child)\r\n        }\r\n      }\r\n\r\n      findSimilar(child, needUpdate)\r\n    })\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ('../../sass/state-section.scss');\r\nimport { connect } from \"react-redux\";\r\nimport { setCurrentState } from \"../store/state-section/actions\";\r\nimport { getElementState, getCurrentTab } from \"../store/store\";\r\nimport GlobalStyles from \"./state-section/GlobalStyles\";\r\n\r\nclass StateSection extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      buttons: [\r\n        { title: \"N\", value: \"\" },\r\n        { title: \"H\", value: \":hover\" },\r\n        { title: \"A\", value: \".active\" },\r\n        { title: \"F\", value: \":focus\" },\r\n        { title: \"E\", value: \".state-error\" },\r\n        { title: \"D\", value: \".state-disabled\" },\r\n      ]\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.dispatch(setCurrentState(\"N\", \"\"));\r\n  }\r\n\r\n  setCurrentState(button) {\r\n    this.props.dispatch(setCurrentState(button.title, button.value));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"state-section-wrapper\">\r\n        <div className=\"state-section\">\r\n          {\r\n            this.state.buttons.map((button, index) => {\r\n              return <button\r\n                key={index}\r\n                className={\"state-section__button \" + (this.props.currentState.title === button.title ? \"state-section__button_active\" : \"\")}\r\n                onClick={() => this.setCurrentState(button)}\r\n              >{button.title}</button>\r\n            })\r\n          }\r\n        </div>\r\n        <GlobalStyles/>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentState: state.currentState\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(StateSection);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ContentIcon from \"../../svgs/content.svg\";\r\nimport StyleIcon from \"../../svgs/style.svg\";\r\nimport AdvancedIcon from \"../../svgs/advanced.svg\";\r\nimport {\r\n  TAB_ADVANCED,\r\n  TAB_CONTENT,\r\n  TAB_STYLE\r\n} from \"../classes/modules/ControllersManager\";\r\nimport PanelTabContent from \"./PanelTabContent\";\r\nimport DynamicContent from \"./DynamicContent/DynamicContent\";\r\nimport Controller from \"../classes/Controller\";\r\nimport { setCurrentTab } from \"../store/active-settings-tab/actions\";\r\nimport { getCurrentTab, getElementState } from \"../store/store\";\r\nimport StateSection from \"./StateSection\";\r\nimport { setCurrentState } from \"../store/state-section/actions\";\r\n\r\nclass SettingsPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: \"content\"\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Устанавливает текущий таб\r\n   * @param activeTab\r\n   */\r\n  setActiveTab(activeTab) {\r\n    this.setState({\r\n      ...this.state,\r\n      activeTab\r\n    });\r\n    this.props.setCurrentTab(activeTab);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setCurrentTab(this.state.activeTab);\r\n  }\r\n\r\n  render() {\r\n    let controllersManager = window.controllersManager;\r\n    let sections = [];\r\n    if (this.props.currentElement.getName) {\r\n      let allControllersPairs = _.toPairs(\r\n        controllersManager.getControls(this.props.currentElement.getName())\r\n      );\r\n      allControllersPairs.forEach(pair => {\r\n        pair[1].forEach(section => {\r\n          section.controls = section.controls.map(control => {\r\n            return {\r\n              ...control,\r\n              controller: new Controller(control)\r\n            };\r\n          });\r\n        });\r\n        if (pair[0] === this.state.activeTab) {\r\n          sections = [...pair[1]];\r\n        }\r\n      });\r\n    }\r\n\r\n    let contentTabClasses =\r\n      \"panel-tab d-flex \" +\r\n      (this.state.activeTab === TAB_CONTENT ? \"active\" : \"\");\r\n    let styleTabClasses =\r\n      \"panel-tab d-flex \" +\r\n      (this.state.activeTab === TAB_STYLE ? \"active\" : \"\");\r\n    let advancedTabClasses =\r\n      \"panel-tab d-flex \" +\r\n      (this.state.activeTab === TAB_ADVANCED ? \"active\" : \"\");\r\n    return (\r\n      <div className=\"panel settings-panel d-flex\">\r\n        <div className=\"panel-tabs d-flex\">\r\n          <button\r\n            className={contentTabClasses}\r\n            onClick={() => this.setActiveTab(TAB_CONTENT)}\r\n          >\r\n            <span className=\"panel-tab__icon\">\r\n              <ContentIcon />\r\n            </span>\r\n            <span className=\"panel-tab__text\">Content</span>\r\n          </button>\r\n          <button\r\n            className={styleTabClasses}\r\n            onClick={() => this.setActiveTab(TAB_STYLE)}\r\n          >\r\n            <span className=\"panel-tab__icon\">\r\n              <StyleIcon />\r\n            </span>\r\n            <span className=\"panel-tab__text\">Style</span>\r\n          </button>\r\n          <button\r\n            className={advancedTabClasses}\r\n            onClick={() => this.setActiveTab(TAB_ADVANCED)}\r\n          >\r\n            <span className=\"panel-tab__icon\">\r\n              <AdvancedIcon />\r\n            </span>\r\n            <span className=\"panel-tab__text\">Advanced</span>\r\n          </button>\r\n        </div>\r\n        {this.state.activeTab === \"style\" && <StateSection />}\r\n        <PanelTabContent sections={sections} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentElement: state.currentElement.currentElement,\r\n    currentState: state.currentState\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { setCurrentTab, setCurrentState })(\r\n  SettingsPanel\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass EditorWindow extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return <div style={{ width: this.props.currentScreen.width, height: this.props.currentScreen.height }} className={\"editor-window\"} id=\"editorWindow\">\r\n      {!this.props.historyStoreActive && <div className=\"blocking-layer\" />}\r\n      <iframe src=\"/admin/editor-content\" id=\"editorContent\" width=\"100%\" />\r\n    </div>\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentScreen: state.currentScreen,\r\n    historyStoreActive: state.historyStore.active\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(EditorWindow)","import React, { Component } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { iconsManager } from \"../../../../front-app/src/js/helpers\";\r\nimport { getEditor, getTemplateDataStorage, getFactory } from \"../helpers\";\r\nimport Resource from \"../classes/Resource\";\r\nimport {\r\n  setActiveHistoryStore,\r\n  addHistoryStoreItem\r\n} from \"../store/history-store/actions\";\r\n\r\nimport UserSvg from \"../../../../admin/src/svgs/user.svg\";\r\nimport StartFilled from \"../../../../admin/src/svgs/start-filled.svg\";\r\nimport Scrollbars from \"react-custom-scrollbars\";\r\nimport { changeTemplateStatus } from \"../store/template-status/actions\";\r\nimport CONSTANTS from \"../consts\";\r\n\r\nclass HistoryPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: \"actions\"\r\n    };\r\n  }\r\n\r\n  setActiveTab(activeTab) {\r\n    return () => {\r\n      this.setState(state => ({\r\n        ...state,\r\n        activeTab\r\n      }));\r\n    };\r\n  }\r\n\r\n  renderTabContent() {\r\n    switch (this.state.activeTab) {\r\n      case \"actions\":\r\n        return <ActionsTabContent />;\r\n      case \"revision\":\r\n        return <RevisionTabContent />;\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let actionsTabClasses =\r\n      \"history-panel__tab \" +\r\n      (this.state.activeTab === \"actions\" ? \"history-panel__tab--active\" : \"\");\r\n    let revisionTabClasses =\r\n      \"history-panel__tab \" +\r\n      (this.state.activeTab === \"revision\" ? \"history-panel__tab--active\" : \"\");\r\n\r\n    return (\r\n      <div className=\"history-panel\">\r\n        <div className=\"history-panel__tabs\">\r\n          <button\r\n            onClick={this.setActiveTab(\"actions\")}\r\n            className={actionsTabClasses}\r\n          >\r\n            <span>ACTIONS</span>\r\n          </button>\r\n          <button\r\n            onClick={this.setActiveTab(\"revision\")}\r\n            className={revisionTabClasses}\r\n          >\r\n            <span>REVISION</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"history-panel__tab-content\">\r\n          {this.renderTabContent()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst ActionsTabContent = () => {\r\n  const controllerHistory = window.controllerHistory;\r\n  const historyStore = useSelector(state => state.historyStore.history);\r\n  const current = useSelector(state => state.historyStore.current);\r\n\r\n  const handlerHistory = index => {\r\n    return () => {\r\n      if (current > index) {\r\n        for (let i = 0; i < current - index; i++) {\r\n          controllerHistory.undo();\r\n        }\r\n      } else if (current < index) {\r\n        for (let i = 0; i < index - current; i++) {\r\n          controllerHistory.redo();\r\n        }\r\n      }\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"history-panel__content\">\r\n      <Scrollbars autoHide autoHideTimeout={500} autoHideDuration={200}>\r\n        <div\r\n          key={-1}\r\n          className={\r\n            current === -1\r\n              ? \"history-panel__restore-item history-panel__restore-item--active\"\r\n              : \"history-panel__restore-item\"\r\n          }\r\n          onClick={handlerHistory(-1)}\r\n        >\r\n          <span className=\"history-panel__restore-item-title\">start edit</span>\r\n          {current === -1\r\n            ? iconsManager().renderIcon(\"check\", {\r\n                style: { width: 20, height: 20 },\r\n                className: \"history-panel__restore-item-icon\"\r\n              })\r\n            : \"\"}\r\n        </div>\r\n        {historyStore.map((item, index) => {\r\n          let title = \"\";\r\n          if (item.data && item.data.element) {\r\n            title = item.data.element.getTitle();\r\n          }\r\n\r\n          let type = \"\";\r\n          switch (item.type) {\r\n            case \"ADD\":\r\n              type = \"Added\";\r\n              break;\r\n            case \"EDIT\":\r\n              type = \"Edited\";\r\n              break;\r\n            case \"DELETE\":\r\n              type = \"Removed\";\r\n              break;\r\n            case \"REVISION\":\r\n              title = \"Revision\";\r\n              break;\r\n          }\r\n\r\n          let restoreItemClasses = \"history-panel__restore-item \";\r\n          if (current === index) {\r\n            restoreItemClasses += \"history-panel__restore-item--active \";\r\n          }\r\n\r\n          return (\r\n            <div\r\n              key={index}\r\n              className={restoreItemClasses}\r\n              onClick={handlerHistory(index)}\r\n            >\r\n              <span className=\"history-panel__restore-item-title\">{title}</span>\r\n              <span className=\"history-panel__restore-item-type\">{type}</span>\r\n              {current === index\r\n                ? iconsManager().renderIcon(\"check\", {\r\n                    style: { width: 20, height: 20 },\r\n                    className: \"history-panel__restore-item-icon\"\r\n                  })\r\n                : \"\"}\r\n            </div>\r\n          );\r\n        })}\r\n        <div className=\"history-panel__actions-tab-subscribe\">\r\n          Switch to Revisions tab for older version\r\n        </div>\r\n      </Scrollbars>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RevisionTabContent = () => {\r\n  const [arrayRevisions, setArrayRevisions] = React.useState([]);\r\n  const [currentRevision, setCurrentRevision] = React.useState(-1);\r\n  const [oldRootElement, setOldRootElement] = React.useState();\r\n\r\n  React.useEffect(() => {\r\n    setOldRootElement(_.cloneDeep(getTemplateDataStorage().rootElement));\r\n    let templateId = appStore.getState().templateData.id;\r\n\r\n    const fetchRevisions = async () => {\r\n      let arrayRevisions = await new Resource({\r\n        route: `/admin/ajax/templates/${templateId}/reviews`\r\n      }).getAll();\r\n      setArrayRevisions(arrayRevisions.reverse());\r\n    };\r\n    fetchRevisions(0);\r\n    window.parent.appStore.dispatch(setActiveHistoryStore(false));\r\n    return () => {\r\n      window.parent.appStore.dispatch(setActiveHistoryStore(true));\r\n    };\r\n  }, []);\r\n\r\n  const handleClickDiscard = () => {\r\n    getTemplateDataStorage().replaceAll(oldRootElement);\r\n    getEditor().showWidgetsPanel();\r\n  };\r\n\r\n  const handleClickApply = () => {\r\n    window.parent.appStore.dispatch(\r\n      addHistoryStoreItem(\"REVISION\", {\r\n        old: oldRootElement,\r\n        new: _.cloneDeep(getTemplateDataStorage().rootElement)\r\n      })\r\n    );\r\n    \r\n    window.parent.appStore.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_NEED_UPDATE));\r\n    getEditor().showWidgetsPanel();\r\n  };\r\n\r\n  const handleSetCurrentRevision = (index, item) => async () => {\r\n    setCurrentRevision(index);\r\n    let response = await new Resource({\r\n      route: `/admin/ajax/templates/${item.parent_template}/reviews/${item.id}`\r\n    }).getAll();\r\n    let revisionRootElement = JSON.parse(response.data[0].data);\r\n\r\n    let parsedData = getFactory().parseData(revisionRootElement);\r\n    getTemplateDataStorage().replaceAll(parsedData);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"history-panel__revision-actions\">\r\n        <div className=\"history-panel__discard\" onClick={handleClickDiscard}>\r\n          {iconsManager().renderIcon(\"deleteOne\", {\r\n            style: { width: 14, height: 14 },\r\n            className: \"history-panel__discard-icon\"\r\n          })}\r\n          DISCARD\r\n        </div>\r\n        <div className=\"history-panel__apply\" onClick={handleClickApply}>\r\n          APPLY\r\n        </div>\r\n      </div>\r\n      <div className=\"history-panel__title\">Revisions</div>\r\n      <div className=\"history-panel__content history-panel__content--revision\">\r\n        <Scrollbars autoHide autoHideTimeout={500} autoHideDuration={200}>\r\n          {arrayRevisions.map((item, index) => {\r\n            let secondsAgo = (Date.now() - Date.parse(item.updated_at)) / 1000;\r\n            let dateString;\r\n            if (secondsAgo < 100) {\r\n              dateString = `${secondsAgo} seconds ago`;\r\n            } else if (secondsAgo < 6000) {\r\n              dateString = `${Math.floor(secondsAgo / 100)} minutes ago`;\r\n            } else if (secondsAgo < 144000) {\r\n              dateString = `${Math.floor(secondsAgo / 6000)} hours ago`;\r\n            } else if (secondsAgo < 4320000) {\r\n              dateString = `${Math.floor(secondsAgo / 144000)} days ago`;\r\n            } else if (secondsAgo < 51840000) {\r\n              dateString = `${Math.floor(secondsAgo / 4320000)} months ago`;\r\n            } else {\r\n              dateString = `${Math.floor(secondsAgo / 51840000)} years ago`;\r\n            }\r\n            let date = new Date(item.updated_at);\r\n            dateString += ` (${date.toLocaleString(\"en\", {\r\n              month: \"short\"\r\n            })} ${date.getDate()} @ ${date.getHours()}:${\r\n              date.getMinutes() > 9\r\n                ? date.getMinutes()\r\n                : `0${date.getMinutes()}`\r\n            })`;\r\n            return (\r\n              <div\r\n                className={\r\n                  index === currentRevision\r\n                    ? \"history-panel__card-revision history-panel__card-revision--active\"\r\n                    : \"history-panel__card-revision\"\r\n                }\r\n                onClick={handleSetCurrentRevision(index, item)}\r\n                key={index}\r\n              >\r\n                <UserSvg className=\"history-panel__card-avatar\" />\r\n                <div className=\"history-panel__card-content\">\r\n                  <div className=\"history-panel__card-time\">{dateString}</div>\r\n                  <div className=\"history-panel__card-author\">\r\n                    Revision by {item.author}\r\n                  </div>\r\n                </div>\r\n                {index === currentRevision && (\r\n                  <StartFilled className=\"history-panel__card-icon\" />\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </Scrollbars>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default HistoryPanel;\r\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nexport function getDecoratedComponent(instanceRef) {\n  var currentRef = instanceRef.current;\n\n  if (currentRef == null) {\n    return null;\n  } else if (currentRef.decoratedRef) {\n    // go through the private field in decorateHandler to avoid the invariant hit\n    return currentRef.decoratedRef.current;\n  } else {\n    return currentRef;\n  }\n}\nexport function isClassComponent(Component) {\n  return Component && Component.prototype && typeof Component.prototype.render === 'function';\n}\nexport function isRefForwardingComponent(C) {\n  var _item$$$typeof;\n\n  var item = C;\n  return (item === null || item === void 0 ? void 0 : (_item$$$typeof = item.$$typeof) === null || _item$$$typeof === void 0 ? void 0 : _item$$$typeof.toString()) === 'Symbol(react.forward_ref)';\n}\nexport function isRefable(C) {\n  return isClassComponent(C) || isRefForwardingComponent(C);\n}\nexport function checkDecoratorArguments(functionName, signature) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var i = 0; i < (arguments.length <= 2 ? 0 : arguments.length - 2); i++) {\n      var arg = i + 2 < 2 || arguments.length <= i + 2 ? undefined : arguments[i + 2];\n\n      if (arg && arg.prototype && arg.prototype.render) {\n        // eslint-disable-next-line no-console\n        console.error('You seem to be applying the arguments in the wrong order. ' + \"It should be \".concat(functionName, \"(\").concat(signature, \")(Component), not the other way around. \") + 'Read more: http://react-dnd.github.io/react-dnd/docs/troubleshooting#you-seem-to-be-applying-the-arguments-in-the-wrong-order');\n        return;\n      }\n    }\n  }\n}\nexport function isFunction(input) {\n  return typeof input === 'function';\n}\nexport function noop() {// noop\n}\n\nfunction isObjectLike(input) {\n  return _typeof(input) === 'object' && input !== null;\n}\n\nexport function isPlainObject(input) {\n  if (!isObjectLike(input)) {\n    return false;\n  }\n\n  if (Object.getPrototypeOf(input) === null) {\n    return true;\n  }\n\n  var proto = input;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(input) === proto;\n}\nexport function isValidType(type, allowArray) {\n  return typeof type === 'string' || _typeof(type) === 'symbol' || !!allowArray && Array.isArray(type) && type.every(function (t) {\n    return isValidType(t, false);\n  });\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { isFunction, noop } from './utils';\n/**\n * Provides a set of static methods for creating Disposables.\n * @param {Function} action Action to run during the first call to dispose.\n * The action is guaranteed to be run at most once.\n */\n\nexport var Disposable = /*#__PURE__*/function () {\n  function Disposable(action) {\n    _classCallCheck(this, Disposable);\n\n    this.isDisposed = false;\n    this.action = isFunction(action) ? action : noop;\n  }\n  /**\n   * Validates whether the given object is a disposable\n   * @param {Object} Object to test whether it has a dispose method\n   * @returns {Boolean} true if a disposable object, else false.\n   */\n\n\n  _createClass(Disposable, [{\n    key: \"dispose\",\n    value:\n    /** Performs the task of cleaning up resources. */\n    function dispose() {\n      if (!this.isDisposed) {\n        this.action();\n        this.isDisposed = true;\n      }\n    }\n  }], [{\n    key: \"isDisposable\",\n    value: function isDisposable(d) {\n      return Boolean(d && isFunction(d.dispose));\n    }\n  }, {\n    key: \"_fixup\",\n    value: function _fixup(result) {\n      return Disposable.isDisposable(result) ? result : Disposable.empty;\n    }\n    /**\n     * Creates a disposable object that invokes the specified action when disposed.\n     * @param {Function} dispose Action to run during the first call to dispose.\n     * The action is guaranteed to be run at most once.\n     * @return {Disposable} The disposable object that runs the given action upon disposal.\n     */\n\n  }, {\n    key: \"create\",\n    value: function create(action) {\n      return new Disposable(action);\n    }\n  }]);\n\n  return Disposable;\n}();\n/**\n * Gets the disposable that does nothing when disposed.\n */\n\nDisposable.empty = {\n  dispose: noop\n};\n/**\n * Represents a group of disposable resources that are disposed together.\n * @constructor\n */\n\nexport var CompositeDisposable = /*#__PURE__*/function () {\n  function CompositeDisposable() {\n    _classCallCheck(this, CompositeDisposable);\n\n    this.isDisposed = false;\n\n    for (var _len = arguments.length, disposables = new Array(_len), _key = 0; _key < _len; _key++) {\n      disposables[_key] = arguments[_key];\n    }\n\n    this.disposables = disposables;\n  }\n  /**\n   * Adds a disposable to the CompositeDisposable or disposes the disposable if the CompositeDisposable is disposed.\n   * @param {Any} item Disposable to add.\n   */\n\n\n  _createClass(CompositeDisposable, [{\n    key: \"add\",\n    value: function add(item) {\n      if (this.isDisposed) {\n        item.dispose();\n      } else {\n        this.disposables.push(item);\n      }\n    }\n    /**\n     * Removes and disposes the first occurrence of a disposable from the CompositeDisposable.\n     * @param {Any} item Disposable to remove.\n     * @returns {Boolean} true if found; false otherwise.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(item) {\n      var shouldDispose = false;\n\n      if (!this.isDisposed) {\n        var idx = this.disposables.indexOf(item);\n\n        if (idx !== -1) {\n          shouldDispose = true;\n          this.disposables.splice(idx, 1);\n          item.dispose();\n        }\n      }\n\n      return shouldDispose;\n    }\n    /**\n     *  Disposes all disposables in the group and removes them from the group but\n     *  does not dispose the CompositeDisposable.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      if (!this.isDisposed) {\n        var len = this.disposables.length;\n        var currentDisposables = new Array(len);\n\n        for (var i = 0; i < len; i++) {\n          currentDisposables[i] = this.disposables[i];\n        }\n\n        this.disposables = [];\n\n        for (var _i = 0; _i < len; _i++) {\n          currentDisposables[_i].dispose();\n        }\n      }\n    }\n    /**\n     *  Disposes all disposables in the group and removes them from the group.\n     */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (!this.isDisposed) {\n        this.isDisposed = true;\n        var len = this.disposables.length;\n        var currentDisposables = new Array(len);\n\n        for (var i = 0; i < len; i++) {\n          currentDisposables[i] = this.disposables[i];\n        }\n\n        this.disposables = [];\n\n        for (var _i2 = 0; _i2 < len; _i2++) {\n          currentDisposables[_i2].dispose();\n        }\n      }\n    }\n  }]);\n\n  return CompositeDisposable;\n}();\n/**\n * Represents a disposable resource whose underlying disposable resource can\n * be replaced by another disposable resource, causing automatic disposal of\n * the previous underlying disposable resource.\n */\n\nexport var SerialDisposable = /*#__PURE__*/function () {\n  function SerialDisposable() {\n    _classCallCheck(this, SerialDisposable);\n\n    this.isDisposed = false;\n  }\n  /**\n   * Gets the underlying disposable.\n   * @returns {Any} the underlying disposable.\n   */\n\n\n  _createClass(SerialDisposable, [{\n    key: \"getDisposable\",\n    value: function getDisposable() {\n      return this.current;\n    }\n  }, {\n    key: \"setDisposable\",\n    value: function setDisposable(value) {\n      var shouldDispose = this.isDisposed;\n\n      if (!shouldDispose) {\n        var old = this.current;\n        this.current = value;\n\n        if (old) {\n          old.dispose();\n        }\n      }\n\n      if (shouldDispose && value) {\n        value.dispose();\n      }\n    }\n    /** Performs the task of cleaning up resources. */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (!this.isDisposed) {\n        this.isDisposed = true;\n        var old = this.current;\n        this.current = undefined;\n\n        if (old) {\n          old.dispose();\n        }\n      }\n    }\n  }]);\n\n  return SerialDisposable;\n}();","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createRef, Component } from 'react';\nimport { shallowEqual } from '@react-dnd/shallowequal';\nimport { invariant } from '@react-dnd/invariant';\nimport { DndContext } from '../core';\nimport { isPlainObject } from './utils';\nimport { Disposable, CompositeDisposable, SerialDisposable } from './disposables';\nimport { isRefable } from './utils';\nimport hoistStatics from 'hoist-non-react-statics';\nexport function decorateHandler(_ref) {\n  var DecoratedComponent = _ref.DecoratedComponent,\n      createHandler = _ref.createHandler,\n      createMonitor = _ref.createMonitor,\n      createConnector = _ref.createConnector,\n      registerHandler = _ref.registerHandler,\n      containerDisplayName = _ref.containerDisplayName,\n      getType = _ref.getType,\n      collect = _ref.collect,\n      options = _ref.options;\n  var _options$arePropsEqua = options.arePropsEqual,\n      arePropsEqual = _options$arePropsEqua === void 0 ? shallowEqual : _options$arePropsEqua;\n  var Decorated = DecoratedComponent;\n  var displayName = DecoratedComponent.displayName || DecoratedComponent.name || 'Component';\n\n  var DragDropContainer = /*#__PURE__*/function (_Component) {\n    _inherits(DragDropContainer, _Component);\n\n    var _super = _createSuper(DragDropContainer);\n\n    function DragDropContainer(props) {\n      var _this;\n\n      _classCallCheck(this, DragDropContainer);\n\n      _this = _super.call(this, props);\n      _this.decoratedRef = createRef();\n\n      _this.handleChange = function () {\n        var nextState = _this.getCurrentState();\n\n        if (!shallowEqual(nextState, _this.state)) {\n          _this.setState(nextState);\n        }\n      };\n\n      _this.disposable = new SerialDisposable();\n\n      _this.receiveProps(props);\n\n      _this.dispose();\n\n      return _this;\n    }\n\n    _createClass(DragDropContainer, [{\n      key: \"getHandlerId\",\n      value: function getHandlerId() {\n        return this.handlerId;\n      }\n    }, {\n      key: \"getDecoratedComponentInstance\",\n      value: function getDecoratedComponentInstance() {\n        invariant(this.decoratedRef.current, 'In order to access an instance of the decorated component, it must either be a class component or use React.forwardRef()');\n        return this.decoratedRef.current;\n      }\n    }, {\n      key: \"shouldComponentUpdate\",\n      value: function shouldComponentUpdate(nextProps, nextState) {\n        return !arePropsEqual(nextProps, this.props) || !shallowEqual(nextState, this.state);\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.disposable = new SerialDisposable();\n        this.currentType = undefined;\n        this.receiveProps(this.props);\n        this.handleChange();\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        if (!arePropsEqual(this.props, prevProps)) {\n          this.receiveProps(this.props);\n          this.handleChange();\n        }\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.dispose();\n      }\n    }, {\n      key: \"receiveProps\",\n      value: function receiveProps(props) {\n        if (!this.handler) {\n          return;\n        }\n\n        this.handler.receiveProps(props);\n        this.receiveType(getType(props));\n      }\n    }, {\n      key: \"receiveType\",\n      value: function receiveType(type) {\n        if (!this.handlerMonitor || !this.manager || !this.handlerConnector) {\n          return;\n        }\n\n        if (type === this.currentType) {\n          return;\n        }\n\n        this.currentType = type;\n\n        var _registerHandler = registerHandler(type, this.handler, this.manager),\n            _registerHandler2 = _slicedToArray(_registerHandler, 2),\n            handlerId = _registerHandler2[0],\n            unregister = _registerHandler2[1];\n\n        this.handlerId = handlerId;\n        this.handlerMonitor.receiveHandlerId(handlerId);\n        this.handlerConnector.receiveHandlerId(handlerId);\n        var globalMonitor = this.manager.getMonitor();\n        var unsubscribe = globalMonitor.subscribeToStateChange(this.handleChange, {\n          handlerIds: [handlerId]\n        });\n        this.disposable.setDisposable(new CompositeDisposable(new Disposable(unsubscribe), new Disposable(unregister)));\n      }\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        this.disposable.dispose();\n\n        if (this.handlerConnector) {\n          this.handlerConnector.receiveHandlerId(null);\n        }\n      }\n    }, {\n      key: \"getCurrentState\",\n      value: function getCurrentState() {\n        if (!this.handlerConnector) {\n          return {};\n        }\n\n        var nextState = collect(this.handlerConnector.hooks, this.handlerMonitor, this.props);\n\n        if (process.env.NODE_ENV !== 'production') {\n          invariant(isPlainObject(nextState), 'Expected `collect` specified as the second argument to ' + '%s for %s to return a plain object of props to inject. ' + 'Instead, received %s.', containerDisplayName, displayName, nextState);\n        }\n\n        return nextState;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        return _jsx(DndContext.Consumer, {\n          children: function children(_ref2) {\n            var dragDropManager = _ref2.dragDropManager;\n\n            _this2.receiveDragDropManager(dragDropManager);\n\n            if (typeof requestAnimationFrame !== 'undefined') {\n              requestAnimationFrame(function () {\n                var _this2$handlerConnect;\n\n                return (_this2$handlerConnect = _this2.handlerConnector) === null || _this2$handlerConnect === void 0 ? void 0 : _this2$handlerConnect.reconnect();\n              });\n            }\n\n            return _jsx(Decorated, Object.assign({}, _this2.props, _this2.getCurrentState(), {\n              // NOTE: if Decorated is a Function Component, decoratedRef will not be populated unless it's a refforwarding component.\n              ref: isRefable(Decorated) ? _this2.decoratedRef : null\n            }), void 0);\n          }\n        }, void 0);\n      }\n    }, {\n      key: \"receiveDragDropManager\",\n      value: function receiveDragDropManager(dragDropManager) {\n        if (this.manager !== undefined) {\n          return;\n        }\n\n        invariant(dragDropManager !== undefined, 'Could not find the drag and drop manager in the context of %s. ' + 'Make sure to render a DndProvider component in your top-level component. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/troubleshooting#could-not-find-the-drag-and-drop-manager-in-the-context', displayName, displayName);\n\n        if (dragDropManager === undefined) {\n          return;\n        }\n\n        this.manager = dragDropManager;\n        this.handlerMonitor = createMonitor(dragDropManager);\n        this.handlerConnector = createConnector(dragDropManager.getBackend());\n        this.handler = createHandler(this.handlerMonitor, this.decoratedRef);\n      }\n    }]);\n\n    return DragDropContainer;\n  }(Component);\n\n  DragDropContainer.DecoratedComponent = DecoratedComponent;\n  DragDropContainer.displayName = \"\".concat(containerDisplayName, \"(\").concat(displayName, \")\");\n  return hoistStatics(DragDropContainer, DecoratedComponent);\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { invariant } from '@react-dnd/invariant';\nimport { isPlainObject, getDecoratedComponent } from './utils';\nvar ALLOWED_SPEC_METHODS = ['canDrag', 'beginDrag', 'isDragging', 'endDrag'];\nvar REQUIRED_SPEC_METHODS = ['beginDrag'];\n\nvar SourceImpl = /*#__PURE__*/function () {\n  function SourceImpl(spec, monitor, ref) {\n    var _this = this;\n\n    _classCallCheck(this, SourceImpl);\n\n    this.props = null;\n\n    this.beginDrag = function () {\n      if (!_this.props) {\n        return;\n      }\n\n      var item = _this.spec.beginDrag(_this.props, _this.monitor, _this.ref.current);\n\n      if (process.env.NODE_ENV !== 'production') {\n        invariant(isPlainObject(item), 'beginDrag() must return a plain object that represents the dragged item. ' + 'Instead received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', item);\n      }\n\n      return item;\n    };\n\n    this.spec = spec;\n    this.monitor = monitor;\n    this.ref = ref;\n  }\n\n  _createClass(SourceImpl, [{\n    key: \"receiveProps\",\n    value: function receiveProps(props) {\n      this.props = props;\n    }\n  }, {\n    key: \"canDrag\",\n    value: function canDrag() {\n      if (!this.props) {\n        return false;\n      }\n\n      if (!this.spec.canDrag) {\n        return true;\n      }\n\n      return this.spec.canDrag(this.props, this.monitor);\n    }\n  }, {\n    key: \"isDragging\",\n    value: function isDragging(globalMonitor, sourceId) {\n      if (!this.props) {\n        return false;\n      }\n\n      if (!this.spec.isDragging) {\n        return sourceId === globalMonitor.getSourceId();\n      }\n\n      return this.spec.isDragging(this.props, this.monitor);\n    }\n  }, {\n    key: \"endDrag\",\n    value: function endDrag() {\n      if (!this.props) {\n        return;\n      }\n\n      if (!this.spec.endDrag) {\n        return;\n      }\n\n      this.spec.endDrag(this.props, this.monitor, getDecoratedComponent(this.ref));\n    }\n  }]);\n\n  return SourceImpl;\n}();\n\nexport function createSourceFactory(spec) {\n  Object.keys(spec).forEach(function (key) {\n    invariant(ALLOWED_SPEC_METHODS.indexOf(key) > -1, 'Expected the drag source specification to only have ' + 'some of the following keys: %s. ' + 'Instead received a specification with an unexpected \"%s\" key. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', ALLOWED_SPEC_METHODS.join(', '), key);\n    invariant(typeof spec[key] === 'function', 'Expected %s in the drag source specification to be a function. ' + 'Instead received a specification with %s: %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', key, key, spec[key]);\n  });\n  REQUIRED_SPEC_METHODS.forEach(function (key) {\n    invariant(typeof spec[key] === 'function', 'Expected %s in the drag source specification to be a function. ' + 'Instead received a specification with %s: %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', key, key, spec[key]);\n  });\n  return function createSource(monitor, ref) {\n    return new SourceImpl(spec, monitor, ref);\n  };\n}","import React, { Component } from \"react\";\r\n\r\nimport { DragSource } from \"react-dnd\";\r\n/**\r\n * Implements the drag source contract.\r\n */\r\nconst cardSource = {\r\n  beginDrag(props) {\r\n    return {\r\n      text: props.text\r\n    };\r\n  }\r\n};\r\n/**\r\n * Specifies the props to inject into your component.\r\n */\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    connectDragSource: connect.dragSource(),\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\nclass NavigationItem extends Component {\r\n  render() {\r\n    const { isDragging, connectDragSource, text, key } = this.props;\r\n    return connectDragSource(\r\n      <div\r\n        key={key}\r\n        style={{ opacity: isDragging ? 0.5 : 1, cursor: \"pointer\" }}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DragSource(\"CARD\", cardSource, collect)(NavigationItem);\r\n","import { invariant } from '@react-dnd/invariant';\nimport { registerSource, DragSourceMonitorImpl, SourceConnector } from '../internals';\nimport { checkDecoratorArguments, isPlainObject, isValidType } from './utils';\nimport { decorateHandler } from './decorateHandler';\nimport { createSourceFactory } from './createSourceFactory';\n/**\n * Decorates a component as a dragsource\n * @param type The dragsource type\n * @param spec The drag source specification\n * @param collect The props collector function\n * @param options DnD options\n */\n\nexport function DragSource(type, spec, collect) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  checkDecoratorArguments('DragSource', 'type, spec, collect[, options]', type, spec, collect, options);\n  var getType = type;\n\n  if (typeof type !== 'function') {\n    invariant(isValidType(type), 'Expected \"type\" provided as the first argument to DragSource to be ' + 'a string, or a function that returns a string given the current props. ' + 'Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', type);\n\n    getType = function getType() {\n      return type;\n    };\n  }\n\n  invariant(isPlainObject(spec), 'Expected \"spec\" provided as the second argument to DragSource to be ' + 'a plain object. Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', spec);\n  var createSource = createSourceFactory(spec);\n  invariant(typeof collect === 'function', 'Expected \"collect\" provided as the third argument to DragSource to be ' + 'a function that returns a plain object of props to inject. ' + 'Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', collect);\n  invariant(isPlainObject(options), 'Expected \"options\" provided as the fourth argument to DragSource to be ' + 'a plain object when specified. ' + 'Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', collect);\n  return function decorateSource(DecoratedComponent) {\n    return decorateHandler({\n      containerDisplayName: 'DragSource',\n      createHandler: createSource,\n      registerHandler: registerSource,\n      createConnector: function createConnector(backend) {\n        return new SourceConnector(backend);\n      },\n      createMonitor: function createMonitor(manager) {\n        return new DragSourceMonitorImpl(manager);\n      },\n      DecoratedComponent: DecoratedComponent,\n      getType: getType,\n      collect: collect,\n      options: options\n    });\n  };\n}","import React, { Component } from \"react\";\r\nimport { Tree, Icon } from \"@blueprintjs/core\";\r\nimport { connect } from \"react-redux\";\r\nimport NavigationItem from \"./NavigationItem\";\r\nimport {\r\n  editorSetCurrentElementByID,\r\n  deleteCurrentElementByID,\r\n  getEditor\r\n} from \"../helpers\";\r\nimport BaseElement from \"../classes/elements/BaseElement\";\r\nimport store from \"../store/store\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    templateData: getEditor().modules.templateDataStorage.getRootElement()\r\n  };\r\n};\r\n\r\nfunction isExpandable(name) {\r\n  switch (name) {\r\n    case \"root-element\":\r\n      return true;\r\n    case \"section\":\r\n      return true;\r\n    case \"section_widget\":\r\n      return true;\r\n    case \"column\":\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n}\r\nclass NavigationPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let template = [this.parseTemplate(props.templateData)];\r\n    this.state = {\r\n      template: template,\r\n      dragOver: false,\r\n      isDrag: false\r\n    };\r\n    this.handleExpand = this.handleExpand.bind(this);\r\n    this.handleCollapse = this.handleCollapse.bind(this);\r\n    this.showItem = this.showItem.bind(this);\r\n    this.deleteItem = this.deleteItem.bind(this);\r\n    store.subscribe(this.storeListener.bind(this));\r\n  }\r\n\r\n  handleExpand(node, nodePath) {\r\n    let currentTree = _.cloneDeep(this.state.template);\r\n    let currentNode = Tree.nodeFromPath(nodePath, currentTree);\r\n    currentNode.isExpanded = true;\r\n    this.setState(s => ({ ...s, template: currentTree }));\r\n  }\r\n\r\n  handleCollapse(node, nodePath) {\r\n    let currentTree = _.cloneDeep(this.state.template);\r\n    let currentNode = Tree.nodeFromPath(nodePath, currentTree);\r\n    currentNode.isExpanded = false;\r\n    this.setState(s => ({ ...s, template: currentTree }));\r\n  }\r\n\r\n  showItem(node, nodePath) {\r\n    editorSetCurrentElementByID(node.id);\r\n    getEditor().showSettingsPanel();\r\n  }\r\n\r\n  storeListener() {\r\n    const newTemplate = [\r\n      this.parseTemplate(\r\n        getEditor().modules.templateDataStorage.getRootElement()\r\n      )\r\n    ];\r\n    const currentTemplate = _.cloneDeep(this.state.template, []);\r\n    if (!_.isEqual(newTemplate, currentTemplate)) {\r\n      this.setState(s => ({ ...s, template: newTemplate }));\r\n    }\r\n  }\r\n\r\n  deleteItem(e, elementID) {\r\n    const confirm = window.confirm(\"Are you shure?\");\r\n    e.preventDefault();\r\n    if (confirm) {\r\n      const success = deleteCurrentElementByID(elementID);\r\n      if (success) {\r\n        let currentTree = _.cloneDeep(this.state.template);\r\n        let newTree = this.removeElementFromArray(currentTree, elementID);\r\n        this.setState(s => ({ ...s, template: newTree }));\r\n      }\r\n    }\r\n  }\r\n\r\n  removeElementFromArray(template, elementID) {\r\n    return template.filter(function f(item) {\r\n      if (item.childNodes.length > 0) {\r\n        return (item.childNodes = item.childNodes.filter(f)).length;\r\n      } else if (item.id === elementID) return false;\r\n      else return true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {BaseElement} template\r\n   */\r\n  parseTemplate(template) {\r\n    const expandable = isExpandable(template.getName());\r\n    return {\r\n      label: (\r\n        <NavigationItem\r\n          key={template.id}\r\n          text={template.getName()}\r\n          id={template.id}\r\n        ></NavigationItem>\r\n      ),\r\n      depth: 2,\r\n      name: template.getName(),\r\n      icon: expandable && \"folder-close\",\r\n      childNodes: template.children.map((item, index) =>\r\n        this.parseTemplate(item)\r\n      ),\r\n      hasCaret: expandable,\r\n      key: template.id,\r\n      isExpanded: expandable,\r\n      id: template.id,\r\n      onClick: (node, e) => this.showItem(e, node.id),\r\n      [parent != null && \"parent\"]: parent,\r\n      secondaryLabel: template.name !== \"root-element\" && (\r\n        <div>\r\n          <Icon\r\n            icon=\"trash\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={e => this.deleteItem(e, template.id)}\r\n          />\r\n        </div>\r\n      )\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ overflow: \"auto\" }}>\r\n        <Tree\r\n          contents={this.state.template}\r\n          onNodeExpand={this.handleExpand}\r\n          onNodeCollapse={this.handleCollapse}\r\n          onNodeDoubleClick={this.showItem}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavigationPanel);\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  padding: 25px 15px 0;\r\n  width: 100%;\r\n  overflow: auto;\r\n`;\r\n\r\nconst Heading = styled.p`\r\n  text-transform: uppercase;\r\n  font-size: 11px;\r\n`;\r\n\r\nconst MenuGroup = styled.div``;\r\n\r\nconst MenuItems = styled.div`\r\n  margin: 15px 0 25px;\r\n  -webkit-border-radius: 5px;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Item = styled.div`\r\n  display: table;\r\n  width: 100%;\r\n  height: 40px;\r\n  cursor: pointer;\r\n  margin-bottom: 1px;\r\n  padding: 10px;\r\n  background-color: #fff;\r\n`;\r\n\r\nclass CommonPanel extends Component {\r\n  render() {\r\n    return (\r\n      <StyledWrapper>\r\n        <MenuGroup>\r\n          <Heading>Design System</Heading>\r\n          <MenuItems>\r\n            <Item onClick={this.props.showGlobalColorsPanel}>\r\n              Global Colors\r\n            </Item>\r\n            <Item onClick={this.props.showGlobalFontsPanel}>Global Fonts</Item>\r\n            <Item onClick={this.props.showGlobalEffectsPanel}>\r\n              Global Effects\r\n            </Item>\r\n          </MenuItems>\r\n        </MenuGroup>\r\n      </StyledWrapper>\r\n    );\r\n  }\r\n}\r\nexport default CommonPanel;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  ControlGroup,\r\n  InputGroup,\r\n  Button,\r\n  Divider,\r\n  Icon\r\n} from \"@blueprintjs/core\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport invert from \"invert-color\";\r\nimport Resource from \"../classes/Resource\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setGlobalColors,\r\n  editGlobalColor,\r\n  editGlobalEffect\r\n} from \"../store/altrp-global-colors/actions\";\r\nimport { createGlobalColor, getTemplateDataStorage } from \"../helpers\";\r\nimport BaseElement from \"../classes/elements/BaseElement\";\r\n\r\nconst Panel = styled.div`\r\n  background-color: #fff;\r\n  padding: 25px 15px;\r\n  width: 100%;\r\n  margin: 20px 0;\r\n  overflow: auto;\r\n`;\r\n\r\nconst mapStateToProps = state => ({\r\n  colors: state.globalStyles.colors,\r\n  effects: state.globalStyles.effects\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setColors: colors => dispatch(setGlobalColors(colors)),\r\n  editColor: color => dispatch(editGlobalColor(color)),\r\n  editEffect: effect => dispatch(editGlobalEffect(effect))\r\n});\r\n\r\nclass GlobalColors extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      colors: props.colors\r\n    };\r\n    this.toggleColorPanel = this.toggleColorPanel.bind(this);\r\n    this.colorChange = this.colorChange.bind(this);\r\n    this.nameChange = this.nameChange.bind(this);\r\n    this.addItem = this.addItem.bind(this);\r\n    this.deleteItem = this.deleteItem.bind(this);\r\n    this.debounceChangeColor = this.debounceChangeColor.bind(this);\r\n    this.debounceChangeName = this.debounceChangeName.bind(this);\r\n    this.updateEffectColors = this.updateEffectColors.bind(this);\r\n    this.globalStyleResource = new Resource({\r\n      route: \"/admin/ajax/global_template_styles\"\r\n    });\r\n  }\r\n\r\n  toggleColorPanel(id) {\r\n    const colors = _.cloneDeep(this.state.colors, []);\r\n    let color = _.find(colors, color => color.id === id);\r\n    color.colorPanelOpen = !color.colorPanelOpen;\r\n    this.setState(s => ({ ...s, colors: colors }));\r\n  }\r\n\r\n  colorChange = (value, id) => {\r\n    const rgba = `rgba(${value.rgb.r}, ${value.rgb.g}, ${value.rgb.b}, ${value.rgb.a})`;\r\n    const hex = value.hex;\r\n    const rgb = value.rgb;\r\n    const colors = _.cloneDeep(this.state.colors, []);\r\n    let currentColor = _.find(colors, color => color.id === id);\r\n    currentColor.color = rgba;\r\n    currentColor.colorPickedHex = hex;\r\n    currentColor.colorRGB = rgb;\r\n    this.setState(\r\n      s => ({ ...s, colors: colors }),\r\n      () => this.props.setColors(colors)\r\n    );\r\n    const data = {\r\n      color: rgba,\r\n      colorPickedHex: hex,\r\n      colorRGB: rgb,\r\n      guid: currentColor.guid\r\n    };\r\n    this.debounceChangeColor(data, id);\r\n  };\r\n\r\n  debounceChangeColor = _.debounce((color, id) => {\r\n    console.log(color);\r\n    this.globalStyleResource\r\n      .put(id, {\r\n        settings: { ...color },\r\n        type: \"color\"\r\n      })\r\n      .then(res => {\r\n        this.props.editColor({ ...color, id: id });\r\n        this.updateEffectColors(color);\r\n        getTemplateDataStorage()\r\n          .getRootElement()\r\n          .children.forEach(child => {\r\n            this.recursiveWalkTree(child, color.guid, color);\r\n          });\r\n      });\r\n  }, 50);\r\n\r\n  /**\r\n   * Обновление цвета в эффекте\r\n   * @param {*} color\r\n   */\r\n  updateEffectColors(color) {\r\n    const guid = color.guid;\r\n    this.props.effects.forEach(effect => {\r\n      const check = effect.globalColor == guid;\r\n      if (check) {\r\n        const newEffectColor = {\r\n          ...effect,\r\n          colorRGB: color.colorRGB,\r\n          color: color.color,\r\n          colorPickedHex: color.colorPickedHex\r\n        };\r\n        this.globalStyleResource\r\n          .put(effect.id, { settings: newEffectColor })\r\n          .then(res => {\r\n            this.props.editEffect(newEffectColor);\r\n            getTemplateDataStorage()\r\n              .getRootElement()\r\n              .children.forEach(child => {\r\n                this.recursiveWalkTree(\r\n                  child,\r\n                  newEffectColor.guid,\r\n                  newEffectColor\r\n                );\r\n              });\r\n          });\r\n      }\r\n      // this.globalStyleResource.put();\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {BaseElement} template\r\n   * @param {String} guid\r\n   * @param {*} color\r\n   */\r\n  recursiveWalkTree(template, guid, color) {\r\n    if (Array.isArray(template)) {\r\n      template?.forEach(\r\n        /**\r\n         * @param {BaseElement} templateItem\r\n         */\r\n        templateItem => {\r\n          const hasGlobal = Boolean(templateItem.hasGlobal(guid));\r\n          if (hasGlobal) {\r\n            templateItem.updateAllGlobals(guid, color);\r\n          }\r\n          this.recursiveWalkTree(templateItem, guid, color);\r\n        }\r\n      );\r\n    } else this.recursiveUpdate(template, guid, color);\r\n  }\r\n\r\n  /**\r\n   * @param {BaseElement} template\r\n   * @param {String} guid\r\n   * @param {*} color\r\n   */\r\n  recursiveUpdate(template, guid, color) {\r\n    if (template.hasGlobal(guid)) {\r\n      template.updateAllGlobals(guid, color);\r\n    }\r\n    template.children?.forEach(\r\n      /**\r\n       * @param {BaseElement} child\r\n       */\r\n      child => {\r\n        if (child.hasGlobal(guid)) {\r\n          child.updateAllGlobals(guid, color);\r\n        }\r\n\r\n        child.children.length > 0 &&\r\n          this.recursiveWalkTree(child.children, guid, color);\r\n      }\r\n    );\r\n  }\r\n\r\n  nameChange = (value, id) => {\r\n    if (value.length === 0) throw \"Value cannot be empty\";\r\n    const colors = _.cloneDeep(this.state.colors, []);\r\n    let color = _.find(colors, color => color.id === id);\r\n    color.name = value;\r\n    this.setState(\r\n      s => ({ ...s, colors: colors }),\r\n      () => this.props.setColors(colors)\r\n    );\r\n    this.debounceChangeName(value, id);\r\n  };\r\n\r\n  debounceChangeName = _.debounce((value, id) => {\r\n    this.globalStyleResource.put(id, {\r\n      settings: { name: value },\r\n      type: \"color\"\r\n    });\r\n  }, 150);\r\n\r\n  addItem(e) {\r\n    const color = {};\r\n    color.settings = JSON.stringify(createGlobalColor());\r\n    color.type = \"color\";\r\n    this.globalStyleResource.post(color).then(response => {\r\n      const colors = [\r\n        ...this.state.colors,\r\n        {\r\n          id: response.id,\r\n          guid: response.guid,\r\n          ...response.settings\r\n        }\r\n      ];\r\n      this.setState(\r\n        s => ({ ...s, colors: colors }),\r\n        () => this.props.setColors(colors)\r\n      );\r\n    });\r\n  }\r\n\r\n  deleteItem(id) {\r\n    const confirm = window.confirm(\"Are you shure?\");\r\n    if (confirm) {\r\n      let colors = _.cloneDeep(this.state.colors, []);\r\n      colors = colors.filter(item => item.id !== id);\r\n      this.setState(\r\n        s => ({ ...s, colors: colors }),\r\n        () => this.props.setColors(colors)\r\n      );\r\n      this.globalStyleResource.delete(id);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Panel>\r\n        {this.state.colors.length > 0 ? (\r\n          this.state.colors.map(item => {\r\n            return (\r\n              <React.Fragment key={item.id}>\r\n                <ControlGroup\r\n                  key={item.id}\r\n                  style={{\r\n                    marginBottom: \"10px\"\r\n                  }}\r\n                >\r\n                  <InputGroup\r\n                    style={{\r\n                      width: \"140px\"\r\n                    }}\r\n                    onChange={e => this.nameChange(e.target.value, item.id)}\r\n                    value={item.name}\r\n                  ></InputGroup>\r\n\r\n                  <Button onClick={e => this.deleteItem(item.id)}>\r\n                    <Icon icon=\"trash\"></Icon>\r\n                  </Button>\r\n                  <Button\r\n                    onClick={e => this.toggleColorPanel(item.id)}\r\n                    style={{\r\n                      backgroundColor: item.color,\r\n                      width: \"70px\",\r\n                      color: invert(item.colorPickedHex, {\r\n                        black: \"#000000\",\r\n                        white: \"#FFFFFF\",\r\n                        threshold: 0.45\r\n                      })\r\n                    }}\r\n                  >\r\n                    {item.colorPickedHex}\r\n                  </Button>\r\n                </ControlGroup>\r\n                <div\r\n                  className={!item.colorPanelOpen ? \" control-color-hide\" : \"\"}\r\n                >\r\n                  <SketchPicker\r\n                    presetColors={[]}\r\n                    color={item.color}\r\n                    onChange={color => this.colorChange(color, item.id)}\r\n                    style={{\r\n                      padding: 0,\r\n                      boxShadow: \"none\"\r\n                    }}\r\n                  ></SketchPicker>\r\n                </div>\r\n              </React.Fragment>\r\n            );\r\n          })\r\n        ) : (\r\n          <div>Color list empty</div>\r\n        )}\r\n        <Divider></Divider>\r\n        <Button style={{ width: \"100%\" }} onClick={this.addItem}>\r\n          Add Item\r\n        </Button>\r\n      </Panel>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GlobalColors);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  ControlGroup,\r\n  FormGroup,\r\n  InputGroup,\r\n  Button,\r\n  Slider,\r\n  MenuItem\r\n} from \"@blueprintjs/core\";\r\nimport { Select } from \"@blueprintjs/select\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport Resource from \"../classes/Resource\";\r\nimport GlobalPresetColors from \"./controllers/GlobalPresetColors\";\r\n\r\nconst typeOptions = [\r\n  {\r\n    value: \" \",\r\n    label: \"outline\",\r\n    key: 0\r\n  },\r\n  {\r\n    value: \"inset\",\r\n    label: \"Inset\",\r\n    key: 1\r\n  }\r\n];\r\n\r\nclass GlobalEffectItemAdd extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.defaultValues = {\r\n      blur: 0,\r\n      color: `rgba(255, 255, 255, 1)`,\r\n      colorPickedHex: \"#FFFFFF\",\r\n      colorRGB: {\r\n        r: 255,\r\n        g: 255,\r\n        b: 255,\r\n        a: 1\r\n      },\r\n      globalColor: \"\",\r\n      horizontal: 0,\r\n      opacity: 1,\r\n      spread: 0,\r\n      type: \" \",\r\n      vertical: 0,\r\n      name: \"\"\r\n    };\r\n    const { isNew, effect } = props;\r\n    this.state = {\r\n      effect: isNew ? this.defaultValues : effect,\r\n      edit: false\r\n    };\r\n    this.nameChange = this.nameChange.bind(this);\r\n    this.colorChange = this.colorChange.bind(this);\r\n    this.onSlide = this.onSlide.bind(this);\r\n    this.onSelect = this.onSelect.bind(this);\r\n    this.globalColor = this.globalColor.bind(this);\r\n    this.onSaveEffect = this.onSaveEffect.bind(this);\r\n    this.globalStyleResource = new Resource({\r\n      route: \"/admin/ajax/global_template_styles\"\r\n    });\r\n  }\r\n\r\n  globalColor = value => {\r\n    const guid = value.guid;\r\n    console.log(value);\r\n    const rgba = `rgba(${value.colorRGB.r}, ${value.colorRGB.g}, ${value.colorRGB.b}, ${value.colorRGB.a})`;\r\n    const hex = value.colorPickedHex;\r\n    const rgb = value.colorRGB;\r\n    this.setState(s => ({\r\n      ...s,\r\n      effect: {\r\n        ...s.effect,\r\n        color: rgba,\r\n        colorPickedHex: hex,\r\n        colorRGB: rgb,\r\n        globalColor: guid\r\n      }\r\n    }));\r\n  };\r\n\r\n  colorChange = value => {\r\n    const rgba = `rgba(${value.rgb.r}, ${value.rgb.g}, ${value.rgb.b}, ${value.rgb.a})`;\r\n    const hex = value.hex;\r\n    const rgb = value.rgb;\r\n    this.setState(s => ({\r\n      ...s,\r\n      effect: {\r\n        ...s.effect,\r\n        color: rgba,\r\n        colorPickedHex: hex,\r\n        colorRGB: rgb,\r\n        globalColor: \"\"\r\n      }\r\n    }));\r\n  };\r\n  /**\r\n   *\r\n   * @param {Event} event\r\n   */\r\n  nameChange(event) {\r\n    const string = event.target.value;\r\n    this.setState(s => ({\r\n      ...s,\r\n      effect: {\r\n        ...s.effect,\r\n        name: string\r\n      }\r\n    }));\r\n  }\r\n\r\n  onSlide(value, setting) {\r\n    const { effect } = this.state;\r\n    effect[setting] = value;\r\n    this.setState(s => ({ ...s, effect: effect }));\r\n  }\r\n\r\n  onSelect(event, value) {\r\n    this.setState(s => ({ ...s, effect: { ...s.effect, type: value } }));\r\n  }\r\n\r\n  onSaveEffect(event) {\r\n    event.preventDefault();\r\n    const { effect } = this.state;\r\n    const send = {\r\n      type: \"effect\",\r\n      settings: JSON.stringify(effect)\r\n    };\r\n    this.globalStyleResource.post(send).then(success => {\r\n      const effect = {\r\n        id: success.id,\r\n        guid: success.guid,\r\n        ...success.settings\r\n      };\r\n      this.props.addEffect(effect);\r\n      this.props.onSaveEffectClose();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { effect } = this.state;\r\n    return (\r\n      <>\r\n        <ControlGroup vertical>\r\n          <form onSubmit={this.onSaveEffect}>\r\n            <FormGroup label=\"Enter Effect Name\">\r\n              <InputGroup\r\n                required\r\n                name=\"name\"\r\n                id=\"text-input\"\r\n                placeholder=\"Enter Effect Name\"\r\n                defaultValue={effect.name}\r\n                onChange={this.nameChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup label=\"Choose Effect Color\">\r\n              <div\r\n                className={\"control-color-colorPicker\"}\r\n                style={{\r\n                  position: \"relative\",\r\n                  marginTop: `0`\r\n                }}\r\n              >\r\n                <SketchPicker\r\n                  color={effect.color}\r\n                  presetColors={[]}\r\n                  onChange={color => this.colorChange(color)}\r\n                  style={{\r\n                    padding: 0,\r\n                    boxShadow: \"none\"\r\n                  }}\r\n                ></SketchPicker>\r\n                <GlobalPresetColors\r\n                  changeValue={color => {\r\n                    console.log(color);\r\n                    this.globalColor(color);\r\n                    // this._changeValue(color);\r\n                    // this.setState(state=>({...state, colorRGB: color.colorRGB}))\r\n                  }}\r\n                ></GlobalPresetColors>\r\n              </div>\r\n            </FormGroup>\r\n            <FormGroup label=\"Blur\">\r\n              <Slider\r\n                onChange={value => this.onSlide(value, \"blur\")}\r\n                min={0}\r\n                max={100}\r\n                stepSize={1}\r\n                labelStepSize={10}\r\n                showTrackFill={true}\r\n                value={effect.blur}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup label=\"Horizontal displacement\">\r\n              <Slider\r\n                onChange={value => this.onSlide(value, \"horizontal\")}\r\n                min={-100}\r\n                max={100}\r\n                stepSize={1}\r\n                labelStepSize={25}\r\n                value={effect.horizontal}\r\n                showTrackFill={true}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup label=\"Vertical displacement\">\r\n              <Slider\r\n                onChange={value => this.onSlide(value, \"vertical\")}\r\n                min={-100}\r\n                max={100}\r\n                stepSize={1}\r\n                labelStepSize={25}\r\n                value={effect.vertical}\r\n                showTrackFill={true}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup label=\"Spread\">\r\n              <Slider\r\n                onChange={value => this.onSlide(value, \"spread\")}\r\n                min={-100}\r\n                max={100}\r\n                stepSize={1}\r\n                labelStepSize={25}\r\n                value={effect.spread}\r\n                showTrackFill={true}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup label=\"Position\" inline={true}>\r\n              <Select\r\n                activeItem={\r\n                  typeOptions.filter(item => item.value == effect.type)[0]\r\n                }\r\n                itemRenderer={item => (\r\n                  <MenuItem\r\n                    key={item.key}\r\n                    text={item.label}\r\n                    onClick={e => this.onSelect(e, item.value)}\r\n                  />\r\n                )}\r\n                items={typeOptions}\r\n                noResults={<MenuItem disabled={true} text=\"No results.\" />}\r\n              >\r\n                <Button\r\n                  text={\r\n                    typeOptions.filter(item => item.value == effect.type)[0]\r\n                      .label\r\n                  }\r\n                  rightIcon=\"double-caret-vertical\"\r\n                />\r\n              </Select>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Button type=\"submit\" style={{ width: \"100%\" }}>\r\n                Save\r\n              </Button>\r\n            </FormGroup>\r\n          </form>\r\n        </ControlGroup>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GlobalEffectItemAdd;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  ControlGroup,\r\n  FormGroup,\r\n  InputGroup,\r\n  Button,\r\n  Slider,\r\n  MenuItem,\r\n  Collapse\r\n} from \"@blueprintjs/core\";\r\nimport { Select } from \"@blueprintjs/select\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport Resource from \"../classes/Resource\";\r\nimport GlobalPresetColors from \"./controllers/GlobalPresetColors\";\r\n\r\nconst typeOptions = [\r\n  {\r\n    value: \" \",\r\n    label: \"outline\",\r\n    key: 0\r\n  },\r\n  {\r\n    value: \"inset\",\r\n    label: \"Inset\",\r\n    key: 1\r\n  }\r\n];\r\n\r\nclass GlobalEffectItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.defaultValues = {\r\n      blur: 0,\r\n      color: `rgba(255, 255, 255, 1)`,\r\n      colorPickedHex: \"#FFFFFF\",\r\n      colorRGB: {\r\n        r: 255,\r\n        g: 255,\r\n        b: 255,\r\n        a: 1\r\n      },\r\n      horizontal: 0,\r\n      opacity: 1,\r\n      spread: 0,\r\n      type: \" \",\r\n      vertical: 0,\r\n      name: \"\"\r\n    };\r\n    const { isNew, effect } = props;\r\n    this.state = {\r\n      effect: isNew ? this.defaultValues : effect,\r\n      edit: false\r\n    };\r\n    this.nameChange = this.nameChange.bind(this);\r\n    this.colorChange = this.colorChange.bind(this);\r\n    this.onSlide = this.onSlide.bind(this);\r\n    this.onSelect = this.onSelect.bind(this);\r\n    this.onSaveEffect = this.onSaveEffect.bind(this);\r\n    this.onDeleteEffect = this.onDeleteEffect.bind(this);\r\n    this.globalColor = this.globalColor.bind(this);\r\n    this.globalStyleResource = new Resource({\r\n      route: \"/admin/ajax/global_template_styles\"\r\n    });\r\n  }\r\n\r\n  colorChange = value => {\r\n    const rgba = `rgba(${value.rgb.r}, ${value.rgb.g}, ${value.rgb.b}, ${value.rgb.a})`;\r\n    const hex = value.hex;\r\n    const rgb = value.rgb;\r\n    this.setState(s => ({\r\n      ...s,\r\n      effect: {\r\n        ...s.effect,\r\n        color: rgba,\r\n        colorPickedHex: hex,\r\n        colorRGB: rgb,\r\n        globalColor: \"\"\r\n      }\r\n    }));\r\n  };\r\n  /**\r\n   *\r\n   * @param {Event} event\r\n   */\r\n  nameChange(event) {\r\n    const string = event.target.value;\r\n    this.setState(s => ({\r\n      ...s,\r\n      effect: {\r\n        ...s.effect,\r\n        name: string\r\n      }\r\n    }));\r\n  }\r\n\r\n  onSlide(value, setting) {\r\n    const { effect } = this.state;\r\n    effect[setting] = value;\r\n    this.setState(s => ({ ...s, effect: effect }));\r\n  }\r\n\r\n  onSelect(event, value) {\r\n    this.setState(s => ({ ...s, effect: { ...s.effect, type: value } }));\r\n  }\r\n\r\n  onSaveEffect(event) {\r\n    event.preventDefault();\r\n    const { effect } = this.state;\r\n    console.log(effect);\r\n    const send = {\r\n      type: \"effect\",\r\n      settings: effect\r\n    };\r\n    this.globalStyleResource.put(effect.id, send).then(success => {\r\n      this.props.editEffect(effect);\r\n      this.setState(\r\n        s => ({ ...s, edit: false }),\r\n        () => this.props.updateAllTree(effect)\r\n      );\r\n    });\r\n  }\r\n  onDeleteEffect(event) {\r\n    const confirmation = window.confirm(\"Are you shure?\");\r\n    event.preventDefault();\r\n    if (confirmation) {\r\n      const { effect } = this.state;\r\n      this.globalStyleResource.delete(effect.id).then(success => {\r\n        this.props.deleteEffect(effect);\r\n        // this.props.onSaveEffectClose();\r\n      });\r\n    }\r\n  }\r\n\r\n  globalColor = value => {\r\n    const guid = value.guid;\r\n    console.log(guid);\r\n    const rgba = `rgba(${value.colorRGB.r}, ${value.colorRGB.g}, ${value.colorRGB.b}, ${value.colorRGB.a})`;\r\n    const hex = value.colorPickedHex;\r\n    const rgb = value.colorRGB;\r\n    this.setState(s => ({\r\n      ...s,\r\n      effect: {\r\n        ...s.effect,\r\n        color: rgba,\r\n        colorPickedHex: hex,\r\n        colorRGB: rgb,\r\n        globalColor: guid\r\n      }\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { effect } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        {!this.props.isNew && (\r\n          <Button\r\n            style={{ width: \"100%\" }}\r\n            onClick={e => this.setState(s => ({ ...s, edit: !s.edit }))}\r\n          >\r\n            {!this.props.isNew && effect.name}\r\n          </Button>\r\n        )}\r\n        <Collapse isOpen={this.state.edit}>\r\n          <ControlGroup vertical>\r\n            <form onSubmit={this.onSaveEffect}>\r\n              <FormGroup label=\"Enter Effect Name\">\r\n                <InputGroup\r\n                  required\r\n                  name=\"name\"\r\n                  id=\"text-input\"\r\n                  placeholder=\"Enter Effect Name\"\r\n                  defaultValue={effect.name}\r\n                  onChange={this.nameChange}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup label=\"Choose Effect Color\">\r\n                <div\r\n                  className={\"control-color-colorPicker\"}\r\n                  style={{\r\n                    position: \"relative\",\r\n                    marginTop: `0`\r\n                  }}\r\n                >\r\n                  <SketchPicker\r\n                    color={effect.color}\r\n                    presetColors={[]}\r\n                    onChange={color => this.colorChange(color)}\r\n                    style={{\r\n                      padding: 0,\r\n                      boxShadow: \"none\"\r\n                    }}\r\n                  ></SketchPicker>\r\n                  <GlobalPresetColors\r\n                    changeValue={color => {\r\n                      console.log(color);\r\n                      this.globalColor(color);\r\n                      // this._changeValue(color);\r\n                      // this.setState(state=>({...state, colorRGB: color.colorRGB}))\r\n                    }}\r\n                  ></GlobalPresetColors>\r\n                </div>\r\n              </FormGroup>\r\n              <FormGroup label=\"Blur\">\r\n                <Slider\r\n                  onChange={value => this.onSlide(value, \"blur\")}\r\n                  min={0}\r\n                  max={100}\r\n                  stepSize={1}\r\n                  labelStepSize={10}\r\n                  showTrackFill={true}\r\n                  value={effect.blur}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup label=\"Horizontal displacement\">\r\n                <Slider\r\n                  onChange={value => this.onSlide(value, \"horizontal\")}\r\n                  min={-100}\r\n                  max={100}\r\n                  stepSize={1}\r\n                  labelStepSize={25}\r\n                  value={effect.horizontal}\r\n                  showTrackFill={true}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup label=\"Vertical displacement\">\r\n                <Slider\r\n                  onChange={value => this.onSlide(value, \"vertical\")}\r\n                  min={-100}\r\n                  max={100}\r\n                  stepSize={1}\r\n                  labelStepSize={25}\r\n                  value={effect.vertical}\r\n                  showTrackFill={true}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup label=\"Spread\">\r\n                <Slider\r\n                  onChange={value => this.onSlide(value, \"spread\")}\r\n                  min={-100}\r\n                  max={100}\r\n                  stepSize={1}\r\n                  labelStepSize={25}\r\n                  value={effect.spread}\r\n                  showTrackFill={true}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup label=\"Position\" inline={true}>\r\n                <Select\r\n                  activeItem={\r\n                    typeOptions.filter(item => item.value == effect.type)[0]\r\n                  }\r\n                  itemRenderer={item => (\r\n                    <MenuItem\r\n                      key={item.key}\r\n                      text={item.label}\r\n                      onClick={e => this.onSelect(e, item.value)}\r\n                    />\r\n                  )}\r\n                  items={typeOptions}\r\n                  noResults={<MenuItem disabled={true} text=\"No results.\" />}\r\n                >\r\n                  <Button\r\n                    text={\r\n                      typeOptions.filter(item => item.value == effect.type)[0]\r\n                        .label\r\n                    }\r\n                    rightIcon=\"double-caret-vertical\"\r\n                  />\r\n                </Select>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Button\r\n                  type=\"submit\"\r\n                  style={{ width: \"100%\", marginBottom: \"5px\" }}\r\n                >\r\n                  Edit\r\n                </Button>\r\n                <Button\r\n                  intent=\"danger\"\r\n                  onClick={this.onDeleteEffect}\r\n                  style={{ width: \"100%\" }}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </FormGroup>\r\n            </form>\r\n          </ControlGroup>\r\n        </Collapse>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GlobalEffectItem;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button, Divider, Collapse } from \"@blueprintjs/core\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addGlobalEffect,\r\n  editGlobalEffect,\r\n  deleteGlobalEffect\r\n} from \"../store/altrp-global-colors/actions\";\r\nimport BaseElement from \"../classes/elements/BaseElement\";\r\nimport GlobalEffectItemAdd from \"./GlobalEffectItemAdd\";\r\nimport GlobalEffectItem from \"./GlobalEffectItem\";\r\nimport { getTemplateDataStorage } from \"../helpers\";\r\n\r\nconst Panel = styled.div`\r\n  background-color: #fff;\r\n  padding: 25px 20px;\r\n  width: 100%;\r\n  margin: 20px 0;\r\n  overflow: auto;\r\n`;\r\n\r\nconst mapStateToProps = state => ({\r\n  effects: state.globalStyles.effects || [],\r\n  colors: state.globalStyles.colors || []\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addEffect: effect => dispatch(addGlobalEffect(effect)),\r\n  editEffect: effect => dispatch(editGlobalEffect(effect)),\r\n  deleteEffect: effect => dispatch(deleteGlobalEffect(effect))\r\n});\r\n\r\nclass GlobalEffects extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      new: false,\r\n      effects: props.effects\r\n    };\r\n    this.addItem = this.addItem.bind(this);\r\n    this.deleteItem = this.deleteItem.bind(this);\r\n    this.onSaveEffect = this.onSaveEffect.bind(this);\r\n    this.updateAllTree = this.updateAllTree.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevState, prevProps) {\r\n    if (\r\n      !_.isEqual(\r\n        JSON.stringify(prevProps.colors),\r\n        JSON.stringify(this.props.colors)\r\n      )\r\n    ) {\r\n      console.log(\"IM WATCHING UPDATES\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {BaseElement} template\r\n   * @param {String} guid\r\n   * @param {*} effect\r\n   */\r\n  recursiveWalkTree(template, guid, effect) {\r\n    console.log(template);\r\n    if (Array.isArray(template)) {\r\n      template?.forEach(\r\n        /**\r\n         * @param {BaseElement} templateItem\r\n         */\r\n        templateItem => {\r\n          const hasGlobal = Boolean(templateItem.hasGlobal(guid));\r\n          if (hasGlobal) {\r\n            templateItem.updateAllGlobals(guid, effect);\r\n          }\r\n          this.recursiveWalkTree(templateItem, guid, effect);\r\n        }\r\n      );\r\n    } else this.recursiveUpdate(template, guid, effect);\r\n  }\r\n\r\n  /**\r\n   * @param {BaseElement} template\r\n   * @param {String} guid\r\n   * @param {*} effect\r\n   */\r\n  recursiveUpdate(template, guid, effect) {\r\n    if (template.hasGlobal(guid)) {\r\n      template.updateAllGlobals(guid, effect);\r\n    }\r\n    template.children?.forEach(\r\n      /**\r\n       * @param {BaseElement} child\r\n       */\r\n      child => {\r\n        if (child.hasGlobal(guid)) {\r\n          child.updateAllGlobals(guid, effect);\r\n        }\r\n\r\n        child.children.length > 0 &&\r\n          this.recursiveWalkTree(child.children, guid, effect);\r\n      }\r\n    );\r\n  }\r\n\r\n  addItem(e) {\r\n    this.setState(s => ({ new: !s.new }));\r\n  }\r\n\r\n  deleteItem(id) {\r\n    const confirm = window.confirm(\"Are you shure?\");\r\n    if (confirm) {\r\n      let effects = _.cloneDeep(this.state.effects, []);\r\n      effects = effects.filter(item => item.id !== id);\r\n      this.setState(\r\n        s => ({ ...s, effects: effects }),\r\n        () => this.props.setEffect(effects)\r\n      );\r\n      this.globalStyleResource.delete(id);\r\n    }\r\n  }\r\n  /**\r\n   * Рекурсивно обновляет эффект во всех элементах\r\n   * @param {*} effect\r\n   */\r\n  updateAllTree(effect) {\r\n    getTemplateDataStorage()\r\n      .getRootElement()\r\n      .children.forEach(child => {\r\n        this.recursiveWalkTree(child, effect.guid, effect);\r\n      });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Event} e\r\n   */\r\n  onSaveEffect() {\r\n    this.setState(s => ({ ...s, new: false }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Panel>\r\n        <Collapse isOpen={this.state.new}>\r\n          <GlobalEffectItemAdd\r\n            addEffect={this.props.addEffect}\r\n            onSaveEffectClose={this.onSaveEffect}\r\n            isNew={true}\r\n          />\r\n        </Collapse>\r\n        {!this.state.new &&\r\n          (this.props.effects.length > 0 ? (\r\n            this.props.effects.map((item, index) => (\r\n              <div key={index} style={{ marginBottom: \"10px\" }}>\r\n                <GlobalEffectItem\r\n                  effect={item}\r\n                  editEffect={this.props.editEffect}\r\n                  deleteEffect={this.props.deleteEffect}\r\n                  onSaveEffectClose={this.onSaveEffect}\r\n                  updateAllTree={this.updateAllTree}\r\n                />\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div>Effects list empty</div>\r\n          ))}\r\n        <Divider></Divider>\r\n        <Button style={{ width: \"100%\" }} onClick={this.addItem}>\r\n          {!this.state.new ? \"Add Item\" : \"Cancel\"}\r\n        </Button>\r\n      </Panel>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GlobalEffects);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  ControlGroup,\r\n  FormGroup,\r\n  InputGroup,\r\n  Button,\r\n  NumericInput,\r\n  MenuItem,\r\n  HTMLSelect\r\n} from \"@blueprintjs/core\";\r\nimport { Select } from \"@blueprintjs/select\";\r\nimport Resource from \"../classes/Resource\";\r\nimport { altrpFontsSet } from \"../../../../front-app/src/js/constants/fonts\";\r\n\r\nconst familyOptions = _.toPairs(altrpFontsSet).map(([font, type]) => {\r\n  return {\r\n    label: font,\r\n    value: font\r\n  };\r\n});\r\n\r\nconst units = [\"px\", \"em\", \"rem\", \"%\", \"vw\", \"vh\"];\r\n\r\nconst weightOptions = [\r\n  {\r\n    value: \"100\",\r\n    label: \"100\"\r\n  },\r\n  {\r\n    value: \"200\",\r\n    label: \"200\"\r\n  },\r\n  {\r\n    value: \"300\",\r\n    label: \"300\"\r\n  },\r\n  {\r\n    value: \"400\",\r\n    label: \"400\"\r\n  },\r\n  {\r\n    value: \"500\",\r\n    label: \"500\"\r\n  },\r\n  {\r\n    value: \"600\",\r\n    label: \"600\"\r\n  },\r\n  {\r\n    value: \"700\",\r\n    label: \"700\"\r\n  },\r\n  {\r\n    value: \"800\",\r\n    label: \"800\"\r\n  },\r\n  {\r\n    value: \"900\",\r\n    label: \"900\"\r\n  },\r\n  {\r\n    value: \"bold\",\r\n    label: \"bold\"\r\n  },\r\n  {\r\n    value: \"normal\",\r\n    label: \"normal\"\r\n  },\r\n  {\r\n    value: \"bolder\",\r\n    label: \"bolder\"\r\n  },\r\n  {\r\n    value: \"lighter\",\r\n    label: \"lighter\"\r\n  }\r\n];\r\nconst transformOptions = [\r\n  {\r\n    value: \"none\",\r\n    label: \"default\",\r\n    key: 0\r\n  },\r\n  {\r\n    value: \"capitalize\",\r\n    label: \"capitalize\",\r\n    key: 1\r\n  },\r\n  {\r\n    value: \"uppercase\",\r\n    label: \"uppercase\",\r\n    key: 2\r\n  },\r\n  {\r\n    value: \"lowercase\",\r\n    label: \"lowercase\",\r\n    key: 3\r\n  }\r\n];\r\nconst styleOptions = [\r\n  {\r\n    value: \"normal\",\r\n    label: \"normal\",\r\n    key: 0\r\n  },\r\n  {\r\n    value: \"italic\",\r\n    label: \"italic\",\r\n    key: 1\r\n  },\r\n  {\r\n    value: \"oblique\",\r\n    label: \"oblique\",\r\n    key: 2\r\n  }\r\n];\r\nconst decorationOptions = [\r\n  {\r\n    value: \"none\",\r\n    label: \"none\",\r\n    key: 0\r\n  },\r\n  {\r\n    value: \"underline\",\r\n    label: \"underline\",\r\n    key: 1\r\n  },\r\n  {\r\n    value: \"overline\",\r\n    label: \"overline\",\r\n    key: 3\r\n  },\r\n  {\r\n    value: \"line-through\",\r\n    label: \"line-through\",\r\n    key: 4\r\n  }\r\n];\r\nclass GlobalFontItemAdd extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.defaultValues = {\r\n      name: \"\",\r\n      decoration: \"\",\r\n      family: \"Roboto\",\r\n      lineHeight: 1,\r\n      size: 16,\r\n      spacing: 0,\r\n      sizeUnit: \"px\",\r\n      weight: \"normal\",\r\n      style: \"\",\r\n      transform: \"\"\r\n    };\r\n    const { isNew, font } = props;\r\n    this.state = {\r\n      font: isNew ? this.defaultValues : font,\r\n      edit: false\r\n    };\r\n    this.nameChange = this.nameChange.bind(this);\r\n    this.onSelect = this.onSelect.bind(this);\r\n    this.changeUnit = this.changeUnit.bind(this);\r\n    this.changeSize = this.changeSize.bind(this);\r\n    this.changeWeight = this.changeWeight.bind(this);\r\n    this.changeTransform = this.changeTransform.bind(this);\r\n    this.changeStyle = this.changeStyle.bind(this);\r\n    this.changeDecoration = this.changeDecoration.bind(this);\r\n    this.changeLineHeight = this.changeLineHeight.bind(this);\r\n    this.changeSpacing = this.changeSpacing.bind(this);\r\n    this.onSaveFont = this.onSaveFont.bind(this);\r\n    this.globalStyleResource = new Resource({\r\n      route: \"/admin/ajax/global_template_styles\"\r\n    });\r\n  }\r\n  /**\r\n   *\r\n   * @param {Event} event\r\n   */\r\n  nameChange(event) {\r\n    const string = event.target.value;\r\n    this.setState(s => ({\r\n      ...s,\r\n      font: {\r\n        ...s.font,\r\n        name: string\r\n      }\r\n    }));\r\n  }\r\n\r\n  onSelect(event, font) {\r\n    this.setState(s => ({\r\n      ...s,\r\n      font: { ...s.font, family: font.value, label: font.label }\r\n    }));\r\n  }\r\n\r\n  onSaveFont(event) {\r\n    event.preventDefault();\r\n    const { font } = this.state;\r\n    const send = {\r\n      type: \"font\",\r\n      settings: JSON.stringify(font)\r\n    };\r\n    this.globalStyleResource.post(send).then(success => {\r\n      const font = {\r\n        id: success.id,\r\n        guid: success.guid,\r\n        ...success.settings\r\n      };\r\n      this.props.addFont(font);\r\n      this.props.onSaveFontClose();\r\n    });\r\n  }\r\n\r\n  changeUnit(event) {\r\n    const unit = event.target.value;\r\n    this.setState(s => ({ ...s, font: { ...s.font, sizeUnit: unit } }));\r\n  }\r\n\r\n  changeSize(value) {\r\n    this.setState(s => ({ ...s, font: { ...s.font, size: value } }));\r\n  }\r\n\r\n  changeLineHeight(value) {\r\n    this.setState(s => ({ ...s, font: { ...s.font, lineHeight: value } }));\r\n  }\r\n\r\n  changeSpacing(value) {\r\n    this.setState(s => ({ ...s, font: { ...s.font, spacing: value } }));\r\n  }\r\n\r\n  changeWeight(event) {\r\n    const weight = event.target.value;\r\n    this.setState(s => ({ ...s, font: { ...s.font, weight: weight } }));\r\n  }\r\n\r\n  changeTransform(event) {\r\n    const transform = event.target.value;\r\n    this.setState(s => ({ ...s, font: { ...s.font, transform: transform } }));\r\n  }\r\n\r\n  changeStyle(event) {\r\n    const style = event.target.value;\r\n    this.setState(s => ({ ...s, font: { ...s.font, style: style } }));\r\n  }\r\n\r\n  changeDecoration(event) {\r\n    const decoration = event.target.value;\r\n    this.setState(s => ({ ...s, font: { ...s.font, decoration: decoration } }));\r\n  }\r\n\r\n  render() {\r\n    const { font } = this.state;\r\n    return (\r\n      <>\r\n        <ControlGroup vertical>\r\n          <form onSubmit={this.onSaveFont}>\r\n            <FormGroup label=\"Enter Font Name\">\r\n              <InputGroup\r\n                required\r\n                name=\"name\"\r\n                id=\"text-input\"\r\n                placeholder=\"Enter Font Name\"\r\n                defaultValue={font?.name || \"\"}\r\n                onChange={this.nameChange}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup label=\"Family\" inline={true}>\r\n              <Select\r\n                itemPredicate={(query, item) => item.label.indexOf(query) >= 0}\r\n                activeItem={\r\n                  familyOptions.filter(item => item.value == font.family)[0]\r\n                }\r\n                itemRenderer={item => (\r\n                  <MenuItem\r\n                    text={item.label}\r\n                    onClick={e => this.onSelect(e, item)}\r\n                  />\r\n                )}\r\n                items={familyOptions}\r\n                noResults={<MenuItem disabled={true} text=\"No results.\" />}\r\n              >\r\n                <Button\r\n                  text={\r\n                    familyOptions.filter(item => item.value == font.family)[0]\r\n                      .label\r\n                  }\r\n                  rightIcon=\"double-caret-vertical\"\r\n                />\r\n              </Select>\r\n            </FormGroup>\r\n            <FormGroup label=\"Size\" inline={true}>\r\n              <ControlGroup fill={true} vertical={false}>\r\n                <NumericInput\r\n                  style={{\r\n                    width: \"100px\"\r\n                  }}\r\n                  value={font.size}\r\n                  placeholder=\"Enter size\"\r\n                  min={0}\r\n                  max={200}\r\n                  stepSize={0.1}\r\n                  onValueChange={this.changeSize}\r\n                />\r\n                <HTMLSelect\r\n                  onChange={this.changeUnit}\r\n                  options={units}\r\n                  defaultChecked={font.sizeUnit}\r\n                  value={font.sizeUnit}\r\n                />\r\n              </ControlGroup>\r\n            </FormGroup>\r\n            <FormGroup label=\"Weight\" inline={true}>\r\n              <ControlGroup fill={true} vertical={false}>\r\n                <HTMLSelect\r\n                  onChange={this.changeWeight}\r\n                  options={weightOptions}\r\n                  defaultChecked={font.weight}\r\n                  value={font.weight}\r\n                />\r\n              </ControlGroup>\r\n            </FormGroup>\r\n            <FormGroup label=\"Transform\" inline={true}>\r\n              <ControlGroup fill={true} vertical={false}>\r\n                <HTMLSelect\r\n                  onChange={this.changeTransform}\r\n                  options={transformOptions}\r\n                  defaultChecked={font.transform}\r\n                  value={font.transform}\r\n                />\r\n              </ControlGroup>\r\n            </FormGroup>\r\n            <FormGroup label=\"Style\" inline={true}>\r\n              <ControlGroup fill={true} vertical={false}>\r\n                <HTMLSelect\r\n                  onChange={this.changeStyle}\r\n                  options={styleOptions}\r\n                  defaultChecked={font.style}\r\n                  value={font.style}\r\n                />\r\n              </ControlGroup>\r\n            </FormGroup>\r\n            <FormGroup label=\"Decoration\" inline={true}>\r\n              <ControlGroup fill={true} vertical={false}>\r\n                <HTMLSelect\r\n                  onChange={this.changeDecoration}\r\n                  options={decorationOptions}\r\n                  defaultChecked={font.decoration}\r\n                  value={font.decoration}\r\n                />\r\n              </ControlGroup>\r\n            </FormGroup>\r\n            <FormGroup label=\"Line height\" inline={true}>\r\n              <ControlGroup fill={true} vertical={false}>\r\n                <NumericInput\r\n                  style={{\r\n                    width: \"100px\"\r\n                  }}\r\n                  value={font.lineHeight}\r\n                  placeholder=\"Enter line height\"\r\n                  stepSize={0.1}\r\n                  min={0.1}\r\n                  max={10}\r\n                  onValueChange={this.changeLineHeight}\r\n                />\r\n              </ControlGroup>\r\n            </FormGroup>\r\n            <FormGroup label=\"Letter spacing\" inline={true}>\r\n              <ControlGroup fill={true} vertical={false}>\r\n                <NumericInput\r\n                  style={{\r\n                    width: \"100px\"\r\n                  }}\r\n                  value={font.spacing}\r\n                  placeholder=\"Enter letter spacing\"\r\n                  stepSize={0.1}\r\n                  min={-5}\r\n                  max={10}\r\n                  onValueChange={this.changeSpacing}\r\n                />\r\n              </ControlGroup>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Button type=\"submit\" style={{ width: \"100%\" }}>\r\n                Save\r\n              </Button>\r\n            </FormGroup>\r\n          </form>\r\n        </ControlGroup>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GlobalFontItemAdd;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  ControlGroup,\r\n  FormGroup,\r\n  InputGroup,\r\n  Button,\r\n  MenuItem,\r\n  NumericInput,\r\n  HTMLSelect,\r\n  Collapse\r\n} from \"@blueprintjs/core\";\r\nimport { Select } from \"@blueprintjs/select\";\r\nimport Resource from \"../classes/Resource\";\r\nimport { altrpFontsSet } from \"../../../../front-app/src/js/constants/fonts\";\r\n\r\nconst familyOptions = _.toPairs(altrpFontsSet).map(([font, type]) => {\r\n  return {\r\n    label: font,\r\n    value: font\r\n  };\r\n});\r\n\r\nconst units = [\"px\", \"em\", \"rem\", \"%\", \"vw\", \"vh\"];\r\n\r\nconst weightOptions = [\r\n  {\r\n    value: \"100\",\r\n    label: \"100\"\r\n  },\r\n  {\r\n    value: \"200\",\r\n    label: \"200\"\r\n  },\r\n  {\r\n    value: \"300\",\r\n    label: \"300\"\r\n  },\r\n  {\r\n    value: \"400\",\r\n    label: \"400\"\r\n  },\r\n  {\r\n    value: \"500\",\r\n    label: \"500\"\r\n  },\r\n  {\r\n    value: \"600\",\r\n    label: \"600\"\r\n  },\r\n  {\r\n    value: \"700\",\r\n    label: \"700\"\r\n  },\r\n  {\r\n    value: \"800\",\r\n    label: \"800\"\r\n  },\r\n  {\r\n    value: \"900\",\r\n    label: \"900\"\r\n  },\r\n  {\r\n    value: \"bold\",\r\n    label: \"bold\"\r\n  },\r\n  {\r\n    value: \"normal\",\r\n    label: \"normal\"\r\n  },\r\n  {\r\n    value: \"bolder\",\r\n    label: \"bolder\"\r\n  },\r\n  {\r\n    value: \"lighter\",\r\n    label: \"lighter\"\r\n  }\r\n];\r\nconst transformOptions = [\r\n  {\r\n    value: \"none\",\r\n    label: \"default\",\r\n    key: 0\r\n  },\r\n  {\r\n    value: \"capitalize\",\r\n    label: \"capitalize\",\r\n    key: 1\r\n  },\r\n  {\r\n    value: \"uppercase\",\r\n    label: \"uppercase\",\r\n    key: 2\r\n  },\r\n  {\r\n    value: \"lowercase\",\r\n    label: \"lowercase\",\r\n    key: 3\r\n  }\r\n];\r\nconst styleOptions = [\r\n  {\r\n    value: \"normal\",\r\n    label: \"normal\",\r\n    key: 0\r\n  },\r\n  {\r\n    value: \"italic\",\r\n    label: \"italic\",\r\n    key: 1\r\n  },\r\n  {\r\n    value: \"oblique\",\r\n    label: \"oblique\",\r\n    key: 2\r\n  }\r\n];\r\nconst decorationOptions = [\r\n  {\r\n    value: \"none\",\r\n    label: \"none\",\r\n    key: 0\r\n  },\r\n  {\r\n    value: \"underline\",\r\n    label: \"underline\",\r\n    key: 1\r\n  },\r\n  {\r\n    value: \"overline\",\r\n    label: \"overline\",\r\n    key: 3\r\n  },\r\n  {\r\n    value: \"line-through\",\r\n    label: \"line-through\",\r\n    key: 4\r\n  }\r\n];\r\nclass GlobalFontItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.defaultValues = {\r\n      name: \"\",\r\n      decoration: \"\",\r\n      family: \"Roboto\",\r\n      lineHeight: 1,\r\n      size: 16,\r\n      spacing: 0,\r\n      sizeUnit: \"px\",\r\n      weight: \"normal\",\r\n      style: \"\",\r\n      transform: \"\"\r\n    };\r\n\r\n    const { isNew, font } = props;\r\n    this.state = {\r\n      font: isNew ? this.defaultValues : font,\r\n      edit: false\r\n    };\r\n    this.nameChange = this.nameChange.bind(this);\r\n    this.onSelect = this.onSelect.bind(this);\r\n    this.changeUnit = this.changeUnit.bind(this);\r\n    this.changeSize = this.changeSize.bind(this);\r\n    this.changeWeight = this.changeWeight.bind(this);\r\n    this.changeTransform = this.changeTransform.bind(this);\r\n    this.changeStyle = this.changeStyle.bind(this);\r\n    this.changeDecoration = this.changeDecoration.bind(this);\r\n    this.changeLineHeight = this.changeLineHeight.bind(this);\r\n    this.changeSpacing = this.changeSpacing.bind(this);\r\n    this.onSaveFont = this.onSaveFont.bind(this);\r\n    this.onDeleteFont = this.onDeleteFont.bind(this);\r\n    this.globalStyleResource = new Resource({\r\n      route: \"/admin/ajax/global_template_styles\"\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Event} event\r\n   */\r\n  nameChange(event) {\r\n    const string = event.target.value;\r\n    this.setState(s => ({\r\n      ...s,\r\n      font: {\r\n        ...s.font,\r\n        name: string\r\n      }\r\n    }));\r\n  }\r\n\r\n  onSelect(event, font) {\r\n    console.log(font);\r\n    this.setState(s => ({\r\n      ...s,\r\n      font: { ...s.font, family: font.value, label: font.label }\r\n    }));\r\n  }\r\n\r\n  changeUnit(event) {\r\n    const unit = event.target.value;\r\n    this.setState(s => ({ ...s, font: { ...s.font, sizeUnit: unit } }));\r\n  }\r\n\r\n  changeSize(value) {\r\n    this.setState(s => ({ ...s, font: { ...s.font, size: value } }));\r\n  }\r\n\r\n  changeLineHeight(value) {\r\n    this.setState(s => ({ ...s, font: { ...s.font, lineHeight: value } }));\r\n  }\r\n\r\n  changeSpacing(value) {\r\n    this.setState(s => ({ ...s, font: { ...s.font, spacing: value } }));\r\n  }\r\n\r\n  changeWeight(event) {\r\n    const weight = event.target.value;\r\n    this.setState(s => ({ ...s, font: { ...s.font, weight: weight } }));\r\n  }\r\n\r\n  changeTransform(event) {\r\n    const transform = event.target.value;\r\n    this.setState(s => ({ ...s, font: { ...s.font, transform: transform } }));\r\n  }\r\n\r\n  changeStyle(event) {\r\n    const style = event.target.value;\r\n    this.setState(s => ({ ...s, font: { ...s.font, style: style } }));\r\n  }\r\n\r\n  changeDecoration(event) {\r\n    const decoration = event.target.value;\r\n    this.setState(s => ({ ...s, font: { ...s.font, decoration: decoration } }));\r\n  }\r\n\r\n  onSaveFont(event) {\r\n    event.preventDefault();\r\n    const { font } = this.state;\r\n    const send = {\r\n      type: \"font\",\r\n      settings: font\r\n    };\r\n    this.globalStyleResource.put(font.id, send).then(success => {\r\n      this.props.editFont(font);\r\n      this.setState(\r\n        s => ({ ...s, edit: false }),\r\n        () => this.props.updateAllTree(font)\r\n      );\r\n    });\r\n  }\r\n\r\n  onDeleteFont(event) {\r\n    const confirmation = window.confirm(\"Are you shure?\");\r\n    event.preventDefault();\r\n    if (confirmation) {\r\n      const { font } = this.state;\r\n      this.globalStyleResource.delete(font.id).then(success => {\r\n        this.props.deleteFont(font);\r\n        // this.props.onSaveEffectClose();\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { font } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {\" \"}\r\n        {!this.props.isNew && (\r\n          <Button\r\n            style={{ width: \"100%\" }}\r\n            onClick={e => this.setState(s => ({ ...s, edit: !s.edit }))}\r\n          >\r\n            {!this.props.isNew && font.name}\r\n          </Button>\r\n        )}\r\n        <Collapse isOpen={this.state.edit}>\r\n          <ControlGroup vertical>\r\n            <form onSubmit={this.onSaveFont}>\r\n              <FormGroup label=\"Enter Font Name\">\r\n                <InputGroup\r\n                  required\r\n                  name=\"name\"\r\n                  id=\"text-input\"\r\n                  placeholder=\"Enter Font Name\"\r\n                  defaultValue={font.name}\r\n                  onChange={this.nameChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup label=\"Family\" inline={true}>\r\n                <Select\r\n                  itemPredicate={(query, item) =>\r\n                    item.label.indexOf(query) >= 0\r\n                  }\r\n                  activeItem={\r\n                    familyOptions.filter(item => item.value == font.family)[0]\r\n                  }\r\n                  itemRenderer={item => (\r\n                    <MenuItem\r\n                      text={item.label}\r\n                      onClick={e => this.onSelect(e, item)}\r\n                    />\r\n                  )}\r\n                  items={familyOptions}\r\n                  noResults={<MenuItem disabled={true} text=\"No results.\" />}\r\n                >\r\n                  <Button\r\n                    text={\r\n                      familyOptions.filter(item => item.value == font.family)[0]\r\n                        .label\r\n                    }\r\n                    rightIcon=\"double-caret-vertical\"\r\n                  />\r\n                </Select>\r\n              </FormGroup>\r\n              <FormGroup label=\"Size\" inline={true}>\r\n                <ControlGroup fill={true} vertical={false}>\r\n                  <NumericInput\r\n                    style={{\r\n                      width: \"100px\"\r\n                    }}\r\n                    value={font.size}\r\n                    placeholder=\"Enter size\"\r\n                    min={0}\r\n                    max={200}\r\n                    stepSize={0.1}\r\n                    onValueChange={this.changeSize}\r\n                  />\r\n                  <HTMLSelect\r\n                    onChange={this.changeUnit}\r\n                    options={units}\r\n                    defaultChecked={font.sizeUnit}\r\n                    value={font.sizeUnit}\r\n                  />\r\n                </ControlGroup>\r\n              </FormGroup>\r\n              <FormGroup label=\"Weight\" inline={true}>\r\n                <ControlGroup fill={true} vertical={false}>\r\n                  <HTMLSelect\r\n                    onChange={this.changeWeight}\r\n                    options={weightOptions}\r\n                    defaultChecked={font.weight}\r\n                    value={font.weight}\r\n                  />\r\n                </ControlGroup>\r\n              </FormGroup>\r\n              <FormGroup label=\"Transform\" inline={true}>\r\n                <ControlGroup fill={true} vertical={false}>\r\n                  <HTMLSelect\r\n                    onChange={this.changeTransform}\r\n                    options={transformOptions}\r\n                    defaultChecked={font.transform}\r\n                    value={font.transform}\r\n                  />\r\n                </ControlGroup>\r\n              </FormGroup>\r\n              <FormGroup label=\"Style\" inline={true}>\r\n                <ControlGroup fill={true} vertical={false}>\r\n                  <HTMLSelect\r\n                    onChange={this.changeStyle}\r\n                    options={styleOptions}\r\n                    defaultChecked={font.style}\r\n                    value={font.style}\r\n                  />\r\n                </ControlGroup>\r\n              </FormGroup>\r\n              <FormGroup label=\"Decoration\" inline={true}>\r\n                <ControlGroup fill={true} vertical={false}>\r\n                  <HTMLSelect\r\n                    onChange={this.changeDecoration}\r\n                    options={decorationOptions}\r\n                    defaultChecked={font.decoration}\r\n                    value={font.decoration}\r\n                  />\r\n                </ControlGroup>\r\n              </FormGroup>\r\n              <FormGroup label=\"Line height\" inline={true}>\r\n                <ControlGroup fill={true} vertical={false}>\r\n                  <NumericInput\r\n                    style={{\r\n                      width: \"100px\"\r\n                    }}\r\n                    value={font.lineHeight}\r\n                    placeholder=\"Enter line height\"\r\n                    stepSize={0.1}\r\n                    min={0.1}\r\n                    max={10}\r\n                    onValueChange={this.changeLineHeight}\r\n                  />\r\n                </ControlGroup>\r\n              </FormGroup>\r\n              <FormGroup label=\"Letter spacing\" inline={true}>\r\n                <ControlGroup fill={true} vertical={false}>\r\n                  <NumericInput\r\n                    style={{\r\n                      width: \"100px\"\r\n                    }}\r\n                    value={font.spacing}\r\n                    placeholder=\"Enter letter spacing\"\r\n                    stepSize={0.1}\r\n                    min={-5}\r\n                    max={10}\r\n                    onValueChange={this.changeSpacing}\r\n                  />\r\n                </ControlGroup>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Button type=\"submit\" style={{ width: \"100%\" }}>\r\n                  Save\r\n                </Button>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Button\r\n                  intent=\"danger\"\r\n                  onClick={this.onDeleteFont}\r\n                  style={{ width: \"100%\" }}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </FormGroup>\r\n            </form>\r\n          </ControlGroup>\r\n        </Collapse>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GlobalFontItem;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button, Divider, Collapse } from \"@blueprintjs/core\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addGlobalFont,\r\n  editGlobalFont,\r\n  deleteGlobalFont\r\n} from \"../store/altrp-global-colors/actions\";\r\nimport BaseElement from \"../classes/elements/BaseElement\";\r\nimport GlobalFontItemAdd from \"./GlobalFontItemAdd\";\r\nimport GlobalFontItem from \"./GlobalFontItem\";\r\nimport { getTemplateDataStorage } from \"../helpers\";\r\n\r\nconst Panel = styled.div`\r\n  background-color: #fff;\r\n  padding: 25px 20px;\r\n  width: 100%;\r\n  margin: 20px 0;\r\n  overflow: auto;\r\n`;\r\n\r\nconst mapStateToProps = state => ({\r\n  fonts: state.globalStyles.fonts || []\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addFont: font => dispatch(addGlobalFont(font)),\r\n  editFont: font => dispatch(editGlobalFont(font)),\r\n  deleteFont: font => dispatch(deleteGlobalFont(font))\r\n});\r\n\r\nclass GlobalFonts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      new: false,\r\n      fonts: props.fonts\r\n    };\r\n    this.addItem = this.addItem.bind(this);\r\n    this.deleteItem = this.deleteItem.bind(this);\r\n    this.onSaveFont = this.onSaveFont.bind(this);\r\n    this.updateAllTree = this.updateAllTree.bind(this);\r\n  }\r\n\r\n  /**\r\n   * @param {BaseElement} template\r\n   * @param {String} guid\r\n   * @param {*} font\r\n   */\r\n  recursiveWalkTree(template, guid, font) {\r\n    console.log(template);\r\n    if (Array.isArray(template)) {\r\n      template?.forEach(\r\n        /**\r\n         * @param {BaseElement} templateItem\r\n         */\r\n        templateItem => {\r\n          const hasGlobal = Boolean(templateItem.hasGlobal(guid));\r\n          if (hasGlobal) {\r\n            templateItem.updateAllGlobals(guid, font);\r\n          }\r\n          this.recursiveWalkTree(templateItem, guid, font);\r\n        }\r\n      );\r\n    } else this.recursiveUpdate(template, guid, font);\r\n  }\r\n\r\n  /**\r\n   * @param {BaseElement} template\r\n   * @param {String} guid\r\n   * @param {*} font\r\n   */\r\n  recursiveUpdate(template, guid, font) {\r\n    if (template.hasGlobal(guid)) {\r\n      template.updateAllGlobals(guid, font);\r\n    }\r\n    template.children?.forEach(\r\n      /**\r\n       * @param {BaseElement} child\r\n       */\r\n      child => {\r\n        if (child.hasGlobal(guid)) {\r\n          child.updateAllGlobals(guid, font);\r\n        }\r\n\r\n        child.children.length > 0 &&\r\n          this.recursiveWalkTree(child.children, guid, font);\r\n      }\r\n    );\r\n  }\r\n\r\n  addItem(e) {\r\n    this.setState(\r\n      s => ({ new: !s.new }),\r\n      () => {\r\n        console.log(this.state.new);\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteItem(id) {\r\n    const confirm = window.confirm(\"Are you shure?\");\r\n    if (confirm) {\r\n      let effects = _.cloneDeep(this.state.effects, []);\r\n      effects = effects.filter(item => item.id !== id);\r\n      this.setState(\r\n        s => ({ ...s, effects: effects }),\r\n        () => this.props.setEffect(effects)\r\n      );\r\n      this.globalStyleResource.delete(id);\r\n    }\r\n  }\r\n  /**\r\n   * Рекурсивно обновляет эффект во всех элементах\r\n   * @param {*} effect\r\n   */\r\n  updateAllTree(effect) {\r\n    getTemplateDataStorage()\r\n      .getRootElement()\r\n      .children.forEach(child => {\r\n        this.recursiveWalkTree(child, effect.guid, effect);\r\n      });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Event} e\r\n   */\r\n  onSaveFont() {\r\n    this.setState(s => ({ ...s, new: false }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Panel>\r\n        <Collapse isOpen={this.state.new}>\r\n          <GlobalFontItemAdd\r\n            addFont={this.props.addFont}\r\n            onSaveFontClose={this.onSaveFont}\r\n            isNew={true}\r\n          />\r\n        </Collapse>\r\n        {!this.state.new &&\r\n          (this.props.fonts.length > 0 ? (\r\n            this.props.fonts.map((item, index) => (\r\n              <div key={index} style={{ marginBottom: \"10px\" }}>\r\n                <GlobalFontItem\r\n                  font={item}\r\n                  editFont={this.props.editFont}\r\n                  deleteFont={this.props.deleteFont}\r\n                  onSaveFontClose={this.onSaveFont}\r\n                  updateAllTree={this.updateAllTree}\r\n                />\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div>Font list empty</div>\r\n          ))}\r\n        <Divider></Divider>\r\n        <Button style={{ width: \"100%\" }} onClick={this.addItem}>\r\n          {!this.state.new ? \"Add Item\" : \"Cancel\"}\r\n        </Button>\r\n      </Panel>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GlobalFonts);\r\n","import Chevron from \"../../svgs/chevron.svg\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getEditor } from \"../helpers\";\r\nimport CONSTANTS from \"../consts\";\r\nconst TEMPLATE_TYPES_WITHOUT_CONDITIONS = [\r\n  'email',\r\n];\r\nclass UpdateButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isShowed: false\r\n    };\r\n    this.saveTemplate = this.saveTemplate.bind(this);\r\n  }\r\n  saveTemplate(e) {\r\n    getEditor().modules.saveImportModule.saveTemplate();\r\n  }\r\n  showModal() {\r\n    this.props.toggleModalWindow();\r\n  }\r\n\r\n  render() {\r\n    let buttonClasses = \"btn font_montserrat font_500 btn_grey\";\r\n    switch (this.props.templateStatus) {\r\n      case CONSTANTS.TEMPLATE_UPDATED:\r\n        {\r\n          buttonClasses += \" btn_disabled \";\r\n        }\r\n        break;\r\n      case CONSTANTS.TEMPLATE_NEED_UPDATE:\r\n        {\r\n          buttonClasses += \" btn_active \";\r\n        }\r\n        break;\r\n    }\r\n    let showTemplateConditions = true;\r\n    if(this.props.templateData.template_type\r\n        && (TEMPLATE_TYPES_WITHOUT_CONDITIONS.indexOf(this.props.templateData.template_type) >= 0)){\r\n      showTemplateConditions = false;\r\n    }\r\n    return (\r\n      <div className={\"control-group d-flex \" + (showTemplateConditions ? '' : 'control-group_single')}>\r\n        <button className={buttonClasses} onClick={this.saveTemplate}>\r\n          UPDATE\r\n        </button>\r\n        {showTemplateConditions && <button onClick={() => this.showModal()} className=\"btn btn_grey\">\r\n          <Chevron className=\"icon\" />\r\n        </button>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    templateStatus: state.templateStatus.status,\r\n    templateData: state.templateData,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(UpdateButton);\r\n","import React, {Component} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Times from \"../../../svgs/times.svg\";\r\nimport { assetsToggle } from \"../../store/assets-browser/actions\";\r\nimport Resource from \"../Resource\";\r\nimport '../../../sass/assets-browser.scss';\r\nimport toDataURL from \"../../helpers/to-data-url\";\r\n\r\n\r\nclass AssetsBrowser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.tabClick = this.tabClick.bind(this);\r\n    this.toggleBrowser = this.toggleBrowser.bind(this);\r\n    this.selectAsset = this.selectAsset.bind(this);\r\n    this.chooseAsset = this.chooseAsset.bind(this);\r\n    this.state = {\r\n      // activeTab: 'icons',\r\n      activeTab: \"media\",\r\n      tabs: [\r\n        // {\r\n        //   name: 'upload',\r\n        //   title: 'Upload Media File',\r\n        // },\r\n        {\r\n          name: \"icons\",\r\n          title: \"Icons Library\"\r\n        },\r\n        {\r\n          name: \"media\",\r\n          title: \"Media Library\"\r\n        },\r\n        {\r\n          name: \"video\", //TODO: логично было бы эту вкладку назвать Media\r\n          title: \"Video Library\"\r\n        }\r\n      ],\r\n      svgAssets: [],\r\n      assets: this.getAssets(\"media\"),\r\n      // assets: this.getAssets('icons'),\r\n      selectedAsset: null,\r\n      mediaAssets: [],\r\n      videoAssets: []\r\n    };\r\n    this.mediaResource = new Resource({ route: \"/admin/ajax/media?type=image\" });\r\n    this.svgResource  =new Resource({ route: \"/admin/ajax/media?type=svg\" });\r\n    this.videoResource = new Resource({ route: \"/admin/ajax/media?type=media\" });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, nextContext) {\r\n    if(this.props.tabs && prevProps.tabs !== this.props.tabs) {\r\n      let tabs = [...this.state.tabs];\r\n      let activeTab;\r\n      tabs = tabs.filter(tab=>{\r\n        if(this.props.tabs.indexOf(tab.name) !== -1 && ! activeTab){\r\n          activeTab = tab.name;\r\n        }\r\n        return this.props.tabs.indexOf(tab.name) !== -1;\r\n      });\r\n      if(! activeTab){\r\n        activeTab = 'media';\r\n      }\r\n      this.setState(state=>({...state, tabs, activeTab }), ()=>{this.setActiveTab(activeTab)})\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      this.videoResource.getAll()\r\n        .then(videoAssets => this.setState({ videoAssets }));\r\n\r\n      let resSvg = await this.svgResource.getAll();\r\n      this.setState(state => {\r\n        return { ...state, svgAssets: resSvg };\r\n      });\r\n\r\n      let resMedia = await this.mediaResource.getAll();\r\n      this.setState(state => {\r\n        state = { ...state, mediaAssets: resMedia };\r\n        if (state.activeTab === \"media\") {\r\n          state.assets = resMedia;\r\n        }\r\n        return state;\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n\r\n    document.addEventListener('keydown', (event) => {\r\n      if (event.key === \"Escape\") {\r\n          this.toggleBrowser();\r\n      }\r\n    });\r\n  }\r\n  getAssets(tab) {\r\n    if (! tab) {\r\n      tab = this.state.activeTab;\r\n    }\r\n\r\n    switch (tab) {\r\n      case \"icons\": {\r\n        return this.state.svgAssets\r\n        // return [ ...iconsManager().getIconsList(), ...this.state.svgAssets];\r\n      }\r\n      case \"media\": {\r\n        return this.state ? this.state.mediaAssets : [];\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n\r\n  selectAsset(e) {\r\n    let selectedAsset = e.currentTarget.dataset.assetname;\r\n    this.setState(state => {\r\n      return { ...state, selectedAsset };\r\n    });\r\n  }\r\n\r\n  tabClick(e) {\r\n    this.setActiveTab(e.target.dataset.tab);\r\n  }\r\n\r\n  setActiveTab(tab) {\r\n    this.setState(state => {\r\n      return { ...state, activeTab: tab, assets: this.getAssets(tab) };\r\n    });\r\n  }\r\n\r\n  toggleBrowser() {\r\n    this.setState(state => {\r\n      return { ...state, selectedAsset: null };\r\n    });\r\n    this.props.dispatch(assetsToggle());\r\n  }\r\n\r\n  chooseAsset() {\r\n    let asset;\r\n    this.state.assets.forEach(item => {\r\n      if (item.name === this.state.selectedAsset) {\r\n        asset = item;\r\n      }\r\n    });\r\n    if (!asset) {\r\n      throw `Asset with name ${this.state.selectedAsset} not found in Assets Browser (${this.state.activeTab})!`;\r\n    }\r\n    this.props.onChoose(asset);\r\n    this.setState(state => {\r\n      return { ...state, selectedAsset: null };\r\n    });\r\n    this.props.dispatch(assetsToggle());\r\n  }\r\n\r\n  /**\r\n   * функция добавляет контент самого изображения к возвращаемым данным об изображении\r\n   * для вставки в HTML картинок в виде данных svg base64\r\n   */\r\n  insertRaw = ()=>{\r\n\r\n    let asset;\r\n    this.state.assets.forEach(item => {\r\n      if (item.name === this.state.selectedAsset) {\r\n        asset = item;\r\n      }\r\n    });\r\n    if (!asset) {\r\n      throw `Asset with name ${this.state.selectedAsset} not found in Assets Browser (${this.state.activeTab})!`;\r\n    }\r\n    if(asset.type === 'svg'){\r\n      const resource = new Resource({route: asset.url});\r\n      resource.getAsText().then(rawSVG=>{\r\n        rawSVG = rawSVG.replace(/<!--[\\s\\S]*?-->/g, '')\r\n        rawSVG = rawSVG.replace(/<![\\s\\S]*?>/g, '')\r\n        rawSVG = rawSVG.replace(/<\\?[\\s\\S]*?\\?>/g, '')\r\n        this.props.onChoose({...asset, rawSVG});\r\n        this.props.dispatch(assetsToggle());\r\n      });\r\n    } else {\r\n      toDataURL(asset.url, (dataUrl)=>{\r\n        this.props.onChoose({...asset, dataUrl});\r\n        this.props.dispatch(assetsToggle());\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { videoAssets, activeTab } = this.state;\r\n    const { rawEnable, } = this.props;\r\n    let classes = \"assets-browser\";\r\n    if (this.props.active) {\r\n      classes += \" assets-browser_active\";\r\n    }\r\n    let buttonClasses = \"btn\";\r\n    if (!this.state.selectedAsset) {\r\n      buttonClasses += \" btn_disabled\";\r\n    } else {\r\n      buttonClasses += \" btn_success\";\r\n    }\r\n    if(! this.props.active){\r\n      return  '';\r\n    }\r\n    return (\r\n      <div className={classes}>\r\n        <div className=\"assets-browser__bg\" onClick={this.toggleBrowser} />\r\n        <div className=\"assets-browser-content\">\r\n          <div className=\"assets-browser-top\">\r\n            <div className=\"caption\">Append Media</div>\r\n            <button className=\"btn btn_bare assets-browser__close\" onClick={this.toggleBrowser} >\r\n              <Times className=\"icon\"/>\r\n            </button>\r\n            <div className=\"assets-browser-nav\">\r\n              {this.state.tabs.map(tab => {\r\n                let tabClasses = \"assets-browser__tab\";\r\n                if (this.state.activeTab === tab.name) {\r\n                  tabClasses += \" assets-browser__tab_active\";\r\n                }\r\n                return (\r\n                  <button\r\n                    className={tabClasses}\r\n                    onClick={this.tabClick}\r\n                    key={tab.name}\r\n                    data-tab={tab.name}\r\n                  >\r\n                    {tab.title}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          {this.state.assets.length ? (\r\n            <div className=\"assets-browser-choose-frame\">\r\n              {this.state.assets.map(asset => {\r\n                let AssetContent;\r\n                let classes = \"asset-choose\";\r\n                let assetProps = {\r\n                  className: \"asset-choose__content\"\r\n                };\r\n                if (this.state.activeTab === \"icons\") {\r\n                  if(asset.iconComponent) {\r\n                    AssetContent = asset.iconComponent;\r\n                  } else {\r\n                    AssetContent = \"img\";\r\n                    asset.name = asset.filename;\r\n                    assetProps.src = asset.url;\r\n                  }\r\n\r\n                  classes += \" asset-choose_icon\";\r\n                  // assetProps.viewBox = '0 0 20 20';\r\n                  // assetProps.viewport = '0 0 10 10';\r\n                  assetProps.width = \"35\";\r\n                  assetProps.height = \"35\";\r\n                }\r\n                if (this.state.activeTab === \"media\") {\r\n                  AssetContent = \"img\";\r\n                  assetProps.src = asset.url;\r\n                  classes += \" asset-choose_media\";\r\n                  asset.name = asset.filename;\r\n                  asset.assetType = \"media\";\r\n                }\r\n                asset.assetType = this.state.activeTab\r\n                if (this.state.selectedAsset === asset.name) {\r\n                  classes += \" asset-choose_selected\";\r\n                }\r\n                return (\r\n                  <div\r\n                    className={classes}\r\n                    data-assetname={asset.name}\r\n                    key={asset.name}\r\n                    onClick={this.selectAsset}\r\n                  >\r\n                    <AssetContent {...assetProps} />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {activeTab === 'video' && <div className=\"assets-browser-choose-frame\">\r\n            {videoAssets.map(video => <div className=\"assets-list__item item col-1\" onClick={this.selectAsset}>\r\n              <svg width=\"43\" height=\"56\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"item__icon-background\">\r\n                <path d=\"M30.485 0H1.463C.655 0 0 .655 0 1.926V55c0 .345.655 1 1.463 1h40.074c.808 0 1.463-.655 1.463-1V12.978c0-.696-.093-.92-.257-1.085L31.107.257A.884.884 0 0030.485 0z\" fill=\"#F7F8F9\"></path><path d=\"M31 .151V12h11.849L31 .151z\" fill=\"#E0E1E6\"></path><path d=\"M41.537 56H1.463A1.463 1.463 0 010 54.537V39h43v15.537c0 .808-.655 1.463-1.463 1.463z\" fill=\"#7CA727\"></path><path d=\"M18.262 52h-1.86v-6.07L13.96 52h-.806l-2.444-6.07V52H8.863v-8.67h2.587l2.106 5.238 2.106-5.239h2.6V52zM21.83 52h-1.846v-8.67h4.056c.91 0 1.62.268 2.132.805.52.529.78 1.192.78 1.99 0 .788-.26 1.45-.78 1.988-.52.537-1.23.806-2.132.806h-2.21V52zm1.963-4.706c.373 0 .676-.104.91-.312.243-.217.364-.503.364-.858s-.121-.637-.364-.845c-.234-.217-.537-.325-.91-.325H21.83v2.34h1.963zM33.556 52H31.71v-1.794h-4.147V48.75l3.445-5.42h2.548v5.251h1.118v1.625h-1.118V52zm-1.846-3.419v-3.614l-2.34 3.614h2.34z\" fill=\"#fff\"></path><path d=\"M16.923 28a.964.964 0 01-.444-.108.87.87 0 01-.479-.767v-12.25a.87.87 0 01.48-.768.972.972 0 01.94.03l10.153 6.124c.265.161.427.44.427.739 0 .3-.162.577-.427.738l-10.154 6.125a.968.968 0 01-.496.137zm.923-11.532v9.063L25.357 21l-7.51-4.532z\" fill=\"#D5D7DE\"></path><path d=\"M21 35c-7.72 0-14-6.28-14-14S13.28 7 21 7s14 6.28 14 14-6.28 14-14 14zm0-26.133C14.31 8.867 8.867 14.31 8.867 21c0 6.69 5.443 12.133 12.133 12.133 6.69 0 12.133-5.443 12.133-12.133 0-6.69-5.443-12.133-12.133-12.133z\" fill=\"#D5D7DE\"></path>\r\n              </svg>\r\n            </div>)}\r\n          </div>}\r\n          <div className=\"assets-browser-bottom\">\r\n            <button className={buttonClasses} onClick={this.chooseAsset}>\r\n              Choose\r\n            </button>\r\n            {rawEnable && <button className={buttonClasses + ' ml-3'} onClick={this.insertRaw}>Insert Raw</button>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.assetsManagerSettings\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(AssetsBrowser);\r\n","/**\r\n *\r\n * @param {string} url\r\n * @param {function} callback - функция, в которую передается строка в виду dataUrl\r\n */\r\nexport default function toDataURL(url, callback) {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.onload = function() {\r\n    var reader = new FileReader();\r\n    reader.onloadend = function() {\r\n      callback(reader.result);\r\n    }\r\n    reader.readAsDataURL(xhr.response);\r\n  };\r\n  xhr.open('GET', url);\r\n  xhr.responseType = 'blob';\r\n  xhr.send();\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setCurrentScreen } from \"../store/responsive-switcher/actions\"\r\nimport { iconsManager } from \"../helpers\"\r\nimport CONSTANTS from '../consts'\r\n\r\nclass ResponsiveDdFooter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      screens: CONSTANTS.SCREENS,\r\n      open: false,\r\n    }\r\n  };\r\n  toggleOpen() {\r\n    this.setState({\r\n      open: !this.state.open,\r\n    })\r\n  };\r\n  setCurrentScreen(screen) {\r\n    this.props.setCurrentScreen(screen);\r\n    this.setState({\r\n      open: !this.state.open,\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"responsive-footer-wrapper\">\r\n        <span className={\"responsive-footer-title \" + (this.state.open ? 'responsive-footer-icon__close' : '')} onClick={() => this.toggleOpen()}>{iconsManager().renderIcon(this.props.currentScreen.icon)}</span>\r\n        <div className={\"responsive-footer-submenu \" + (this.state.open ? \"responsive-footer-submenu-open\" : '')} >\r\n          {\r\n            this.state.screens.map(screen => {\r\n              return <button\r\n                className={\"responsive-footer-submenu__item \" + (this.props.currentScreen.id === screen.id ? \"responsive-footer-submenu__item__active\" : '')}\r\n                onClick={() => this.setCurrentScreen(screen)}\r\n                title={screen.name}\r\n                key={screen.id}>\r\n                {iconsManager().renderIcon(screen.icon)}\r\n              </button>\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentScreen: state.currentScreen,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setCurrentScreen })(ResponsiveDdFooter);\r\n","import React, { Component } from 'react';\r\nimport ('../../sass/dialog-content.scss');\r\nimport { iconsManager } from '../../../../front-app/src/js/helpers';\r\n\r\nclass DialogTab extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={\"modal-tab-wrapper \" + (this.props.active ? 'modal-tab-wrapper-active' : '')}>\r\n        <div className=\"modal-tab__image\">\r\n          {\r\n            iconsManager().renderIcon(this.props.tab.icon)\r\n          }\r\n        </div>\r\n        <div className=\"modal-tab__content\">\r\n          <div className=\"modal-tab__title\">{this.props.tab.title}</div>\r\n          <div className=\"modal-tab__description\">{this.props.tab.desc}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DialogTab;","import React, { Component } from \"react\";\r\nimport (\"../../sass/dialog-content.scss\");\r\nimport { iconsManager } from \"../../../../front-app/src/js/helpers\";\r\nimport Select from \"react-select\";\r\nimport Resource from \"../classes/Resource\";\r\nimport { getEditor, getTemplateId } from \"../helpers\";\r\nimport AltrpSelect from \"../../../../admin/src/components/altrp-select/AltrpSelect\";\r\n\r\nexport default class DialogConditionsTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: [],\r\n      currentLogic: \"include\",\r\n      searchValue: \"\",\r\n      pageOptions: [],\r\n      reportsOptions: []\r\n    };\r\n    this.resource = new Resource({\r\n      route: `/admin/ajax/templates/${getTemplateId()}/conditions`\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let conditions = await this.resource.getAll();\r\n    let pageOptions = await new Resource({\r\n      route: \"/admin/ajax/pages_options\"\r\n    }).getAll();\r\n    let reportsOptions = await new Resource({\r\n      route: \"/admin/ajax/reports_options\"\r\n    }).getAll();\r\n    this.setState({\r\n      value: conditions.data || [],\r\n      pageOptions,\r\n      reportsOptions\r\n      // value: []\r\n    });\r\n  }\r\n\r\n  /**\r\n   * запрос на обнровление условий\r\n   * @param {boolean} close\r\n   * @return {Promise<void>}\r\n   */\r\n  async updateConditions(close = false) {\r\n    let res = await new Resource({\r\n      route: `/admin/ajax/templates/${getTemplateId()}/conditions`\r\n    }).put(\"\", { data: this.state.value });\r\n    if (close) {\r\n      getEditor().toggleModalWindow();\r\n    }\r\n  }\r\n\r\n  addCondition() {\r\n    let randomNumber = Math.floor(1 + Math.random() * (1000 - 1));\r\n    let value = _.cloneDeep(this.state.value);\r\n    value.push({\r\n      object_type: \"all_site\",\r\n      object_ids: [],\r\n      id: randomNumber,\r\n      condition_type: \"include\"\r\n    });\r\n    this.setState(state => ({\r\n      ...state,\r\n      value\r\n    }));\r\n    this.forceUpdate();\r\n  }\r\n\r\n  removeCondition(id) {\r\n    let filteredData = this.state.value.filter(data => data.id !== id);\r\n    this.setState({\r\n      value: filteredData\r\n    });\r\n  }\r\n\r\n  handleChange(e, test) {\r\n    if (e.value === \"include\") {\r\n      this.setState({\r\n        currentLogic: e.value\r\n      });\r\n      return;\r\n    } else if (e.value === \"exclude\") {\r\n      this.setState({\r\n        currentLogic: e.value\r\n      });\r\n      return;\r\n    }\r\n    if (this.state.currentLogic === \"include\") {\r\n      let data = [...this.state.value];\r\n      let index = data.findIndex(obj => obj.id === test.id);\r\n      data[index].include[0] = { ...data[index].include[0], [e.name]: e.value };\r\n      data[index].exclude = [];\r\n      this.setState({\r\n        value: data\r\n      });\r\n    } else if (this.state.currentLogic === \"exclude\") {\r\n      let data = [...this.state.value];\r\n      let index = data.findIndex(obj => obj.id === test.id);\r\n      data[index].exclude[0] = { ...data[index].exclude[0], [e.name]: e.value };\r\n      data[index].include = [];\r\n      this.setState({\r\n        value: data\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * именение object_type для условий\r\n   * @param {object} e\r\n   * @param {integer} conditionId\r\n   */\r\n  handleObjectTypeChange = (e, conditionId) => {\r\n    let value = _.cloneDeep(this.state.value);\r\n    value.forEach(v => {\r\n      if (v.id === conditionId) {\r\n        v.object_type = e.value;\r\n        v.object_ids = [];\r\n      }\r\n    });\r\n    this.setState(state => ({\r\n      ...state,\r\n      value\r\n    }));\r\n  };\r\n  /**\r\n   * изменение спика ид объектов\r\n   * @param {array} ids\r\n   * @param {integer} conditionId\r\n   */\r\n  handleIdsSelect = (ids, conditionId) => {\r\n    let value = _.cloneDeep(this.state.value);\r\n    value.forEach(v => {\r\n      if (v.id === conditionId && ids !== null) {\r\n        v.object_ids = ids.map(id => id.value);\r\n      }\r\n      if (v.id === conditionId && ids === null) {\r\n        v.object_ids = [];\r\n      }\r\n    });\r\n    this.setState(state => ({\r\n      ...state,\r\n      value\r\n    }));\r\n  };\r\n  /**\r\n   * изменение типа  условия\r\n   * @param {array} e\r\n   * @param {integer} conditionId\r\n   */\r\n  handleChangeConditionType = (e, conditionId) => {\r\n    let value = _.cloneDeep(this.state.value);\r\n    value.forEach(v => {\r\n      if (v.id === conditionId) {\r\n        v.condition_type = e.value;\r\n      }\r\n    });\r\n    this.setState(state => ({\r\n      ...state,\r\n      value\r\n    }));\r\n  };\r\n  handleSelect(e) { }\r\n\r\n  render() {\r\n    const logic_options = [\r\n      { name: \"logic_type\", value: \"include\", label: \"Include\" },\r\n      { name: \"logic_type\", value: \"exclude\", label: \"Exclude\" }\r\n    ];\r\n    const main_options = [\r\n      { name: \"type\", value: \"all_site\", label: \"All Site\" },\r\n      { name: \"type\", value: \"page\", label: \"Page\" },\r\n      { name: \"type\", value: \"report\", label: \"Report\" },\r\n      { name: \"type\", value: \"404\", label: \"404 \" },\r\n      // { name: 'type', value: 'model', label: 'Model' },\r\n      // { name: 'type', value: 'not_authorized_page', label: 'Not Authorized' },\r\n      // { name: 'type', value: 'not_found_page', label: 'Not found: 404' },\r\n    ];\r\n    return (\r\n      <div className=\"modal-condition-tab\">\r\n        <div className=\"modal-condition-image\">\r\n          {iconsManager().renderIcon(\"conditions_tab\")}\r\n        </div>\r\n        <div className=\"modal-condition-title\">\r\n          Where Do You Want to Display Your Template?\r\n        </div>\r\n        <div className=\"modal-condition-text\">\r\n          Set the conditions that determine where your Template is used\r\n          throughout your site.\r\n          <br />\r\n          For example, choose 'Entire Site' to display the template across your\r\n          site.\r\n        </div>\r\n        <div className=\"modal-repeater-fields-wrapper\">\r\n          <div className=\"modal-repeater-fields\">\r\n            {this.state.value.map(test => {\r\n              return (\r\n                <div className=\"modal-repeater-field\" key={test.id}>\r\n                  <AltrpSelect\r\n                    onChange={e => this.handleChangeConditionType(e, test.id)}\r\n                    className=\"modal-repeater-field-c1\"\r\n                    options={logic_options}\r\n                    value={\r\n                      _.find(\r\n                        logic_options,\r\n                        o => o.value === test.condition_type\r\n                      ) || logic_options[0]\r\n                    }\r\n                  />\r\n                  <AltrpSelect\r\n                    onChange={value =>\r\n                      this.handleObjectTypeChange(value, test.id)\r\n                    }\r\n                    className=\"modal-repeater-field-c2\"\r\n                    options={main_options}\r\n                    value={\r\n                      _.find(main_options, o => o.value === test.object_type) ||\r\n                      main_options[0]\r\n                    }\r\n                  // defaultValue={main_options[0]}\r\n                  />\r\n                  {/*{*/}\r\n                  {/*(test.include[0]) &&*/}\r\n                  {/*(test.include[0].type === 'model'*/}\r\n                  {/*&&*/}\r\n                  {/*<Select*/}\r\n                  {/*onChange={(e) => this.handleChange(e, test)}*/}\r\n                  {/*className=\"modal-repeater-field-c3\"*/}\r\n                  {/*defaultValue={model_options[0]}*/}\r\n                  {/*options={model_options}*/}\r\n                  {/*/>)*/}\r\n                  {/*}*/}\r\n                  {/*{*/}\r\n                  {/*(test.exclude[0]) &&*/}\r\n                  {/*(test.exclude[0].type === 'model' &&*/}\r\n                  {/*<Select*/}\r\n                  {/*onChange={(e) => this.handleChange(e, test)}*/}\r\n                  {/*className=\"modal-repeater-field-c3\"*/}\r\n                  {/*defaultValue={model_options[0]}*/}\r\n                  {/*options={model_options}*/}\r\n                  {/*/>)*/}\r\n                  {/*}*/}\r\n                  {test.object_type === \"page\" && (\r\n                    <AltrpSelect\r\n                      // value={(test.object_ids || []).map(o=>this.state.pageOptions.find())}\r\n                      value={_.filter(\r\n                        this.state.pageOptions,\r\n                        p =>\r\n                          test.object_ids &&\r\n                          test.object_ids.indexOf(p.value) >= 0\r\n                      )}\r\n                      onChange={e => this.handleIdsSelect(e, test.id)}\r\n                      isMulti={true}\r\n                      closeMenuOnSelect={false}\r\n                      placeholder=\"Choose Pages\"\r\n                      options={this.state.pageOptions}\r\n                      className=\"modal-repeater-field-c3\"\r\n                    />\r\n                  )}\r\n\r\n                  {test.object_type === \"report\" && (\r\n                    <AltrpSelect\r\n                      // value={(test.object_ids || []).map(o=>this.state.pageOptions.find())}\r\n                      value={_.filter(\r\n                        this.state.reportsOptions,\r\n                        p =>\r\n                          test.object_ids &&\r\n                          test.object_ids.indexOf(p.value) >= 0\r\n                      )}\r\n                      onChange={e => this.handleIdsSelect(e, test.id)}\r\n                      isMulti={true}\r\n                      closeMenuOnSelect={false}\r\n                      placeholder=\"Choose Pages\"\r\n                      options={this.state.reportsOptions}\r\n                      className=\"modal-repeater-field-c3\"\r\n                    />\r\n                  )}\r\n                  <button\r\n                    onClick={() => this.removeCondition(test.id)}\r\n                    className=\"modal-repeater-tool-remove\"\r\n                  >\r\n                    X\r\n                  </button>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-condition-button-wrapper\">\r\n          <button\r\n            onClick={() => this.addCondition()}\r\n            className=\"modal-condition-button\"\r\n          >\r\n            Add condition\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button\r\n            onClick={() => this.updateConditions(true)}\r\n            className=\"modal-footer__button modal-save\"\r\n          >\r\n            Save & close\r\n          </button>\r\n          <button\r\n            onClick={() => this.updateConditions()}\r\n            className=\"modal-footer__button modal-next\"\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ('../../sass/dialog-content.scss');\r\nimport { iconsManager } from '../../../../front-app/src/js/helpers';\r\nimport { getTemplateId } from '../helpers';\r\nimport Resource from '../classes/Resource';\r\n\r\nexport default class DialogTriggersTab extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      value: {},\r\n      onLoad: false,\r\n      onScroll: false,\r\n      scrollElement: false,\r\n      onClick: false,\r\n      afterInactivity: false,\r\n      on_exit: false,\r\n    }\r\n    this.resource = new Resource({ route: `/admin/ajax/templates/${getTemplateId()}/settings` })\r\n  }\r\n\r\n  async updateTriggers() {\r\n    const { inactivity, on_click, on_exit, on_page_load, on_scroll, to_element } = this.state.value;\r\n    const { afterInactivity, onClick, onLoad, onScroll, scrollElement } = this.state;\r\n    const data = { \r\n      inactivity: afterInactivity && inactivity,\r\n      on_click: onClick && on_click,\r\n      on_exit,\r\n      on_page_load: onLoad && on_page_load,\r\n      on_scroll: onScroll && on_scroll,\r\n      to_element: scrollElement && to_element\r\n    }\r\n    let res = await this.resource.put('triggers', { data });\r\n    console.log(res);\r\n  }\r\n\r\n\r\n\r\n  /**  Отправляем get request, результат присваиваем  state.value */\r\n  async componentDidMount() {\r\n    let triggers = await this.resource.get('triggers')\r\n    this.setState({\r\n      value: triggers.data,\r\n    })\r\n  }\r\n\r\n  handleChangePage(e) {\r\n    if (e.target.name === 'direction') {\r\n      this.setState({\r\n        value: {\r\n          ...this.state.value,\r\n          on_scroll: {\r\n            ...this.state.value.on_scroll,\r\n            direction: e.target.value,\r\n          }\r\n        }\r\n      })\r\n      return;\r\n    } else if (e.target.name === 'size') {\r\n      this.setState({\r\n        value: {\r\n          ...this.state.value,\r\n          on_scroll: {\r\n            ...this.state.value.on_scroll,\r\n            size: e.target.value,\r\n          }\r\n        }\r\n      })\r\n      return;\r\n    }\r\n    this.setState({\r\n      value: {\r\n        ...this.state.value,\r\n        [e.target.name]: e.target.value\r\n      }\r\n    })\r\n  }\r\n\r\n  handleCheck(e) {\r\n    if (e.target.name === 'on_exit') {\r\n      this.setState({\r\n        [e.target.name]: e.target.checked,\r\n        value: {\r\n          ...this.state.value,\r\n          [e.target.name]: e.target.checked,\r\n        }\r\n      })\r\n    }\r\n    this.setState({\r\n      [e.target.name]: e.target.checked\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"triggers-tab\">\r\n        <div className=\"triggers-wrapper\">\r\n          <div className=\"triggers-icon-wrapper\">\r\n            {\r\n              iconsManager().renderIcon('page_load')\r\n            }\r\n          </div>\r\n          <div className=\"triggers-title\">On Page Load</div>\r\n          <div className=\"triggers-control-content\">\r\n            {this.state.onLoad &&\r\n              <div className=\"triggers-control-field\">\r\n                <label htmlFor=\"triggers-control-field-pageLoad\">Within(sec)</label>\r\n                <div className=\"triggers-control-input-wrapper\">\r\n                  <input className=\"triggers-control-input\"\r\n                    id=\"triggers-control-field-pageLoad\"\r\n                    onChange={(e) => this.handleChangePage(e)} type=\"number\"\r\n                    min=\"0\"\r\n                    step=\"0.1\"\r\n                    value={this.state.on_page_load}\r\n                    name=\"on_page_load\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"triggers-control-content-switch\">\r\n            <div className=\"toggle-switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"toggle-switch-checkbox\"\r\n                name=\"onLoad\"\r\n                checked={this.state[name]}\r\n                id=\"toggleSwitch\"\r\n                onChange={(e) => this.handleCheck(e)}\r\n              />\r\n              <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitch\">\r\n                <span className=\"toggle-switch-inner\" />\r\n                <span className=\"toggle-switch-switch\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"triggers-wrapper\">\r\n          <div className=\"triggers-icon-wrapper\">\r\n            {\r\n              iconsManager().renderIcon('scrolling')\r\n            }\r\n          </div>\r\n          <div className=\"triggers-title\">On Scroll</div>\r\n          <div className=\"triggers-control-content\">\r\n            {this.state.onScroll &&\r\n              <div className=\"triggers-control-field\">\r\n                <label htmlFor=\"triggers-control-field-inputSelect\">Direction</label>\r\n                <div className=\"triggers-control-input-wrapper\">\r\n                  <select\r\n                    name=\"direction\"\r\n                    onChange={(e) => this.handleChangePage(e)}\r\n                    id=\"triggers-control-field-inputSelect\">\r\n                    <option value=\"down\">Down</option>\r\n                    <option value=\"up\">Up</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"triggers-control-content\">\r\n            {\r\n              this.state.onScroll &&\r\n              <div className=\"triggers-control-field\">\r\n                <label htmlFor=\"triggers-control-field-inputNumber2\">Within(%)</label>\r\n                <div className=\"triggers-control-input-wrapper\">\r\n                  <input type=\"number\"\r\n                    min=\"1\"\r\n                    max=\"100\"\r\n                    id=\"triggers-control-field-inputNumber2\"\r\n                    name=\"size\"\r\n                    onChange={(e) => this.handleChangePage(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"triggers-control-content-switch\">\r\n            <div className=\"toggle-switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"toggle-switch-checkbox\"\r\n                name=\"onScroll\"\r\n                checked={this.state[name]}\r\n                onClick={(e) => this.handleCheck(e)}\r\n                id=\"toggleSwitch2\"\r\n              />\r\n              <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitch2\">\r\n                <span className=\"toggle-switch-inner\" />\r\n                <span className=\"toggle-switch-switch\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"triggers-wrapper\">\r\n          <div className=\"triggers-icon-wrapper\">\r\n            {\r\n              iconsManager().renderIcon('scrolling_to')\r\n            }\r\n          </div>\r\n          <div className=\"triggers-title\">On Scroll To Element</div>\r\n          <div className=\"triggers-control-content\">\r\n            {\r\n              this.state.scrollElement &&\r\n              <div className=\"triggers-control-field\">\r\n                <label htmlFor=\"triggers-control-field-inputText\">Selector</label>\r\n                <div className=\"triggers-control-input-wrapper\">\r\n                  <input className=\"triggers-control-inputText\"\r\n                    id=\"triggers-control-field-Text\"\r\n                    type=\"text\"\r\n                    name=\"to_element\"\r\n                    placeholder=\".my class\"\r\n                    defaultValue=''\r\n                    onChange={(e) => this.handleChangePage(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"triggers-control-content-switch\">\r\n            <div className=\"toggle-switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"toggle-switch-checkbox\"\r\n                checked={this.state[name]}\r\n                name=\"scrollElement\"\r\n                onClick={(e) => this.handleCheck(e)}\r\n                id=\"toggleSwitchText\"\r\n              />\r\n              <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitchText\">\r\n                <span className=\"toggle-switch-inner\" />\r\n                <span className=\"toggle-switch-switch\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"triggers-wrapper\">\r\n          <div className=\"triggers-icon-wrapper\">\r\n            {\r\n              iconsManager().renderIcon('click')\r\n            }\r\n          </div>\r\n          <div className=\"triggers-title\">On Click</div>\r\n          <div className=\"triggers-control-content\">\r\n            {\r\n              this.state.onClick &&\r\n              <div className=\"triggers-control-field\">\r\n                <label htmlFor=\"triggers-control-field-Clicks\">Clicks</label>\r\n                <div className=\"triggers-control-input-wrapper\">\r\n                  <input className=\"triggers-control-input\"\r\n                    id=\"triggers-control-field-Clicks\"\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    name=\"on_click\"\r\n                    value={this.state.on_click}\r\n                    onChange={(e) => this.handleChangePage(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"triggers-control-content-switch\">\r\n            <div className=\"toggle-switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"toggle-switch-checkbox\"\r\n                checked={this.state[name]}\r\n                name=\"onClick\"\r\n                onClick={(e) => this.handleCheck(e)}\r\n                id=\"toggleSwitchClicks\"\r\n              />\r\n              <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitchClicks\">\r\n                <span className=\"toggle-switch-inner\" />\r\n                <span className=\"toggle-switch-switch\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"triggers-wrapper\">\r\n          <div className=\"triggers-icon-wrapper\">\r\n            <div className=\"triggers-icon\">\r\n              {\r\n                iconsManager().renderIcon('inactivity')\r\n              }\r\n            </div>\r\n          </div>\r\n          <div className=\"triggers-title\">After Inactivity</div>\r\n          <div className=\"triggers-control-content\">\r\n            {this.state.afterInactivity &&\r\n              <div className=\"triggers-control-field\">\r\n                <label htmlFor=\"triggers-control-field-inactivity\">Within(sec)</label>\r\n                <div className=\"triggers-control-input-wrapper\">\r\n                  <input className=\"triggers-control-input\"\r\n                    id=\"triggers-control-field-inactivity\"\r\n                    type=\"number\"\r\n                    value={this.state.inactivity}\r\n                    min=\"1\"\r\n                    step=\"0.1\"\r\n                    name=\"inactivity\"\r\n                    onChange={(e) => this.handleChangePage(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"triggers-control-content-switch\">\r\n            <div className=\"toggle-switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"toggle-switch-checkbox\"\r\n                checked={this.state[name]}\r\n                name=\"afterInactivity\"\r\n                onClick={(e) => this.handleCheck(e)}\r\n                id=\"toggleSwitchInactivity\"\r\n              />\r\n              <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitchInactivity\">\r\n                <span className=\"toggle-switch-inner\" />\r\n                <span className=\"toggle-switch-switch\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"triggers-wrapper\">\r\n          <div className=\"triggers-icon-wrapper\">\r\n            <div className=\"triggers-icon\">\r\n              {\r\n                iconsManager().renderIcon('exit_intent')\r\n              }\r\n            </div>\r\n          </div>\r\n          <div className=\"triggers-title\">On Page Exit Intent</div>\r\n          <div className=\"triggers-control-content-switch\">\r\n            <div className=\"toggle-switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"toggle-switch-checkbox\"\r\n                checked={this.state[name]}\r\n                name=\"on_exit\"\r\n                onClick={(e) => this.handleCheck(e)}\r\n                id=\"toggleSwitchIntent\"\r\n                onChange={(e) => this.setState({ on_exit: !this.state.on_exit })}\r\n              />\r\n              <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitchIntent\">\r\n                <span className=\"toggle-switch-inner\" />\r\n                <span className=\"toggle-switch-switch\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button onClick={() => this.updateTriggers()} className=\"modal-footer__button modal-save\">Save & close</button>\r\n          <button onClick={() => this.updateTriggers()} className=\"modal-footer__button modal-next\">Next</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport Logo from \"../../svgs/logo.svg\";\r\nimport ('../../sass/dialog-content.scss');\r\nimport DialogTab from './DialogTab';\r\nimport DialogConditionsTab from './DialogConditionsTab';\r\nimport DialogTriggersTab from './DialogTriggersTab';\r\nimport {connect} from 'react-redux';\r\n\r\nclass DialogWindow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let tabs = [\r\n      { icon: 'conditions_tab', title: 'Conditions', desc: 'Apply current template to these pages' },\r\n    ];\r\n    if(['popup'].indexOf(this.props.templateData.template_type) >= 0){\r\n      tabs = [\r\n        { icon: 'conditions_tab', title: 'Conditions', desc: 'Apply current template to these pages' },\r\n        { icon: 'triggers_tab', title: 'Triggers', desc: 'What action the user needs to do for the popup to open.' },\r\n        { icon: 'triggers_tab', title: 'Advanced Rules', desc: 'Requirements that have to be met for the popup to open.' },\r\n      ];\r\n    }\r\n    this.state = {\r\n      activeTab: 'Conditions',\r\n      tabs,\r\n      \r\n    }\r\n  }\r\n\r\n  handleOpen(title) {\r\n    this.setState({\r\n      activeTab: title,\r\n    })\r\n  };\r\n  \r\n  handleClose() {\r\n    this.props.toggleModalWindow()\r\n  };\r\n\r\n  renderSwitch(activeTab) {\r\n    switch (this.state.activeTab) {\r\n      case 'Conditions':\r\n        return <DialogConditionsTab />;\r\n      case 'Triggers':\r\n        return <DialogTriggersTab />;\r\n      case 'Advanced Rules':\r\n        return <div>ADVANCED</div>;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  // (this.state.activeTab === 'Conditions' && <DialogConditionsTab /> ||\r\n  //   this.state.activeTab === 'Triggers' && <div>Triggers</div> ||\r\n  //   this.state.activeTab === 'Advanced Rules' && <div>Advanced Rules</div>\r\n  // )\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"modal-overlay\">\r\n        <div className=\"modal-window\">\r\n          <div className=\"modal-header\">\r\n            <Logo className=\"modal-header__logo\" />\r\n            <button onClick={() => this.handleClose()}>X</button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"modal-body__tabs\">\r\n              {\r\n                this.state.tabs.map((tab, index) => {\r\n                  return <div key={tab.title} onClick={() => this.handleOpen(tab.title)}>\r\n                    <DialogTab active={this.state.activeTab === tab.title ? true : false} tab={tab} />\r\n                  </div>\r\n                })\r\n              }\r\n            </div>\r\n            <div className=\"modal-body__content\">\r\n              {this.renderSwitch(this.state.activeTab)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {templateData: state.templateData};\r\n}\r\nexport default connect(mapStateToProps)(DialogWindow);","import \"./sass/editor-style.scss\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { hot } from \"react-hot-loader\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport Modules from \"./js/classes/Modules\";\r\nimport WidgetsPanel from \"./js/components/WidgetsPanel\";\r\nimport SettingsPanel from \"./js/components/SettingsPanel\";\r\nimport EditorWindow from \"./js/components/EditorWindow\";\r\nimport HistoryPanel from \"./js/components/HistoryPanel\";\r\nimport NavigationPanel from \"./js/components/NavigationPanel\";\r\nimport CommonPanel from \"./js/components/CommonPanel\";\r\nimport GlobalColors from \"./js/components/GlobalColors\";\r\nimport GlobalEffects from \"./js/components/GlobalEffects\";\r\nimport GlobalFonts from \"./js/components/GlobalFonts\";\r\nimport UpdateButton from \"./js/components/UpdateButton\";\r\nimport CONSTANTS from \"./js/consts\";\r\nimport { stopDrag } from \"./js/store/element-drag/actions\";\r\nimport AssetsBrowser from \"./js/classes/modules/AssetsBrowser\";\r\nwindow.Link = \"a\";\r\nimport store, {\r\n  getCurrentElement,\r\n  getCurrentScreen\r\n} from \"../src/js/store/store\";\r\n\r\nimport Logo from \"./svgs/logo.svg\";\r\nimport Navigation from \"./svgs/navigation.svg\";\r\nimport History from \"./svgs/history.svg\";\r\nimport Preview from \"./svgs/preview.svg\";\r\nimport Settings from \"./svgs/settings.svg\";\r\nimport Dots from \"./svgs/dots.svg\";\r\nimport Hamburger from \"./svgs/hamburger.svg\";\r\nimport { contextMenu } from \"react-contexify\";\r\nimport { closeDynamicContent } from \"./js/store/dynamic-content/actions\";\r\nimport ResponsiveDdFooter from \"./js/components/ResponsiveDdFooter\";\r\nimport DialogWindow from \"./js/components/DialogWindow\";\r\nimport { renderAsset } from \"../../front-app/src/js/helpers\";\r\nimport { changeCurrentUser } from \"../../front-app/src/js/store/current-user/actions\";\r\nimport Resource from \"./js/classes/Resource\";\r\nimport AltrpMeta from \"./js/classes/AltrpMeta\";\r\nimport { setEditorMeta } from \"./js/store/editor-metas/actions\";\r\nimport {\r\n  setGlobalColors,\r\n  setGlobalEffects,\r\n  setGlobalFonts\r\n} from \"./js/store/altrp-global-colors/actions\";\r\nimport {setGlobalStylesPresets} from \"./js/store/altrp-global-styles/actions\";\r\n\r\n/**\r\n * Главный класс редактора.<br/>\r\n * Реакт-Компонент.<br/>\r\n * Синглтон, который хранится в глобальной переменной altrpEditor.\r\n *\r\n * */\r\nclass Editor extends Component {\r\n  /**\r\n   * @constructor\r\n   * */\r\n  constructor(props) {\r\n    super(props);\r\n    window.altrpEditor = this;\r\n    this.state = {\r\n      // activePanel: 'widgets',\r\n      activePanel: \"settings\",\r\n      templateStatus: CONSTANTS.TEMPLATE_UPDATED,\r\n      showDialogWindow: false\r\n    };\r\n    this.effectRef = React.createRef();\r\n    this.openPageSettings = this.openPageSettings.bind(this);\r\n    this.openNavigratonPanel = this.openNavigratonPanel.bind(this);\r\n    this.showSettingsPanel = this.showSettingsPanel.bind(this);\r\n    this.showNavigationPanel = this.showNavigationPanel.bind(this);\r\n    this.showHistoryPanel = this.showHistoryPanel.bind(this);\r\n    this.showWidgetsPanel = this.showWidgetsPanel.bind(this);\r\n    this.showCommonPanel = this.showCommonPanel.bind(this);\r\n    this.showGlobalColorsPanel = this.showGlobalColorsPanel.bind(this);\r\n    this.showGlobalFontsPanel = this.showGlobalFontsPanel.bind(this);\r\n    this.showGlobalEffectsPanel = this.showGlobalEffectsPanel.bind(this);\r\n    this.onDragEnd = this.onDragEnd.bind(this);\r\n    this.onClick = this.onClick.bind(this);\r\n    // store.subscribe(this.templateStatus.bind(this));\r\n  }\r\n  /**\r\n   * Метод подписчик на изменение состояния Редактора из Редакс хранилища\r\n   * */\r\n  // templateStatus() {\r\n  //   let templateStatus = store.getState().templateStatus.status;\r\n  //   if (templateStatus !== this.state.templateStatus) {\r\n  //     this.setState({ ...this.state, templateStatus });\r\n  //   }\r\n  // }\r\n\r\n  /**\r\n   * Инициализация модулей\r\n   */\r\n\r\n  initModules() {\r\n    this.modules = new Modules(this);\r\n    this.modules.loaded();\r\n  }\r\n\r\n  /**\r\n   * Показывает панель со списком виджетов\r\n   */\r\n  showWidgetsPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"widgets\"\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Показывает Dialog окно\r\n   */\r\n  toggleModalWindow() {\r\n    this.setState({\r\n      showDialogWindow: !this.state.showDialogWindow\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Показывает панель с настройками текущего виджета\r\n   */\r\n  showSettingsPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"settings\"\r\n    });\r\n  }\r\n  /**\r\n   * Показывает панель с деревом компоненов\r\n   */\r\n  showNavigationPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"navigation\"\r\n    });\r\n  }\r\n\r\n  showHistoryPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"history\"\r\n    });\r\n  }\r\n\r\n  showCommonPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"common\"\r\n    });\r\n  }\r\n\r\n  showGlobalColorsPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"global_colors\"\r\n    });\r\n  }\r\n\r\n  showGlobalFontsPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"global_fonts\"\r\n    });\r\n  }\r\n\r\n  showGlobalEffectsPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"global_effects\"\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Сработывает при клике\r\n   */\r\n  onClick() {\r\n    contextMenu.hideAll();\r\n    store.dispatch(closeDynamicContent());\r\n  }\r\n\r\n  /**\r\n   * Обработчик события конец переноса вызывает метод stopDrag переносимого элемента\r\n   * @see ElementWrapper.stopDrag\r\n   */\r\n  onDragEnd() {\r\n    let draggableElement = store.getState().elementDrag.element;\r\n    if (draggableElement && draggableElement.stopDrag) {\r\n      draggableElement.stopDrag();\r\n    }\r\n    store.dispatch(stopDrag());\r\n  }\r\n  /**\r\n   * Вызывается после загрузки шаблона\r\n   * @see {@link SaveImportModule}\r\n   * */\r\n  endLoading() {\r\n    console.log(\"editor loaded\");\r\n  }\r\n\r\n  /**\r\n   * Вызывается после загрузки компонента\r\n   * @see {@link https://ru.reactjs.org/docs/react-component.html#componentdidmount}\r\n   * */\r\n  async componentDidMount() {\r\n    this.initModules();\r\n\r\n    let currentUser = await new Resource({\r\n      route: \"/ajax/current-user\"\r\n    }).getAll();\r\n    currentUser = currentUser.data;\r\n    appStore.dispatch(changeCurrentUser(currentUser));\r\n    const presetColors = await AltrpMeta.getMetaByName(\"preset_colors\");\r\n    let presetGlobalStyles = await AltrpMeta.getMetaByName(\"global_styles\");\r\n    appStore.dispatch(setEditorMeta(presetColors));\r\n    const globalStyles = await new Resource({\r\n      route: \"/admin/ajax/global_template_styles\"\r\n    }).getAll();\r\n    //global colors\r\n    appStore.dispatch(\r\n      setGlobalStylesPresets(presetGlobalStyles.getMetaValue({}))\r\n    );\r\n\r\n    appStore.dispatch(\r\n      setGlobalColors(\r\n        globalStyles.color?.map(color => ({\r\n          id: color.id,\r\n          guid: color.guid,\r\n          ...color.settings\r\n        })) || []\r\n      )\r\n    );\r\n    //global effects\r\n    appStore.dispatch(\r\n      setGlobalEffects(\r\n        globalStyles.effect?.map(effect => ({\r\n          id: effect.id,\r\n          guid: effect.guid,\r\n          ...effect.settings\r\n        })) || []\r\n      )\r\n    );\r\n    //global fonts\r\n    appStore.dispatch(\r\n      setGlobalFonts(\r\n        globalStyles.font?.map(font => ({\r\n          id: font.id,\r\n          guid: font.guid,\r\n          ...font.settings\r\n        })) || []\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Выбирает корневой элемент текущим и открывает панель настроек\r\n   */\r\n\r\n  openPageSettings() {\r\n    this.modules.templateDataStorage.setCurrentRootElement();\r\n    this.showSettingsPanel();\r\n  }\r\n\r\n  openNavigratonPanel() {\r\n    this.modules.templateDataStorage.setCurrentRootElement();\r\n    this.showNavigationPanel();\r\n  }\r\n\r\n  /**\r\n   * Отрисовка Компонента\r\n   */\r\n  render() {\r\n    let settingsActive = \"\";\r\n    let navigationActive = \"\";\r\n    let templateClasses = `editor editor_${\r\n      store.getState().templateData.template_type\r\n    }`;\r\n    if (this.props.templateStatus === CONSTANTS.TEMPLATE_SAVING) {\r\n      templateClasses += \" editor_saving\";\r\n    }\r\n    if (\r\n      store.getState().currentElement.currentElement.getType &&\r\n      store.getState().currentElement.currentElement.getType() ===\r\n        \"root-element\" &&\r\n      this.state.activePanel === \"settings\"\r\n    ) {\r\n      settingsActive = \" active\";\r\n    }\r\n    if (\r\n      store.getState().currentElement.currentElement.getType &&\r\n      store.getState().currentElement.currentElement.getType() ===\r\n        \"root-element\" &&\r\n      this.state.activePanel === \"navigation\"\r\n    ) {\r\n      navigationActive = \" active\";\r\n    }\r\n    return (\r\n      <DndProvider backend={HTML5Backend}>\r\n        <div\r\n          className={templateClasses}\r\n          onClick={this.onClick}\r\n          onDragEnd={this.onDragEnd}\r\n          onKeyDown={this.onKeyDown}\r\n        >\r\n          <div className=\"left-panel\">\r\n            <div className=\"editor-top-panel\">\r\n              <button\r\n                className=\"btn btn_hamburger\"\r\n                onClick={this.showCommonPanel}\r\n              >\r\n                <Hamburger className=\"icon\" />\r\n              </button>\r\n              <a href=\"/admin/templates\" target=\"_blank\" className=\"logo\">\r\n                {window.admin_logo ? (\r\n                  renderAsset(window.admin_logo, { className: \"editor__logo\" })\r\n                ) : (\r\n                  <Logo viewBox=\"0 0 97 35\" className=\"editor__logo\" />\r\n                )}\r\n              </a>\r\n              <button className=\"btn btn_dots\" onClick={this.showWidgetsPanel}>\r\n                <Dots className=\"icon\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"left-panel-main\">\r\n              {this.state.activePanel === \"widgets\" && <WidgetsPanel />}\r\n              {this.state.activePanel === \"settings\" && <SettingsPanel />}\r\n              {this.state.activePanel === \"history\" && <HistoryPanel />}\r\n              {this.state.activePanel === \"navigation\" && <NavigationPanel />}\r\n              {this.state.activePanel === \"common\" && (\r\n                <CommonPanel\r\n                  showGlobalColorsPanel={this.showGlobalColorsPanel}\r\n                  showGlobalFontsPanel={this.showGlobalFontsPanel}\r\n                  showGlobalEffectsPanel={this.showGlobalEffectsPanel}\r\n                />\r\n              )}\r\n              {this.state.activePanel === \"global_colors\" && <GlobalColors />}\r\n              {this.state.activePanel === \"global_fonts\" && <GlobalFonts />}\r\n              {this.state.activePanel === \"global_effects\" && <GlobalEffects />}\r\n            </div>\r\n            <div className=\"editor-bottom-panel d-flex align-content-center justify-center\">\r\n              <button\r\n                className={\"btn btn_settings\" + settingsActive}\r\n                onClick={this.openPageSettings}\r\n              >\r\n                <Settings className=\"icon\" />\r\n              </button>\r\n              <button\r\n                className={\"btn btn_settings\" + navigationActive}\r\n                onClick={this.openNavigratonPanel}\r\n              >\r\n                <Navigation className=\"icon\" />\r\n              </button>\r\n              <button className=\"btn \" onClick={this.showHistoryPanel}>\r\n                <History className=\"icon\" />\r\n              </button>\r\n              <div className=\"btn \">\r\n                <ResponsiveDdFooter />\r\n              </div>\r\n              <button className=\"btn \">\r\n                <Preview className=\"icon\" />\r\n              </button>\r\n              <UpdateButton\r\n                onClick={() => this.toggleModalWindow()}\r\n                toggleModalWindow={() => this.toggleModalWindow()}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"right-panel\">\r\n            {this.state.showDialogWindow && (\r\n              <DialogWindow\r\n                state={this.state.showDialogWindow}\r\n                toggleModalWindow={() => this.toggleModalWindow()}\r\n              />\r\n            )}\r\n            <EditorWindow />\r\n          </div>\r\n        </div>\r\n        <AssetsBrowser rawEnable={true}/>\r\n      </DndProvider>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    templateStatus: state.templateStatus.status\r\n  };\r\n}\r\n\r\n/**\r\n * Если разработка то включается HMR <br/>\r\n * По умолчанию просто компонент\r\n * @member _export\r\n */\r\nlet _export;\r\nif (process.env.NODE_ENV === \"production\") {\r\n  _export = Editor;\r\n} else {\r\n  _export = hot(module)(connect(mapStateToProps)(Editor));\r\n}\r\n\r\nexport default _export;\r\n","/*! @license https://github.com/onury/invert-color */\n!function(r,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define(n):r.invert=n()}(this,function(){\"use strict\";var t=Math.sqrt(1.05*.05)-.05,n=/^(?:[0-9a-f]{3}){1,2}$/i,i={black:\"#000000\",white:\"#ffffff\",threshold:t};function o(r){if(\"#\"===r.slice(0,1)&&(r=r.slice(1)),!n.test(r))throw new Error('Invalid HEX color: \"'+r+'\"');return 3===r.length&&(r=r[0]+r[0]+r[1]+r[1]+r[2]+r[2]),[parseInt(r.slice(0,2),16),parseInt(r.slice(2,4),16),parseInt(r.slice(4,6),16)]}function f(r){if(!r)throw new Error(\"Invalid color value\");return Array.isArray(r)?r:\"string\"==typeof r?o(r):[r.r,r.g,r.b]}function u(r,n,t){var e=!0===n?i:Object.assign({},i,n);return function(r){var n,t,e=[];for(n=0;n<r.length;n++)t=r[n]/255,e[n]=t<=.03928?t/12.92:Math.pow((t+.055)/1.055,2.4);return.2126*e[0]+.7152*e[1]+.0722*e[2]}(r)>e.threshold?t?o(e.black):e.black:t?o(e.white):e.white}function r(r,n){return void 0===n&&(n=!1),r=f(r),n?u(r,n):\"#\"+r.map(function(r){return n=(255-r).toString(16),void 0===t&&(t=2),(new Array(t).join(\"0\")+n).slice(-t);var n,t}).join(\"\")}return function(r){function n(r,n){r=f(r);var t,e=n?u(r,n,!0):r.map(function(r){return 255-r});return{r:(t=e)[0],g:t[1],b:t[2]}}r.asRGB=n,r.asRgbArray=function(r,n){return r=f(r),n?u(r,n,!0):r.map(function(r){return 255-r})},r.defaultThreshold=t,r.asRgbObject=n}(r||(r={})),r});"],"sourceRoot":""}