{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/components/widgets/IconWidget.js"],"names":["IconWidget","props","__","state","settings","element","getSettings","component","window","elementDecorator","baseRender","render","bodyContent","label","React","createElement","this","html_tag_additional_options_content","className","label_icon_box_content","switch_link_icon_box_content","global_link_additional_options_content","link","link_icon_box_content","indicator","indicator_additional_options_content","pos","x","horizontal_offset_indicator_content","y","vertical_offset_indicator_content","rotate","rotate_indicator_content","size","transform","unit","default","assetType","name","iconComponent","iconsManager","renderIcon","style","image","icon_indicator_content","badge","badge_additional_options_content","badgeClasses","position_badge_content","horizontal_offset_badge_content","vertical_offset_badge_content","rotate_badge_content","text_badge_content","bodyStyles","footerStyles","headerStyles","bodyAlignment","footerAligment","icon_position_desktop_position_style","textAlign","justifyContent","marginLeft","marginBottom","marginRight","readMore","read_more_button_additional_options_content","ReadMoreIcon","Object","keys","icon_read_more_content","length","readMorePosOnHover","show_on_hover_additional_options_content","horizontal_offset_additional_options_content","vertical_offset_additional_options_content","readMoreContent","Fragment","icon_position_additional_options_content","text_read_more_content","readMoreLink","link_read_more_content","readMoreNoLink","iconContent","media_icon_box_content","description_icon_box_content","iconContentLink","global_link_link_additional_options_content","Component"],"mappings":"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","file":"6852.editor.js","sourcesContent":["import AltrpImage from \"../altrp-image/AltrpImage\";\r\nimport AltrpLink from \"../altrp-link/AltrpLink\";\r\n\r\nclass IconWidget extends Component {\r\n  __;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      settings: props.element.getSettings(),\r\n    };\r\n    props.element.component = this;\r\n    if (window.elementDecorator) {\r\n      window.elementDecorator(this);\r\n    }\r\n    if(props.baseRender){\r\n      this.render = props.baseRender(this);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let label = React.createElement(this.state.settings.html_tag_additional_options_content || \"h3\", {\r\n        className: \"altrp-icon-body-label\"\r\n      },\r\n      this.state.settings.label_icon_box_content\r\n    );\r\n\r\n    let bodyContent;\r\n\r\n    if(this.state.settings.switch_link_icon_box_content && !this.state.settings.global_link_additional_options_content) {\r\n      bodyContent = (\r\n        <AltrpLink className=\"altrp-icon-body-link\" link={this.state.settings.link_icon_box_content}>\r\n          {\r\n            label\r\n          }\r\n        </AltrpLink>\r\n      )\r\n    } else {\r\n      bodyContent = (\r\n        <div className=\"altrp-icon-body-link\" >\r\n          {\r\n            label\r\n          }\r\n        </div>\r\n      )\r\n    }\r\n\r\n    //indicator\r\n    let indicator = \"\";\r\n\r\n    if(this.state.settings.indicator_additional_options_content) {\r\n      let pos = {};\r\n\r\n      let x = this.state.settings.horizontal_offset_indicator_content;\r\n      let y = this.state.settings.vertical_offset_indicator_content;\r\n      let rotate = this.state.settings.rotate_indicator_content;\r\n\r\n      if(x.size === \"\") {\r\n        x.size = \"0\";\r\n      }\r\n      if(y.size === \"\") {\r\n        y.size = \"0\";\r\n      }\r\n      if(rotate.size === \"\") {\r\n        rotate.size = \"0\"\r\n      }\r\n\r\n      pos = {\r\n        transform: `translate(${x.size+x.unit}, ${y.size+y.unit}) rotate(${rotate.size}deg)`\r\n      };\r\n\r\n      indicator = <AltrpImage\r\n        default={{\r\n          assetType: \"icon\",\r\n          name: \"arrow\",\r\n          iconComponent: iconsManager.renderIcon(\"arrow\")\r\n        }}\r\n        element={this.props.element}\r\n        style={pos}\r\n        image={this.state.settings.icon_indicator_content}\r\n        className=\"altrp-icon-indicator\"\r\n      />\r\n    }\r\n\r\n    //badge\r\n    let badge = \"\";\r\n    if(this.state.settings.badge_additional_options_content) {\r\n\r\n      let badgeClasses = \"altrp-icon-badge\";\r\n\r\n      switch (this.state.settings.position_badge_content) {\r\n        case \"topLeft\":\r\n          badgeClasses += \" altrp-icon-badge-top-left\";\r\n          break;\r\n        case \"topCenter\":\r\n          badgeClasses += \" altrp-icon-badge-top-center\";\r\n          break;\r\n        case \"topRight\":\r\n          badgeClasses += \" altrp-icon-badge-top-right\";\r\n          break;\r\n        case \"centerLeft\":\r\n          badgeClasses += \" altrp-icon-badge-center-left\";\r\n          break;\r\n        case \"center\":\r\n          badgeClasses += \" altrp-icon-badge-center\";\r\n          break;\r\n        case \"centerRight\":\r\n          badgeClasses += \" altrp-icon-badge-center-right\";\r\n          break;\r\n        case \"bottomLeft\":\r\n          badgeClasses += \" altrp-icon-badge-bottom-left\";\r\n          break;\r\n        case \"bottomCenter\":\r\n          badgeClasses += \" altrp-icon-badge-bottom\";\r\n          break;\r\n        case \"bottomRight\":\r\n          badgeClasses += \" altrp-icon-badge-bottom-right\";\r\n          break;\r\n      }\r\n\r\n      let pos = {};\r\n\r\n      let x = this.state.settings.horizontal_offset_badge_content;\r\n      let y = this.state.settings.vertical_offset_badge_content;\r\n      let rotate = this.state.settings.rotate_badge_content;\r\n\r\n      if(x.size === \"\") {\r\n        x.size = \"0\";\r\n      }\r\n      if(y.size === \"\") {\r\n        y.size = \"0\";\r\n      }\r\n      if(rotate.size === \"\") {\r\n        rotate.size = \"0\"\r\n      }\r\n\r\n      pos = {\r\n        transform: `translate(${x.size+x.unit}, ${y.size+y.unit}) rotate(${rotate.size}deg)`\r\n      };\r\n\r\n      badge = (\r\n        <div className={badgeClasses} style={pos}>\r\n          {\r\n            this.state.settings.text_badge_content\r\n          }\r\n        </div>\r\n      )\r\n    }\r\n\r\n    //style for altrp-icon-body, altrp-icon-footer\r\n    let bodyStyles = {};\r\n    let footerStyles = {};\r\n    let headerStyles = {};\r\n    let bodyAlignment = this.props.element.getSettings(\"header_alignment_content_style\", \"center\");\r\n    let footerAligment = this.props.element.getSettings(\"description_alignment_content_style\", \"center\");\r\n\r\n    switch (this.state.settings.icon_position_desktop_position_style) {\r\n      case \"row\":\r\n        if(!bodyAlignment) {\r\n          bodyStyles = {\r\n            textAlign: \"left\",\r\n            justifyContent: \"flex-start\"\r\n          };\r\n        }\r\n        if(!footerAligment) {\r\n          footerStyles = {\r\n            textAlign: \"left\",\r\n            justifyContent: \"flex-start\"\r\n          };\r\n        }\r\n        headerStyles = {\r\n          marginLeft: 0,\r\n          marginBottom: 0\r\n        };\r\n        break;\r\n      case \"column\":\r\n        if(!bodyAlignment) {\r\n          bodyStyles = {\r\n            textAlign: \"center\",\r\n            justifyContent: \"center\"\r\n          };\r\n        }\r\n        if(!footerAligment) {\r\n          footerStyles = {\r\n            textAlign: \"center\",\r\n            justifyContent: \"center\"\r\n          };\r\n        }\r\n        headerStyles = {\r\n          marginLeft: 0,\r\n          marginRight: 0\r\n        };\r\n        break;\r\n      case \"row-reverse\":\r\n        if(!bodyAlignment) {\r\n          bodyStyles = {\r\n            textAlign: \"right\",\r\n            justifyContent: \"flex-end\"\r\n          };\r\n        }\r\n        if(!footerAligment) {\r\n          footerStyles = {\r\n            textAlign: \"right\",\r\n            justifyContent: \"flex-end\"\r\n          };\r\n        }\r\n        headerStyles = {\r\n          marginRight: 0,\r\n          marginBottom: 0\r\n        };\r\n        break\r\n    }\r\n\r\n    //footer Alignment\r\n    switch (bodyAlignment) {\r\n      case \"flex-start\":\r\n        bodyStyles.textAlign = \"left\";\r\n        break;\r\n      case \"center\":\r\n        bodyStyles.textAlign = \"center\";\r\n        break;\r\n      case \"flex-end\":\r\n        bodyStyles.textAlign = \"right\";\r\n        break;\r\n    }\r\n\r\n    switch (footerAligment) {\r\n      case \"flex-start\":\r\n        footerStyles.textAlign = \"left\";\r\n        break;\r\n      case \"center\":\r\n        footerStyles.textAlign = \"center\";\r\n        break;\r\n      case \"flex-end\":\r\n        footerStyles.textAlign = \"right\";\r\n        break;\r\n    }\r\n\r\n    //read more\r\n    let readMore = \"\";\r\n    if(this.state.settings.read_more_button_additional_options_content) {\r\n\r\n      let ReadMoreIcon = (props) => Object.keys(this.state.settings.icon_read_more_content).length !== 0 ? (\r\n        <AltrpImage\r\n          image={this.state.settings.icon_read_more_content}\r\n          element={this.props.element}\r\n          className={\"altrp-icon-read-more-icon\" + \" altrp-icon-read-more-icon-\" + props.pos}\r\n        />\r\n      ) : \"\";\r\n\r\n      let readMorePosOnHover = {};\r\n\r\n      if(this.state.settings.show_on_hover_additional_options_content) {\r\n        let x = this.state.settings.horizontal_offset_additional_options_content;\r\n        let y = this.state.settings.vertical_offset_additional_options_content;\r\n\r\n        if(x.size === \"\") {\r\n          x.size = \"0\";\r\n        }\r\n        if(y.size === \"\") {\r\n          y.size = \"0\";\r\n        }\r\n        readMorePosOnHover = {\r\n          transform: `translate(${x.size+x.unit}, ${y.size+y.unit})`\r\n        }\r\n      }\r\n\r\n      let readMoreContent = (\r\n        <React.Fragment>\r\n          {\r\n            this.state.settings.icon_position_additional_options_content === \"left\" ? <ReadMoreIcon pos=\"left\" /> : \"\"\r\n          }\r\n          {\r\n            this.state.settings.text_read_more_content\r\n          }\r\n          {\r\n            this.state.settings.icon_position_additional_options_content === \"right\" ? <ReadMoreIcon pos=\"right\" /> : \"\"\r\n          }\r\n        </React.Fragment>\r\n      );\r\n\r\n      let readMoreLink = (\r\n        <AltrpLink className=\"altrp-icon-read-more-link\" link={this.state.settings.link_read_more_content}>\r\n          {\r\n            readMoreContent\r\n          }\r\n        </AltrpLink>\r\n      );\r\n\r\n      let readMoreNoLink = (\r\n        <div className=\"altrp-icon-read-more-link\">\r\n          {\r\n            readMoreContent\r\n          }\r\n        </div>\r\n      );\r\n\r\n      readMore = (\r\n        <div style={{...readMorePosOnHover, ...bodyStyles}} className={\"altrp-icon-read-more\" + (this.state.settings.show_on_hover_additional_options_content ? \" altrp-icon-read-more-on-hover\" : \"\")}>\r\n          {\r\n            this.state.settings.global_link_additional_options_content ? readMoreNoLink : readMoreLink\r\n          }\r\n        </div>\r\n      )\r\n    }\r\n\r\n    let iconContent = (\r\n      <div className=\"altrp-icon-background-image\">\r\n        <div className=\"altrp-icon\">\r\n          <div className=\"altrp-icon-header\" style={headerStyles}>\r\n            <div className=\"altrp-icon-i-wrapper\">\r\n              <AltrpImage\r\n                image={this.state.settings.media_icon_box_content}\r\n                element={this.props.element}\r\n                default={{\r\n                  assetType: \"icon\",\r\n                  name: 'star',\r\n                  iconComponent: iconsManager.renderIcon('star')\r\n                }}\r\n                className={\"altrp-icon-i\"}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"altrp-icon-content\">\r\n            <div className=\"altrp-icon-body\" style={bodyStyles}>\r\n              {\r\n                bodyContent\r\n              }\r\n            </div>\r\n            <div className=\"altrp-icon-footer\" style={footerStyles}>\r\n              <p className=\"altrp-icon-footer-text\">\r\n                {\r\n                  this.state.settings.description_icon_box_content\r\n                }\r\n              </p>\r\n            </div>\r\n            {\r\n              readMore\r\n            }\r\n          </div>\r\n\r\n          {\r\n            indicator\r\n          }\r\n          {\r\n            badge\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    let iconContentLink = (\r\n      <AltrpLink className=\"altrp-icon-global-link\" link={this.state.settings.global_link_link_additional_options_content}>\r\n        {\r\n          iconContent\r\n        }\r\n      </AltrpLink>\r\n    );\r\n\r\n    return this.state.settings.global_link_additional_options_content ? iconContentLink : iconContent\r\n  }\r\n}\r\n\r\nexport default IconWidget;\r\n"],"sourceRoot":""}