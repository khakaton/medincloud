{"version":3,"sources":["webpack:///./resources/modules/admin/src/components/dashboard/widgets/d3/ErrorBoundary.js","webpack:///./resources/modules/admin/src/components/dashboard/widgets/d3/DataAdapter.js","webpack:///./resources/modules/admin/src/components/dashboard/widgets/d3/BarDataSource.js","webpack:///./resources/modules/admin/src/components/dashboard/widgets/d3/PieDataSource.js","webpack:///./resources/modules/admin/src/components/dashboard/widgets/d3/TableDataSource.js","webpack:///./resources/modules/admin/src/components/dashboard/widgets/d3/LineDataSource.js","webpack:///./resources/modules/admin/src/components/dashboard/widgets/d3/ScatterDataSource.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/ChooseWidget.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/WidgetData.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/WidgetPreview.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/settings/DatasourceSettings.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/settings/AxisBaseSettings.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/settings/MarginInput.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/settings/StyleSettings.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/settings/FilterParameters.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/settings/DiagramTypeSettings.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/settings/LegendSettings.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/settings/PaddingTooltipInput.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/settings/TooltipSettings.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/settings/AnimationSettings.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/settings/SortData.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/DrawerComponent.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/WidgetSettings.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/settings/AddItemButton.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/settings/ExportDashboardButton.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/settings/ImportDashboard.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/settings/ImportDiagram.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/DataSourceDashboards.js"],"names":["props","state","hasError","error","errorInfo","this","style","textAlign","children","Component","MAX_DATA_TO_SVG","diagramType","sources","storeParams","widgetParams","countRequest","path","split","console","log","_","find","dataStorageUpdater","data","currentDataSources","o","alias","getAlias","params","values","map","param","index","key","encodeURIComponent","keys","value","join","string","filter","item","resultRequest","dataKey","keyIsDate","returnData","LINE","POINT","TABLE","formatData","PIE","formatDataPie","BAR","formatDataBar","array","d","currentKey","get","keyFormatted","moment","isValid","format","y","Number","x","id","datasource","datasourceObject","title","datasourceTitle","url","getWebUrl","localParams","parseSourceParams","parameters","queryString","Array","from","Set","sendUrl","axios","req","uniqBy","selectFormatting","splitTo","splitFrom","slice","length","getDatasourceByPath","getDataWithParams","dataArray","getDataByPath","isArray","isMultiple","needCallAgain","isDate","isLarge","globalParams","cloneDeep","globalParamsArray","paramsResult","concat","source","adaptDataByPath","getDataFromIterableDatasources","forEach","dates","resultDates","matches","obj","includes","Date","uniq","Promise","all","regagroScheme","Schemes","colors","reverse","BarDataSource","settings","element","legend","color","prevProps","prevState","isEqual","setState","getData","s","JSON","stringify","formsStore","form_data","DataAdapter","type","parseDataNotType","adapterObject","setTimeout","count","Object","sort","sortBy","indexBy","enableLabel","enableSliceLabels","padding","innerPadding","groupMode","layout","labelSkipHeight","labelSkipWidth","enableGridY","enableGridX","labelTextColor","datum","invert","black","white","threshold","theme","tooltip","container","margin","top","right","bottom","left","scheme","colorBy","TooltipBar","enable","enableCustomTooltip","widgetID","axisLeft","tickRotation","axisRight","axisBottom","axisTop","animate","motionDamping","animationMotionDamping","motionStiffness","animationMotionStiffness","legends","enableLegend","dataFrom","anchor","legendAchor","direction","legendDirection","justify","legendJustify","translateX","legendTranslateX","translateY","legendTranslateY","itemsSpacing","legendItemsSpacing","itemWidth","legendItemWidth","itemHeight","legendItemHeight","itemDirection","legendItemDirection","symbolSize","legendSymbolSize","symbolShape","connect","PieDataSource","sliceLabelsTextColor","cornerRadius","padAngle","borderWidth","borderColor","sliceLabelsSkipAngle","sliceLabelsRadiusOffset","radialLabelsSkipAngle","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsTextXOffset","radialLabelsLinkStrokeWidth","innerRadius","enableRadialLabels","TooltipPie","TableDataSource","parseData","reduce","acc","summary","object","className","dataset","formattingDate","colSpan","LineDataSource","dataObject","xScale","curve","enableArea","defs","linearGradientDef","offset","opacity","fill","match","useMesh","pointSize","enablePoints","lineWidth","enableCrosshair","xFormat","Tooltip","tooltipPadding","Boolean","enableAnimation","ScatterDataSource","TooltipScatter","editElement","widget","renderBar","renderPie","renderLine","renderTable","renderScatter","getWidget","el","ref","React","downloadWidget","bind","snapshot","exportComponentAsPNG","name","width","Dropdown","drop","variant","zIndex","background","onClick","exportCard","copyWidget","openSettingsHandler","onRemoveItem","i","WidgetPreview","cardName","setCardName","addItemPreview","e","target","isEmpty","fallbacks","placeholder","onChange","dispatch","editElementDispatch","DatasourceSettings","returnOptionsWithKeys","datasources","setDatasource","Form","isMulti","defaultValue","as","styles","menuList","provided","position","menu","menuPortal","options","getOptionValue","option","getOptionLabel","selectSettings","label","timeScales","AxisBaseSettings","scaleType","defaultInputValue","setXAxisScale","precision","setXAxisTimeScale","defaultBarMargin","defaultPieMargin","defaultLineMargin","defaultScatterMarign","defaultMargin","setProperty","property","htmlFor","min","curvieTypes","barLayout","StyleSettings","currentColorScheme","checked","handleChange","setReverse","setColorScheme","setSliceLabelsSkipAngle","setRadialLabelsSkipAngle","setSliceLabelsRadiusOffset","setRadialLabelsLinkOffset","setRadialLabelsLinkDiagonalLength","setRadialLabelsLinkHorizontalLength","setRadialLabelsTextXOffset","setRadialLabelsLinkStrokeWidth","setLabelSkipHeight","setLabelSkipWidth","event","persist","setTickRotation","newValue","hex","Slider","changeWidth","max","step","Checkbox","disableRipple","defaultChecked","setPointSize","setInnerRadius","setPadding","setInnerPadding","FilterParameters","currentSelected","setOption","currentOption","keyOption","getOptions","model","status","setParam","types","widgetTypes","setType","anchors","directions","itemDirections","LegendSettings","setLedengEnable","setLegendJustify","TooltipSettings","setTooltipEnable","AnimationSettings","animationEnabled","setAnimationEnable","SortData","styled","styledString","WidgetSettings","openDataSettings","openDiagramSettings","openTooltipSettings","openLegendSettings","openAnimationSettings","filter_datasource","delimer","setYAxisScale","generateName","setName","prevParam","paramName","indexPrevValue","findIndex","push","parseHtmlEntities","editHandler","datasourceArray","editElementSettings","arrayOfDatasourceTitles","nameDatasource","datasourcesArray","changeParams","str","replace","numStr","num","parseInt","String","fromCharCode","currentParamKey","findKey","scale","yScale","colorScheme","DrawerComponent","Button","setOpenDataSettings","Collapse","in","DiagramTypeSettings","setOpenDiagramSettings","checkboxColor","setOpenTooltipSettings","setOpenLegendSettings","setOpenAnimationSettings","onAddItem","onCloseHandler","display","onExport","onImport","getFile","accept","ResponsiveReactGridLayout","WidthProvider","Responsive","DataSourceDashboards","items","newCounter","counter","repeater","rep","settingsOpen","drawer","importData","importWidget","parentDrawer","document","body","export","import","importDiagram","getWidgetFile","onAddItemCard","onBreakpointChange","onEditItem","onResizeHandler","onResizeHandlerStop","saveWidgetData","setEditItem","openSettings","onDragStop","isEditor","getElementById","contentWindow","querySelector","headers","getAttribute","then","res","addItemPreviewBool","edit","itemSettingsAdd","alert","cols","Infinity","w","h","oldItem","newItem","itemKey","breakpoint","onLayoutChange","reject","dataStr","link","createElement","setAttribute","click","file","parse","fileReader","FileReader","readAsText","files","onload","result","saveWidget","showButton","showExportButton","draggableCancel","onResizeStart","onResizeStop","autoSize","onDrop","createPortal","getContainer","placement","defaultOpen","drawerWidth","open","onClose","handler","ReactDOM","defaultProps","lg","md","sm","xs","xxs","rowHeight","dashboardExport","exportDashboard","exportDashboardDispatch","forwardRef"],"mappings":"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","file":"2929.editor.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // console.log(errorInfo);\r\n    // console.log(error);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div>\r\n          <h1 style={{ textAlign: \"center\" }}>Ошибка отрисовки</h1>\r\n          <h4>Измените настройки диаграммы и перезагрузите страницу</h4>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import { getDataByPath } from \"../../../../../../front-app/src/js/helpers\";\r\nimport { BAR, PIE, LINE, TABLE, POINT } from \"../../widgetTypes\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n//Класс для работы с репитером\r\n//получает данные из источника и приводит их к указанному формату ключ->значение\r\nconst MAX_DATA_TO_SVG = 100;\r\nclass DataAdapter {\r\n  constructor(diagramType, sources, storeParams, widgetParams, countRequest) {\r\n    this.diagramType = diagramType;\r\n    this.sources = sources;\r\n    this.storeParams = storeParams;\r\n    this.widgetParams = widgetParams;\r\n    this.countRequest = countRequest;\r\n  }\r\n  /**\r\n   * Вывод alias по пути датасурса\r\n   */\r\n  getAlias(path) {\r\n    try {\r\n      return path.split(\"altrpdata.\")[1];\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  /**\r\n   * Получение экземпляра Datasource по его пути\r\n   * @param {*} path\r\n   */\r\n  getDatasourceByPath(path) {\r\n    return _.find(dataStorageUpdater.data.currentDataSources, o => {\r\n      return o.data.alias === this.getAlias(path);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Формирование строки с параметрами для URL\r\n   * @param {*} params\r\n   */\r\n  queryString(params) {\r\n    let data = _.values(params).map((param, index) => {\r\n      let key = encodeURIComponent(_.keys(param)[0]);\r\n      let value = encodeURIComponent(param[key]);\r\n      let result = \"\";\r\n      if (index === 0) {\r\n        if (param[key] === null || param[key] == null) {\r\n          result = ``;\r\n        } else {\r\n          result = `${key}=${value}`;\r\n        }\r\n      } else {\r\n        if (param[key] === \"\" || param[key] == null) {\r\n          result = ``;\r\n        } else {\r\n          result = `&${key}=${value}`;\r\n        }\r\n      }\r\n      return result;\r\n    });\r\n    data = data.join(\"\");\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Преобразование параметров в массив\r\n   * @param {*} params\r\n   */\r\n  parseSourceParams(params) {\r\n    let string = \"\";\r\n    if (typeof params !== \"undefined\") {\r\n      string = _.keys(params)\r\n        .map((param, index) => {\r\n          if (typeof params[param] !== \"undefined\" || params[param] !== \"\")\r\n            return `${param}=${params[param]}`;\r\n        })\r\n        .filter(item => {\r\n          const value =\r\n            item.split(\"=\")[1] !== \"undefined\" ? item.split(\"=\")[1] : \"\";\r\n          return (\r\n            typeof value !== \"undefined\" &&\r\n            value !== \"\" &&\r\n            value !== null &&\r\n            value !== \"null\"\r\n          );\r\n        })\r\n        .join(\"&\");\r\n    }\r\n    return string;\r\n  }\r\n\r\n  selectFormatting(resultRequest, key, dataKey, keyIsDate) {\r\n    let returnData = [];\r\n    switch (this.diagramType) {\r\n      case LINE:\r\n        returnData = this.formatData(resultRequest, key, dataKey, keyIsDate);\r\n        break;\r\n      case POINT:\r\n        returnData = this.formatData(resultRequest, key, dataKey, keyIsDate);\r\n        break;\r\n      case TABLE:\r\n        returnData = this.formatData(resultRequest, key, dataKey, keyIsDate);\r\n        break;\r\n      case PIE:\r\n        returnData = this.formatDataPie(resultRequest, key, dataKey, keyIsDate);\r\n        break;\r\n      case BAR:\r\n        returnData = this.formatDataBar(resultRequest, key, dataKey, keyIsDate);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return returnData;\r\n  }\r\n  /**\r\n   * Форматирование данных под Line,Table и Scatter\r\n   * @param {*} array\r\n   * @param {*} key\r\n   * @param {*} dataKey\r\n   */\r\n  formatData(array, key, dataKey, keyIsDate = false) {\r\n    return (\r\n      array.map(d => {\r\n        const currentKey = _.get(d, key);\r\n        const keyFormatted = !moment(currentKey).isValid()\r\n          ? currentKey\r\n          : moment(currentKey).format(\"DD.MM.YYYY\");\r\n        return {\r\n          y: Number(_.get(d, dataKey)),\r\n          x: keyIsDate ? keyFormatted : currentKey\r\n        };\r\n      }) || []\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Форматирование данных под Pie\r\n   * @param {*} array\r\n   * @param {*} key\r\n   * @param {*} dataKey\r\n   */\r\n  formatDataPie(array, key, dataKey, keyIsDate = false) {\r\n    return (\r\n      array.map(d => {\r\n        const currentKey = _.get(d, key);\r\n        const keyFormatted = !moment(currentKey).isValid()\r\n          ? currentKey\r\n          : moment(currentKey).format(\"DD.MM.YYYY\");\r\n        return {\r\n          value: Number(_.get(d, dataKey)),\r\n          id: keyIsDate ? keyFormatted : currentKey\r\n        };\r\n      }) || []\r\n    );\r\n  }\r\n  /**\r\n   * Форматирование данных под Pie\r\n   * @param {*} array\r\n   * @param {*} key\r\n   * @param {*} dataKey\r\n   */\r\n  formatDataBar(array, key, dataKey, keyIsDate = false) {\r\n    return (\r\n      array.map(d => {\r\n        const currentKey = _.get(d, key);\r\n        const keyFormatted = !moment(currentKey).isValid()\r\n          ? currentKey\r\n          : moment(currentKey).format(\"DD.MM.YYYY\");\r\n        return {\r\n          key: keyIsDate ? keyFormatted : currentKey,\r\n          value: Number(_.get(d, dataKey)),\r\n          [keyFormatted]: Number(_.get(d, dataKey)),\r\n          label: keyIsDate\r\n            ? `${keyFormatted} (${Number(_.get(d, dataKey))})`\r\n            : `${currentKey} (${Number(_.get(d, dataKey))})`\r\n        };\r\n      }) || []\r\n    );\r\n  }\r\n  /**\r\n   * Получение данных по web url датасорса для диаграмм типа Line,Table,Scatter\r\n   * @param {*} datasource\r\n   * @param {*} datasourceObject\r\n   * @param {*} key\r\n   * @param {*} dataKey\r\n   * @param {*} params\r\n   */\r\n  async getDataWithParams(datasource, datasourceObject, key, dataKey, params) {\r\n    const { path, title, keyIsDate } = datasourceObject;\r\n    const datasourceTitle = title || path;\r\n    const url = datasource.getWebUrl();\r\n    const localParams = this.parseSourceParams(datasource.params);\r\n    let parameters = this.queryString(params) + \"&\" + localParams;\r\n    parameters = Array.from(new Set(parameters.split(\"&\"))).join(\"&\");\r\n    const sendUrl = url + \"?\" + parameters;\r\n    try {\r\n      const req = await axios(sendUrl);\r\n      const resultRequest =\r\n        typeof req.data.data !== \"undefined\"\r\n          ? _.uniqBy(req.data.data, key)\r\n          : _.uniqBy(req.data, key);\r\n      let returnData = this.selectFormatting(\r\n        resultRequest,\r\n        key,\r\n        dataKey,\r\n        keyIsDate\r\n      );\r\n      if (datasourceObject.splitTo && datasourceObject.splitFrom) {\r\n        returnData = returnData.slice(\r\n          datasourceObject.splitFrom,\r\n          datasourceObject.splitTo\r\n        );\r\n      }\r\n      return {\r\n        id: datasourceTitle,\r\n        data: returnData\r\n      };\r\n    } catch (error) {\r\n      return [];\r\n    }\r\n  }\r\n  /**\r\n   * Получение данных по пути datasource для диаграмм Line,Table,Scatter\r\n   * @param {*} datasourceObject\r\n   * @param {*} params\r\n   */\r\n  async adaptDataByPath(datasourceObject, params = {}) {\r\n    const { path, key, data, title, keyIsDate } = datasourceObject;\r\n    const datasourceTitle = title || path;\r\n    if (_.keys(params).length > 0) {\r\n      const datasource = this.getDatasourceByPath(path);\r\n      if (typeof datasource !== \"undefined\") {\r\n        return await this.getDataWithParams(\r\n          datasource,\r\n          datasourceObject,\r\n          key,\r\n          data,\r\n          params\r\n        );\r\n      }\r\n    }\r\n    try {\r\n      let dataArray = getDataByPath(path, []);\r\n      //на случай если приходит просто обект\r\n      dataArray = Array.isArray(dataArray) ? dataArray : [dataArray];\r\n      if (dataArray.length > 0) {\r\n        //Исключаем дублирование ключей, т.к. это приводит к ошибкам рендера всех диаграм\r\n        dataArray = _.uniqBy(dataArray, key);\r\n        dataArray = this.selectFormatting(dataArray, key, data, keyIsDate);\r\n        if (datasourceObject.splitTo && datasourceObject.splitFrom) {\r\n          dataArray = dataArray.slice(\r\n            datasourceObject.splitFrom,\r\n            datasourceObject.splitTo\r\n          );\r\n        }\r\n      }\r\n      return [\r\n        {\r\n          id: datasourceTitle,\r\n          data: dataArray\r\n        }\r\n      ];\r\n    } catch (error) {\r\n      console.log(\"ADAPTER ERROR =>\", error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Для Line, Table и Scatter\r\n   * @return Promise;\r\n   * */\r\n  async parseData() {\r\n    //возвращаемые значения\r\n    let data = [];\r\n    const isMultiple = _.keys(this.sources).length > 1; //проверка данных на несколько исчтоников\r\n    let needCallAgain = true; //проверка на повторный вызов http запроса\r\n    let isDate = true; //проверка на формат ключа\r\n    let isLarge = false; //проверка на большие датасеты, большим считается с более, чем 50 элементами\r\n\r\n    //Обработка параметров\r\n    const globalParams = _.cloneDeep(this.storeParams, []);\r\n    const globalParamsArray = _.keys(globalParams)\r\n      .map(param => {\r\n        return { [param]: globalParams[param] };\r\n      })\r\n      .filter(param => {\r\n        let key = _.keys(param)[0];\r\n        return param[key] !== \"\";\r\n      });\r\n    const localParams = _.cloneDeep(this.widgetParams, []);\r\n    const paramsResult =\r\n      typeof localParams !== \"undefined\" && typeof localParams !== \"number\"\r\n        ? localParams.concat(globalParamsArray)\r\n        : [].concat(globalParamsArray);\r\n    if (_.keys(this.sources).length > 0) {\r\n      //Если источник данных один, то возвращаем данные только по нему\r\n      if (!isMultiple) {\r\n        let source = this.sources[0];\r\n        try {\r\n          if (_.keys(paramsResult).length > 0) {\r\n            data = await this.adaptDataByPath(source, paramsResult);\r\n          } else {\r\n            data = await this.adaptDataByPath(source);\r\n          }\r\n        } catch (error) {\r\n          data = [];\r\n        }\r\n        // data = [data];\r\n      } else {\r\n        // Если несколько истчочников данных, то делаем запросы по каждому\r\n        data = await this.getDataFromIterableDatasources(\r\n          this.sources,\r\n          paramsResult\r\n        );\r\n        data.forEach((item, index) => {\r\n          data[index] = item[0];\r\n        });\r\n      }\r\n      let dates = [];\r\n      let resultDates = [];\r\n      //Если больше одного источника, проверяем вложенные данные\r\n      if (isMultiple) {\r\n        let matches = data.map(obj => {\r\n          if (_.keys(obj).length > 0) {\r\n            if (!isLarge) {\r\n              isLarge =\r\n                typeof obj.data !== \"undefined\"\r\n                  ? obj.data.length > MAX_DATA_TO_SVG\r\n                  : false;\r\n            }\r\n            return typeof obj.data !== \"undefined\"\r\n              ? obj.data.length > MAX_DATA_TO_SVG\r\n              : false;\r\n          } //Если хотя бы в одном из источников данных больше 50, то это большой датасет\r\n          return _.keys(obj).length > 0;\r\n        });\r\n        //Если во вложениях есть пустые данные, то вызываем запрос данных снова\r\n        needCallAgain = _.includes(matches, false);\r\n        if (!needCallAgain) {\r\n          //В противном случае проверяем ключи на формат даты\r\n          dates = data.map(obj => {\r\n            return obj.data.map(item => item.key instanceof Date);\r\n          });\r\n          dates.forEach(array => (resultDates = resultDates.concat(array)));\r\n          resultDates = _.uniq(resultDates);\r\n          //Если хотя бы в одном из истчоников нет ключа по дате, то возвращаем ложь\r\n          isDate = _.includes(resultDates, false) === true ? false : true;\r\n        }\r\n      } else {\r\n        //Если один источник, проверяем данные в нём\r\n        if (!Array.isArray(data)) {\r\n          data = [data];\r\n        }\r\n        needCallAgain =\r\n          typeof data[0] !== \"undefined\"\r\n            ? _.keys(data[0].data).length === 0 && this.countRequest < 5\r\n            : true;\r\n        dates = data.map(obj => {\r\n          if (!isLarge) {\r\n            isLarge = obj.data.length > MAX_DATA_TO_SVG;\r\n          }\r\n          return obj.key instanceof Date;\r\n        });\r\n        dates = _.uniq(dates);\r\n        isDate = _.includes(dates, false) === true ? false : true;\r\n      }\r\n      return {\r\n        data: data,\r\n        isMultiple: isMultiple,\r\n        isDate: isDate,\r\n        needCallAgain: needCallAgain,\r\n        isLarge: isLarge\r\n      };\r\n    }\r\n\r\n    return {\r\n      data: [],\r\n      isMultiple: isMultiple,\r\n      isDate: isDate,\r\n      needCallAgain: needCallAgain,\r\n      isLarge: isLarge\r\n    };\r\n  }\r\n  /**\r\n   * Для Pie и Bar\r\n   * @return Promise;\r\n   * */\r\n  async parseDataNotType() {\r\n    //возвращаемые значения\r\n    let data = [];\r\n    const isMultiple = _.keys(this.sources).length > 1; //проверка данных на несколько исчтоников\r\n    let needCallAgain = true; //проверка на повторный вызов http запроса\r\n    let isDate = true; //проверка на формат ключа\r\n    let isLarge = false; //проверка на большие датасеты, большим считается с более, чем 50 элементами\r\n\r\n    //Обработка параметров\r\n    const globalParams = _.cloneDeep(this.storeParams, []);\r\n    const globalParamsArray = _.keys(globalParams)\r\n      .map(param => {\r\n        return { [param]: globalParams[param] };\r\n      })\r\n      .filter(param => {\r\n        let key = _.keys(param)[0];\r\n        return param[key] !== \"\";\r\n      });\r\n    const localParams = _.cloneDeep(this.widgetParams, []);\r\n    const paramsResult =\r\n      typeof localParams !== \"undefined\" && typeof localParams !== \"number\"\r\n        ? localParams.concat(globalParamsArray)\r\n        : [].concat(globalParamsArray);\r\n    if (_.keys(this.sources).length > 0) {\r\n      //Если источник данных один, то возвращаем данные только по нему\r\n      if (!isMultiple) {\r\n        let source = this.sources[0];\r\n        if (_.keys(paramsResult).length > 0) {\r\n          data = await this.adaptDataByPath(source, paramsResult);\r\n        } else {\r\n          data = await this.adaptDataByPath(source);\r\n        }\r\n        data = typeof data === \"object\" && _.keys(data) === 0 ? [] : data;\r\n      } else {\r\n        // Если несколько истчочников данных, то делаем запросы по каждому\r\n        data = await this.getDataFromIterableDatasources(\r\n          this.sources,\r\n          paramsResult\r\n        );\r\n        data.forEach((item, index) => {\r\n          data[index] = item[0];\r\n        });\r\n      }\r\n\r\n      let dates = [];\r\n      let resultDates = [];\r\n\r\n      //Если больше одного источника, проверяем вложенные данные\r\n      if (isMultiple) {\r\n        let matches = data.map(obj => {\r\n          if (_.keys(obj).length > 0) {\r\n            if (!isLarge) {\r\n              isLarge = obj.length > MAX_DATA_TO_SVG;\r\n            }\r\n            return obj.length > 0;\r\n          } //Если хотя бы в одном из источников данных больше 50, то это большой датасет\r\n          return _.keys(obj).length > 0;\r\n        });\r\n        //Если во вложениях есть пустые данные, то вызываем запрос данных снова\r\n        needCallAgain = _.includes(matches, false);\r\n        if (!needCallAgain) {\r\n          //В противном случае проверяем ключи на формат даты\r\n          dates = data.map(obj => {\r\n            return obj.map(item => item.key instanceof Date);\r\n          });\r\n          dates.forEach(array => (resultDates = resultDates.concat(array)));\r\n          resultDates = _.uniq(resultDates);\r\n          //Если хотя бы в одном из истчоников нет ключа по дате, то возвращаем ложь\r\n          isDate = _.includes(resultDates, false) === true ? false : true;\r\n        }\r\n      } else {\r\n        let matches =\r\n          data.length > 0 ? data.map(obj => obj.length > 0) : [false];\r\n        //Если во вложениях есть пустые данные, то вызываем запрос данных снова\r\n        needCallAgain = _.includes(matches, false) && this.countRequest < 5;\r\n        //Если один источник, проверяем данные в нём\r\n        dates =\r\n          data.length > 0\r\n            ? data.map(obj => {\r\n                if (!isLarge) {\r\n                  isLarge = obj.length > MAX_DATA_TO_SVG;\r\n                }\r\n                return obj.key instanceof Date;\r\n              })\r\n            : false;\r\n        dates = _.uniq(dates);\r\n        isDate = _.includes(dates, false) === true ? false : true;\r\n      }\r\n      if (this.diagramType === PIE) {\r\n        if (Array.isArray(data)) {\r\n          data = _.uniqBy([].concat(...data.map(item => item.data)), \"id\");\r\n        } else {\r\n          if (data.data.length > 0) {\r\n            data = _.uniqBy(data.data, \"id\");\r\n          } else {\r\n            data = [];\r\n          }\r\n        }\r\n      } else {\r\n        if (!isMultiple && this.diagramType === BAR) {\r\n          if (!isMultiple && this.diagramType === BAR) {\r\n            if (Array.isArray(data)) {\r\n              data = data[0].data;\r\n            } else {\r\n              data = data.data;\r\n            }\r\n          }\r\n        } else {\r\n          data = [].concat(...data.map(item => item.data));\r\n        }\r\n      }\r\n      return {\r\n        data: data,\r\n        isMultiple: isMultiple,\r\n        isDate: isDate,\r\n        needCallAgain: needCallAgain,\r\n        isLarge: isLarge\r\n      };\r\n    }\r\n\r\n    return {\r\n      data: [],\r\n      isMultiple: isMultiple,\r\n      isDate: isDate,\r\n      needCallAgain: needCallAgain,\r\n      isLarge: isLarge\r\n    };\r\n  }\r\n  /**\r\n   * Получение массива данных из нескольких датасурсов для диаграмм Line,Table,Scatter\r\n   * @param {*} sources\r\n   * @param {*} paramsResult\r\n   */\r\n  async getDataFromIterableDatasources(sources, paramsResult = {}) {\r\n    return Promise.all(\r\n      sources.map(async source => {\r\n        let dataArray = [];\r\n        if (_.keys(paramsResult).length > 0) {\r\n          dataArray = await this.adaptDataByPath(source, paramsResult);\r\n        } else {\r\n          dataArray = await this.adaptDataByPath(source);\r\n        }\r\n        if (_.keys(dataArray).length === 0) {\r\n          return [];\r\n        }\r\n        return dataArray;\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataAdapter;\r\n","import React, { Component } from \"react\";\r\nimport { ResponsiveBarCanvas } from \"@nivo/bar\";\r\nimport { connect } from \"react-redux\";\r\nimport ErrorBoundary from \"./ErrorBoundary\";\r\nimport DataAdapter from \"./DataAdapter\";\r\nimport invert from \"invert-color\";\r\nimport TooltipBar from \"./TooltipBar\";\r\nimport Schemes from \"../../../../../../editor/src/js/components/altrp-dashboards/settings/NivoColorSchemes\";\r\n\r\nconst regagroScheme = _.find(Schemes, { value: \"regagro\" }).colors.reverse();\r\n\r\nconst mapStateToProps = state => {\r\n  return { formsStore: _.cloneDeep(state.formsStore) };\r\n};\r\nclass BarDataSource extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      settings: _.cloneDeep(props.element.settings),\r\n      sources: _.cloneDeep(props.sources),\r\n      legend: _.cloneDeep(props.element.settings.legend),\r\n      color: _.cloneDeep(props.element.settings.color),\r\n      params: _.cloneDeep(props.element.settings.params),\r\n      countRequest: 0,\r\n      isMultiple: false,\r\n      isDate: true,\r\n      isLarge: false,\r\n      data: []\r\n    };\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (!_.isEqual(prevProps.sources, this.props.sources)) {\r\n      this.setState(state => ({ ...state, sources: this.props.sources }));\r\n      await this.getData();\r\n    }\r\n    if (!_.isEqual(prevProps.element, this.props.element)) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        legend: this.props.element.settings.legend,\r\n        color: this.props.element.settings.color,\r\n        sources: this.props.element.settings.sources\r\n      }));\r\n    }\r\n    if (\r\n      !_.isEqual(\r\n        prevProps.element.settings.params,\r\n        this.props.element.settings.params\r\n      )\r\n    ) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        params: this.props.element.settings.params\r\n      }));\r\n      await this.getData();\r\n    }\r\n    if (!_.isEqual(prevProps.element.settings, this.props.element.settings)) {\r\n      this.setState(s => ({ ...s, settings: this.props.element.settings }));\r\n    }\r\n    if (\r\n      JSON.stringify(prevProps.element.settings.params) !==\r\n      JSON.stringify(this.props.element.settings.params)\r\n    ) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        params: this.props.element.settings.params\r\n      }));\r\n      await this.getData();\r\n    }\r\n    if (\r\n      !_.isEqual(\r\n        prevProps.formsStore.form_data,\r\n        this.props.formsStore.form_data\r\n      )\r\n    ) {\r\n      //Обновление данные при смене глобальных параметров\r\n      this.setState(state => ({\r\n        ...state,\r\n        countRequest: 0\r\n      }));\r\n      await this.getData();\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.getData();\r\n  }\r\n\r\n  async getData() {\r\n    const adapterObject = await new DataAdapter(\r\n      this.props.element.settings.type,\r\n      this.props.element.settings.sources,\r\n      _.cloneDeep(this.props.formsStore.form_data),\r\n      this.state.params,\r\n      this.state.countRequest\r\n    ).parseDataNotType();\r\n    const { isMultiple, isDate, isLarge, needCallAgain } = adapterObject;\r\n    let data = adapterObject.data;\r\n    if (needCallAgain) {\r\n      setTimeout(() => {\r\n        this.getData();\r\n        let count = this.state.countRequest;\r\n        count += 1;\r\n        this.setState(s => ({ ...s, countRequest: count }));\r\n      }, 3500);\r\n    }\r\n    this.setState(s => ({\r\n      ...s,\r\n      data: data,\r\n      isMultiple: isMultiple,\r\n      isDate: isDate,\r\n      isLarge: isLarge\r\n    }));\r\n  }\r\n  render() {\r\n    if (typeof this.state.sources === \"undefined\") {\r\n      return <div>Укажите источник данных</div>;\r\n    }\r\n    if (\r\n      this.state.sources === null &&\r\n      Object.keys(this.state.sources).length === 0\r\n    ) {\r\n      return <div>Нет данных</div>;\r\n    }\r\n    if (this.state.isLarge) {\r\n      return <div>Ограничьте диапозон данных или выберите другой источник</div>;\r\n    }\r\n    if (typeof this.state.data !== \"undefined\" && this.state.data.length > 0) {\r\n      let data = this.state.data;\r\n      const sort = this.state.settings?.sort?.value;\r\n      switch (sort) {\r\n        case \"value\":\r\n          data = _.sortBy(data, [\"value\"]);\r\n          break;\r\n        case \"key\":\r\n          data = _.sortBy(data, [\"key\"]);\r\n          break;\r\n        default:\r\n          data = data;\r\n          break;\r\n      }\r\n      return (\r\n        <>\r\n          <ErrorBoundary>\r\n            <ResponsiveBarCanvas\r\n              data={data}\r\n              indexBy=\"key\"\r\n              enableLabel={this.state.settings?.enableSliceLabels}\r\n              padding={this.state.settings?.padding}\r\n              innerPadding={this.state.settings?.innerPadding}\r\n              reverse={this.state.settings?.reverse}\r\n              groupMode={this.state.settings?.groupMode}\r\n              layout={this.state.settings?.layout}\r\n              labelSkipHeight={this.state.settings?.labelSkipHeight}\r\n              labelSkipWidth={this.state.settings?.labelSkipWidth}\r\n              enableGridY={this.state.settings?.enableGridY}\r\n              enableGridX={this.state.settings?.enableGridX}\r\n              labelTextColor={datum =>\r\n                invert(datum.color, {\r\n                  black: \"#000000\",\r\n                  white: \"#FFFFFF\",\r\n                  threshold: 0.45\r\n                })\r\n              }\r\n              theme={{\r\n                tooltip: {\r\n                  container: {\r\n                    padding: \"0\"\r\n                  }\r\n                }\r\n              }}\r\n              margin={{\r\n                top: this.state.settings?.margin?.top || 40,\r\n                right: this.state.settings?.margin?.right || 80,\r\n                bottom: this.state.settings?.margin?.bottom || 80,\r\n                left: this.state.settings?.margin?.left || 80\r\n              }}\r\n              colors={\r\n                this.state.settings?.colors?.scheme === \"regagro\"\r\n                  ? regagroScheme\r\n                  : this.state.settings?.colors\r\n              }\r\n              colorBy=\"index\"\r\n              tooltip={datum => (\r\n                <TooltipBar\r\n                  enable={this.state.settings?.enableCustomTooltip}\r\n                  datum={datum}\r\n                  widgetID={this.props.widgetID}\r\n                ></TooltipBar>\r\n              )}\r\n              axisLeft={\r\n                this.state.settings?.layout === \"horizontal\"\r\n                  ? !this.state.settings?.reverse && {\r\n                      tickRotation: 0\r\n                    }\r\n                  : {\r\n                      tickRotation: 0\r\n                    }\r\n              }\r\n              axisRight={\r\n                this.state.settings?.layout === \"horizontal\"\r\n                  ? this.state.settings?.reverse && {\r\n                      tickRotation: 0\r\n                    }\r\n                  : null\r\n              }\r\n              axisBottom={\r\n                this.state.settings?.layout === \"vertical\"\r\n                  ? !this.state.settings?.reverse && {\r\n                      ...this.state.settings?.axisBottom\r\n                    }\r\n                  : {\r\n                      ...this.state.settings?.axisBottom\r\n                    }\r\n              }\r\n              axisTop={\r\n                this.state.settings?.layout === \"vertical\"\r\n                  ? this.state.settings?.reverse && {\r\n                      ...this.state.settings?.axisBottom\r\n                    }\r\n                  : null\r\n              }\r\n              animate={false}\r\n              motionDamping={this.state.settings?.animationMotionDamping}\r\n              motionStiffness={this.state.settings?.animationMotionStiffness}\r\n              legends={\r\n                this.state.settings?.enableLegend\r\n                  ? [\r\n                      {\r\n                        dataFrom: \"indexes\",\r\n                        anchor:\r\n                          this.state.settings?.legendAchor || \"bottom-right\",\r\n                        direction:\r\n                          this.state.settings?.legendDirection || \"row\",\r\n                        justify: this.state.settings?.legendJustify || false,\r\n                        translateX: this.state.settings?.legendTranslateX || 0,\r\n                        translateY: this.state.settings?.legendTranslateY || 0,\r\n                        itemsSpacing:\r\n                          this.state.settings?.legendItemsSpacing || 10,\r\n                        itemWidth: this.state.settings?.legendItemWidth || 10,\r\n                        itemHeight: this.state.settings?.legendItemHeight || 10,\r\n                        itemDirection:\r\n                          this.state.settings?.legendItemDirection ||\r\n                          \"left-to-right\",\r\n                        symbolSize: this.state.settings?.legendSymbolSize || 25,\r\n                        symbolShape: \"circle\"\r\n                      }\r\n                    ]\r\n                  : []\r\n              }\r\n            />\r\n          </ErrorBoundary>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (this.state.countRequest < 5) {\r\n      return <div>Загрузка...</div>;\r\n    }\r\n    return <div>Нет данных</div>;\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BarDataSource);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ResponsivePie } from \"@nivo/pie\";\r\nimport ErrorBoundary from \"./ErrorBoundary\";\r\nimport invert from \"invert-color\";\r\nimport DataAdapter from \"./DataAdapter\";\r\nimport TooltipPie from \"./TooltipPie\";\r\n\r\nimport Schemes from \"../../../../../../editor/src/js/components/altrp-dashboards/settings/NivoColorSchemes\";\r\n\r\nconst regagroScheme = _.find(Schemes, { value: \"regagro\" }).colors.reverse();\r\n\r\nconst mapStateToProps = state => {\r\n  return { formsStore: _.cloneDeep(state.formsStore) };\r\n};\r\nclass PieDataSource extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      settings: _.cloneDeep(props.element.settings),\r\n      sources: _.cloneDeep(props.sources),\r\n      legend: _.cloneDeep(props.element.settings.legend),\r\n      color: _.cloneDeep(props.element.settings.color),\r\n      params: _.cloneDeep(props.element.settings.params),\r\n      countRequest: 0,\r\n      isDate: true,\r\n      data: []\r\n    };\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (!_.isEqual(prevProps.sources, this.props.sources)) {\r\n      this.setState(state => ({ ...state, sources: this.props.sources }));\r\n      await this.getData();\r\n    }\r\n    if (!_.isEqual(prevProps.element, this.props.element)) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        legend: this.props.element.settings.legend,\r\n        color: this.props.element.settings.color,\r\n        sources: this.props.element.settings.sources\r\n      }));\r\n    }\r\n    if (\r\n      !_.isEqual(\r\n        prevProps.element.settings.params,\r\n        this.props.element.settings.params\r\n      )\r\n    ) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        params: this.props.element.settings.params\r\n      }));\r\n      await this.getData();\r\n    }\r\n    if (!_.isEqual(prevProps.element.settings, this.props.element.settings)) {\r\n      this.setState(s => ({ ...s, settings: this.props.element.settings }));\r\n    }\r\n    if (\r\n      JSON.stringify(prevProps.element.settings.params) !==\r\n      JSON.stringify(this.props.element.settings.params)\r\n    ) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        params: this.props.element.settings.params\r\n      }));\r\n      await this.getData();\r\n    }\r\n    if (\r\n      !_.isEqual(\r\n        prevProps.formsStore.form_data,\r\n        this.props.formsStore.form_data\r\n      )\r\n    ) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        countRequest: 0\r\n      }));\r\n      await this.getData();\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.getData();\r\n  }\r\n\r\n  async getData() {\r\n    const adapterObject = await new DataAdapter(\r\n      this.props.element.settings.type,\r\n      this.props.element.settings.sources,\r\n      _.cloneDeep(this.props.formsStore.form_data),\r\n      this.state.params,\r\n      this.state.countRequest\r\n    ).parseDataNotType();\r\n    const { isMultiple, isDate, needCallAgain } = adapterObject;\r\n    let data = adapterObject.data;\r\n    if (needCallAgain) {\r\n      setTimeout(() => {\r\n        this.getData();\r\n        let count = this.state.countRequest;\r\n        count += 1;\r\n        this.setState(s => ({ ...s, countRequest: count }));\r\n      }, 3500);\r\n    }\r\n    this.setState(s => ({\r\n      ...s,\r\n      data: data,\r\n      isMultiple: isMultiple,\r\n      isDate: isDate\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    if (typeof this.state.sources === \"undefined\") {\r\n      return <div>Укажите источник данных</div>;\r\n    }\r\n    if (Object.keys(this.state.sources).length === 0) {\r\n      return <div>Нет данных </div>;\r\n    }\r\n    if (\r\n      typeof this.state.data !== \"undefined\" &&\r\n      this.state.data.length === 0\r\n    ) {\r\n      if (this.state.countRequest < 3) {\r\n        return <div>Загрузка...</div>;\r\n      }\r\n      return <div>Нет данных</div>;\r\n    }\r\n    let data = this.state.data;\r\n\r\n    if (\r\n      this.state.settings?.sort?.value !== null &&\r\n      typeof this.state.settings?.sort?.value !== \"undefined\" &&\r\n      typeof data !== \"undefined\"\r\n    ) {\r\n      const sort = this.state.settings?.sort?.value;\r\n      switch (sort) {\r\n        case \"value\":\r\n          data = _.sortBy(data, [\"value\"]);\r\n          break;\r\n        case \"key\":\r\n          data = _.sortBy(data, [\"id\"]);\r\n          break;\r\n        default:\r\n          data = data;\r\n          break;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <ErrorBoundary>\r\n          <ResponsivePie\r\n            margin={{\r\n              top: this.state.settings?.margin?.top || 80,\r\n              right: this.state.settings?.margin?.right || 180,\r\n              bottom: this.state.settings?.margin?.bottom || 80,\r\n              left: this.state.settings?.margin?.left || 120\r\n            }}\r\n            sliceLabelsTextColor={datum =>\r\n              invert(datum.color, {\r\n                black: \"#000000\",\r\n                white: \"#FFFFFF\",\r\n                threshold: 0.45\r\n              })\r\n            }\r\n            cornerRadius={this.state.settings?.cornerRadius}\r\n            padAngle={this.state.settings?.padAngle}\r\n            borderWidth={this.state.settings?.borderWidth}\r\n            borderColor={this.state.settings?.borderColor}\r\n            data={data}\r\n            colors={\r\n              this.state.settings?.colors?.scheme === \"regagro\"\r\n                ? regagroScheme\r\n                : this.state.settings?.colors\r\n            }\r\n            sliceLabelsSkipAngle={this.state.settings?.sliceLabelsSkipAngle}\r\n            sliceLabelsRadiusOffset={\r\n              this.state.settings?.sliceLabelsRadiusOffset\r\n            }\r\n            radialLabelsSkipAngle={this.state.settings?.radialLabelsSkipAngle}\r\n            radialLabelsLinkOffset={this.state.settings?.radialLabelsLinkOffset}\r\n            radialLabelsLinkDiagonalLength={\r\n              this.state.settings?.radialLabelsLinkDiagonalLength\r\n            }\r\n            radialLabelsLinkHorizontalLength={\r\n              this.state.settings?.radialLabelsLinkHorizontalLength\r\n            }\r\n            radialLabelsTextXOffset={\r\n              this.state.settings?.radialLabelsTextXOffset\r\n            }\r\n            radialLabelsLinkStrokeWidth={\r\n              this.state.settings?.radialLabelsLinkStrokeWidth\r\n            }\r\n            innerRadius={this.state.settings?.innerRadius}\r\n            enableSliceLabels={this.state.settings?.enableSliceLabels}\r\n            enableRadialLabels={this.state.settings?.enableRadialLabels}\r\n            tooltip={datum => (\r\n              <TooltipPie\r\n                enable={this.state.settings?.enableCustomTooltip}\r\n                datum={datum}\r\n                widgetID={this.props.widgetID}\r\n              ></TooltipPie>\r\n            )}\r\n            legends={\r\n              this.state.settings?.enableLegend\r\n                ? [\r\n                    {\r\n                      anchor:\r\n                        this.state.settings?.legendAchor || \"bottom-right\",\r\n                      direction: this.state.settings?.legendDirection || \"row\",\r\n                      justify: this.state.settings?.legendJustify || false,\r\n                      translateX: this.state.settings?.legendTranslateX || 0,\r\n                      translateY: this.state.settings?.legendTranslateY || 0,\r\n                      itemsSpacing:\r\n                        this.state.settings?.legendItemsSpacing || 10,\r\n                      itemWidth: this.state.settings?.legendItemWidth || 10,\r\n                      itemHeight: this.state.settings?.legendItemHeight || 10,\r\n                      itemDirection:\r\n                        this.state.settings?.legendItemDirection ||\r\n                        \"left-to-right\",\r\n                      symbolSize: this.state.settings?.legendSymbolSize || 25,\r\n                      symbolShape: \"circle\"\r\n                    }\r\n                  ]\r\n                : []\r\n            }\r\n          />\r\n        </ErrorBoundary>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PieDataSource);\r\n","import React, { Component } from \"react\";\r\nimport DataAdapter from \"./DataAdapter\";\r\nimport { connect } from \"react-redux\";\r\nimport ErrorBoundary from \"./ErrorBoundary\";\r\n\r\nconst mapStateToProps = state => {\r\n  return { formsStore: _.cloneDeep(state.formsStore) };\r\n};\r\nclass TableDataSource extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sources: _.cloneDeep(props.sources),\r\n      color: _.cloneDeep(props.element.settings.color),\r\n      params: _.cloneDeep(props.element.settings.params),\r\n      countRequest: 0,\r\n      isMultiple: false,\r\n      data: []\r\n    };\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (!_.isEqual(prevProps.sources, this.props.sources)) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        sources: _.cloneDeep(this.props.sources)\r\n      }));\r\n      await this.getData();\r\n    }\r\n    if (!_.isEqual(prevProps.element, this.props.element)) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        legend: _.cloneDeep(this.props.element.settings.legend),\r\n        color: _.cloneDeep(this.props.element.settings.color),\r\n        sources: _.cloneDeep(this.props.element.settings.sources)\r\n      }));\r\n    }\r\n    if (\r\n      !_.isEqual(\r\n        prevProps.element.settings.params,\r\n        this.props.element.settings.params\r\n      )\r\n    ) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        params: _.cloneDeep(this.props.element.settings.params)\r\n      }));\r\n      await this.getData();\r\n    }\r\n    if (!_.isEqual(prevProps.element.settings, this.props.element.settings)) {\r\n      this.setState(s => ({\r\n        ...s,\r\n        settings: _.cloneDeep(this.props.element.settings)\r\n      }));\r\n    }\r\n    if (\r\n      JSON.stringify(prevProps.element.settings.params) !==\r\n      JSON.stringify(this.props.element.settings.params)\r\n    ) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        params: _.cloneDeep(this.props.element.settings.params)\r\n      }));\r\n      await this.getData();\r\n    }\r\n    if (\r\n      !_.isEqual(\r\n        prevProps.formsStore.form_data,\r\n        this.props.formsStore.form_data\r\n      )\r\n    ) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        countRequest: 0\r\n      }));\r\n      await this.getData();\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.getData();\r\n  }\r\n\r\n  async getData() {\r\n    const {\r\n      data,\r\n      isMultiple,\r\n      isDate,\r\n      needCallAgain,\r\n      isLarge\r\n    } = await new DataAdapter(\r\n      this.props.element.settings.type,\r\n      this.props.element.settings.sources,\r\n      _.cloneDeep(this.props.formsStore.form_data),\r\n      this.state.params,\r\n      this.state.countRequest\r\n    ).parseData();\r\n    if (needCallAgain) {\r\n      setTimeout(() => {\r\n        this.getData();\r\n        let count = this.state.countRequest;\r\n        count += 1;\r\n        this.setState(s => ({ ...s, countRequest: count }));\r\n      }, 5000);\r\n    }\r\n\r\n    this.setState(s => ({\r\n      ...s,\r\n      data: data,\r\n      isMultiple: isMultiple,\r\n      isDate: isDate,\r\n      isLarge: isLarge\r\n    }));\r\n  }\r\n\r\n  sum(data) {\r\n    return data.reduce((acc, item) => acc + item.data, 0);\r\n  }\r\n\r\n  render() {\r\n    if (\r\n      typeof this.state.sources === \"undefined\" ||\r\n      Object.keys(this.state.sources).length === 0\r\n    ) {\r\n      return <div>Нет данных </div>;\r\n    }\r\n    // if (this.state.isMultiple) {\r\n    //   return <div>Укажите только один источник данных</div>;\r\n    // }\r\n    if (!this.state.sources > 1) {\r\n      if (\r\n        typeof this.state.data === \"undefined\" &&\r\n        this.state.data[0].data.length === 0\r\n      ) {\r\n        if (this.state.countRequest < 3) {\r\n          return <div>Загрузка...</div>;\r\n        }\r\n        return <div>Нет данных</div>;\r\n      }\r\n    } else {\r\n      let matches = this.state.data.map(obj => {\r\n        if (_.keys(obj).length > 0) {\r\n          return obj.data.length > 0;\r\n        }\r\n        return _.keys(obj).length > 0;\r\n      });\r\n      let check = _.includes(matches, false);\r\n      if (check) {\r\n        if (this.state.countRequest < 3) {\r\n          return <div>Загрузка...</div>;\r\n        }\r\n        return <div>Нет данных</div>;\r\n      }\r\n    }\r\n\r\n    let data = this.state.data;\r\n\r\n    if (\r\n      this.state.settings?.sort?.value !== null &&\r\n      typeof this.state.settings?.sort?.value !== \"undefined\" &&\r\n      typeof data !== \"undefined\"\r\n    ) {\r\n      const sort = this.state.settings?.sort.value;\r\n      switch (sort) {\r\n        case \"value\":\r\n          data.forEach((item, index) => {\r\n            if (item.data.length > 0) {\r\n              data[index].data = _.sortBy(item.data, [\"y\"]);\r\n            }\r\n          });\r\n          break;\r\n        case \"key\":\r\n          data.forEach((item, index) => {\r\n            if (item.data.length > 0) {\r\n              data[index].data = _.sortBy(item.data, [\"x\"]);\r\n            }\r\n          });\r\n          break;\r\n\r\n        default:\r\n          // data = data;\r\n          break;\r\n      }\r\n    }\r\n\r\n    const summary = data\r\n      .map(item => item.data.reduce((acc, object) => acc + object.y, 0))\r\n      .reduce((acc, item) => acc + item, 0);\r\n    return (\r\n      <ErrorBoundary>\r\n        <div className=\"widget-table\">\r\n          <table className=\"vertical-table\">\r\n            <tbody>\r\n              {data.map((item, key) => {\r\n                const dataset = item.data.map((object, index) => (\r\n                  <tr key={`${key}${index}`}>\r\n                    <td>\r\n                      {object.key instanceof Date\r\n                        ? this.formattingDate(object.x)\r\n                        : object.x}\r\n                    </td>\r\n                    <td>{object.y}</td>\r\n                  </tr>\r\n                ));\r\n                return (\r\n                  <React.Fragment key={key}>\r\n                    <tr key={key} style={{ textAlign: \"center\" }}>\r\n                      <td colSpan={2}>{item.id}</td>\r\n                    </tr>\r\n                    {dataset}\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n              <tr>\r\n                <td>ИТОГО</td>\r\n                <td>{summary}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </ErrorBoundary>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TableDataSource);\r\n","import React, { Component } from \"react\";\r\nimport { ResponsiveLine } from \"@nivo/line\";\r\nimport { linearGradientDef } from \"@nivo/core\";\r\nimport { connect } from \"react-redux\";\r\nimport DataAdapter from \"./DataAdapter\";\r\nimport ErrorBoundary from \"./ErrorBoundary\";\r\nimport Tooltip from \"./Tooltip\";\r\n\r\nimport Schemes from \"../../../../../../editor/src/js/components/altrp-dashboards/settings/NivoColorSchemes\";\r\nconst regagroScheme = _.find(Schemes, { value: \"regagro\" }).colors;\r\nimport moment from \"moment\";\r\n\r\nconst mapStateToProps = state => {\r\n  return { formsStore: _.cloneDeep(state.formsStore) };\r\n};\r\nclass LineDataSource extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      settings: _.cloneDeep(props.element.settings),\r\n      sources: _.cloneDeep(props.sources),\r\n      legend: _.cloneDeep(props.element.settings.legend),\r\n      color: _.cloneDeep(props.element.settings.color),\r\n      params: _.cloneDeep(props.element.settings.params),\r\n      countRequest: 0,\r\n      isMultiple: false,\r\n      isDate: true,\r\n      isLarge: false,\r\n      data: []\r\n    };\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (!_.isEqual(prevProps.sources, this.props.sources)) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        sources: _.cloneDeep(this.props.sources)\r\n      }));\r\n      await this.getData();\r\n    }\r\n    if (!_.isEqual(prevProps.element, this.props.element)) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        legend: this.props.element.settings.legend,\r\n        color: this.props.element.settings.color,\r\n        sources: this.props.element.settings.sources\r\n      }));\r\n    }\r\n    if (\r\n      !_.isEqual(\r\n        prevProps.element.settings.params,\r\n        this.props.element.settings.params\r\n      )\r\n    ) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        params: _.cloneDeep(this.props.element.settings.params)\r\n      }));\r\n      await this.getData();\r\n    }\r\n    if (!_.isEqual(prevProps.element.settings, this.props.element.settings)) {\r\n      this.setState(s => ({ ...s, settings: this.props.element.settings }));\r\n    }\r\n    if (\r\n      JSON.stringify(prevProps.element.settings.params) !==\r\n      JSON.stringify(this.props.element.settings.params)\r\n    ) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        params: _.cloneDeep(this.props.element.settings.params)\r\n      }));\r\n      await this.getData();\r\n    }\r\n    if (\r\n      !_.isEqual(\r\n        prevProps.formsStore.form_data,\r\n        this.props.formsStore.form_data\r\n      ) ||\r\n      JSON.stringify(prevProps.formsStore.form_data) !==\r\n        JSON.stringify(this.props.formsStore.form_data)\r\n    ) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        countRequest: 0\r\n      }));\r\n      await this.getData();\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.getData();\r\n  }\r\n\r\n  async getData() {\r\n    const dataObject = await new DataAdapter(\r\n      this.props.element.settings.type,\r\n      this.props.element.settings.sources,\r\n      _.cloneDeep(this.props.formsStore.form_data),\r\n      this.state.params,\r\n      this.state.countRequest\r\n    ).parseData();\r\n\r\n    const { isMultiple, isDate, needCallAgain, isLarge } = dataObject;\r\n    let data = dataObject.data;\r\n    if (needCallAgain) {\r\n      setTimeout(() => {\r\n        this.getData();\r\n        let count = this.state.countRequest;\r\n        count += 1;\r\n        this.setState(s => ({ ...s, countRequest: count }));\r\n      }, 3500);\r\n    }\r\n    this.setState(s => ({\r\n      ...s,\r\n      data: data,\r\n      isMultiple: isMultiple,\r\n      isDate: isDate,\r\n      isLarge: isLarge\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    if (typeof this.state.sources === \"undefined\") {\r\n      return <div>Укажите источник данных</div>;\r\n    }\r\n    if (Object.keys(this.state.sources).length === 0) {\r\n      return <div>Нет данных </div>;\r\n    }\r\n    if (!this.state.sources > 1) {\r\n      if (\r\n        typeof this.state.data === \"undefined\" &&\r\n        this.state.data[0].data.length === 0\r\n      ) {\r\n        if (this.state.countRequest < 3) {\r\n          return <div>Загрузка...</div>;\r\n        }\r\n        return <div>Нет данных</div>;\r\n      }\r\n    } else {\r\n      let matches = this.state.data.map(obj => {\r\n        if (_.keys(obj).length > 0) {\r\n          return obj.data.length > 0;\r\n        }\r\n        return _.keys(obj).length > 0;\r\n      });\r\n      let check = _.includes(matches, false);\r\n      if (check) {\r\n        if (this.state.countRequest < 5) {\r\n          return <div>Загрузка...</div>;\r\n        }\r\n        return <div>Нет данных</div>;\r\n      }\r\n    }\r\n\r\n    let data = [];\r\n    if (this.state.settings?.xScale?.type === \"time\") {\r\n      data = _.cloneDeep(this.state.data, []);\r\n      data = data.map(item => {\r\n        item.data = item.data.map(object => {\r\n          object.x = moment(object.x).format(\"DD.MM.YYYY\");\r\n          return object;\r\n        });\r\n        return item;\r\n      });\r\n    } else {\r\n      data = this.state.data;\r\n    }\r\n\r\n    if (\r\n      this.state.settings?.sort?.value !== null &&\r\n      typeof this.state.settings?.sort?.value !== \"undefined\" &&\r\n      typeof data !== \"undefined\"\r\n    ) {\r\n      const sort = this.state.settings?.sort?.value;\r\n      switch (sort) {\r\n        case \"value\":\r\n          data.forEach((item, index) => {\r\n            if (item.data.length > 0) {\r\n              data[index].data = _.sortBy(item.data, [\"y\"]);\r\n            }\r\n          });\r\n          break;\r\n        case \"key\":\r\n          data.forEach((item, index) => {\r\n            if (item.data.length > 0) {\r\n              data[index].data = _.sortBy(item.data, [\"x\"]);\r\n            }\r\n          });\r\n          break;\r\n\r\n        default:\r\n          // data = data;\r\n          break;\r\n      }\r\n    }\r\n    const enabled = true;\r\n    return (\r\n      <>\r\n        <ErrorBoundary>\r\n          <ResponsiveLine\r\n            data={data}\r\n            margin={{\r\n              top: this.state.settings?.margin?.top || 40,\r\n              right: this.state.settings?.margin?.right || 120,\r\n              bottom: this.state.settings?.margin?.bottom || 80,\r\n              left: this.state.settings?.margin?.left || 100\r\n            }}\r\n            curve={this.state.settings?.curve}\r\n            colors={\r\n              this.state.settings?.colors?.scheme === \"regagro\"\r\n                ? regagroScheme\r\n                : this.state.settings?.colors\r\n            }\r\n            enableArea={this.state.settings?.enableArea}\r\n            defs={\r\n              this.state.settings?.enableArea && [\r\n                linearGradientDef(\"gradient\", [\r\n                  { offset: 0, color: \"inherit\" },\r\n                  { offset: 100, color: \"inherit\", opacity: 0.25 }\r\n                ])\r\n              ]\r\n            }\r\n            fill={\r\n              this.state.settings?.enableArea && [\r\n                { match: \"*\", id: \"gradient\" }\r\n              ]\r\n            }\r\n            useMesh={true}\r\n            xScale={this.state.settings?.xScale}\r\n            pointSize={this.state.settings?.pointSize}\r\n            enablePoints={this.state.settings?.enablePoints}\r\n            lineWidth={this.state.settings?.lineWidth}\r\n            enableCrosshair={this.state.settings?.enableCrosshair}\r\n            enableGridY={this.state.settings?.enableGridY}\r\n            enableGridX={this.state.settings?.enableGridX}\r\n            xFormat={\r\n              this.state.settings?.xScale?.type === \"time\" && \"time:%d.%m.%Y\"\r\n            }\r\n            axisBottom={\r\n              this.state.settings?.xScale?.type === \"time\"\r\n                ? {\r\n                    format: this.state.settings.xScale.format,\r\n                    ...this.state.settings?.axisBottom\r\n                  }\r\n                : {\r\n                    ...this.state.settings?.axisBottom\r\n                  }\r\n            }\r\n            tooltip={datum => (\r\n              <Tooltip\r\n                datum={datum}\r\n                settings={{\r\n                  padding: this.state.settings?.tooltipPadding\r\n                }}\r\n                enable={this.state.settings?.enableCustomTooltip}\r\n                widgetID={this.props.widgetID}\r\n              />\r\n            )}\r\n            animate={Boolean(this.state.settings?.enableAnimation)}\r\n            legends={\r\n              this.state.settings?.enableLegend\r\n                ? [\r\n                    {\r\n                      anchor:\r\n                        this.state.settings?.legendAchor || \"bottom-right\",\r\n                      direction: this.state.settings?.legendDirection || \"row\",\r\n                      justify: this.state.settings?.legendJustify || false,\r\n                      translateX: this.state.settings?.legendTranslateX || 0,\r\n                      translateY: this.state.settings?.legendTranslateY || 0,\r\n                      itemsSpacing:\r\n                        this.state.settings?.legendItemsSpacing || 10,\r\n                      itemWidth: this.state.settings?.legendItemWidth || 10,\r\n                      itemHeight: this.state.settings?.legendItemHeight || 10,\r\n                      itemDirection:\r\n                        this.state.settings?.legendItemDirection ||\r\n                        \"left-to-right\",\r\n                      symbolSize: this.state.settings?.legendSymbolSize || 25,\r\n                      symbolShape: \"circle\"\r\n                    }\r\n                  ]\r\n                : []\r\n            }\r\n          />\r\n        </ErrorBoundary>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LineDataSource);\r\n","import React, { Component } from \"react\";\r\nimport { ResponsiveScatterPlotCanvas } from \"@nivo/scatterplot\";\r\nimport ErrorBoundary from \"./ErrorBoundary\";\r\nimport { connect } from \"react-redux\";\r\nimport DataAdapter from \"./DataAdapter\";\r\nimport TooltipScatter from \"./TooltipScatter\";\r\nimport Schemes from \"../../../../../../editor/src/js/components/altrp-dashboards/settings/NivoColorSchemes\";\r\nconst regagroScheme = _.find(Schemes, { value: \"regagro\" }).colors;\r\nimport moment from \"moment\";\r\n\r\nconst mapStateToProps = state => {\r\n  return { formsStore: _.cloneDeep(state.formsStore) };\r\n};\r\n\r\nclass ScatterDataSource extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      settings: _.cloneDeep(props.element.settings),\r\n      sources: _.cloneDeep(props.sources),\r\n      legend: _.cloneDeep(props.element.settings.legend),\r\n      color: _.cloneDeep(props.element.settings.color),\r\n      params: _.cloneDeep(props.element.settings.params),\r\n      countRequest: 0,\r\n      isDate: true,\r\n      data: []\r\n    };\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (!_.isEqual(prevProps.sources, this.props.sources)) {\r\n      this.setState(state => ({ ...state, sources: this.props.sources }));\r\n      await this.getData();\r\n    }\r\n    if (!_.isEqual(prevProps.element, this.props.element)) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        legend: this.props.element.settings.legend,\r\n        color: this.props.element.settings.color,\r\n        sources: this.props.element.settings.sources\r\n      }));\r\n    }\r\n    if (\r\n      !_.isEqual(\r\n        prevProps.element.settings.params,\r\n        this.props.element.settings.params\r\n      )\r\n    ) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        params: this.props.element.settings.params\r\n      }));\r\n      await this.getData();\r\n    }\r\n    if (!_.isEqual(prevProps.element.settings, this.props.element.settings)) {\r\n      this.setState(s => ({ ...s, settings: this.props.element.settings }));\r\n    }\r\n    if (\r\n      JSON.stringify(prevProps.element.settings.params) !==\r\n      JSON.stringify(this.props.element.settings.params)\r\n    ) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        params: this.props.element.settings.params\r\n      }));\r\n      await this.getData();\r\n    }\r\n    if (\r\n      !_.isEqual(\r\n        prevProps.formsStore.form_data,\r\n        this.props.formsStore.form_data\r\n      )\r\n    ) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        countRequest: 0\r\n      }));\r\n      await this.getData();\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.getData();\r\n  }\r\n\r\n  async getData() {\r\n    const {\r\n      data,\r\n      isMultiple,\r\n      isDate,\r\n      needCallAgain,\r\n      isLarge\r\n    } = await new DataAdapter(\r\n      this.props.element.settings.type,\r\n      this.props.element.settings.sources,\r\n      _.cloneDeep(this.props.formsStore.form_data),\r\n      this.state.params,\r\n      this.state.countRequest\r\n    ).parseData();\r\n    if (needCallAgain) {\r\n      setTimeout(() => {\r\n        this.getData();\r\n        let count = this.state.countRequest;\r\n        count += 1;\r\n        this.setState(s => ({ ...s, countRequest: count }));\r\n      }, 3500);\r\n    }\r\n    this.setState(s => ({\r\n      ...s,\r\n      data: data,\r\n      isMultiple: isMultiple,\r\n      isDate: isDate,\r\n      isLarge: isLarge\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    if (typeof this.state.sources === \"undefined\") {\r\n      return <div>Укажите источник данных</div>;\r\n    }\r\n    if (Object.keys(this.state.sources).length === 0) {\r\n      return <div>Нет данных </div>;\r\n    }\r\n    if (!this.state.sources > 1) {\r\n      if (\r\n        typeof this.state.data === \"undefined\" &&\r\n        this.state.data[0].data.length === 0\r\n      ) {\r\n        if (this.state.countRequest < 3) {\r\n          return <div>Загрузка...</div>;\r\n        }\r\n        return <div>Нет данных</div>;\r\n      }\r\n    } else {\r\n      let matches = this.state.data.map(obj => {\r\n        if (_.keys(obj).length > 0) {\r\n          return obj.data.length > 0;\r\n        }\r\n        return _.keys(obj).length > 0;\r\n      });\r\n      let check = _.includes(matches, false);\r\n      if (check) {\r\n        if (this.state.countRequest < 5) {\r\n          return <div>Загрузка...</div>;\r\n        }\r\n        return <div>Нет данных</div>;\r\n      }\r\n    }\r\n\r\n    let data = [];\r\n    if (this.state.settings?.xScale?.type === \"time\") {\r\n      data = _.cloneDeep(this.state.data, []);\r\n      data = data.map(item => {\r\n        item.data = item.data.map(object => {\r\n          object.x = moment(object.x).format(\"DD.MM.YYYY\");\r\n          return object;\r\n        });\r\n        return item;\r\n      });\r\n    } else {\r\n      data = this.state.data;\r\n    }\r\n    if (\r\n      this.state.settings?.sort?.value !== null &&\r\n      typeof this.state.settings?.sort?.value !== \"undefined\" &&\r\n      typeof data !== \"undefined\"\r\n    ) {\r\n      const sort = this.state.settings?.sort?.value;\r\n      switch (sort) {\r\n        case \"value\":\r\n          data.forEach((item, index) => {\r\n            if (item.data.length > 0) {\r\n              data[index].data = _.sortBy(item.data, [\"y\"]);\r\n            }\r\n          });\r\n          break;\r\n        case \"key\":\r\n          data.forEach((item, index) => {\r\n            if (item.data.length > 0) {\r\n              data[index].data = _.sortBy(item.data, [\"x\"]);\r\n            }\r\n          });\r\n          break;\r\n\r\n        default:\r\n          // data = data;\r\n          break;\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        <ErrorBoundary>\r\n          <ResponsiveScatterPlotCanvas\r\n            data={data}\r\n            margin={{\r\n              top: this.state.settings?.margin?.top || 40,\r\n              right: this.state.settings?.margin?.right || 180,\r\n              bottom: this.state.settings?.margin?.bottom || 80,\r\n              left: this.state.settings?.margin?.left || 100\r\n            }}\r\n            xScale={this.state.settings?.xScale}\r\n            enableSliceLabels={false}\r\n            colors={\r\n              this.state.settings?.colors?.scheme === \"regagro\"\r\n                ? regagroScheme\r\n                : this.state.settings?.colors\r\n            }\r\n            xFormat={\r\n              this.state.settings?.xScale?.type === \"time\" && \"time:%d.%m.%Y\"\r\n            }\r\n            axisBottom={\r\n              this.state.settings?.xScale?.type === \"time\"\r\n                ? {\r\n                    format: this.state.settings.xScale.format,\r\n                    ...this.state.settings?.axisBottom\r\n                  }\r\n                : {\r\n                    ...this.state.settings?.axisBottom\r\n                  }\r\n            }\r\n            enableGridY={this.state.settings?.enableGridY}\r\n            enableGridX={this.state.settings?.enableGridX}\r\n            animate={Boolean(this.state.settings?.enableAnimation) || false}\r\n            motionDamping={this.state.settings?.animationMotionDamping}\r\n            motionStiffness={this.state.settings?.animationMotionStiffness}\r\n            tooltip={datum => (\r\n              <TooltipScatter\r\n                enable={this.state.settings?.enableCustomTooltip}\r\n                datum={datum}\r\n                widgetID={this.props.widgetID}\r\n              />\r\n            )}\r\n            legends={\r\n              this.state.settings?.enableLegend\r\n                ? [\r\n                    {\r\n                      anchor:\r\n                        this.state.settings?.legendAchor || \"bottom-right\",\r\n                      direction: this.state.settings?.legendDirection || \"row\",\r\n                      justify: this.state.settings?.legendJustify || false,\r\n                      translateX: this.state.settings?.legendTranslateX || 0,\r\n                      translateY: this.state.settings?.legendTranslateY || 0,\r\n                      itemsSpacing:\r\n                        this.state.settings?.legendItemsSpacing || 10,\r\n                      itemWidth: this.state.settings?.legendItemWidth || 10,\r\n                      itemHeight: this.state.settings?.legendItemHeight || 10,\r\n                      itemDirection:\r\n                        this.state.settings?.legendItemDirection ||\r\n                        \"left-to-right\",\r\n                      symbolSize: this.state.settings?.legendSymbolSize || 25,\r\n                      symbolShape: \"circle\"\r\n                    }\r\n                  ]\r\n                : []\r\n            }\r\n          />\r\n        </ErrorBoundary>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ScatterDataSource);\r\n","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  BAR,\r\n  PIE,\r\n  LINE,\r\n  TABLE,\r\n  POINT\r\n} from \"../../../../../admin/src/components/dashboard/widgetTypes\";\r\n\r\nimport BarDataSource from \"../../../../../admin/src/components/dashboard/widgets/d3/BarDataSource\";\r\nimport PieDataSource from \"../../../../../admin/src/components/dashboard/widgets/d3/PieDataSource\";\r\nimport TableDataSource from \"../../../../../admin/src/components/dashboard/widgets/d3/TableDataSource\";\r\nimport LineDataSource from \"../../../../../admin/src/components/dashboard/widgets/d3/LineDataSource\";\r\nimport ScatterDataSource from \"../../../../../admin/src/components/dashboard/widgets/d3/ScatterDataSource\";\r\n\r\nclass ChooseWidget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sources: _.cloneDeep(props.sources),\r\n      type: _.cloneDeep(props.type),\r\n      editElement: _.cloneDeep(props.editElement),\r\n      params: _.cloneDeep(props.params)\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (!_.isEqual(prevProps.editElement, this.props.editElement)) {\r\n      let element = _.cloneDeep(this.props.editElement, []);\r\n      this.setState(state => ({ ...state, editElement: element }));\r\n    }\r\n    if (\r\n      JSON.stringify(prevProps.params) !== JSON.stringify(this.props.params)\r\n    ) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        editElement: _.cloneDeep(this.props.editElement)\r\n      }));\r\n    }\r\n    if (!_.isEqual(prevProps.type, this.props.type)) {\r\n      this.setState(state => ({ ...state, type: this.props.type }));\r\n    }\r\n    if (!_.isEqual(prevProps.sources, this.props.sources)) {\r\n      this.setState(state => ({ ...state, sources: this.props.sources }));\r\n    }\r\n  }\r\n  getWidget() {\r\n    let widget = \"Выберите тип диаграммы\";\r\n    switch (this.props.editElement?.settings?.type) {\r\n      case BAR:\r\n        widget = this.renderBar();\r\n        break;\r\n      case PIE:\r\n        widget = this.renderPie();\r\n        break;\r\n      case LINE:\r\n        widget = this.renderLine();\r\n        break;\r\n      case TABLE:\r\n        widget = this.renderTable();\r\n        break;\r\n      case POINT:\r\n        widget = this.renderScatter();\r\n        break;\r\n      default:\r\n        widget = <div>Выберите тип диаграммы</div>;\r\n        break;\r\n    }\r\n    return <div className=\"chart-container\">{widget}</div>;\r\n  }\r\n\r\n  renderBar() {\r\n    return (\r\n      <BarDataSource\r\n        element={_.cloneDeep(this.props.editElement)}\r\n        sources={_.cloneDeep(this.state.sources)}\r\n        widgetID={this.props.widgetID}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderPie() {\r\n    return (\r\n      <PieDataSource\r\n        element={_.cloneDeep(this.props.editElement)}\r\n        sources={_.cloneDeep(this.state.sources)}\r\n        widgetID={this.props.widgetID}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderLine() {\r\n    return (\r\n      <LineDataSource\r\n        element={_.cloneDeep(this.props.editElement)}\r\n        sources={_.cloneDeep(this.state.sources)}\r\n        widgetID={this.props.widgetID}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderTable() {\r\n    return (\r\n      <TableDataSource\r\n        element={_.cloneDeep(this.props.editElement)}\r\n        sources={_.cloneDeep(this.state.sources)}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderScatter() {\r\n    return (\r\n      <ScatterDataSource\r\n        element={_.cloneDeep(this.props.editElement)}\r\n        sources={_.cloneDeep(this.state.sources)}\r\n        widgetID={this.props.widgetID}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.getWidget();\r\n  }\r\n}\r\n\r\nexport default ChooseWidget;\r\n","import React, { Component } from \"react\";\r\nimport ChooseWidget from \"./ChooseWidget\";\r\nimport { exportComponentAsPNG } from \"react-component-export-image\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport ThreeDotsVertical from \"react-bootstrap-icons/dist/icons/three-dots-vertical\";\r\nimport GearFill from \"react-bootstrap-icons/dist/icons/sliders\";\r\nimport TrashFill from \"react-bootstrap-icons/dist/icons/trash\";\r\nimport PrinterFill from \"react-bootstrap-icons/dist/icons/printer\";\r\nimport ArrowBarUp from \"react-bootstrap-icons/dist/icons/arrow-bar-up\";\r\nimport FileEarMark from \"react-bootstrap-icons/dist/icons/cloud-download\";\r\nimport Files from \"react-bootstrap-icons/dist/icons/files\";\r\n\r\nclass WidgetData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let element = _.cloneDeep(props.editElement);\r\n    this.state = { el: element };\r\n    this.ref = React.createRef();\r\n    this.downloadWidget = this.downloadWidget.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (!_.isEqual(prevState.el, this.props.editElement)) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        el: _.cloneDeep(this.props.editElement)\r\n      }));\r\n    }\r\n    if (\r\n      JSON.stringify(prevProps.editElement.settings?.params) !==\r\n      JSON.stringify(this.props.editElement.settings?.params)\r\n    ) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        el: _.cloneDeep(this.props.editElement)\r\n      }));\r\n    }\r\n  }\r\n\r\n  downloadWidget() {\r\n    exportComponentAsPNG(this.ref, this.props.editElement.settings.name);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"\r\n      altrp-dashboard__card\r\n      altrp-dashboard__card--border\r\n      altrp-dashboard__card--border-radius\r\n      altrp-dashboard__card--border-color\r\n      altrp-dashboard__card--border-style\r\n      altrp-dashboard__card--background\r\n      altrp-dashboard__card--font\"\r\n      >\r\n        <div className=\"title altrp-dashboards__cancle-drag\">\r\n          <div\r\n            className=\"\r\n            altrp-dashboard__card--font\r\n            altrp-dashboard__card--font-size\r\n            altrp-dashboard__card--font-weight\r\n            altrp-dashboard__card--font-color\"\r\n            style={{\r\n              width: \"100%\"\r\n            }}\r\n          >\r\n            {this.state.el.settings?.name || \"\"}\r\n          </div>\r\n          <div className=\"dropdownTogglerContainer\">\r\n            <Dropdown drop=\"left\">\r\n              <Dropdown.Toggle\r\n                className=\"altrp-dashboard__card--background\"\r\n                variant=\"light\"\r\n              >\r\n                <ThreeDotsVertical color=\"#7a7a7b\" />\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu\r\n                className=\"dropdownMenuToggle altrp-dashboard__card--settings-tooltip-background\"\r\n                style={{\r\n                  zIndex: 999999,\r\n                  background: \"rgba(255,255,255,1)\"\r\n                }}\r\n              >\r\n                <Dropdown.Item className=\"altrp-dashboard__card--settings-tooltip-background\">\r\n                  <button\r\n                    type=\"button\"\r\n                    title=\"Скачать файл\"\r\n                    className=\"altrp-dashboard__card--settings-tooltip-icon-background\"\r\n                    onClick={this.downloadWidget}\r\n                  >\r\n                    <FileEarMark />\r\n                  </button>\r\n                </Dropdown.Item>\r\n                <Dropdown.Item className=\"altrp-dashboard__card--settings-tooltip-background\">\r\n                  <button\r\n                    type=\"button\"\r\n                    title=\"Экспорт\"\r\n                    className=\"altrp-dashboard__card--settings-tooltip-icon-background\"\r\n                    onClick={() => this.props.exportCard(this.state.el)}\r\n                  >\r\n                    <ArrowBarUp />\r\n                  </button>\r\n                </Dropdown.Item>\r\n                <Dropdown.Item className=\"altrp-dashboard__card--settings-tooltip-background\">\r\n                  <button\r\n                    type=\"button\"\r\n                    title=\"Дублировать\"\r\n                    className=\"altrp-dashboard__card--settings-tooltip-icon-background\"\r\n                    onClick={() => this.props.copyWidget(this.state.el)}\r\n                  >\r\n                    <Files />\r\n                  </button>\r\n                </Dropdown.Item>\r\n                <Dropdown.Item className=\"altrp-dashboard__card--settings-tooltip-background\">\r\n                  <button\r\n                    type=\"button\"\r\n                    title=\"Настроить\"\r\n                    className=\"altrp-dashboard__card--settings-tooltip-icon-background\"\r\n                    onClick={() =>\r\n                      this.props.openSettingsHandler(this.state.el)\r\n                    }\r\n                  >\r\n                    <GearFill />\r\n                  </button>\r\n                </Dropdown.Item>\r\n                <Dropdown.Item className=\"altrp-dashboard__card--settings-tooltip-background\">\r\n                  <button\r\n                    type=\"button\"\r\n                    title=\"Удалить\"\r\n                    className=\"altrp-dashboard__card--settings-tooltip-icon-background\"\r\n                    onClick={() => this.props.onRemoveItem(this.state.el.i)}\r\n                  >\r\n                    <TrashFill />\r\n                  </button>\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </div>\r\n        </div>\r\n        <ChooseWidget\r\n          ref={this.ref}\r\n          editElement={_.cloneDeep(this.state.el)}\r\n          params={_.cloneDeep(this.state.el.settings?.params)}\r\n          type={_.cloneDeep(this.state.el.settings?.type)}\r\n          sources={_.cloneDeep(this.state.el.settings?.sources)}\r\n          widgetID={this.props.widgetID}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WidgetData;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { editElement } from \"../../store/altrp-dashboard/actions\";\r\nimport ChooseWidget from \"./ChooseWidget\";\r\n\r\nconst mapStateToProps = state => {\r\n  return { editElement: _.cloneDeep(state.editElement) };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    editElementDispatch: data => dispatch(editElement(data))\r\n  };\r\n}\r\n\r\nclass WidgetPreview extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editElement: _.cloneDeep(props.editElement),\r\n      cardName: this.props.editElement?.settings?.name,\r\n      width: props.width\r\n    };\r\n    this.setCardName = this.setCardName.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (!_.isEqual(prevProps.editElement, this.props.editElement)) {\r\n      if (this.props.addItemPreview) {\r\n        this.setState(state => ({\r\n          ...state,\r\n          editElement: _.cloneDeep(this.props.editElement)\r\n        }));\r\n      } else {\r\n        this.setState(state => ({\r\n          ...state,\r\n          editElement: _.cloneDeep(this.props.editElement)\r\n        }));\r\n      }\r\n    }\r\n    if (\r\n      JSON.stringify(prevProps.editElement?.settings?.params) !==\r\n      JSON.stringify(this.props.editElement?.settings?.params)\r\n    ) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        editElement: _.cloneDeep(this.props.editElement),\r\n        cardName: this.props.editElement?.settings?.name\r\n      }));\r\n    }\r\n\r\n    if (\r\n      !_.isEqual(\r\n        prevProps.editElement?.settings?.name,\r\n        this.props.editElement?.settings?.name\r\n      )\r\n    ) {\r\n      if (this.props.addItemPreview) {\r\n        this.setState(state => ({\r\n          ...state,\r\n          editElement: _.cloneDeep(this.props.editElement),\r\n          cardName: this.props.editElement?.name\r\n        }));\r\n      } else {\r\n        this.setState(state => ({\r\n          ...state,\r\n          editElement: _.cloneDeep(this.props.editElement),\r\n          cardName: this.props.editElement?.settings?.name\r\n        }));\r\n      }\r\n    }\r\n  }\r\n\r\n  //Обновляем название диаграммы\r\n  setCardName(e) {\r\n    const value = e.target.value;\r\n    this.setState(s => ({ ...s, cardName: value }));\r\n    this.props.setCardName(value, this.props.editElement);\r\n  }\r\n\r\n  render() {\r\n    if (!_.isEmpty(this.state.editElement)) {\r\n      return (\r\n        <div\r\n          className=\"drawer-preview\"\r\n          style={{\r\n            width: `calc(100% - ${this.state.width})`,\r\n            fallbacks: [\r\n              { width: `-moz-calc(100% - ${this.state.width})` },\r\n              { width: `-webkit-calc(100% - ${this.state.width})` },\r\n              { width: `-o-calc(100% - ${this.state.width})` }\r\n            ]\r\n          }}\r\n        >\r\n          <div className=\"drawer-preview__container\">\r\n            {!this.props.addItemPreview ? (\r\n              <div className=\"title\">\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={this.setCardName}\r\n                  value={this.state.cardName}\r\n                  placeholder=\"Введите название диаграммы\"\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div className=\"title\">\r\n                <input\r\n                  type=\"text\"\r\n                  // onChange={this.setCardName}\r\n                  value={\r\n                    this.props.editElement?.settings?.name ||\r\n                    this.state.cardName\r\n                  }\r\n                  placeholder=\"Введите название диаграммы\"\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"drawer-preview__container-content\">\r\n              <ChooseWidget\r\n                sources={_.cloneDeep(this.props.editElement?.settings?.sources)}\r\n                params={_.cloneDeep(this.props.editElement?.settings?.params)}\r\n                type={_.cloneDeep(this.props.editElement?.settings?.type)}\r\n                editElement={_.cloneDeep(this.props.editElement)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"drawer-preview\">\r\n        <div className=\"drawer-preview__container\">\r\n          <div className=\"drawer-preview__container-content\">\r\n            <div className=\"chart-container\">\r\n              <div>Начните настраивать виджет</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WidgetPreview);\r\n","import React, { Component, Suspense } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport ReactSelect from \"react-select\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { editElement } from \"../../../store/altrp-dashboard/actions\";\r\n\r\nconst mapStateToProps = state => {\r\n  return { editElement: _.cloneDeep(state.editElement) };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    editElementDispatch: data => dispatch(editElement(data))\r\n  };\r\n}\r\n\r\nclass DatasourceSettings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editElement: _.cloneDeep(props.editElement)\r\n    };\r\n    this.returnOptionsWithKeys = this.returnOptionsWithKeys.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (!_.isEqual(prevProps.editElement, this.props.editElement)) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        editElement: _.cloneDeep(this.props.editElement)\r\n      }));\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (this.props.datasources.length === 1) {\r\n      const datasource = [this.returnOptionsWithKeys()[0]];\r\n      this.props.setDatasource(datasource);\r\n    }\r\n  }\r\n\r\n  returnOptionsWithKeys() {\r\n    const datasources = _.cloneDeep(this.props.datasources);\r\n    return datasources.map((source, index) => {\r\n      source.title =\r\n        typeof source.title !== \"undefined\" ? source.title : source.path;\r\n      return source;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.props.datasources !== null) {\r\n      if (this.props.datasources.length === 1) {\r\n        return <></>;\r\n      }\r\n      return (\r\n        <>\r\n          <div className=\"col-12\">\r\n            <Form.Group className=\"mb-2\">\r\n              <Form.Label\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Источники данных\r\n              </Form.Label>\r\n              <ReactSelect\r\n                isMulti\r\n                placeholder=\"Выберите источник данных\"\r\n                onChange={value => this.props.setDatasource(value)}\r\n                className=\"select-type\"\r\n                defaultValue={this.state.editElement?.settings?.sources}\r\n                name=\"type\"\r\n                as=\"select\"\r\n                styles={{\r\n                  menuList: (provided, state) => ({\r\n                    ...provided,\r\n                    zIndex: \"999999999999999999999\",\r\n                    position: \"relative\"\r\n                  }),\r\n                  menu: (provided, state) => ({\r\n                    ...provided,\r\n                    zIndex: \"999999999999999999999\",\r\n                    position: \"relative\"\r\n                  }),\r\n                  menuPortal: (provided, state) => ({\r\n                    ...provided,\r\n                    zIndex: \"999999999999999999999\",\r\n                    position: \"relative\"\r\n                  })\r\n                }}\r\n                options={this.returnOptionsWithKeys()}\r\n                getOptionValue={option => option}\r\n                getOptionLabel={option => option.title}\r\n              />\r\n            </Form.Group>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"col-12 text-center\">\r\n        Укажите источники данных в настройке виджета\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DatasourceSettings);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { editElement } from \"../../../store/altrp-dashboard/actions\";\r\nimport ReactSelect from \"react-select\";\r\n\r\nconst selectSettings = {\r\n  menuList: (provided, state) => ({\r\n    ...provided,\r\n    zIndex: \"999999999999999999999\",\r\n    position: \"relative\"\r\n  }),\r\n  menu: (provided, state) => ({\r\n    ...provided,\r\n    zIndex: \"999999999999999999999\",\r\n    position: \"relative\"\r\n  }),\r\n  menuPortal: (provided, state) => ({\r\n    ...provided,\r\n    zIndex: \"999999999999999999999\",\r\n    position: \"relative\"\r\n  })\r\n};\r\n\r\nconst xScale = [\r\n  {\r\n    id: 0,\r\n    label: \"Линейный\",\r\n    value: \"linear\"\r\n  },\r\n  {\r\n    id: 1,\r\n    label: \"Точечный\",\r\n    value: \"point\"\r\n  },\r\n  {\r\n    id: 2,\r\n    label: \"Временной\",\r\n    value: \"time\"\r\n  }\r\n];\r\n\r\nconst yScale = [\r\n  {\r\n    id: 0,\r\n    value: \"linear\"\r\n  },\r\n  {\r\n    id: 1,\r\n    value: \"point\"\r\n  }\r\n];\r\n\r\nconst timeScales = [\r\n  { id: 4, label: \"День\", value: \"day\" },\r\n  { id: 5, label: \"Месяц\", value: \"month\" },\r\n  { id: 6, label: \"Год\", value: \"year\" }\r\n];\r\n\r\nconst mapStateToProps = state => {\r\n  return { editElement: _.cloneDeep(state.editElement) };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    editElementDispatch: data => dispatch(editElement(data))\r\n  };\r\n}\r\n\r\nclass AxisBaseSettings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const element =\r\n      props.editElement !== null ? _.cloneDeep(props.editElement) : {};\r\n    this.state = {\r\n      editElement: element\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      !_.isEqual(\r\n        prevProps.editElement?.settings,\r\n        this.props.editElement?.settings\r\n      )\r\n    ) {\r\n      this.setState(s => ({ ...s, editElement: this.props.editElement }));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const scaleType = this.state.editElement?.settings?.xScale?.type;\r\n    return (\r\n      <div className=\"col mb-1\">\r\n        <div className=\"mb-3\">\r\n          <div\r\n            className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n          >\r\n            Ось X\r\n          </div>\r\n          <ReactSelect\r\n            placeholder=\"Выберите отображение\"\r\n            options={xScale}\r\n            className={`${this.props.widgetID} altrp-dashboard__drawer--select select-type`}\r\n            defaultValue={this.state.editElement?.settings?.xScale?.type}\r\n            defaultInputValue={\r\n              _.find(xScale, {\r\n                value: this.state.editElement?.settings?.xScale?.type\r\n              })?.label || \"\"\r\n            }\r\n            onChange={option => this.props.setXAxisScale(option.value)}\r\n            getOptionValue={option => option.value}\r\n            getOptionLabel={option => option.label}\r\n            styles={selectSettings}\r\n          />\r\n        </div>\r\n        {typeof scaleType !== \"undefined\" && scaleType === \"time\" && (\r\n          <div className=\"mb-3\">\r\n            <div\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n            >\r\n              Масштаб времени\r\n            </div>\r\n            <ReactSelect\r\n              placeholder=\"Выберите масштаб времени\"\r\n              options={timeScales}\r\n              className=\"select-type\"\r\n              defaultValue={this.state.editElement?.settings?.xScale?.precision}\r\n              defaultInputValue={\r\n                _.find(timeScales, {\r\n                  value: this.state.editElement?.settings?.xScale?.precision\r\n                })?.label || \"\"\r\n              }\r\n              onChange={option => this.props.setXAxisTimeScale(option.value)}\r\n              getOptionValue={option => option.value}\r\n              getOptionLabel={option => option.label}\r\n              styles={selectSettings}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AxisBaseSettings);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  BAR,\r\n  PIE,\r\n  LINE,\r\n  TABLE,\r\n  POINT\r\n} from \"../../../../../../admin/src/components/dashboard/widgetTypes\";\r\n\r\nconst defaultBarMargin = {\r\n  left: 80,\r\n  right: 80,\r\n  bottom: 80,\r\n  top: 40\r\n};\r\n\r\nconst defaultPieMargin = {\r\n  left: 120,\r\n  right: 180,\r\n  bottom: 80,\r\n  top: 80\r\n};\r\n\r\nconst defaultLineMargin = {\r\n  left: 100,\r\n  right: 120,\r\n  bottom: 80,\r\n  top: 40\r\n};\r\n\r\nconst defaultScatterMarign = {\r\n  top: 40,\r\n  right: 180,\r\n  bottom: 80,\r\n  left: 100\r\n};\r\n\r\nclass MarginInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let defaultMargin = {\r\n      left: 30,\r\n      right: 30,\r\n      bottom: 30,\r\n      top: 30\r\n    };\r\n    switch (props.type) {\r\n      case LINE:\r\n        defaultMargin = defaultLineMargin;\r\n        break;\r\n      case BAR:\r\n        defaultMargin = defaultBarMargin;\r\n        break;\r\n      case PIE:\r\n        defaultMargin = defaultPieMargin;\r\n        break;\r\n      case POINT:\r\n        defaultMargin = defaultScatterMarign;\r\n        break;\r\n    }\r\n    this.state = {\r\n      margin: {\r\n        left: props.margin?.left || defaultMargin.left,\r\n        right: props.margin?.right || defaultMargin.right,\r\n        bottom: props.margin?.bottom || defaultMargin.bottom,\r\n        top: props.margin?.top || defaultMargin.top\r\n      }\r\n    };\r\n    this.setProperty = this.setProperty.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevState, prevProps) {\r\n    if (!_.isEqual(prevState.margin, this.state.margin)) {\r\n      this.props.setProperty(this.state.margin, \"margin\");\r\n    }\r\n  }\r\n\r\n  setProperty(value, property) {\r\n    this.setState(s => ({\r\n      ...s,\r\n      margin: { ...s.margin, [property]: Number(value) }\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"mt-2\">\r\n        <div className=\"col\">\r\n          <div className=\"row\">\r\n            <div className=\"col px-0\">\r\n              <div\r\n                htmlFor=\"\"\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Слева:\r\n              </div>\r\n              <input\r\n               className={`${this.props.widgetID} altrp-dashboard__drawer--font-input`}\r\n                style={{\r\n                  width: \"100%\"\r\n                }}\r\n                type=\"number\"\r\n                min=\"0\"\r\n                defaultValue={this.state.margin.left}\r\n                param=\"left\"\r\n                onChange={e => this.setProperty(e.target.value, \"left\")}\r\n              />\r\n            </div>\r\n            <div className=\"col px-0\">\r\n              <div\r\n                htmlFor=\"\"\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Справа:\r\n              </div>\r\n              <input\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--font-input`}\r\n                style={{\r\n                  width: \"100%\"\r\n                }}\r\n                type=\"number\"\r\n                min=\"0\"\r\n                defaultValue={this.state.margin.right}\r\n                param=\"right\"\r\n                onChange={e => this.setProperty(e.target.value, \"right\")}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row mt-1\">\r\n            <div className=\"col px-0\">\r\n              <div\r\n                htmlFor=\"\"\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Сверху:\r\n              </div>\r\n              <input\r\n                 className={`${this.props.widgetID} altrp-dashboard__drawer--font-input`}\r\n                style={{\r\n                  width: \"100%\"\r\n                }}\r\n                type=\"number\"\r\n                min=\"0\"\r\n                defaultValue={this.state.margin.top}\r\n                param=\"top\"\r\n                onChange={e => this.setProperty(e.target.value, \"top\")}\r\n              />\r\n            </div>\r\n            <div className=\"col px-0\">\r\n              <div\r\n                htmlFor=\"\"\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Снизу:\r\n              </div>\r\n              <input\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--font-input`}\r\n                style={{\r\n                  width: \"100%\"\r\n                }}\r\n                type=\"number\"\r\n                min=\"0\"\r\n                defaultValue={this.state.margin.bottom}\r\n                param=\"bottom\"\r\n                onChange={e => this.setProperty(e.target.value, \"bottom\")}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MarginInput;\r\n","import React, { Component } from \"react\";\r\nimport ReactSelect from \"react-select\";\r\nimport { connect } from \"react-redux\";\r\n// import Slider from \"rc-slider\";\r\nimport Schemes from \"./NivoColorSchemes\";\r\nimport MarginInput from \"./MarginInput\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\nimport {\r\n  BAR,\r\n  PIE,\r\n  LINE,\r\n  TABLE\r\n} from \"../../../../../../admin/src/components/dashboard/widgetTypes\";\r\nconst selectSettings = {\r\n  menuList: (provided, state) => ({\r\n    ...provided,\r\n    zIndex: \"999999999999999999999\",\r\n    position: \"relative\"\r\n  }),\r\n  menu: (provided, state) => ({\r\n    ...provided,\r\n    zIndex: \"999999999999999999999\",\r\n    position: \"relative\"\r\n  }),\r\n  menuPortal: (provided, state) => ({\r\n    ...provided,\r\n    zIndex: \"999999999999999999999\",\r\n    position: \"relative\"\r\n  })\r\n};\r\n\r\nconst regagroScheme = _.find(Schemes, { value: \"regagro\" }).value;\r\n\r\nconst curvieTypes = [\r\n  { id: 0, value: \"basis\" },\r\n  { id: 1, value: \"cardinal\" },\r\n  { id: 2, value: \"catmullRom\" },\r\n  { id: 3, value: \"linear\" },\r\n  { id: 4, value: \"monotoneX\" },\r\n  { id: 5, value: \"monotoneY\" },\r\n  { id: 6, value: \"natural\" },\r\n  { id: 7, value: \"step\" },\r\n  { id: 8, value: \"stepAfter\" },\r\n  { id: 9, value: \"stepBefore\" }\r\n];\r\n\r\nconst barLayout = [\r\n  {\r\n    id: 0,\r\n    value: \"horizontal\",\r\n    label: \"Горизонтальный\"\r\n  },\r\n  {\r\n    id: 1,\r\n    value: \"vertical\",\r\n    label: \"Вертикальный\"\r\n  }\r\n];\r\n\r\nconst barGroup = [\r\n  {\r\n    id: 0,\r\n    value: \"stacked\",\r\n    label: \"Накопление\"\r\n  },\r\n  {\r\n    id: 1,\r\n    value: \"grouped\",\r\n    label: \"Группировка\"\r\n  }\r\n];\r\n\r\nconst mapStateToProps = state => {\r\n  return { editElement: _.cloneDeep(state.editElement) };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    editElementDispatch: data => dispatch(editElement(data))\r\n  };\r\n}\r\n\r\nclass StyleSettings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const element =\r\n      props.editElement !== null ? _.cloneDeep(props.editElement) : {};\r\n    this.state = {\r\n      editElement: element,\r\n      lineWidth: 2,\r\n      tickRotation: 0,\r\n      pointSize: 6,\r\n      innerRadius: 0,\r\n      padding: 0.1,\r\n      innerPadding: 0,\r\n      sliceLabelsSkipAngle: 0,\r\n      sliceLabelsRadiusOffset: 0.5,\r\n      radialLabelsSkipAngle: 0,\r\n      radialLabelsLinkOffset: 0,\r\n      radialLabelsLinkDiagonalLength: 16,\r\n      radialLabelsLinkHorizontalLength: 24,\r\n      radialLabelsTextXOffset: 6,\r\n      radialLabelsLinkStrokeWidth: 1,\r\n      labelSkipHeight: 0,\r\n      labelSkipWidth: 0,\r\n      currentColorScheme: \"\",\r\n      cornerRadius: 0,\r\n      padAngle: 0,\r\n      borderWidth: 0,\r\n      borderColor: \"\",\r\n      checked: false\r\n    };\r\n    this.enableArea = this.enableArea.bind(this);\r\n    this.enableSliceLabels = this.enableSliceLabels.bind(this);\r\n    this.enableRadialLabels = this.enableRadialLabels.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.enablePoints = this.enablePoints.bind(this);\r\n    this.setReverse = this.setReverse.bind(this);\r\n    this.setColorScheme = this.setColorScheme.bind(this);\r\n    this.setSliceLabelsSkipAngle = this.setSliceLabelsSkipAngle.bind(this);\r\n    this.setRadialLabelsSkipAngle = this.setRadialLabelsSkipAngle.bind(this);\r\n    this.setSliceLabelsRadiusOffset = this.setSliceLabelsRadiusOffset.bind(\r\n      this\r\n    );\r\n    this.setRadialLabelsLinkOffset = this.setRadialLabelsLinkOffset.bind(this);\r\n    this.setRadialLabelsLinkDiagonalLength = this.setRadialLabelsLinkDiagonalLength.bind(\r\n      this\r\n    );\r\n    this.setRadialLabelsLinkHorizontalLength = this.setRadialLabelsLinkHorizontalLength.bind(\r\n      this\r\n    );\r\n    this.setRadialLabelsTextXOffset = this.setRadialLabelsTextXOffset.bind(\r\n      this\r\n    );\r\n    this.setRadialLabelsLinkStrokeWidth = this.setRadialLabelsLinkStrokeWidth.bind(\r\n      this\r\n    );\r\n    this.setLabelSkipHeight = this.setLabelSkipHeight.bind(this);\r\n    this.setLabelSkipWidth = this.setLabelSkipWidth.bind(this);\r\n    this.cornerRadius = this.cornerRadius.bind(this);\r\n    this.padAngle = this.padAngle.bind(this);\r\n    this.borderColor = this.borderColor.bind(this);\r\n    this.borderWidth = this.borderWidth.bind(this);\r\n    this.enableGridX = this.enableGridX.bind(this);\r\n    this.enableGridY = this.enableGridY.bind(this);\r\n    this.enableCrosshair = this.enableCrosshair.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (typeof this.props.editElement?.settings?.color === \"undefined\") {\r\n      setTimeout(() => {\r\n        this.setColorScheme(regagroScheme);\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      !_.isEqual(\r\n        prevProps.editElement?.settings,\r\n        this.props.editElement?.settings\r\n      )\r\n    ) {\r\n      this.setState(s => ({ ...s, editElement: this.props.editElement }));\r\n    }\r\n  }\r\n\r\n  setColorScheme(value) {\r\n    this.props.setColorScheme(value);\r\n    this.setState(s => ({ ...s, currentColorScheme: value }));\r\n  }\r\n\r\n  handleChange(event) {\r\n    console.log(event);\r\n    event.persist();\r\n    this.setState(state => ({\r\n      ...state,\r\n      checked: event.target.checked\r\n    }));\r\n  }\r\n\r\n  changeWidth(width) {\r\n    this.props.setProperty(width, \"lineWidth\");\r\n    this.setState(s => ({ ...s, lineWidth: width }));\r\n  }\r\n\r\n  setTickRotation(value) {\r\n    this.props.setTickRotation(value);\r\n    this.setState(s => ({ ...s, tickRotation: value }));\r\n  }\r\n\r\n  setPointSize(value) {\r\n    this.props.setProperty(value, \"pointSize\");\r\n    this.setState(s => ({ ...s, pointSize: value }));\r\n  }\r\n\r\n  setInnerRadius(value) {\r\n    this.props.setProperty(value, \"innerRadius\");\r\n    this.setState(s => ({ ...s, innerRadius: value }));\r\n  }\r\n\r\n  setPadding(value) {\r\n    this.props.setProperty(value, \"padding\");\r\n    this.setState(s => ({ ...s, padding: value }));\r\n  }\r\n  setInnerPadding(value) {\r\n    this.props.setProperty(value, \"innerPadding\");\r\n    this.setState(s => ({ ...s, innerPadding: value }));\r\n  }\r\n  enableArea(e) {\r\n    this.props.setProperty(e.target.checked, \"enableArea\");\r\n  }\r\n  enableSliceLabels(e) {\r\n    this.props.setProperty(e.target.checked, \"enableSliceLabels\");\r\n  }\r\n  enableRadialLabels(e) {\r\n    this.props.setProperty(e.target.checked, \"enableRadialLabels\");\r\n  }\r\n  enablePoints(e) {\r\n    this.props.setProperty(e.target.checked, \"enablePoints\");\r\n  }\r\n  enableGridX(e) {\r\n    this.props.setProperty(e.target.checked, \"enableGridX\");\r\n  }\r\n  enableGridY(e) {\r\n    this.props.setProperty(e.target.checked, \"enableGridY\");\r\n  }\r\n  enableCrosshair(e) {\r\n    this.props.setProperty(e.target.checked, \"enableCrosshair\");\r\n  }\r\n  setReverse(e) {\r\n    this.props.setProperty(e.target.checked, \"reverse\");\r\n  }\r\n  setSliceLabelsSkipAngle(e, newValue) {\r\n    this.props.setProperty(Number(newValue), \"sliceLabelsSkipAngle\");\r\n  }\r\n  setRadialLabelsSkipAngle(e, newValue) {\r\n    this.props.setProperty(Number(newValue), \"radialLabelsSkipAngle\");\r\n  }\r\n  setSliceLabelsRadiusOffset(e, newValue) {\r\n    this.props.setProperty(Number(newValue), \"sliceLabelsRadiusOffset\");\r\n  }\r\n  setRadialLabelsLinkOffset(e, newValue) {\r\n    this.props.setProperty(Number(newValue), \"radialLabelsLinkOffset\");\r\n  }\r\n  setRadialLabelsLinkDiagonalLength(e, newValue) {\r\n    this.props.setProperty(Number(newValue), \"radialLabelsLinkDiagonalLength\");\r\n  }\r\n  setRadialLabelsLinkHorizontalLength(e, newValue) {\r\n    this.props.setProperty(\r\n      Number(newValue),\r\n      \"radialLabelsLinkHorizontalLength\"\r\n    );\r\n  }\r\n  setRadialLabelsTextXOffset(e, newValue) {\r\n    this.props.setProperty(Number(newValue), \"radialLabelsTextXOffset\");\r\n  }\r\n  setRadialLabelsLinkStrokeWidth(e, newValue) {\r\n    this.props.setProperty(Number(newValue), \"radialLabelsLinkStrokeWidth\");\r\n  }\r\n  setLabelSkipHeight(e, newValue) {\r\n    this.props.setProperty(Number(newValue), \"labelSkipHeight\");\r\n  }\r\n  setLabelSkipWidth(e, newValue) {\r\n    this.props.setProperty(Number(newValue), \"labelSkipWidth\");\r\n  }\r\n  cornerRadius(e, newValue) {\r\n    this.props.setProperty(Number(newValue), \"cornerRadius\");\r\n  }\r\n  padAngle(e, newValue) {\r\n    this.props.setProperty(Number(newValue), \"padAngle\");\r\n  }\r\n  borderWidth(e, newValue) {\r\n    this.props.setProperty(Number(newValue), \"borderWidth\");\r\n  }\r\n  borderColor(color) {\r\n    this.props.setProperty(color.hex, \"borderColor\");\r\n    this.setState(s => ({\r\n      ...s,\r\n      borderColor: color.hex\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col\">\r\n        <div className=\"mb-3\">\r\n          <div\r\n            className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n          >\r\n            Укажите внутренние отступы\r\n          </div>\r\n          <MarginInput\r\n            widgetID={this.props.widgetID}\r\n            setProperty={this.props.setProperty}\r\n            type={this.state.editElement?.settings?.type}\r\n            margin={this.state.editElement?.settings?.margin}\r\n          />\r\n        </div>\r\n        {this.state.editElement?.settings?.type === LINE && (\r\n          <>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Выберите тип кривой\r\n              </div>\r\n              <ReactSelect\r\n                placeholder=\"Выберите тип кривой\"\r\n                options={curvieTypes}\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--select`}\r\n                defaultValue={this.state.editElement?.settings?.curve}\r\n                defaultInputValue={this.state.editElement?.settings?.curve}\r\n                onChange={option =>\r\n                  this.props.setProperty(option.value, \"curve\")\r\n                }\r\n                getOptionValue={option => option.value}\r\n                getOptionLabel={option => option.value}\r\n                styles={selectSettings}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <div className=\"mb-3\">\r\n          <div\r\n            className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n          >\r\n            Выберите цветовую схему{\" \"}\r\n          </div>\r\n          <ReactSelect\r\n            options={Schemes}\r\n            placeholder=\"Выберите цветовую схему\"\r\n            className={`${this.props.widgetID} altrp-dashboard__drawer--select`}\r\n            defaultValue={\r\n              this.props.editElement?.settings?.colors?.scheme ||\r\n              this.state.currentColorScheme\r\n            }\r\n            defaultInputValue={\r\n              this.props.editElement?.settings?.colors?.scheme ||\r\n              this.state.currentColorScheme\r\n            }\r\n            onChange={option => this.setColorScheme(option.value)}\r\n            getOptionValue={option => option.value}\r\n            getOptionLabel={option => option.value}\r\n            styles={selectSettings}\r\n          />\r\n        </div>\r\n        {this.state.editElement?.settings?.type === LINE && (\r\n          <>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Укажите ширину линии\r\n              </div>\r\n              <Slider\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n                defaultValue={\r\n                  this.state.editElement?.settings?.lineWidth ||\r\n                  this.state.lineWidth\r\n                }\r\n                onChange={(e, newValue) => this.changeWidth(newValue)}\r\n                min={0}\r\n                max={20}\r\n                step={1}\r\n              />\r\n              (\r\n              {this.state.editElement?.settings?.lineWidth ||\r\n                this.state.lineWidth}\r\n              px)\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Отобразить участки\r\n              </div>\r\n              <Checkbox\r\n                disableRipple={true}\r\n                defaultChecked={\r\n                  this.state.editElement?.settings?.enableArea || false\r\n                }\r\n                checked={this.state.editElement?.settings?.enableArea}\r\n                onChange={this.enableArea}\r\n                className={`${this.props.widgetID} altrp-dashboard__checkboxcolor`}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Отобразить точки\r\n              </div>\r\n              <Checkbox\r\n                disableRipple={true}\r\n                defaultChecked={\r\n                  this.state.editElement?.settings?.enablePoints || true\r\n                }\r\n                checked={this.state.editElement?.settings?.enablePoints}\r\n                onChange={this.enablePoints}\r\n                className={`${this.props.widgetID} altrp-dashboard__checkboxcolor`}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Отобразить перекрестие\r\n              </div>\r\n              <Checkbox\r\n                disableRipple={true}\r\n                defaultChecked={\r\n                  this.state.editElement?.settings?.enableCrosshair || true\r\n                }\r\n                checked={this.state.editElement?.settings?.enableCrosshair}\r\n                onChange={this.enableCrosshair}\r\n                className={`${this.props.widgetID} altrp-dashboard__checkboxcolor`}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Укажите размер точки\r\n              </div>\r\n              <Slider\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n                defaultValue={\r\n                  this.state.editElement?.settings?.pointSize ||\r\n                  this.state.pointSize\r\n                }\r\n                onChange={(e, newValue) => this.setPointSize(newValue)}\r\n                min={2}\r\n                max={20}\r\n                step={1}\r\n              />\r\n              (\r\n              {this.state.editElement?.settings?.pointSize ||\r\n                this.state.pointSize}\r\n              px)\r\n            </div>\r\n          </>\r\n        )}\r\n        {(this.state.editElement?.settings?.type !== PIE ||\r\n          this.state.editElement?.settings?.type !== TABLE) && (\r\n          <>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Укажите наклон нижней легенды\r\n              </div>\r\n              <Slider\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n                defaultValue={\r\n                  this.state.editElement?.settings?.axisBottom?.tickRotation ||\r\n                  this.state.tickRotation\r\n                }\r\n                onChange={(e, newValue) => this.setTickRotation(newValue)}\r\n                min={-90}\r\n                max={90}\r\n                step={1}\r\n              />\r\n              (\r\n              {this.state.editElement?.settings?.axisBottom?.tickRotation ||\r\n                this.state.tickRotation}\r\n              °)\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Отобразить сетку по X\r\n              </div>\r\n              <Checkbox\r\n                disableRipple={true}\r\n                defaultChecked={\r\n                  this.state.editElement?.settings?.enableGridX || true\r\n                }\r\n                checked={this.state.editElement?.settings?.enableGridX}\r\n                onChange={this.enableGridX}\r\n                className={`${this.props.widgetID} altrp-dashboard__checkboxcolor`}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Отобразить сетку по Y\r\n              </div>\r\n              <Checkbox\r\n                disableRipple={true}\r\n                defaultChecked={\r\n                  this.state.editElement?.settings?.enableGridY || true\r\n                }\r\n                checked={this.state.editElement?.settings?.enableGridY}\r\n                onChange={this.enableGridY}\r\n                className={`${this.props.widgetID} altrp-dashboard__checkboxcolor`}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {this.state.editElement?.settings?.type === PIE && (\r\n          <>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Укажите внутренний радиус\r\n              </div>\r\n              <Slider\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n                defaultValue={\r\n                  this.state.editElement?.settings?.innerRadius ||\r\n                  this.state.innerRadius\r\n                }\r\n                onChange={(e, newValue) => this.setInnerRadius(newValue)}\r\n                min={0}\r\n                max={0.95}\r\n                step={0.05}\r\n              />\r\n              (\r\n              {this.state.editElement?.settings?.innerRadius ||\r\n                this.state.innerRadius}\r\n              )\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Надписи на сегментах\r\n              </div>\r\n              <Checkbox\r\n                disableRipple={true}\r\n                defaultChecked={\r\n                  this.state.editElement?.settings?.enableSliceLabels || true\r\n                }\r\n                checked={this.state.editElement?.settings?.enableSliceLabels}\r\n                onChange={this.enableSliceLabels}\r\n                className={`${this.props.widgetID} altrp-dashboard__checkboxcolor`}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Пропускать внутренние подписи при угле сектора\r\n              </div>\r\n              <Slider\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n                defaultValue={\r\n                  this.state.editElement?.settings?.sliceLabelsSkipAngle ||\r\n                  this.state.sliceLabelsSkipAngle\r\n                }\r\n                onChange={this.setSliceLabelsSkipAngle}\r\n                min={0}\r\n                max={45}\r\n                step={1}\r\n              />\r\n              (\r\n              {this.state.editElement?.settings?.sliceLabelsSkipAngle ||\r\n                this.state.sliceLabelsSkipAngle}\r\n              )\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Отступ внутренних подписей\r\n              </div>\r\n              <Slider\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n                defaultValue={\r\n                  this.state.editElement?.settings?.sliceLabelsRadiusOffset ||\r\n                  this.state.sliceLabelsRadiusOffset\r\n                }\r\n                onChange={this.setSliceLabelsRadiusOffset}\r\n                min={0}\r\n                max={2}\r\n                step={0.05}\r\n              />\r\n              (\r\n              {this.state.editElement?.settings?.sliceLabelsRadiusOffset ||\r\n                this.state.sliceLabelsRadiusOffset}\r\n              )\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Внешние надписи\r\n              </div>\r\n              <Checkbox\r\n                disableRipple={true}\r\n                defaultChecked={\r\n                  this.state.editElement?.settings?.enableRadialLabels || true\r\n                }\r\n                checked={this.state.editElement?.settings?.enableRadialLabels}\r\n                onChange={this.enableRadialLabels}\r\n                className={`${this.props.widgetID} altrp-dashboard__checkboxcolor`}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Пропускать внешние подписи при угле сектора\r\n              </div>\r\n              <Slider\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n                defaultValue={\r\n                  this.state.editElement?.settings?.radialLabelsSkipAngle ||\r\n                  this.state.radialLabelsSkipAngle\r\n                }\r\n                onChange={this.setRadialLabelsSkipAngle}\r\n                min={0}\r\n                max={45}\r\n                step={1}\r\n              />\r\n              (\r\n              {this.state.editElement?.settings?.radialLabelsSkipAngle ||\r\n                this.state.radialLabelsSkipAngle}\r\n              )\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Отступы внешней подписи\r\n              </div>\r\n              <Slider\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n                defaultValue={\r\n                  this.state.editElement?.settings?.radialLabelsLinkOffset ||\r\n                  this.state.radialLabelsLinkOffset\r\n                }\r\n                onChange={this.setRadialLabelsLinkOffset}\r\n                min={-48}\r\n                max={60}\r\n                step={1}\r\n              />\r\n              (\r\n              {this.state.editElement?.settings?.radialLabelsLinkOffset ||\r\n                this.state.radialLabelsLinkOffset}\r\n              )\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Длина линии подписи по диагонали\r\n              </div>\r\n              <Slider\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n                defaultValue={\r\n                  this.state.editElement?.settings\r\n                    ?.radialLabelsLinkDiagonalLength ||\r\n                  this.state.radialLabelsLinkDiagonalLength\r\n                }\r\n                onChange={this.setRadialLabelsLinkDiagonalLength}\r\n                min={0}\r\n                max={60}\r\n                step={1}\r\n              />{\" \"}\r\n              (\r\n              {this.state.editElement?.settings\r\n                ?.radialLabelsLinkDiagonalLength ||\r\n                this.state.radialLabelsLinkDiagonalLength}\r\n              )\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Длина линии подписи по горизонтали\r\n              </div>\r\n              <Slider\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n                defaultValue={\r\n                  this.state.editElement?.settings\r\n                    ?.radialLabelsLinkHorizontalLength ||\r\n                  this.state.radialLabelsLinkHorizontalLength\r\n                }\r\n                onChange={this.setRadialLabelsLinkHorizontalLength}\r\n                min={0}\r\n                max={60}\r\n                step={1}\r\n              />\r\n              (\r\n              {this.state.editElement?.settings\r\n                ?.radialLabelsLinkHorizontalLength ||\r\n                this.state.radialLabelsLinkHorizontalLength}\r\n              )\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Отступ внешней подписи по горизонтали\r\n              </div>\r\n              <Slider\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n                defaultValue={\r\n                  this.state.editElement?.settings?.radialLabelsTextXOffset ||\r\n                  this.state.radialLabelsTextXOffset\r\n                }\r\n                onChange={this.setRadialLabelsTextXOffset}\r\n                min={0}\r\n                max={60}\r\n                step={1}\r\n              />\r\n              (\r\n              {this.state.editElement?.settings?.radialLabelsTextXOffset ||\r\n                this.state.radialLabelsTextXOffset}\r\n              )\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Толщина линии внешней подписи\r\n              </div>\r\n              <Slider\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n                defaultValue={\r\n                  this.state.editElement?.settings\r\n                    ?.radialLabelsLinkStrokeWidth ||\r\n                  this.state.radialLabelsLinkStrokeWidth\r\n                }\r\n                onChange={this.setRadialLabelsLinkStrokeWidth}\r\n                min={0}\r\n                max={20}\r\n                step={1}\r\n              />\r\n              (\r\n              {this.state.editElement?.settings?.radialLabelsLinkStrokeWidth ||\r\n                this.state.radialLabelsLinkStrokeWidth}\r\n              )\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Скругление углов сегмента\r\n              </div>\r\n              <Slider\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n                defaultValue={\r\n                  this.state.editElement?.settings?.cornerRadius ||\r\n                  this.state.cornerRadius\r\n                }\r\n                onChange={this.cornerRadius}\r\n                min={0}\r\n                max={45}\r\n                step={1}\r\n              />\r\n              (\r\n              {this.state.editElement?.settings?.cornerRadius ||\r\n                this.state.cornerRadius}\r\n              )\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Угол между сегментами\r\n              </div>\r\n              <Slider\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n                defaultValue={\r\n                  this.state.editElement?.settings?.padAngle ||\r\n                  this.state.padAngle\r\n                }\r\n                onChange={this.padAngle}\r\n                min={0}\r\n                max={45}\r\n                step={1}\r\n              />\r\n              (\r\n              {this.state.editElement?.settings?.padAngle ||\r\n                this.state.padAngle}\r\n              )\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Толщина рамки сегментов\r\n              </div>\r\n              <Slider\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n                defaultValue={\r\n                  this.state.editElement?.settings?.borderWidth ||\r\n                  this.state.borderWidth\r\n                }\r\n                onChange={this.borderWidth}\r\n                min={0}\r\n                max={20}\r\n                step={1}\r\n              />\r\n              (\r\n              {this.state.editElement?.settings?.borderWidth ||\r\n                this.state.borderWidth}\r\n              )\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Цвет рамки сегментов\r\n              </div>\r\n              <SketchPicker\r\n                color={\r\n                  this.state.editElement?.settings?.borderColor ||\r\n                  this.state.borderColor\r\n                }\r\n                onChange={this.borderColor}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n        {this.state.editElement?.settings?.type === BAR && (\r\n          <>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Надписи на сегментах\r\n              </div>\r\n              <Checkbox\r\n                disableRipple={true}\r\n                defaultChecked={\r\n                  this.state.editElement?.settings?.enableSliceLabels || true\r\n                }\r\n                checked={this.state.editElement?.settings?.enableSliceLabels}\r\n                onChange={this.enableSliceLabels}\r\n                className={`${this.props.widgetID} altrp-dashboard__checkboxcolor`}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Внешние отступы\r\n              </div>\r\n              <Slider\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n                defaultValue={\r\n                  this.state.editElement?.settings?.padding ||\r\n                  this.state.padding\r\n                }\r\n                onChange={(e, newValue) => this.setPadding(newValue)}\r\n                min={0}\r\n                max={0.9}\r\n                step={0.05}\r\n              />\r\n              ({this.state.editElement?.settings?.padding || this.state.padding}\r\n              )\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Внутренние отступы\r\n              </div>\r\n              <Slider\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n                defaultValue={\r\n                  this.state.editElement?.settings?.innerPadding ||\r\n                  this.state.innerPadding\r\n                }\r\n                onChange={(e, newValue) => this.setInnerPadding(newValue)}\r\n                min={0}\r\n                max={10}\r\n                step={1}\r\n              />\r\n              (\r\n              {this.state.editElement?.settings?.innerPadding ||\r\n                this.state.innerPadding}\r\n              )\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Пропускать подписи при высоте столбца\r\n              </div>\r\n              <Slider\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n                defaultValue={\r\n                  this.state.editElement?.settings?.labelSkipHeight ||\r\n                  this.state.labelSkipHeight\r\n                }\r\n                onChange={this.setLabelSkipHeight}\r\n                min={0}\r\n                max={36}\r\n                step={1}\r\n              />\r\n              (\r\n              {this.state.editElement?.settings?.labelSkipHeight ||\r\n                this.state.labelSkipHeight}\r\n              )\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Пропускать подписи при ширине столбца\r\n              </div>\r\n              <Slider\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n                defaultValue={\r\n                  this.state.editElement?.settings?.labelSkipWidth ||\r\n                  this.state.labelSkipWidth\r\n                }\r\n                onChange={this.setLabelSkipWidth}\r\n                min={0}\r\n                max={36}\r\n                step={1}\r\n              />\r\n              (\r\n              {this.state.editElement?.settings?.labelSkipWidth ||\r\n                this.state.labelSkipWidth}\r\n              )\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Отразить\r\n              </div>\r\n              <Checkbox\r\n                disableRipple={true}\r\n                defaultChecked={\r\n                  this.state.editElement?.settings?.reverse || false\r\n                }\r\n                checked={this.state.editElement?.settings?.reverse}\r\n                onChange={this.setReverse}\r\n                className={`${this.props.widgetID} altrp-dashboard__checkboxcolor`}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Тип макета\r\n              </div>\r\n              <ReactSelect\r\n                options={barLayout}\r\n                placeholder=\"Выберите тип макета\"\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--select select-type`}\r\n                defaultValue={this.state.editElement?.settings?.layout}\r\n                defaultInputValue={this.state.editElement?.settings?.layout}\r\n                onChange={option =>\r\n                  this.props.setProperty(option.value, \"layout\")\r\n                }\r\n                getOptionValue={option => option.value}\r\n                getOptionLabel={option => option.label}\r\n                styles={selectSettings}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StyleSettings);\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport axios from \"axios\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { editElement } from \"../../../store/altrp-dashboard/actions\";\r\n\r\nconst mapStateToProps = state => {\r\n  return { editElement: state.editElement };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    editElementDispatch: data => dispatch(editElement(data))\r\n  };\r\n}\r\n\r\nclass FilterParameters extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      param: _.cloneDeep(props.param),\r\n      options: [],\r\n      editElement: _.cloneDeep(props.editElement),\r\n      currentSelected: \"\"\r\n    };\r\n\r\n    this.setOption = this.setOption.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (!_.isEqual(prevProps.param, this.props.param)) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        param: _.cloneDeep(this.props.param)\r\n      }));\r\n    }\r\n\r\n    if (!_.isEqual(prevState.editElement, this.props.editElement)) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        editElement: _.cloneDeep(this.props.editElement)\r\n      }));\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let currentOption = _.find(this.state.editElement?.settings?.params, o => {\r\n      if (\r\n        typeof o[this.state.param.value] !== \"undefined\" &&\r\n        o[this.state.param.value] != null\r\n      ) {\r\n        console.log(o[this.state.param.value]);\r\n        return o[this.state.param.value];\r\n      }\r\n      return \"\";\r\n    });\r\n    if (typeof currentOption !== \"undefined\") {\r\n      let keyOption = _.keys(currentOption)[0];\r\n      this.setState(s => ({\r\n        ...s,\r\n        currentSelected: currentOption[keyOption] || \"\"\r\n      }));\r\n    }\r\n  }\r\n\r\n  async componentWillMount() {\r\n    await this.getOptions();\r\n  }\r\n\r\n  async getOptions() {\r\n    try {\r\n      let req = await axios(\r\n        `/ajax/models/queries/${this.state.param.model}/${this.state.param.value}`\r\n      );\r\n      if (req.status === 200) {\r\n        this.setState(s => ({ ...s, options: req.data.data }));\r\n      }\r\n    } catch (error) {\r\n      console.log(\"NETWORK ERROR =>\", error);\r\n    }\r\n  }\r\n\r\n  setOption(value) {\r\n    this.props.setParam(\r\n      this.state.param.value,\r\n      value,\r\n      this.state.options,\r\n      _.find(this.state.options, o => o.value == this.state.currentSelected)\r\n        ?.label || \"\"\r\n    );\r\n    this.setState(s => {\r\n      return { ...s, currentSelected: value };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-12\">\r\n        <Form.Group className=\"mb-2\">\r\n          <Form.Label\r\n            className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n          >\r\n            {this.state.param.label}\r\n          </Form.Label>\r\n          <Form.Control\r\n            className=\"select-type\"\r\n            name=\"type\"\r\n            defaultValue={this.state.currentSelected}\r\n            value={this.state.currentSelected}\r\n            onChange={e => this.setOption(e.target.value)}\r\n            as=\"select\"\r\n          >\r\n            <option value=\"\">Выберите параметры для фильтрации</option>\r\n            {this.state.options.length > 0 &&\r\n              this.state.options.map((option, index) => (\r\n                <option key={index} value={option.value}>\r\n                  {option.label}\r\n                </option>\r\n              ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterParameters);\r\n","import React, { Component, Suspense } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { widgetTypes } from \"../../../../../../admin/src/components/dashboard/widgetTypes\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { editElement } from \"../../../store/altrp-dashboard/actions\";\r\n\r\nconst mapStateToProps = state => {\r\n  return { editElement: state.editElement };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    editElementDispatch: data => dispatch(editElement(data))\r\n  };\r\n}\r\n\r\nclass DatasourceSettings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const element =\r\n      props.editElement !== null ? _.cloneDeep(props.editElement) : {};\r\n    this.state = {\r\n      types: widgetTypes,\r\n      editElement: element\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-12\">\r\n        <Form.Group>\r\n          <Form.Label\r\n            className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n          >\r\n            Тип диаграммы\r\n          </Form.Label>\r\n          <Form.Control\r\n            onChange={e => this.props.setType(e.target.value)}\r\n            value={this.props.editElement?.settings?.type}\r\n            className={`${this.props.widgetID} altrp-dashboard__drawer--select select-type`}\r\n            name=\"type\"\r\n            as=\"select\"\r\n          >\r\n            <option value=\"\">Выберите тип диаграммы</option>\r\n            {this.state.types &&\r\n              this.state.types.map((type, index) => (\r\n                <option key={index} value={type.value}>\r\n                  {type.name}\r\n                </option>\r\n              ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DatasourceSettings);\r\n","import React, { Component } from \"react\";\r\nimport ReactSelect from \"react-select\";\r\nimport { connect } from \"react-redux\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst mapStateToProps = state => {\r\n  return { editElement: _.cloneDeep(state.editElement) };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    editElementDispatch: data => dispatch(editElement(data))\r\n  };\r\n}\r\nconst selectSettings = {\r\n  menuList: (provided, state) => ({\r\n    ...provided,\r\n    zIndex: \"999999999999999999999\",\r\n    position: \"relative\"\r\n  }),\r\n  menu: (provided, state) => ({\r\n    ...provided,\r\n    zIndex: \"999999999999999999999\",\r\n    position: \"relative\"\r\n  }),\r\n  menuPortal: (provided, state) => ({\r\n    ...provided,\r\n    zIndex: \"999999999999999999999\",\r\n    position: \"relative\"\r\n  })\r\n};\r\nconst anchors = [\r\n  { value: \"top-left\", label: \"Сверху слева\" },\r\n  { value: \"top\", label: \"Сверху\" },\r\n  { value: \"top-right\", label: \"Сверху справа\" },\r\n  { value: \"left\", label: \"Слева\" },\r\n  { value: \"center\", label: \"По центру\" },\r\n  { value: \"right\", label: \"Справа\" },\r\n  { value: \"bottom-left\", label: \"Снизу слева\" },\r\n  { value: \"bottom\", label: \"Снизу\" },\r\n  { value: \"bottom-right\", label: \"Снизу справа\" }\r\n];\r\nconst directions = [\r\n  { value: \"column\", label: \"Колонка\" },\r\n  { value: \"row\", label: \"Строчка\" }\r\n];\r\n\r\nconst itemDirections = [\r\n  { value: \"left-to-right\", label: \"Слева направо\" },\r\n  { value: \"right-to-left\", label: \"Справа налево\" },\r\n  { value: \"top-to-bottom\", label: \"Сверху вниз\" },\r\n  { value: \"bottom-to-top\", label: \"Снизу вверх\" }\r\n];\r\n\r\nclass LegendSettings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editElement: props.editElement,\r\n      enableLegend: true,\r\n      legendTranslateX: 0,\r\n      legendTranslateY: 0,\r\n      itemWidth: 10,\r\n      itemHeight: 10,\r\n      itemsSpacing: 10,\r\n      symbolSize: 10\r\n    };\r\n    this.setLedengEnable = this.setLedengEnable.bind(this);\r\n    this.setLegendJustify = this.setLegendJustify.bind(this);\r\n    this.setProperty = this.setProperty.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (!_.isEqual(prevProps.editElement, this.props.editElement)) {\r\n      this.setState(s => ({ ...s, editElement: this.props.editElement }));\r\n    }\r\n  }\r\n\r\n  setLedengEnable(e) {\r\n    this.props.setProperty(e.target.checked, \"enableLegend\");\r\n  }\r\n  setLegendJustify(e) {\r\n    this.props.setProperty(e.target.checked, \"legendJustify\");\r\n  }\r\n  setProperty(value, property) {\r\n    this.props.setProperty(value, property);\r\n    this.setState(s => ({ ...s, [property]: value }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"col\">\r\n          <div className=\"mb-3\">\r\n            <div\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n            >\r\n              Отобразить легенду\r\n            </div>\r\n            <Checkbox\r\n              disableRipple={true}\r\n              className={`${this.props.widgetID} altrp-dashboard__checkboxcolor`}\r\n              defaultChecked={this.state.editElement?.settings?.enableLegend}\r\n              checked={this.state.editElement?.settings?.enableLegend}\r\n              onChange={this.setLedengEnable}\r\n              />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <div\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n            >\r\n              Расположение легенды\r\n            </div>\r\n            <ReactSelect\r\n              placeholder=\"Выберите расположение легенды\"\r\n              options={anchors}\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--select`}\r\n              defaultValue={this.state.editElement?.settings?.legendAchor}\r\n              defaultInputValue={this.state.editElement?.settings?.legendAchor}\r\n              onChange={option =>\r\n                this.props.setProperty(option.value, \"legendAchor\")\r\n              }\r\n              getOptionValue={option => option.value}\r\n              getOptionLabel={option => option.label}\r\n              styles={selectSettings}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <div\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n            >\r\n              Направление легенды\r\n            </div>\r\n            <ReactSelect\r\n              placeholder=\"Выберите расположение легенды\"\r\n              options={directions}\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--select`}\r\n              defaultValue={this.state.editElement?.settings?.legendDirection}\r\n              defaultInputValue={\r\n                this.state.editElement?.settings?.legendDirection\r\n              }\r\n              onChange={option =>\r\n                this.props.setProperty(option.value, \"legendDirection\")\r\n              }\r\n              getOptionValue={option => option.value}\r\n              getOptionLabel={option => option.label}\r\n              styles={selectSettings}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <div\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n            >\r\n              Выровнять легенды\r\n            </div>\r\n            <Checkbox\r\n              disableRipple={true}\r\n              className={`${this.props.widgetID} altrp-dashboard__checkboxcolor`}\r\n              defaultChecked={this.state.editElement?.settings?.legendJustify}\r\n              checked={this.state.editElement?.settings?.legendJustify}\r\n              onChange={this.setLegendJustify}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <div\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n            >\r\n              Расположение легенды по X\r\n            </div>\r\n            <Slider\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n              defaultValue={\r\n                this.state.editElement?.settings?.legendTranslateX ||\r\n                this.state.legendTranslateX\r\n              }\r\n              onChange={(e, newValue) =>\r\n                this.setProperty(Number(newValue), \"legendTranslateX\")\r\n              }\r\n              min={-200}\r\n              max={200}\r\n              step={1}\r\n            />\r\n            (\r\n            {this.state.editElement?.settings?.legendTranslateX ||\r\n              this.state.legendTranslateX}\r\n            px)\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <div\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n            >\r\n              Расположение легенды по Y\r\n            </div>\r\n            <Slider\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n              defaultValue={\r\n                this.state.editElement?.settings?.legendTranslateY ||\r\n                this.state.legendTranslateY\r\n              }\r\n              onChange={(e, newValue) =>\r\n                this.setProperty(Number(newValue), \"legendTranslateY\")\r\n              }\r\n              min={-200}\r\n              max={200}\r\n              step={1}\r\n            />\r\n            (\r\n            {this.state.editElement?.settings?.legendTranslateY ||\r\n              this.state.legendTranslateY}\r\n            px)\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <div\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n            >\r\n              Ширина элемента легенды\r\n            </div>\r\n            <Slider\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n              defaultValue={\r\n                this.state.editElement?.settings?.legendItemWidth ||\r\n                this.state.itemWidth\r\n              }\r\n              onChange={(e, newValue) =>\r\n                this.setProperty(Number(newValue), \"itemWlegendItemWidthidth\")\r\n              }\r\n              min={10}\r\n              max={200}\r\n              step={1}\r\n            />\r\n            (\r\n            {this.state.editElement?.settings?.legendItemWidth ||\r\n              this.state.itemWidth}\r\n            px)\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <div\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n            >\r\n              Высота элемента легенды\r\n            </div>\r\n            <Slider\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n              defaultValue={\r\n                this.state.editElement?.settings?.legendItemHeight ||\r\n                this.state.itemHeight\r\n              }\r\n              onChange={(e, newValue) =>\r\n                this.setProperty(Number(newValue), \"legendItemHeight\")\r\n              }\r\n              min={10}\r\n              max={200}\r\n              step={1}\r\n            />\r\n            (\r\n            {this.state.editElement?.settings?.legendItemHeight ||\r\n              this.state.itemHeight}\r\n            px)\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <div\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n            >\r\n              Расстояние между элементами\r\n            </div>\r\n            <Slider\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n              defaultValue={\r\n                this.state.editElement?.settings?.legendItemsSpacing ||\r\n                this.state.itemsSpacing\r\n              }\r\n              onChange={(e, newValue) =>\r\n                this.setProperty(Number(newValue), \"legendItemsSpacing\")\r\n              }\r\n              min={0}\r\n              max={60}\r\n              step={1}\r\n            />\r\n            (\r\n            {this.state.editElement?.settings?.legendItemsSpacing ||\r\n              this.state.itemsSpacing}\r\n            px)\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <div\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n            >\r\n              Размер символа\r\n            </div>\r\n            <Slider\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n              defaultValue={\r\n                this.state.editElement?.settings?.legendSymbolSize ||\r\n                this.state.symbolSize\r\n              }\r\n              onChange={(e, newValue) =>\r\n                this.setProperty(Number(newValue), \"legendSymbolSize\")\r\n              }\r\n              min={2}\r\n              max={60}\r\n              step={1}\r\n            />\r\n            (\r\n            {this.state.editElement?.settings?.legendSymbolSize ||\r\n              this.state.symbolSize}\r\n            px)\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <div\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n            >\r\n              Направление элементов\r\n            </div>\r\n            <ReactSelect\r\n              placeholder=\"Выберите направление элементов\"\r\n              options={itemDirections}\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--select`}\r\n              defaultValue={\r\n                this.state.editElement?.settings?.legendItemDirection\r\n              }\r\n              defaultInputValue={\r\n                this.state.editElement?.settings?.legendItemDirection\r\n              }\r\n              onChange={option =>\r\n                this.props.setProperty(option.value, \"legendItemDirection\")\r\n              }\r\n              getOptionValue={option => option.value}\r\n              getOptionLabel={option => option.label}\r\n              styles={selectSettings}\r\n            />\r\n          </div>\r\n          {/* {(this.state.editElement?.settings?.type === LINE ||\r\n            this.state.editElement?.settings?.type === POINT) && (\r\n            <div className=\"mb-3\">\r\n              <div>Отображение элементов по</div>\r\n              <ReactSelect\r\n                placeholder=\"Выберите отображение элементов\"\r\n                options={dataFroms}\r\n                className=\"select-type\"\r\n                defaultValue={this.state.editElement?.settings?.legendDataFrom}\r\n                defaultInputValue={\r\n                  this.state.editElement?.settings?.legendDataFrom\r\n                }\r\n                onChange={option =>\r\n                  this.props.setProperty(option.value, \"legendDataFrom\")\r\n                }\r\n                getOptionValue={option => option.value}\r\n                getOptionLabel={option => option.label}\r\n                styles={selectSettings}\r\n              />\r\n            </div>\r\n          )} */}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LegendSettings);\r\n","import React, { Component } from \"react\";\r\n\r\nclass PaddingTooltipInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const defaultPadding = {\r\n      left: 5,\r\n      right: 5,\r\n      bottom: 5,\r\n      top: 5\r\n    };\r\n    this.state = {\r\n      padding: {\r\n        left: props.padding?.left || defaultPadding.left,\r\n        right: props.padding?.right || defaultPadding.right,\r\n        bottom: props.padding?.bottom || defaultPadding.bottom,\r\n        top: props.padding?.top || defaultPadding.top\r\n      }\r\n    };\r\n    this.setProperty = this.setProperty.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevState, prevProps) {}\r\n\r\n  setProperty(value, property) {\r\n    this.setState(s => ({\r\n      ...s,\r\n      padding: { ...s.padding, [property]: Number(value) }\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"mt-2\">\r\n        <div className=\"col\">\r\n          <div className=\"row\">\r\n            <div className=\"col px-0\">\r\n              <div\r\n                htmlFor=\"\"\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Слева:\r\n              </div>\r\n              <input\r\n                className=\"form-control\"\r\n                style={{\r\n                  width: \"100%\"\r\n                }}\r\n                type=\"number\"\r\n                min=\"0\"\r\n                defaultValue={this.state.padding.left}\r\n                onChange={e => this.setProperty(e.target.value, \"left\")}\r\n              />\r\n            </div>\r\n            <div className=\"col px-0\">\r\n              <div\r\n                htmlFor=\"\"\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Справа:\r\n              </div>\r\n              <input\r\n                className=\"form-control\"\r\n                style={{\r\n                  width: \"100%\"\r\n                }}\r\n                type=\"number\"\r\n                min=\"0\"\r\n                defaultValue={this.state.padding.right}\r\n                onChange={e => this.setProperty(e.target.value, \"right\")}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row mt-1\">\r\n            <div className=\"col px-0\">\r\n              <div\r\n                htmlFor=\"\"\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Сверху:\r\n              </div>\r\n              <input\r\n                className=\"form-control\"\r\n                style={{\r\n                  width: \"100%\"\r\n                }}\r\n                type=\"number\"\r\n                min=\"0\"\r\n                defaultValue={this.state.padding.top}\r\n                onChange={e => this.setProperty(e.target.value, \"top\")}\r\n              />\r\n            </div>\r\n            <div className=\"col px-0\">\r\n              <div\r\n                htmlFor=\"\"\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Снизу:\r\n              </div>\r\n              <input\r\n                className=\"form-control\"\r\n                style={{\r\n                  width: \"100%\"\r\n                }}\r\n                type=\"number\"\r\n                min=\"0\"\r\n                defaultValue={this.state.padding.bottom}\r\n                onChange={e => this.setProperty(e.target.value, \"bottom\")}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PaddingTooltipInput;\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PaddingTooltipInput from \"./PaddingTooltipInput\";\r\nimport ReactSelect from \"react-select\";\r\nimport Schemes from \"./NivoColorSchemes\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\nconst mapStateToProps = state => {\r\n  return { editElement: _.cloneDeep(state.editElement) };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    editElementDispatch: data => dispatch(editElement(data))\r\n  };\r\n}\r\n\r\nconst anchors = [\r\n  { value: \"top-left\", label: \"Сверху слева\" },\r\n  { value: \"top\", label: \"Сверху\" },\r\n  { value: \"top-right\", label: \"Сверху справа\" },\r\n  { value: \"left\", label: \"Слева\" },\r\n  { value: \"center\", label: \"По центру\" },\r\n  { value: \"right\", label: \"Справа\" },\r\n  { value: \"bottom-left\", label: \"Снизу слева\" },\r\n  { value: \"bottom\", label: \"Снизу\" },\r\n  { value: \"bottom-right\", label: \"Снизу справа\" }\r\n];\r\n\r\nclass TooltipSettings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editElement: props.editElement,\r\n      padding: {\r\n        left: 5,\r\n        right: 5,\r\n        top: 5,\r\n        bottom: 5\r\n      },\r\n      currentColorScheme: \"\",\r\n      lineWidth: 2,\r\n    };\r\n    this.setTooltipEnable = this.setTooltipEnable.bind(this);\r\n    this.setColorScheme = this.setColorScheme.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (typeof this.props.editElement?.settings?.color === \"undefined\") {\r\n      setTimeout(() => {\r\n        this.setColorScheme(regagroScheme);\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  setColorScheme(value) {\r\n    this.props.setColorScheme(value);\r\n    this.setState(s => ({ ...s, currentColorScheme: value }));\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (!_.isEqual(prevProps.editElement, this.props.editElement)) {\r\n      this.setState(s => ({ ...s, editElement: this.props.editElement }));\r\n    }\r\n  }\r\n\r\n  setTooltipEnable(e) {\r\n    this.props.setProperty(e.target.checked, \"enableCustomTooltip\");\r\n  }\r\n\r\n  changeWidth(width) {\r\n    this.props.setProperty(width, \"lineWidth\");\r\n    this.setState(s => ({ ...s, lineWidth: width }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"col\">\r\n          <div className=\"mb-3\">\r\n            <div\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n            >\r\n              Отобразить собственные подсказки\r\n            </div>\r\n            <Checkbox\r\n              disableRipple={true}\r\n              defaultChecked={\r\n                this.state.editElement?.settings?.enableCustomTooltip\r\n              }\r\n              checked={this.state.editElement?.settings?.enableCustomTooltip}\r\n              onChange={this.setTooltipEnable}\r\n              className={`${this.props.widgetID} altrp-dashboard__checkboxcolor`}\r\n            />\r\n          </div>\r\n          {/* <div className=\"mb-3\">\r\n            <div\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n            >\r\n              Отступы внутри подсказки\r\n            </div>\r\n            <PaddingTooltipInput\r\n              widgetID={this.props.widgetID}\r\n              setProperty={this.props.setProperty}\r\n              padding={this.state.editElement?.settings?.tooltip?.padding}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <div\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n            >\r\n              Отступы снаружи подсказки\r\n            </div>\r\n            <PaddingTooltipInput\r\n              widgetID={this.props.widgetID}\r\n              setProperty={this.props.setProperty}\r\n              padding={this.state.editElement?.settings?.tooltip?.padding}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n          <div\r\n            className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n          >\r\n            Выберите семейство шрифта{\" \"}\r\n          </div>\r\n          <ReactSelect\r\n            placeholder=\"Выберите семейство шрифта\"\r\n            className=\"select-type\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <div\r\n            className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n          >\r\n            Выберите цвет шрифта{\" \"}\r\n          </div>\r\n          <ReactSelect\r\n            placeholder=\"Выберите цвет шрифта\"\r\n            className=\"select-type\"    \r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <div\r\n            className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n          >\r\n            Выберите фон тултипа{\" \"}\r\n          </div>\r\n          <ReactSelect\r\n            placeholder=\"Выберите фон тултипа\"\r\n            className=\"select-type\"    \r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Размер шрифта\r\n              </div>\r\n              <Slider\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n                defaultValue={\r\n                  this.state.editElement?.settings?.lineWidth ||\r\n                  this.state.lineWidth\r\n                }\r\n                onChange={(e, newValue) => this.changeWidth(newValue)}\r\n                min={0}\r\n                max={72}\r\n                step={1}\r\n              />\r\n              (\r\n              {this.state.editElement?.settings?.lineWidth ||\r\n                this.state.lineWidth}\r\n              px)\r\n          </div> \r\n          <div className=\"mb-3\">\r\n            <div\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n            >\r\n              Расположение текста тултипа\r\n            </div>\r\n            <ReactSelect\r\n              placeholder=\"Выберите расположение\"\r\n              className=\"select-type\"\r\n            />\r\n          </div>*/}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TooltipSettings);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  LINE,\r\n  POINT,\r\n  BAR\r\n} from \"../../../../../../admin/src/components/dashboard/widgetTypes\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst mapStateToProps = state => {\r\n  return { editElement: _.cloneDeep(state.editElement) };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    editElementDispatch: data => dispatch(editElement(data))\r\n  };\r\n}\r\n\r\nclass AnimationSettings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editElement: props.editElement,\r\n      animationMotionStiffness: 90,\r\n      animationMotionDamping: 15,\r\n      animationEnabled: true\r\n    };\r\n    this.setAnimationEnable = this.setAnimationEnable.bind(this);\r\n  }\r\n\r\n  setAnimationEnable(e) {\r\n    this.props.setProperty(e.target.checked, \"enableAnimation\");\r\n  }\r\n  setProperty(value, property) {\r\n    this.props.setProperty(value, property);\r\n    this.setState(s => ({ ...s, [property]: value }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"col\">\r\n          {(this.state.editElement?.settings?.type === LINE ||\r\n            this.state.editElement?.settings?.type === POINT ||\r\n            this.state.editElement?.settings?.type === BAR) && (\r\n            <div className=\"mb-3\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n              >\r\n                Включить анимацию\r\n              </div>\r\n              <Checkbox\r\n              disableRipple={true}\r\n              className={`${this.props.widgetID} altrp-dashboard__checkboxcolor`}\r\n              defaultChecked={\r\n                  this.props.editElement?.settings?.enableAnimation\r\n                }\r\n              checked={this.props.editElement?.settings?.enableAnimation}\r\n              onChange={this.setAnimationEnable}\r\n              />\r\n            </div>\r\n          )}\r\n          {(this.state.editElement?.settings?.type === POINT ||\r\n            this.state.editElement?.settings?.type === BAR) && (\r\n            <>\r\n              <div className=\"mb-3\">\r\n                <div\r\n                  className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n                >\r\n                  Жесткость движения\r\n                </div>\r\n                <Slider\r\n                  className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n                  defaultValue={\r\n                    this.state.editElement?.settings\r\n                      ?.animationMotionStiffness ||\r\n                    this.state.animationMotionStiffness\r\n                  }\r\n                  onChange={(e, newValue) =>\r\n                    this.setProperty(Number(newValue), \"animationMotionStiffness\")\r\n                  }\r\n                  min={0}\r\n                  max={90}\r\n                  step={1}\r\n                />\r\n                (\r\n                {this.state.editElement?.settings?.animationMotionStiffness ||\r\n                  this.state.animationMotionStiffness}\r\n                )\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <div\r\n                  className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n                >\r\n                  Затухаение движения\r\n                </div>\r\n                <Slider\r\n                  className={`${this.props.widgetID} altrp-dashboard__drawer--range-drawer-color`}\r\n                  defaultValue={\r\n                    this.state.editElement?.settings?.animationMotionDamping ||\r\n                    this.state.animationMotionDamping\r\n                  }\r\n                  onChange={(e, newValue) =>\r\n                    this.setProperty(Number(newValue), \"animationMotionDamping\")\r\n                  }\r\n                  min={0}\r\n                  max={40}\r\n                  step={1}\r\n                />\r\n                (\r\n                {this.state.editElement?.settings?.animationMotionDamping ||\r\n                  this.state.animationMotionDamping}\r\n                )\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AnimationSettings);\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport ReactSelect from \"react-select\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { editElement } from \"../../../store/altrp-dashboard/actions\";\r\n\r\nconst mapStateToProps = state => {\r\n  return { editElement: state.editElement };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    editElementDispatch: data => dispatch(editElement(data))\r\n  };\r\n}\r\n\r\nconst options = [\r\n  {\r\n    id: 0,\r\n    label: \"По умолчанию\",\r\n    value: \"\"\r\n  },\r\n  {\r\n    id: 1,\r\n    label: \"По значению\",\r\n    value: \"value\"\r\n  },\r\n  {\r\n    id: 2,\r\n    label: \"По названию\",\r\n    value: \"key\"\r\n  }\r\n];\r\n\r\nclass SortData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editElement: props.editElement\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"col-12\">\r\n          <Form.Group className=\"mb-2\">\r\n            <Form.Label\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n            >\r\n              Сортировать\r\n            </Form.Label>\r\n            <ReactSelect\r\n              placeholder=\"Выберите фильтр\"\r\n              onChange={value => this.props.setProperty(value, \"sort\")}\r\n              className={`${this.props.widgetID} altrp-dashboard__drawer--select select-type`}\r\n              defaultValue={\r\n                this.state.editElement?.settings?.sort || options[0].value\r\n              }\r\n              name=\"type\"\r\n              as=\"select\"\r\n              styles={{\r\n                menuList: (provided, state) => ({\r\n                  ...provided,\r\n                  zIndex: \"999999999999999999999\",\r\n                  position: \"relative\"\r\n                }),\r\n                menu: (provided, state) => ({\r\n                  ...provided,\r\n                  zIndex: \"999999999999999999999\",\r\n                  position: \"relative\"\r\n                }),\r\n                menuPortal: (provided, state) => ({\r\n                  ...provided,\r\n                  zIndex: \"999999999999999999999\",\r\n                  position: \"relative\"\r\n                })\r\n              }}\r\n              options={options}\r\n              getOptionValue={option => option.value}\r\n              getOptionLabel={option => option.label}\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SortData);\r\n","import styled from \"styled-components\";\r\nimport { getResponsiveSetting } from \"../../../../../front-app/src/js/helpers\";\r\nimport { styledString } from \"../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport default styled.div`\r\n\r\n  ${({settings}) => {\r\n    \r\n  const styles = [\r\n    \"altrp-dashboard__drawer--font\",\r\n      [\"\", \"style_font_drawer_typographic\", \"typographic\"],\r\n      [\"color\", \"style_font_color_typographic\", \"color\"],\r\n      [\"background-color\", \"style_background_color_typographic\", \"color\", \"\", true],\r\n    \"}\",\r\n    \r\n    \"altrp-dashboard__drawer--label-font-size\",\r\n      [\"color\", \"style_font_color_typographic\", \"color\"],\r\n    \"}\",\r\n    \r\n    \"altrp-dashboard__drawer--select\",\r\n      [\"color\", \"style_font_color_typographic\", \"color\"],\r\n    \"}\",\r\n    \r\n    \"altrp-dashboard__drawer--font-input\",\r\n      [\"\", \"style_font_drawer_typographic_input\", \"typographic\"],\r\n    \"}\",\r\n    \r\n    \"altrp-dashboard__drawer--section-font-size\",\r\n      [\"font-size\", \"style_font_size_drawer_section\", \"slider\"],\r\n    \"}\",\r\n    \r\n    \"altrp-dashboard__drawer--label-font-size\",\r\n      [\"font-size\", \"style_font_size_drawer_label\", \"slider\"],\r\n    \"}\",\r\n    \r\n    \"altrp-dashboard__drawer--font-margin\",\r\n      [\"margin\", \"style_margin_subheading\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__checkboxcolor.MuiCheckbox-colorSecondary.Mui-checked\",\r\n      [\"color\", \"checkbox_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__checkboxcolor.MuiCheckbox-colorSecondary.Mui-checked:hover\",\r\n      [\"color\", \"checkbox_color\", \"color\", \":hover\"],\r\n    \"}\",\r\n    \r\n    \"altrp-dashboard__drawer--range-drawer-color.MuiSlider-root\",\r\n      [\"color\", \"slider_range_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__drawer--range-drawer-color.MuiSlider-root:hover\",\r\n      [\"color\", \"slider_range_color\", \"color\", \":hover\"],\r\n    \"}\",\r\n    \r\n    \"altrp-btn-draw\",\r\n      [\"background-color\", \"background_color_btn\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-btn-draw:hover\",\r\n      [\"background-color\", \"background_color_btn\", \"color\", \":hover\"],\r\n    \"}\",\r\n    \r\n    \"altrp-btn-draw\",\r\n      [\"\", \"font_typographic_btn\", \"typographic\"],\r\n      [\"color\", \"font_color_btn\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-btn-draw:hover\",\r\n      [\"color\", \"font_color_btn\", \"color\", \":hover\"],\r\n    \"}\",\r\n    \r\n    \"altrp-dashboard__drawer--select\",\r\n      [\"border-style\", \"border_type_select\"],\r\n      [\"border-width\", \"border_width_select\", \"dimensions\"],\r\n      [\"border-color\", \"border_color_select\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__drawer--select:hover\",\r\n      [\"border-style\", \"border_type_select\", \"\", \":hover\"],\r\n      [\"border-width\", \"border_width_select\", \"dimensions\", \":hover\"],\r\n      [\"border-color\", \"border_color_select\", \"color\", \":hover\"],\r\n    \"}\",\r\n  ];\r\n  return styledString(styles, settings)\r\n}}\r\n  \r\n  & .altrp-dashboard__checkboxcolor.MuiCheckbox-colorSecondary.Mui-checked {\r\n    background-color: transparent !important;\r\n  } \r\n`;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  BAR,\r\n  LINE,\r\n  POINT\r\n} from \"../../../../../admin/src/components/dashboard/widgetTypes\";\r\nimport { connect } from \"react-redux\";\r\nimport { editElement } from \"../../store/altrp-dashboard/actions\";\r\nimport { Button, Collapse } from \"react-bootstrap\";\r\nimport { ArrowUp, ArrowDown } from \"react-bootstrap-icons\";\r\n//settings\r\nimport DatasourceSettings from \"./settings/DatasourceSettings\";\r\nimport AxisBaseSettings from \"./settings/AxisBaseSettings\";\r\nimport StiyleSettings from \"./settings/StyleSettings\";\r\nimport FilterParameters from \"./settings/FilterParameters\";\r\nimport DiagramTypeSettings from \"./settings/DiagramTypeSettings\";\r\nimport LegendSettings from \"./settings/LegendSettings\";\r\nimport TooltipSettings from \"./settings/TooltipSettings\";\r\nimport AnimationSettings from \"./settings/AnimationSettings\";\r\nimport SortData from \"./settings/SortData\";\r\nimport DrawerComponent from \"./DrawerComponent\";\r\n\r\nconst mapStateToProps = state => {\r\n  return { editElement: _.cloneDeep(state.editElement) };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    editElementDispatch: data => dispatch(editElement(data))\r\n  };\r\n}\r\n\r\nclass WidgetSettings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      settings: _.cloneDeep(props.editElement?.settings, {}) || {},\r\n      datasources: props.datasources,\r\n      openDataSettings: false,\r\n      openDiagramSettings: false,\r\n      openTooltipSettings: false,\r\n      openLegendSettings: false,\r\n      openAnimationSettings: false,\r\n      filter_datasource: props.filter_datasource,\r\n      editElement: _.cloneDeep(props.editElement, {}) || {},\r\n      delimer: props.delimer\r\n    };\r\n    this.setDatasource = this.setDatasource.bind(this);\r\n    this.setType = this.setType.bind(this);\r\n    this.setParam = this.setParam.bind(this);\r\n    this.setXAxisScale = this.setXAxisScale.bind(this);\r\n    this.setXAxisTimeScale = this.setXAxisTimeScale.bind(this);\r\n    this.setYAxisScale = this.setYAxisScale.bind(this);\r\n    this.setColorScheme = this.setColorScheme.bind(this);\r\n    this.setTickRotation = this.setTickRotation.bind(this);\r\n    this.generateName = this.generateName.bind(this);\r\n    this.setName = this.setName.bind(this);\r\n    this.setProperty = this.setProperty.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (!_.isEqual(prevProps.datasources, this.props.datasources)) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        datasources: this.props.datasources\r\n      }));\r\n    }\r\n    if (!_.isEqual(prevProps.filter_datasource, this.props.filter_datasource)) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        filter_datasource: this.props.filter_datasource\r\n      }));\r\n    }\r\n    if (!_.isEqual(prevProps.editElement, this.props.editElement)) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        editElement: _.cloneDeep(this.props.editElement),\r\n        settings: _.cloneDeep(this.props.editElement?.settings, {})\r\n      }));\r\n    }\r\n    if (!this.props.addItemPreview) {\r\n      if (\r\n        !_.isEqual(\r\n          prevProps.editElement?.settings?.name,\r\n          this.props.editElement?.settings?.name\r\n        )\r\n      ) {\r\n        this.setState(state => ({\r\n          ...state,\r\n          editElement: _.cloneDeep(this.props.editElement),\r\n          settings: _.cloneDeep(this.props.editElement?.settings, {})\r\n        }));\r\n      }\r\n    }\r\n    if (\r\n      JSON.stringify(prevProps.editElement?.settings?.params) !==\r\n      JSON.stringify(this.props.editElement?.settings?.params)\r\n    ) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        editElement: _.cloneDeep(this.props.editElement),\r\n        settings: _.cloneDeep(this.props.editElement?.settings, {})\r\n      }));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Методы, связанные с открытием/закрытием настроек\r\n   */\r\n  setOpenDataSettings(data) {\r\n    this.setState(state => ({ ...state, openDataSettings: data }));\r\n  }\r\n  setOpenDiagramSettings(data) {\r\n    this.setState(state => ({ ...state, openDiagramSettings: data }));\r\n  }\r\n  setOpenTooltipSettings(data) {\r\n    this.setState(state => ({ ...state, openTooltipSettings: data }));\r\n  }\r\n  setOpenLegendSettings(data) {\r\n    this.setState(state => ({ ...state, openLegendSettings: data }));\r\n  }\r\n  setOpenAnimationSettings(data) {\r\n    this.setState(state => ({ ...state, openAnimationSettings: data }));\r\n  }\r\n\r\n  /**\r\n   * Методы, связанные со сменой параметров с уникальными настройками\r\n   */\r\n  setName(param, options, prevParam) {\r\n    let settings = _.cloneDeep(this.props.editElement?.settings);\r\n    let name = settings?.name;\r\n    if (param.length != 0) {\r\n      let paramName = _.find(options, item => item.value == param).label;\r\n      if (typeof name !== \"undefined\") {\r\n        name = name.split(this.state.delimer);\r\n        let indexPrevValue = -1;\r\n        if (prevParam.length > 0) {\r\n          indexPrevValue = _.findIndex(name, o => o == prevParam);\r\n        }\r\n        if (indexPrevValue !== -1) {\r\n          name[indexPrevValue] = paramName;\r\n        } else {\r\n          name.push(paramName);\r\n        }\r\n        name = _.uniq(name);\r\n        name = name.filter(item => item.length !== 0);\r\n        name = name.join(this.parseHtmlEntities(this.state.delimer));\r\n      } else {\r\n        name = param;\r\n      }\r\n    } else {\r\n      if (typeof name !== \"undefined\") {\r\n        name = name.split(this.state.delimer);\r\n        let indexPrevValue = -1;\r\n        if (prevParam.length > 0) {\r\n          indexPrevValue = _.findIndex(name, o => o == prevParam);\r\n        }\r\n        if (indexPrevValue !== -1) {\r\n          delete name[indexPrevValue];\r\n        }\r\n        name = _.uniq(name);\r\n        name = name.filter(\r\n          item => typeof item !== \"undefined\" && item.length !== 0\r\n        );\r\n        name = name.join(this.parseHtmlEntities(this.state.delimer));\r\n      }\r\n    }\r\n    return name;\r\n  }\r\n  //Смена типа диаграммы\r\n  setType(type) {\r\n    let settings = this.state.settings;\r\n    settings = {\r\n      ...settings,\r\n      type: type\r\n    };\r\n    this.setState(state => ({\r\n      ...state,\r\n      settings: settings\r\n    }));\r\n    if (!this.props.addItemPreview) {\r\n      let element = this.props.editElement;\r\n      element.settings = settings;\r\n      this.props.editElementDispatch(element);\r\n      this.props.editHandler(this.props.editElement.i, settings);\r\n    } else {\r\n      const element = { settings: { ...settings } };\r\n      this.props.editElementDispatch(element);\r\n      this.setState(s => ({\r\n        ...s,\r\n        editElement: { settings: settings }\r\n      }));\r\n    }\r\n  }\r\n\r\n  generateName(datasourceArray) {\r\n    let editElementSettings = _.cloneDeep(this.state.settings);\r\n    let name = editElementSettings?.name;\r\n    const arrayOfDatasourceTitles = datasourceArray.map(\r\n      source => source.title ?? \"\"\r\n    );\r\n    if (name === null || typeof name === \"undefined\" || name.length === 0) {\r\n      name = arrayOfDatasourceTitles.join(this.state.delimer);\r\n    } else {\r\n      if (Array.isArray(name)) {\r\n        arrayOfDatasourceTitles.forEach((nameDatasource, index) => {\r\n          const indexFind = _.findIndex(name, nameDatasource);\r\n          if (indexFind === -1) {\r\n            name[index] = nameDatasource;\r\n          }\r\n        });\r\n        name = name.join(this.state.delimer);\r\n      } else {\r\n        name = name.split(this.state.delimer);\r\n        arrayOfDatasourceTitles.forEach((nameDatasource, index) => {\r\n          const indexFind = _.findIndex(name, nameDatasource);\r\n          if (indexFind === -1) {\r\n            name[index] = nameDatasource;\r\n          }\r\n        });\r\n        name = name.join(this.state.delimer);\r\n      }\r\n    }\r\n    return name;\r\n  }\r\n  //Смена источника данных\r\n  setDatasource(datasourcesArray, changeParams = false) {\r\n    let settings = this.state.settings;\r\n    let name = \"\";\r\n    let sources = [];\r\n    if (datasourcesArray === null) {\r\n      settings = {\r\n        ...settings,\r\n        sources: [],\r\n        params: []\r\n      };\r\n      sources = [];\r\n    } else if (datasourcesArray.length === 0) {\r\n      settings = {\r\n        ...settings,\r\n        sources: [],\r\n        params: []\r\n      };\r\n      sources = [];\r\n    } else {\r\n      name = this.generateName(_.cloneDeep(datasourcesArray));\r\n      settings = {\r\n        ...settings,\r\n        sources: datasourcesArray,\r\n        params: !changeParams\r\n          ? typeof settings?.params !== \"undefined\"\r\n            ? [...settings.params]\r\n            : []\r\n          : [],\r\n        name: name\r\n      };\r\n    }\r\n    this.setState(state => ({\r\n      ...state,\r\n      settings: settings\r\n    }));\r\n    if (!this.props.addItemPreview) {\r\n      let element = this.props.editElement;\r\n      element.settings.sources = sources;\r\n      this.props.editElementDispatch(element);\r\n      this.props.editHandler(this.props.editElement.i, settings);\r\n    } else {\r\n      const element = { settings: { ...settings } };\r\n      this.props.editElementDispatch(element);\r\n      this.setState(s => ({ ...s, editElement: { settings: settings } }));\r\n    }\r\n  }\r\n\r\n  parseHtmlEntities(str) {\r\n    return str.replace(/&#([0-9]{1,3});/gi, function(match, numStr) {\r\n      var num = parseInt(numStr, 10); // read num as normal number\r\n      return String.fromCharCode(num);\r\n    });\r\n  }\r\n  //Смена значения локального параметра\r\n  setParam(left, right, options = [], prevParam = \"\") {\r\n    let settings = this.state.settings;\r\n    let param = { [left]: right };\r\n    if (options.length > 0) {\r\n      settings.name = this.setName(right, options, prevParam);\r\n    }\r\n    let currentParamKey = _.findKey(settings.params, left);\r\n    if (typeof currentParamKey !== \"undefined\") {\r\n      settings.params[currentParamKey] = param;\r\n    } else {\r\n      settings = {\r\n        ...settings,\r\n        params: [...settings.params, param]\r\n      };\r\n    }\r\n    settings.params = settings.params.filter(item => {\r\n      let key = _.keys(item)[0];\r\n      return settings.params[key] !== null;\r\n    });\r\n    this.setState(state => ({\r\n      ...state,\r\n      settings: settings\r\n    }));\r\n    if (!this.props.addItemPreview) {\r\n      let element = this.props.editElement;\r\n      element.settings = settings;\r\n      this.props.editElementDispatch(element);\r\n      this.props.editHandler(this.props.editElement.i, settings);\r\n    } else {\r\n      const element = { settings: { ...settings } };\r\n      this.props.editElementDispatch(element);\r\n      this.setState(s => ({ ...s, editElement: settings }));\r\n    }\r\n  }\r\n  //Базовая настройка для оси X\r\n  setXAxisScale(scale) {\r\n    let settings = {};\r\n    if (scale === \"time\") {\r\n      settings = {\r\n        ...this.state.settings,\r\n        xScale: { type: scale, format: \"%d.%m.%Y\", precision: \"day\" }\r\n      };\r\n    } else {\r\n      settings = {\r\n        ...this.state.settings,\r\n        xScale: { type: scale }\r\n      };\r\n    }\r\n    this.setState(state => ({\r\n      ...state,\r\n      settings: settings\r\n    }));\r\n    if (!this.props.addItemPreview) {\r\n      let element = this.props.editElement;\r\n      element.settings = settings;\r\n      this.props.editElementDispatch(element);\r\n      this.props.editHandler(this.props.editElement.i, settings);\r\n    } else {\r\n      const element = { settings: { ...settings } };\r\n      this.props.editElementDispatch(element);\r\n      this.setState(s => ({ ...s, editElement: settings }));\r\n    }\r\n  }\r\n  //Выбор масштаба времени для оси X\r\n  setXAxisTimeScale(precision) {\r\n    const settings = {\r\n      ...this.state.settings,\r\n      xScale: {\r\n        ...this.state.settings.xScale,\r\n        precision: precision,\r\n        format: \"%d.%m.%Y\"\r\n      }\r\n    };\r\n    this.setState(state => ({\r\n      ...state,\r\n      settings: settings\r\n    }));\r\n    if (!this.props.addItemPreview) {\r\n      let element = this.props.editElement;\r\n      element.settings = settings;\r\n      this.props.editElementDispatch(element);\r\n      this.props.editHandler(this.props.editElement.i, settings);\r\n    } else {\r\n      const element = { settings: { ...settings } };\r\n      this.props.editElementDispatch(element);\r\n      this.setState(s => ({ ...s, editElement: settings }));\r\n    }\r\n  }\r\n  //Базовая настройка для оси Y\r\n  setYAxisScale(scale) {\r\n    const settings = {\r\n      ...this.state.settings,\r\n      yScale: { type: scale }\r\n    };\r\n    this.setState(state => ({\r\n      ...state,\r\n      settings: settings\r\n    }));\r\n    if (!this.props.addItemPreview) {\r\n      let element = this.props.editElement;\r\n      element.settings = settings;\r\n      this.props.editElementDispatch(element);\r\n      this.props.editHandler(this.props.editElement.i, settings);\r\n    } else {\r\n      const element = { settings: { ...settings } };\r\n      this.props.editElementDispatch(element);\r\n      this.setState(s => ({ ...s, editElement: settings }));\r\n    }\r\n  }\r\n  //Смена цветовой схемы\r\n  setColorScheme(colorScheme) {\r\n    let settings = this.state.settings;\r\n    settings = {\r\n      ...this.state.settings,\r\n      colors: { scheme: colorScheme }\r\n    };\r\n    this.setState(state => ({\r\n      ...state,\r\n      settings: settings\r\n    }));\r\n    if (!this.props.addItemPreview) {\r\n      let element = this.props.editElement;\r\n      element.settings = settings;\r\n      this.props.editElementDispatch(element);\r\n      this.props.editHandler(this.props.editElement.i, settings);\r\n    } else {\r\n      const element = { settings: { ...settings } };\r\n      this.props.editElementDispatch(element);\r\n      this.setState(s => ({ ...s, editElement: settings }));\r\n    }\r\n  }\r\n  //Наклон нижней легенды\r\n  setTickRotation(value) {\r\n    const settings = {\r\n      ...this.state.settings,\r\n      axisBottom: {\r\n        ...settings?.axisBottom,\r\n        tickRotation: value\r\n      }\r\n    };\r\n    this.setState(state => ({\r\n      ...state,\r\n      settings: settings\r\n    }));\r\n    if (!this.props.addItemPreview) {\r\n      let element = this.props.editElement;\r\n      element.settings = settings;\r\n      this.props.editElementDispatch(element);\r\n      this.props.editHandler(this.props.editElement.i, settings);\r\n    } else {\r\n      const element = { settings: { ...settings } };\r\n      this.props.editElementDispatch(element);\r\n      this.setState(s => ({ ...s, editElement: settings }));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Смена параметров без уникальных настроек\r\n   */\r\n  setProperty(value, property) {\r\n    const settings = { ...this.state.settings, [property]: value };\r\n    this.setState(state => ({\r\n      ...state,\r\n      settings: settings\r\n    }));\r\n    if (!this.props.addItemPreview) {\r\n      let element = this.props.editElement;\r\n      element.settings = settings;\r\n      this.props.editElementDispatch(element);\r\n      this.props.editHandler(this.props.editElement.i, settings);\r\n    } else {\r\n      const element = { settings: { ...settings } };\r\n      this.props.editElementDispatch(element);\r\n      this.setState(s => ({ ...s, editElement: settings }));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <DrawerComponent\r\n        settings={this.props.settings}\r\n        className={`col ${this.props.widgetID} altrp-dashboard__drawer--font`}\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"mx-auto\">\r\n            <h3 className=\"altrp-dashboard__drawer--font\">Настройка диаграммы</h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Button\r\n            className=\"collapse-button\"\r\n            onClick={() =>\r\n              this.setOpenDataSettings(!this.state.openDataSettings)\r\n            }\r\n            aria-controls=\"Datasource settings\"\r\n            aria-expanded={this.state.openDataSettings}\r\n          >\r\n            <div className=\"collapse-button-content\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--section-font-size altrp-dashboard__drawer--font altrp-dashboard__drawer--font-margin`}\r\n              >\r\n                Базовые настройки\r\n              </div>\r\n              <div>\r\n                {!this.state.openDataSettings ? <ArrowDown /> : <ArrowUp />}\r\n              </div>\r\n            </div>\r\n          </Button>\r\n          <Collapse in={this.state.openDataSettings}>\r\n            <div style={{ width: \"100%\" }}>\r\n              <DiagramTypeSettings\r\n                widgetID={this.props.widgetID}\r\n                setType={this.setType}\r\n              />\r\n              {/*\r\n                Настройки данных - сами источники данных и параметры\r\n              */}\r\n              <DatasourceSettings\r\n                widgetID={this.props.widgetID}\r\n                datasources={this.state.datasources}\r\n                setCardName={this.setCardName}\r\n                setDatasource={this.setDatasource}\r\n              />\r\n              {typeof this.state.filter_datasource !== \"undefined\" &&\r\n                _.keys(this.state.filter_datasource).length > 0 && (\r\n                  <>\r\n                    <div className=\"col mb-3\">\r\n                      <div\r\n                        className={`${this.props.widgetID} altrp-dashboard__drawer--label-font-size`}\r\n                      >\r\n                        Параметры\r\n                      </div>\r\n                    </div>\r\n                    {this.state.filter_datasource.map((param, index) => {\r\n                      return (\r\n                        <FilterParameters\r\n                          widgetID={this.props.widgetID}\r\n                          setParam={this.setParam}\r\n                          key={index}\r\n                          setCardName={this.setCardName}\r\n                          param={param}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </>\r\n                )}\r\n\r\n              {/*\r\n                Настройки осей\r\n              */}\r\n              {(this.props.editElement?.settings?.type === LINE ||\r\n                this.props.editElement?.settings?.type === POINT) && (\r\n                <>\r\n                  <AxisBaseSettings\r\n                    widgetID={this.props.widgetID}\r\n                    setXAxisScale={this.setXAxisScale}\r\n                    setXAxisTimeScale={this.setXAxisTimeScale}\r\n                    setYAxisScale={this.setYAxisScale}\r\n                  />\r\n                </>\r\n              )}\r\n\r\n              <SortData\r\n                widgetID={this.props.widgetID}\r\n                setProperty={this.setProperty}\r\n              />\r\n            </div>\r\n          </Collapse>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Button\r\n            className=\"collapse-button\"\r\n            onClick={() =>\r\n              this.setOpenDiagramSettings(!this.state.openDiagramSettings)\r\n            }\r\n            aria-controls=\"Datasource settings\"\r\n            aria-expanded={this.state.openDiagramSettings}\r\n          >\r\n            <div className=\"collapse-button-content\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--section-font-size altrp-dashboard__drawer--font altrp-dashboard__drawer--font-margin`}\r\n              >\r\n                Настройки стилей\r\n              </div>\r\n              <div>\r\n                {!this.state.openDiagramSettings ? <ArrowDown /> : <ArrowUp />}\r\n              </div>\r\n            </div>\r\n          </Button>\r\n          <Collapse in={this.state.openDiagramSettings}>\r\n            <div>\r\n              <StiyleSettings\r\n                widgetID={this.props.widgetID}\r\n                setProperty={this.setProperty}\r\n                checkboxColor={this.props?.checkboxColor}\r\n                setColorScheme={this.setColorScheme}\r\n                setTickRotation={this.setTickRotation}\r\n              />\r\n            </div>\r\n          </Collapse>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Button\r\n            className=\"collapse-button\"\r\n            onClick={() =>\r\n              this.setOpenTooltipSettings(!this.state.openTooltipSettings)\r\n            }\r\n            aria-controls=\"Datasource settings\"\r\n            aria-expanded={this.state.openTooltipSettings}\r\n          >\r\n            <div className=\"collapse-button-content\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--section-font-size altrp-dashboard__drawer--font altrp-dashboard__drawer--font-margin`}\r\n              >\r\n              Настройки подсказок\r\n              </div>\r\n              <div>\r\n                {!this.state.openTooltipSettings ? <ArrowDown /> : <ArrowUp />}\r\n              </div>\r\n            </div>\r\n          </Button>\r\n          <Collapse in={this.state.openTooltipSettings}>\r\n            <div>\r\n              <TooltipSettings\r\n                widgetID={this.props.widgetID}\r\n                setProperty={this.setProperty}\r\n              />\r\n            </div>\r\n          </Collapse>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Button\r\n            className=\"collapse-button\"\r\n            onClick={() =>\r\n              this.setOpenLegendSettings(!this.state.openLegendSettings)\r\n            }\r\n            aria-controls=\"Datasource settings\"\r\n            aria-expanded={this.state.openLegendSettings}\r\n          >\r\n            <div className=\"collapse-button-content\">\r\n              <div\r\n                className={`${this.props.widgetID} altrp-dashboard__drawer--section-font-size altrp-dashboard__drawer--font altrp-dashboard__drawer--font-margin`}\r\n              >\r\n                Настройки легенды\r\n              </div>\r\n              <div>\r\n                {!this.state.openLegendSettings ? <ArrowDown /> : <ArrowUp />}\r\n              </div>\r\n            </div>\r\n          </Button>\r\n          <Collapse in={this.state.openLegendSettings}>\r\n            <div>\r\n              <LegendSettings\r\n                widgetID={this.props.widgetID}\r\n                setProperty={this.setProperty}\r\n              />\r\n            </div>\r\n          </Collapse>\r\n        </div>\r\n        {(this.state.editElement?.settings?.type === LINE ||\r\n          this.state.editElement?.settings?.type === POINT ||\r\n          this.state.editElement?.settings?.type === BAR) && (\r\n          <div className=\"row\">\r\n            <Button\r\n              className=\"collapse-button\"\r\n              onClick={() =>\r\n                this.setOpenAnimationSettings(!this.state.openAnimationSettings)\r\n              }\r\n              aria-controls=\"Datasource settings\"\r\n              aria-expanded={this.state.openAnimationSettings}\r\n            >\r\n              <div className=\"collapse-button-content\">\r\n                <div\r\n                  className={`${this.props.widgetID} altrp-dashboard__drawer--section-font-size altrp-dashboard__drawer--font altrp-dashboard__drawer--font-margin`}\r\n                >\r\n                  Настройки анимации\r\n                </div>\r\n                <div>\r\n                  {!this.state.openAnimationSettings ? (\r\n                    <ArrowDown />\r\n                  ) : (\r\n                    <ArrowUp />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </Button>\r\n            <Collapse in={this.state.openAnimationSettings}>\r\n              <div>\r\n                <AnimationSettings\r\n                  widgetID={this.props.widgetID}\r\n                  setProperty={this.setProperty}\r\n                />\r\n              </div>\r\n            </Collapse>\r\n          </div>\r\n        )}\r\n        {this.props.addItemPreview ? (\r\n          <div className=\"row justify-content-beetwen mt-3\">\r\n            <div className=\"col\">\r\n              <button\r\n                className={`${this.props.widgetID} altrp-btn-draw`}\r\n                style={{ width: \"100%\" }}\r\n                onClick={e => this.props.onAddItem(this.state.editElement)}\r\n              >\r\n                Сохранить\r\n              </button>\r\n            </div>\r\n            <div className=\"col\">\r\n              <button\r\n                className={`${this.props.widgetID} altrp-btn-draw`}\r\n                style={{ width: \"100%\" }}\r\n                onClick={e => this.props.onCloseHandler(null, false)}\r\n              >\r\n                Отмена\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"row justify-content-beetwen mt-3\">\r\n            <div className=\"col\">\r\n              <button\r\n                className={`${this.props.widgetID} altrp-btn-draw`}\r\n                style={{ width: \"100%\" }}\r\n                onClick={e => this.props.onCloseHandler(null)}\r\n              >\r\n                Сохранить\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </DrawerComponent>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WidgetSettings);\r\n","import React, { Component } from \"react\";\r\n\r\nclass AddItemButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        className={`altrp-btn-draw`}\r\n        style={{\r\n          margin: \"5px 5px 5px 5px\"\r\n        }}\r\n        onClick={this.props.onAddItem}\r\n      >\r\n        Добавить виджет\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddItemButton;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ExportDashboardButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={this.props.className}\r\n        style={{\r\n          display: \"inline-block\"\r\n        }}\r\n      >\r\n        <button\r\n          className={`altrp-btn-draw`}\r\n          style={{\r\n            margin: \"5px 5px 5px 5px\"\r\n          }}\r\n          onClick={this.props.onExport}\r\n        >\r\n          Экспорт диаграмм\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExportDashboardButton;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ImportDashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={this.props.className}\r\n        style={{\r\n          display: \"inline-block\"\r\n        }}\r\n      >\r\n        <button\r\n          className={`altrp-btn-draw`}\r\n          style={{\r\n            margin: \"5px 5px 5px 5px\"\r\n          }}\r\n          onClick={this.props.onImport}\r\n        >\r\n          Импорт диаграмм\r\n        </button>\r\n        <input\r\n          type=\"file\"\r\n          onChange={e => this.props.getFile(e)}\r\n          accept=\"application/json\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImportDashboard;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ImportDiagram extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={this.props.className}\r\n        style={{\r\n          display: \"inline-block\"\r\n        }}\r\n      >\r\n        <button\r\n          style={{\r\n            margin: \"5px 5px 5px 5px\"\r\n          }}\r\n          onClick={this.props.onImport}\r\n        >\r\n          Импорт виджета\r\n        </button>\r\n        <input\r\n          type=\"file\"\r\n          onChange={e => this.props.getFile(e)}\r\n          accept=\"application/json\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImportDiagram;\r\n","import React, { Component } from \"react\";\r\nimport { WidthProvider, Responsive } from \"react-grid-layout\";\r\nimport { connect } from \"react-redux\";\r\nimport { editElement } from \"../../store/altrp-dashboard/actions\";\r\nimport { exportDashboard } from \"../../../../../front-app/src/js/store/altrp-dashboard-export/actions\";\r\nimport axios from \"axios\";\r\nimport { createPortal } from \"react-dom\";\r\nimport Drawer from \"rc-drawer\";\r\n\r\nimport \"react-grid-layout/css/styles.css\";\r\nimport \"react-resizable/css/styles.css\";\r\n\r\nimport WidgetData from \"./WidgetData\";\r\nimport WidgetPreview from \"./WidgetPreview\";\r\nimport WidgetSettings from \"./WidgetSettings\";\r\nimport AddItemButton from \"./settings/AddItemButton\";\r\nimport ExportDashboardButton from \"./settings/ExportDashboardButton\";\r\nimport ImportDashboard from \"./settings/ImportDashboard\";\r\nimport ImportDiagram from \"./settings/ImportDiagram\";\r\nimport {isEditor} from \"../../../../../front-app/src/js/helpers\";\r\n\r\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    editElement: _.cloneDeep(state.editElement),\r\n    dashboardExport: _.cloneDeep(state.exportDashboard)\r\n  };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    editElementDispatch: data => dispatch(editElement(data)),\r\n    exportDashboardDispatch: data => dispatch(exportDashboard(data))\r\n  };\r\n}\r\n\r\nclass DataSourceDashboards extends Component {\r\n  static defaultProps = {\r\n    className: \"layout\",\r\n    cols: { lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 },\r\n    rowHeight: 60,\r\n    onLayoutChange: function() {}\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: props.id,\r\n      items: props.items || [],\r\n      newCounter: props.counter || 1,\r\n      repeater: _.cloneDeep(props.rep, []),\r\n      settingsOpen: false,\r\n      addItemPreview: false,\r\n      settings: props.settings,\r\n      drawer: null,\r\n      datasources: null,\r\n      delimer: props.delimer,\r\n      importData: [],\r\n      importWidget: [],\r\n      parentDrawer: document.body\r\n    };\r\n\r\n    this.export = this.export.bind(this);\r\n    this.import = this.import.bind(this);\r\n    this.getFile = this.getFile.bind(this);\r\n    this.exportCard = this.exportCard.bind(this);\r\n    this.importDiagram = this.importDiagram.bind(this);\r\n    this.getWidgetFile = this.getWidgetFile.bind(this);\r\n    this.onAddItem = this.onAddItem.bind(this);\r\n    this.onAddItemCard = this.onAddItemCard.bind(this);\r\n    this.onBreakpointChange = this.onBreakpointChange.bind(this);\r\n    this.onEditItem = this.onEditItem.bind(this);\r\n    this.onResizeHandler = this.onResizeHandler.bind(this);\r\n    this.onResizeHandlerStop = this.onResizeHandlerStop.bind(this);\r\n    this.saveWidgetData = this.saveWidgetData.bind(this);\r\n    this.onRemoveItem = this.onRemoveItem.bind(this);\r\n    this.setEditItem = this.setEditItem.bind(this);\r\n    this.openSettings = this.openSettings.bind(this);\r\n    this.setCardName = this.setCardName.bind(this);\r\n    this.onDragStop = this.onDragStop.bind(this);\r\n    this.copyWidget = this.copyWidget.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(isEditor()) {\r\n      this.setState((state) => ({\r\n        ...state,\r\n        parentDrawer: document.getElementById(\"editorContent\").contentWindow.document.body\r\n      }))\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (!_.isEqual(prevProps.items, this.props.items)) {\r\n      this.setState(state => {\r\n        return { ...state, items: this.props.items };\r\n      });\r\n    }\r\n    if (!_.isEqual(prevProps.counter, this.props.counter)) {\r\n      this.setState(state => {\r\n        return { ...state, newCounter: this.props.counter };\r\n      });\r\n    }\r\n    if (!_.isEqual(prevState.items, this.state.items)) {\r\n      this.saveWidgetData(this.state);\r\n      this.setState(state => {\r\n        return { ...state, items: this.state.items };\r\n      });\r\n    }\r\n    const drawer = document.querySelector(\".drawer\");\r\n    if (!_.isEqual(this.state.drawer, drawer)) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        drawer: drawer\r\n      }));\r\n    }\r\n  }\r\n\r\n  saveWidgetData(data = this.state) {\r\n    const { id, items, newCounter } = data;\r\n    const settings = {\r\n      items: items,\r\n      newCounter: newCounter\r\n    };\r\n    try {\r\n      const req = axios\r\n        .post(\r\n          `/ajax/dashboards/datasource/${id}/settings`,\r\n          {\r\n            settings: settings\r\n          },\r\n          {\r\n            headers: {\r\n              \"X-CSRF-TOKEN\": document\r\n                .querySelector('meta[name=\"csrf-token\"]')\r\n                .getAttribute(\"content\")\r\n            }\r\n          }\r\n        )\r\n        .then(res => {\r\n          console.log(res.data);\r\n        });\r\n    } catch (e) {\r\n      console.log(\"ERROR ==>\", e);\r\n    }\r\n  }\r\n\r\n  putLayoutToLocalStorage(layout) {}\r\n\r\n  setEditItem(item) {\r\n    let items = this.state.items;\r\n    _.replace(items, { i: item.i }, item);\r\n    let index = _.findKey(items, { i: item.i });\r\n    this.setState(state => {\r\n      state.items[index] = item;\r\n      return { ...state, items: items };\r\n    });\r\n  }\r\n\r\n  setCardName(name, el) {\r\n    const { items } = this.state;\r\n    let widget = _.find(items, { i: el.i });\r\n    widget.settings.name = name;\r\n    const index = _.findKey(items, { i: el.i });\r\n    this.setState(state => {\r\n      state.items[index] = widget;\r\n      return { ...state, items: items };\r\n    });\r\n    this.saveWidgetData(this.state);\r\n  }\r\n\r\n  openSettings(el = null, addItemPreviewBool = null) {\r\n    const element = _.cloneDeep(el);\r\n    this.setState(state => {\r\n      if (el === null) {\r\n        state.drawer = null;\r\n      }\r\n      this.props.editElementDispatch(element);\r\n      state.editElement = element;\r\n      if (addItemPreviewBool !== null) {\r\n        return {\r\n          ...state,\r\n          settingsOpen: !state.settingsOpen,\r\n          addItemPreview: addItemPreviewBool\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        settingsOpen: !state.settingsOpen\r\n      };\r\n    });\r\n  }\r\n\r\n  onEditItem(key, settings) {\r\n    const { items } = this.state;\r\n    let widget = _.find(items, { i: key });\r\n    widget.settings = settings;\r\n    widget.edit = false;\r\n    this.props.editElementDispatch(widget);\r\n    _.replace(items, { i: key }, widget);\r\n    let index = _.findKey(items, { i: key });\r\n    this.setState(state => {\r\n      state.items[index] = widget;\r\n      this.saveWidgetData(state);\r\n      return { ...state, items: items };\r\n    });\r\n  }\r\n\r\n  onAddItem() {\r\n    this.setState(s => ({ ...s, addItemPreview: true }));\r\n    this.openSettings();\r\n  }\r\n\r\n  onAddItemCard(element) {\r\n    if (_.keys(element).length > 0) {\r\n      this.setState(state => {\r\n        if (!Array.isArray(state.items)) {\r\n          state.items = Object.values(state.items);\r\n        }\r\n        let items = state.items.concat(\r\n          this.itemSettingsAdd(state, element.settings)\r\n        );\r\n        return {\r\n          ...state,\r\n          items: items,\r\n          newCounter: state.newCounter + 1,\r\n          addItemPreview: false,\r\n          settingsOpen: false\r\n        };\r\n      });\r\n      return;\r\n    }\r\n    alert(\"Информация не заполнена\");\r\n  }\r\n\r\n  itemSettingsAdd(state, settings) {\r\n    return {\r\n      i: typeof state.items !== \"undefined\" ? \"n\" + state.newCounter : \"n\" + 0,\r\n      x:\r\n        typeof state.items !== \"undefined\"\r\n          ? (state.items.length * 3) % (state.cols || 12)\r\n          : (0 * 3) % (state.cols || 12),\r\n      y: Infinity,\r\n      w: 3,\r\n      h: 5,\r\n      settings: settings\r\n    };\r\n  }\r\n\r\n  onResizeHandler(layout, oldItem, newItem, placeholder) {\r\n    const newLayoutsSettings =\r\n      typeof newItem === \"object\" ? [newItem] : newItem;\r\n    newLayoutsSettings.forEach(item => {\r\n      const { i, x, y, w, h } = item;\r\n      let widget = _.find(this.state.items, { i: i });\r\n      widget = {\r\n        ...widget,\r\n        x: x,\r\n        y: y,\r\n        w: w,\r\n        h: h,\r\n        settings: { ...widget.settings }\r\n      };\r\n      let index = _.findKey(this.state.items, { i: i });\r\n      this.setState(state => {\r\n        state.items[index] = widget;\r\n        return { ...state, items: state.items };\r\n      });\r\n    });\r\n  }\r\n\r\n  onResizeHandlerStop(layout, oldItem, newItem, placeholder) {\r\n    const { i, x, y, w, h } = newItem;\r\n    let item = _.find(this.state.items, { i: i });\r\n    const itemKey = _.findKey(this.state.items, { i: i });\r\n    item = {\r\n      ...item,\r\n      x: x,\r\n      y: y,\r\n      w: w,\r\n      h: h\r\n    };\r\n    this.setState(s => ({ ...s, items: { ...s.items, [itemKey]: item } }));\r\n    this.saveWidgetData(this.state);\r\n  }\r\n\r\n  onBreakpointChange(breakpoint, cols) {\r\n    this.setState({\r\n      breakpoint: breakpoint,\r\n      cols: cols\r\n    });\r\n  }\r\n\r\n  onLayoutChange(layout) {\r\n    this.props.onLayoutChange(layout);\r\n  }\r\n\r\n  onDragStop(layout, oldItem, newItem, placeholder, event, element) {\r\n    const { i, x, y, w, h } = newItem;\r\n    let item = _.find(this.state.items, { i: i });\r\n    const itemKey = _.findKey(this.state.items, { i: i });\r\n    item = {\r\n      ...item,\r\n      x: x,\r\n      y: y,\r\n      w: w,\r\n      h: h\r\n    };\r\n    this.setState(s => ({ ...s, items: { ...s.items, [itemKey]: item } }));\r\n    this.saveWidgetData(this.state);\r\n  }\r\n\r\n  onRemoveItem(i) {\r\n    this.state.items = _.reject(this.state.items, { i: i });\r\n    this.setState({ items: this.state.items });\r\n    this.saveWidgetData(this.state);\r\n  }\r\n\r\n  export() {\r\n    const settings = {\r\n      newCounter: _.cloneDeep(this.state.newCounter),\r\n      items: _.cloneDeep(this.state.items)\r\n    };\r\n    const dataStr =\r\n      \"data:text/json;charset=utf-8,\" +\r\n      encodeURIComponent(JSON.stringify(settings));\r\n    let link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", dataStr);\r\n    link.setAttribute(\"download\", `${this.state.id}.json`);\r\n    link.click();\r\n  }\r\n\r\n  exportCard(el) {\r\n    const element = el.settings;\r\n    const dataStr =\r\n      \"data:text/json;charset=utf-8,\" +\r\n      encodeURIComponent(JSON.stringify(element));\r\n    let link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", dataStr);\r\n    link.setAttribute(\"download\", `${el.settings.name}.json`);\r\n    link.click();\r\n  }\r\n\r\n  import() {\r\n    const file = this.state.importData;\r\n    const id = this.state.id;\r\n\r\n    if (_.keys(file).length <= 0) {\r\n      alert(\"Выберите файл\");\r\n      return;\r\n    }\r\n    try {\r\n      const req = axios\r\n        .post(\r\n          `/ajax/dashboards/datasource/${id}/settings`,\r\n          {\r\n            settings: file\r\n          },\r\n          {\r\n            headers: {\r\n              \"X-CSRF-TOKEN\": document\r\n                .querySelector('meta[name=\"csrf-token\"]')\r\n                .getAttribute(\"content\")\r\n            }\r\n          }\r\n        )\r\n        .then(res => {\r\n          try {\r\n            const settings = JSON?.parse(res.data.settings);\r\n            const { items, newCounter } = settings;\r\n            this.setState(s => ({\r\n              ...s,\r\n              items: items,\r\n              newCounter: newCounter\r\n            }));\r\n          } catch (error) {}\r\n        });\r\n    } catch (e) {\r\n      console.log(\"ERROR ==>\", e);\r\n    }\r\n  }\r\n\r\n  importDiagram() {\r\n    const widget = { settings: this.state.importWidget };\r\n    if (_.keys(widget.settings).length <= 0) {\r\n      alert(\"Выберите файл\");\r\n      return;\r\n    }\r\n    try {\r\n      this.onAddItemCard(widget);\r\n      this.setState(s => ({ importWidget: [] }));\r\n    } catch (e) {\r\n      console.log(\"ERROR ==>\", e);\r\n    }\r\n  }\r\n\r\n  getFile(e) {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\r\n    fileReader.onload = e => {\r\n      const file = JSON.parse(e.target.result);\r\n      this.setState(s => ({ ...s, importData: file }));\r\n    };\r\n  }\r\n\r\n  getWidgetFile(e) {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\r\n    fileReader.onload = e => {\r\n      const file = JSON.parse(e.target.result);\r\n      this.setState(s => ({ ...s, importWidget: file }));\r\n    };\r\n  }\r\n\r\n  copyWidget(widget) {\r\n    this.onAddItemCard(widget);\r\n  }\r\n\r\n  createElement(el, key) {\r\n    el.y = el.y == null ? Infinity : el.y;\r\n    return (\r\n      <div key={el.i} data-grid={el}>\r\n        <WidgetData\r\n          editElement={_.cloneDeep(el, {})}\r\n          settings={el.settings}\r\n          openSettingsHandler={this.openSettings}\r\n          setEditItem={this.setEditItem}\r\n          onRemoveItem={this.onRemoveItem}\r\n          saveWidget={this.saveWidgetData}\r\n          copyWidget={this.copyWidget}\r\n          exportCard={this.exportCard}\r\n          widgetID={this.state.id}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.showButton && (\r\n          <>\r\n            <AddItemButton onAddItem={this.onAddItem} />\r\n          </>\r\n        )}\r\n        {this.props.showExportButton && (\r\n          <ExportDashboardButton\r\n            className=\"altrp-dashboars__export-dashboard-button\"\r\n            onExport={this.export}\r\n          />\r\n        )}\r\n        <ImportDashboard\r\n          className=\"altrp-dashboars__import-dashboard-button\"\r\n          onImport={this.import}\r\n          getFile={this.getFile}\r\n        />\r\n        <ImportDiagram\r\n          className=\"altrp-dashboars__import-diagram-button\"\r\n          onImport={this.importDiagram}\r\n          getFile={this.getWidgetFile}\r\n        />\r\n        <ResponsiveReactGridLayout\r\n          draggableCancel=\".altrp-dashboards__cancle-drag\"\r\n          onLayoutChange={this.onLayoutChange}\r\n          onResizeStart={this.onResizeHandler}\r\n          onResizeStop={this.onResizeHandlerStop}\r\n          autoSize={true}\r\n          onDrop={this.onDrop}\r\n          onDragStop={this.onDragStop}\r\n          onBreakpointChange={this.onBreakpointChange}\r\n          {...this.props}\r\n        >\r\n          {_.map(this.state.items, (el, key) => this.createElement(el, key))}\r\n        </ResponsiveReactGridLayout>\r\n        {\r\n          createPortal(\r\n            <Drawer\r\n              getContainer={null}\r\n              placement=\"right\"\r\n              defaultOpen={true}\r\n              width={this.props.drawerWidth}\r\n              open={this.state.settingsOpen}\r\n              onClose={this.openSettings}\r\n              handler={false}\r\n            >\r\n              {this.state.settingsOpen && (\r\n                <WidgetSettings\r\n                  widgetID={this.state.id}\r\n                  settings={this.props.settings}\r\n                  addItemPreview={this.state.addItemPreview}\r\n                  filter_datasource={this.state.settings.filter_datasource}\r\n                  datasources={this.props.rep}\r\n                  editHandler={this.onEditItem}\r\n                  checkboxColor={this.state.settings?.checkboxColor}\r\n                  onCloseHandler={this.openSettings}\r\n                  onAddItem={this.onAddItemCard}\r\n                  setCardName={this.setCardName}\r\n                  delimer={this.state.delimer}\r\n                />\r\n              )}\r\n            </Drawer>,\r\n            this.state.parentDrawer\r\n          )\r\n        }\r\n        {this.state.drawer != null &&\r\n          ReactDOM.createPortal(\r\n            <WidgetPreview\r\n              width={this.props.drawerWidth}\r\n              widgetID={this.state.id}\r\n              addItemPreview={this.state.addItemPreview}\r\n              setCardName={this.setCardName}\r\n            />,\r\n            this.state.drawer\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps, null, {\r\n  forwardRef: true\r\n})(DataSourceDashboards);\r\n"],"sourceRoot":""}