{"version":3,"sources":["webpack:///./resources/modules/admin/src/components/dashboard/widgets/d3/Tooltip.js","webpack:///./resources/modules/admin/src/components/dashboard/widgets/d3/TooltipBar.js","webpack:///./resources/modules/admin/src/components/dashboard/widgets/d3/TooltipPie.js","webpack:///./resources/modules/admin/src/components/dashboard/widgets/d3/TooltipScatter.js"],"names":["Tooltip","props","state","enablebar","datum","enable","point","data","settings","keyIsDate","console","log","containerSettings","bind","prevProps","prevState","_","isEqual","this","setState","s","settenableings","padding","top","right","bottom","left","borderStyle","borderRadius","borderColor","borderWidth","backgroundColor","color","width","flexDirection","className","widgetID","style","undefined","tooltip","whiteSpace","display","alignItems","height","background","marginRight","xFormatted","x","y","map","item","index","React","Fragment","key","label","value","yFormatted","fontSize","boxShadow","PureComponent","TooltipBar","indexValue","customTooltip","TooltipPie","TooltipScatter","node","formattedX","formattedY"],"mappings":"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","file":"3395.editor.js","sourcesContent":["import { PureComponent } from \"react\";\r\n// import { Component } from \"react\";\r\n\r\n/**\r\n * Tooltip для Line и Scatter\r\n */\r\nclass Tooltip extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      enablebar: props.datum.enable,\r\n      enable: props.enable,\r\n      point: props.datum.point,\r\n      data: props.datum.point.data,\r\n      settings: props?.settings,\r\n      keyIsDate: props?.keyIsDate\r\n    };\r\n    console.log(\"====================================\");\r\n    console.log(this.state.data);\r\n    console.log(\"====================================\");\r\n    this.containerSettings = this.containerSettings.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (!_.isEqual(prevProps.datum.point, this.props.datum.point)) {\r\n      this.setState(s => ({\r\n        ...s,\r\n        point: this.props.datum.point,\r\n        data: this.props.datum.point.data\r\n      }));\r\n    }\r\n    if (!_.isEqual(prevProps.settings, this.props.settings)) {\r\n      this.setState(s => ({\r\n        ...s,\r\n        settings: this.props?.settings\r\n      }));\r\n    }\r\n    if (!_.isEqual(prevProps.enable, this.props.enable)) {\r\n      this.setState(s => ({\r\n        ...s,\r\n        settenableings: this.props?.enable\r\n      }));\r\n    }\r\n  }\r\n\r\n  containerSettings() {\r\n    const settings = this.state?.settings || {};\r\n    console.log(\"====================================\");\r\n    console.log(settings);\r\n    console.log(\"====================================\");\r\n    const result = {\r\n      padding: `${settings?.padding?.top || 5}px ${settings?.padding?.right ||\r\n        5}px ${settings?.padding?.bottom || 5}px ${settings?.padding?.left ||\r\n        5}px`,\r\n      borderStyle: `${settings?.borderStyle || \"solid\"}`,\r\n      borderRadius: `${settings?.borderRadius || \"4px\"}`,\r\n      borderColor: `${settings?.borderColor || \"black\"}`,\r\n      borderWidth: `${settings?.borderWidth || \"1px\"}`,\r\n      backgroundColor: `${settings?.backgroundColor || \"red\"}`,\r\n      color: \"white\",\r\n      width: \"fit-content\",\r\n      flexDirection: \"column-reverse\"\r\n    };\r\n    return result;\r\n  }\r\n\r\n  render() {\r\n    if (this.state.enable) {\r\n      return (\r\n        <>\r\n          <div\r\n            className={`${this.props.widgetID} altrp-dashboard__tooltip--label-background altrp-dashboard__tooltip--width altrp-dashboard__tooltip--label-background-shadow altrp-dashboard__tooltip--border-type altrp-dashboard__tooltip--border-width altrp-dashboard__tooltip--border-color col-12`}\r\n            style={{ padding: \"5px 9px\" }}\r\n          >\r\n            <div>\r\n            {this.state.data?.tooltip === undefined &&\r\n              <div style={{\r\n                whiteSpace: \"pre\",\r\n                display: \"flex\",\r\n                alignItems: \"center\"\r\n              }}>\r\n                <span\r\n                  style={{\r\n                    display: \"block\",\r\n                    width: \"12px\",\r\n                    height: \"12px\",\r\n                    background: this.state.point.color,\r\n                    marginRight: \"7px\"\r\n                  }}\r\n                >\r\n                </span>\r\n                <div\r\n                  className={`${this.props.widgetID} altrp-dashboard__tooltip--font col px-0`}\r\n                >\r\n                  {this.props.keyIsDate\r\n                  ? this.state.data.xFormatted\r\n                  : this.state.data.x}\r\n                  :\r\n                  <strong\r\n                    className={`${this.props.widgetID} altrp-dashboard__tooltip--font col px-0`}\r\n                  >\r\n                    {this.state.data.y}\r\n                  </strong>\r\n                </div>\r\n              </div>\r\n              }\r\n              {this.state.data?.tooltip?.map((item, index) => {\r\n                return (\r\n                  <React.Fragment>\r\n                    <div\r\n                      style={{\r\n                        color: item?.color || \"#000000\"\r\n                      }}\r\n                      key={index}\r\n                    >\r\n                      {`${item?.label}:`}\r\n                      <strong>{item.value}</strong>\r\n                    </div>\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n    //Дефолтный тултип\r\n    const { xFormatted, yFormatted } = this.state.data;\r\n    return (\r\n      <>\r\n        <div\r\n          style={{\r\n            background: \"white\",\r\n            color: \"inherit\",\r\n            fontSize: \"{{SIZE}}px\",\r\n            borderRadius: \"2px\",\r\n            boxShadow: \"rgba(0, 0, 0, 0.25) 0px 1px 2px\",\r\n            padding: \"5px 9px\"\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              whiteSpace: \"pre\",\r\n              display: \"flex\",\r\n              alignItems: \"center\"\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                display: \"block\",\r\n                width: \"12px\",\r\n                height: \"12px\",\r\n                background: this.state.point.color,\r\n                marginRight: \"7px\"\r\n              }}\r\n            ></span>\r\n            <span>\r\n              {xFormatted}: <strong>{yFormatted}</strong>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tooltip;\r\n","import React, { PureComponent } from \"react\";\r\n\r\nclass TooltipBar extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      indexValue: props.datum?.indexValue,\r\n      value: props.datum?.value,\r\n      color: props.datum?.color,\r\n      enable: props?.enable,\r\n      settings: props?.settings\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (!_.isEqual(prevProps.enable, this.props.enable)) {\r\n      this.setState(s => ({\r\n        ...s,\r\n        enable: this.props?.enable\r\n      }));\r\n    }\r\n  }\r\n\r\n  customTooltip() {\r\n    return (\r\n      <>\r\n        <div\r\n          className={`${this.props.widgetID} altrp-dashboard__tooltip--font altrp-dashboard__tooltip--label-background altrp-dashboard__tooltip--width altrp-dashboard__tooltip--label-background-shadow altrp-dashboard__tooltip--border-type altrp-dashboard__tooltip--border-width altrp-dashboard__tooltip--border-color  col-12`}\r\n          style={{ padding: \"5px 9px\" }}\r\n        >\r\n          <div>\r\n            {this.props.datum?.data?.tooltip === undefined &&\r\n            <div style={\r\n              {\r\n                whiteSpace: \"pre\",\r\n                display: \"flex\",\r\n                alignItems: \"center\"\r\n              }\r\n            }>\r\n              <span\r\n                style={{\r\n                  display: \"block\",\r\n                  width: \"12px\",\r\n                  height: \"12px\",\r\n                  background: this.props.datum.color,\r\n                  marginRight: \"7px\"\r\n                }}\r\n              >  \r\n              </span>\r\n              <div className={`${this.props.widgetID} col px-0`}>\r\n                  {this.props.datum.data.key}:{\" \"}\r\n                  <strong\r\n                    className={`${this.props.widgetID} altrp-dashboard__tooltip--font col px-0`}\r\n                  >\r\n                    {this.props.datum.data.value}\r\n                  </strong>\r\n                </div>\r\n              </div>\r\n            }\r\n            {this.props.datum?.data?.tooltip?.map((item, index) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    color: item?.color || \"#000000\"\r\n                  }}\r\n                  key={index}\r\n                >\r\n                  {`${item?.label}:`}\r\n                  <strong>{item.value}</strong>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this.state.enable) {\r\n      return this.customTooltip();\r\n    }\r\n    return (\r\n      <>\r\n        <div\r\n          style={{\r\n            color: \"inherit\",\r\n            fontSize: \"{{SIZE}}px\",\r\n            borderRadius: \"2px\",   \r\n            padding: \"3px 9px\"\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              whiteSpace: \"pre\",\r\n              display: \"flex\",\r\n              alignItems: \"center\"\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                display: \"block\",\r\n                width: \"12px\",\r\n                height: \"12px\",\r\n                background: this.props.datum.color,\r\n                marginRight: \"7px\"\r\n              }}\r\n            ></span>\r\n            <span>\r\n              {this.props.datum.data.key}:{\" \"}\r\n              <strong>{this.props.datum.data.value}</strong>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TooltipBar;\r\n","import React, { PureComponent } from \"react\";\r\n\r\nclass TooltipPie extends PureComponent {\r\n  constructor(props) {\r\n    console.log(props.datum);\r\n    super(props);\r\n\r\n    this.state = {\r\n      indexValue: props.datum?.indexValue,\r\n      value: props.datum?.value,\r\n      color: props.datum?.color,\r\n      enable: props?.enable,\r\n      settings: props?.settings\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (!_.isEqual(prevProps.enable, this.props.enable)) {\r\n      this.setState(s => ({\r\n        ...s,\r\n        enable: this.props?.enable\r\n      }));\r\n    }\r\n  }\r\n\r\n  customTooltip() {\r\n    return (\r\n      <>\r\n        <div\r\n          className={`${this.props.widgetID} altrp-dashboard__tooltip--font altrp-dashboard__tooltip--label-background altrp-dashboard__tooltip--width altrp-dashboard__tooltip--label-background-shadow altrp-dashboard__tooltip--border-type altrp-dashboard__tooltip--border-width altrp-dashboard__tooltip--border-color col-12`}\r\n          style={{ padding: \"5px 9px\" }}\r\n        >\r\n          <div>\r\n            {this.props.datum?.datum?.data?.tooltip === undefined &&\r\n              <div style={\r\n              {\r\n                whiteSpace: \"pre\",\r\n                display: \"flex\",\r\n                alignItems: \"center\"\r\n              }\r\n            }>\r\n                <span\r\n                style={{\r\n                  display: \"block\",\r\n                  width: \"12px\",\r\n                  height: \"12px\",\r\n                  background: this.props.datum.datum.color,\r\n                  marginRight: \"7px\"\r\n                }}\r\n                ></span>\r\n                <div\r\n                  className={`${this.props.widgetID} altrp-dashboard__tooltip--font col px-0`}\r\n                >\r\n                  {this.props.datum.datum.label}:{\" \"}\r\n                  <strong\r\n                    className={`${this.props.widgetID} altrp-dashboard__tooltip--font col px-0`}\r\n                  >\r\n                    {this.props.datum.datum.value}\r\n                  </strong>\r\n                </div>\r\n              </div>\r\n            }\r\n            {this.props.datum?.datum?.data?.tooltip?.map((item, index) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    color: item?.color || \"#000000\"\r\n                  }}\r\n                  key={index}\r\n                >\r\n                  {`${item?.label}:`}\r\n                  <strong>{item.value}</strong>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this.state.enable) {\r\n      return this.customTooltip();\r\n    }\r\n    return (\r\n      <>\r\n        <div\r\n          style={{\r\n            background: \"white\",\r\n            color: \"inherit\",\r\n            fontSize: \"{{SIZE}}px\",\r\n            borderRadius: \"2px\",\r\n            boxShadow: \"rgba(0, 0, 0, 0.25) 0px 1px 2px\",\r\n            padding: \"5px 9px\"\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              whiteSpace: \"pre\",\r\n              display: \"flex\",\r\n              alignItems: \"center\"\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                display: \"block\",\r\n                width: \"12px\",\r\n                height: \"12px\",\r\n                background: this.props.datum.datum.color,\r\n                marginRight: \"7px\"\r\n              }}\r\n            ></span>\r\n            <span>\r\n              {this.props.datum.datum.label}:{\" \"}\r\n              <strong>{this.props.datum.datum.value}</strong>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TooltipPie;\r\n","import React, { PureComponent } from \"react\";\r\n\r\nclass TooltipScatter extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      indexValue: props.datum?.indexValue,\r\n      value: props.datum?.value,\r\n      color: props.datum?.color,\r\n      enable: props?.enable,\r\n      settings: props?.settings,\r\n      data: props.datum?.node?.data\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (!_.isEqual(prevProps.enable, this.props.enable)) {\r\n      this.setState(s => ({\r\n        ...s,\r\n        enable: this.props?.enable\r\n      }));\r\n    }\r\n  }\r\n\r\n  customTooltip() {\r\n    return (\r\n      <>\r\n        <div\r\n          className={`${this.props.widgetID} altrp-dashboard__tooltip--label-background altrp-dashboard__tooltip--width altrp-dashboard__tooltip--label-background-shadow altrp-dashboard__tooltip--border-type altrp-dashboard__tooltip--border-width altrp-dashboard__tooltip--border-color col-12`}\r\n          style={{ padding: \"5px 9px\" }}\r\n        >\r\n          <div>\r\n          {this.props.datum.node.data?.tooltip === undefined &&\r\n            <div\r\n              className={`${this.props.widgetID} altrp-dashboard__tooltip--font col px-0`}\r\n              style={{\r\n                whiteSpace: \"pre\",\r\n                display: \"flex\",\r\n                alignItems: \"center\"\r\n              }}\r\n            >\r\n              <span\r\n                style={{\r\n                  display: \"block\",\r\n                  width: \"12px\",\r\n                  height: \"12px\",\r\n                  background: this.props.datum.node.style.color,\r\n                  marginRight: \"7px\"\r\n                }}\r\n              ></span>\r\n              {this.props.datum.node.data.formattedX}:{\" \"}\r\n              <strong\r\n                className={`${this.props.widgetID} altrp-dashboard__tooltip--font col px-0`}\r\n              >\r\n                {this.props.datum.node.data.formattedY}\r\n              </strong>\r\n            </div>\r\n            }\r\n            {this.props.datum.node.data?.tooltip?.map((item, index) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    color: item?.color || \"#000000\"\r\n                  }}\r\n                  key={index}\r\n                >\r\n                  {`${item?.label}:`}\r\n                  <strong>{item.value}</strong>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this.state.enable) {\r\n      return this.customTooltip();\r\n    }\r\n    return (\r\n      <>\r\n        <div\r\n          style={{\r\n            background: \"white\",\r\n            color: \"inherit\",\r\n            fontSize: \"{{SIZE}}px\",\r\n            borderRadius: \"2px\",\r\n            boxShadow: \"rgba(0, 0, 0, 0.25) 0px 1px 2px\",\r\n            padding: \"5px 9px\"\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              whiteSpace: \"pre\",\r\n              display: \"flex\",\r\n              alignItems: \"center\"\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                display: \"block\",\r\n                width: \"12px\",\r\n                height: \"12px\",\r\n                background: this.props.datum.node.style.color,\r\n                marginRight: \"7px\"\r\n              }}\r\n            ></span>\r\n            <span>\r\n              {this.props.datum.node.data.formattedX}:{\" \"}\r\n              <strong>{this.props.datum.node.data.formattedY}</strong>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TooltipScatter;\r\n"],"sourceRoot":""}