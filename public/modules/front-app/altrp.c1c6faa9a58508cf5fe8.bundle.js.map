{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/classes/AltrpModel.js","webpack:///./resources/modules/editor/src/js/classes/Query.js","webpack:///./resources/modules/editor/src/js/classes/AltrpModelUpdater.js","webpack:///./resources/modules/editor/src/js/classes/modules/ModelsManager.js","webpack:///./resources/modules/editor/src/js/components/altrp-query-component/altrp-query-component.js","webpack:///./resources/modules/editor/src/js/components/Styles.js","webpack:///./resources/modules/editor/src/js/renders/email/rootElementEmailRender.js","webpack:///./resources/modules/editor/src/js/renders/email/sectionElementEmailRender.js","webpack:///./resources/modules/editor/src/js/renders/email/buttonElementEmailRender.js","webpack:///./resources/modules/editor/src/js/renders/email/columnElementEmailRender.js","webpack:///./resources/modules/editor/src/js/renders/email/headingElementEmailRender.js","webpack:///./resources/modules/editor/src/js/renders/email/textElementEmailRender.js","webpack:///./resources/modules/editor/src/js/renders/email/imageElementEmailRender.js","webpack:///./resources/modules/editor/src/js/components/altrp-table/components/EmailTableComponent.js","webpack:///./resources/modules/editor/src/js/renders/email/tableElementEmailRender.js","webpack:///./resources/modules/front-app/src/js/libs/altrp.js","webpack:///./resources/modules/editor/src/js/decorators/base-email-render.js"],"names":["AltrpModel","data","this","cloneDeep","clone","isEmpty","name","defaultValue","get","has","value","getData","set","unset","window","Query","component","modelName","dataSource","type","dataSourceName","pageSize","paginationType","orderingField","order","route","sql_name","context","_","props","currentModel","setProperty","currentDataStorage","setDefaultParams","parseParamsFromString","defaultParams","Resource","modelData","isArray","params","modelUpdater","console","log","modelManager","model_name","getModelId","getResource","getQueried","getParams","lastQuery","res","hasMore","assign","getDefaultParams","page","counterStart","parseInt","modelId","error","subscribers","resource","updating","callback","push","callSubscribers","updateData","forEach","subscriber","isFunction","updateModelData","filter","_s","extend","modelsStorage","altrpModel","AltrpModelUpdater","model","subscribeToUpdates","unsubscribe","updateWithData","_status","_error","_latestData","_data","useQuerySettings","forceFetchOnMount","refetchOnWindowFocus","children","query","settings","updateToken","defaultSortSettings","tables_columns","column","column_is_default_sorted","order_by","accessor","useState","setPage","sortSetting","setSortSettings","filterSetting","setFilterSettings","fetchModels","useCallback","key","groupBy","choose_datasource","queryData","filterSettingJSON","JSON","stringify","altrpUdateToken","length","filters","usePaginatedQuery","status","resolvedData","latestData","useEffect","queryCache","useQuery","isObject","React","setAltrpIndex","finalData","childrenProps","map","child","Styles","state","elementStyles","fonts","stylesContainer","createRef","stylesModule","stylesModuleResolve","prevProps","prevState","isEditor","Set","toPairs","altrpFonts","add","toArray","isEqual","setState","elementId","styles","elementFound","needUpdate","elementStyle","element","index","splice","uniqBy","className","id","ref","rel","href","altrp","version","renderFontLink","Component","reactRedux","connect","rootElementEmailRender","rootElementTag","elementProps","border","cellPadding","cellSpacing","width","style","margin","padding","fontFamily","ElementWrapper","childrenComponents","section","getId","componentClass","baseRender","createElement","sectionElementEmailRender","sectionElementTag","getSettings","paddingLeft","paddingRight","paddingTop","paddingBottom","backgroundColor","columns","buttonElementEmailRender","text","getContent","buttonStyles","fontSize","lineHeight","letterSpacing","fontWeight","color","borderColor","borderRadius","boxShadow","backgroundPosition","backgroundAttachment","backgroundRepeat","display","textDecoration","marginTop","top","unit","marginRight","right","marginBottom","bottom","marginLeft","left","colorPickedHex","isWithGradient","backgroundImage","slice","prepareURLForEmail","url","backgroundSize","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderStyle","borderRadiusTop","borderRadiusRight","borderRadiusBottom","borderRadiusLeft","offsetX","horizontal","offsetY","vertical","blurRadius","blur","spreadRadius","spread","decoration","family","size","spacing","fontStyle","weight","textTransform","transform","location","origin","buttonProps","dangerouslySetInnerHTML","__html","wrapperStyles","textAlign","justifyContent","wrapperProps","columnElementEmailRender","columnElementTag","layout_column_width","headingElementEmailRender","headingStyles","opacity","function","headingProps","headingTag","textElementEmailRender","textContent","CKEditor","changeText","readOnly","textWidget","imageElementEmailRender","media","content_media","objectFit","position","height","alignContent","hasCardModel","getCardModel","content_path","getDataByPath","File","assetType","isString","imageProps","src","wrapperTag","EmailTableComponent","table_style_table_border_type","tableStyles","borderCollapse","defaultCellStyle","table_table_header_alignment","verticalAlign","headCellStyle","column_header_alignment","table_style_header_border_type","columnProps","column_width","column_name","row","idx","cellContent","column_link","cellStyles","column_body_alignment","table_table_body_alignment","column_cell_vertical_alignment","cell_vertical_alignment","table_style_body_border_type","cellProps","Array","from","tableElementEmailRender","getProperty","path","replace","table_query","showTable","widgetId","getFromModel","replaceApp","document","getElementById","appElement","remove","removeAttribute","removeEventListener","altrpHelpers","baseEmailRender","getName","bind","Cookies","StylesComponent","Area","loadVIPlugin","$","bvi","addEventListener","setCurrentScreen","CONSTANTS","default","e","currentScreen","appStore","getState","changedScreen","SCREENS","find","screen","fullMediaQuery","matchMedia","matches","dispatch"],"mappings":"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","file":"altrp.c1c6faa9a58508cf5fe8.bundle.js","sourcesContent":["/**\r\n * Имеет интерфейс для доступы к свойствам data (любой вложенности)\r\n * @class AltrpModel\r\n */\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport get from 'lodash.get';\r\nimport set from 'lodash.set';\r\nimport has from 'lodash.has';\r\nimport unset from 'lodash.unset';\r\nimport isEmpty from 'lodash.isempty';\r\n// import {cloneDeep, get, set, has, unset, isString, isEmpty} from \"lodash\";\r\n\r\nclass AltrpModel {\r\n  constructor(data = {}) {\r\n    this.data = cloneDeep(data);\r\n  }\r\n\r\n  /**\r\n   * Возваращает объект данных\r\n   * @params {boolean} clone - клонировать или ссылку на данные\r\n   * @return {{}}\r\n   */\r\n  getData(clone = true) {\r\n    if(clone){\r\n      return cloneDeep(this.data);\r\n    }\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Пустой ли объект\r\n   */\r\n  isEmpty(){\r\n    return isEmpty(this.data);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  getProperty(name, defaultValue = '') {\r\n    return get(this.data, name, defaultValue);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  hasProperty(name, defaultValue = '') {\r\n    return has(this.data, name);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {{}}\r\n   */\r\n  setProperty(name, value = '') {\r\n    if(value instanceof AltrpModel){\r\n      value = value.getData(false);\r\n    }\r\n    return set(this.data, name, value);\r\n  }\r\n  /**\r\n   * Удаляет свойства name\r\n   * @params {string} name\r\n   * @return {*}\r\n   */\r\n  unsetProperty(name) {\r\n    return unset(this.data, name);\r\n  }\r\n}\r\nwindow.AltrpModel = AltrpModel;\r\nexport default AltrpModel\r\n","import Resource from \"./Resource\";\r\nimport modelManager from \"../../../../editor/src/js/classes/modules/ModelsManager\";\r\nimport {parseParamsFromString} from \"../../../../front-app/src/js/helpers\";\r\n\r\nclass Query {\r\n\r\n  constructor(data, component){\r\n    this.component = component;\r\n    this.modelName = data.modelName || '';\r\n    this.dataSource = data.dataSource;\r\n    if(data.dataSource && data.dataSource.type === 'model_query'){\r\n      this.dataSourceName = data.dataSource.value || '';\r\n    }\r\n    this.pageSize = data.pageSize || 10;\r\n    this.paginationType = data.paginationType || 'pages';\r\n    this.orderingField = data.orderingField || 'name';\r\n    this.order = data.order || 'ASC';\r\n    this.route = `/ajax/models/${this.modelName || (data.dataSource ? data.dataSource.value : '')}`;\r\n    if(data.dataSource && data.dataSource.type === 'sql_datasource'){\r\n      this.route = data.dataSource.value;\r\n      this.dataSourceName = data.dataSource.sql_name || '';\r\n    }\r\n    /**\r\n     * @member {AltrpModel} context\r\n     */\r\n    let context = _.cloneDeep(component.props.currentModel);\r\n    context.setProperty('altrpdata', component.props.currentDataStorage.getData());\r\n    this.setDefaultParams(parseParamsFromString(data.defaultParams, context));\r\n  }\r\n  /**\r\n   *\r\n   * @return {Resource}\r\n   */\r\n  getResource(){\r\n    return new Resource({route: this.route});\r\n  }\r\n\r\n\r\n  /**\r\n   * Поулчить данные с модели, которая хранится в компоненте\r\n   * @param {{}} modelData\r\n   * @return {array}\r\n   */\r\n  getFromModel(modelData){\r\n    if(! modelData){\r\n      return [];\r\n    }\r\n    if(_.isArray(modelData[this.dataSource.value])){\r\n      return [...modelData[this.dataSource.value]];\r\n    } else {\r\n      return [{...modelData[this.dataSource.value]}]\r\n    }\r\n  }\r\n  /**\r\n   * Делает запрос с параметрами\r\n   * @param params\r\n   * @return {Promise}\r\n   */\r\n  async getQueried(params){\r\n    if(this.dataSource && (this.dataSource.type === 'has_many_relation')){\r\n      if(!this.modelUpdater){\r\n        this.modelUpdater = modelManager.subscribeToModelUpdates(this.dataSource.model_name, this.component.getModelId(), this.component);\r\n      } else {\r\n        console.log(this.modelUpdater);\r\n      }\r\n    } else {\r\n      this.lastQuery = (await this.getResource().getQueried(this.getParams(params)));\r\n      let res;\r\n      if(_.isArray(this.lastQuery)){\r\n        res = [...this.lastQuery];\r\n      } else if(_.isArray(this.lastQuery.data)){\r\n        res = this.lastQuery.data;\r\n      }\r\n      res.hasMore = this.lastQuery.hasMore;\r\n      return res;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Проверка есть ли еще\r\n   */\r\n  hasMore(){\r\n    if(! this.lastQuery){\r\n      return false;\r\n    }\r\n    return this.lastQuery.hasMore;\r\n  }\r\n\r\n  /**\r\n   * Задать параметры по умолчанию\r\n   * @params {{}} defaultParams\r\n   */\r\n  setDefaultParams(defaultParams = {}){\r\n    this.defaultParams = defaultParams;\r\n  }\r\n\r\n  /**\r\n   * Вернуть значения по умолчанию\r\n   * @return {{}}\r\n   */\r\n  getDefaultParams(){\r\n    this.defaultParams = this.defaultParams || {};\r\n    this.defaultParams.pageSize = this.pageSize;\r\n    return this.defaultParams;\r\n  }\r\n\r\n  /**\r\n   * Сливает параметры с параметрами по умолчанию\r\n   * @param {object} params\r\n   * @return {object}\r\n   */\r\n  getParams(params) {\r\n    params = {..._.assign(_.cloneDeep(this.getDefaultParams()), params)};\r\n    params.page = params.page || 1;\r\n    if(_.has(params, 'pageSize') && (params.pageSize <= 0)){\r\n      delete params.pageSize;\r\n      delete params.page;\r\n    }\r\n    return params;\r\n  }\r\n\r\n  /**\r\n   * Получить стартовое значение для счетчика, если нужно показать номер по порядку в таблице\r\n   * @param {int} page\r\n   */\r\n  getCounterStart(page){\r\n    let counterStart = 1;\r\n    if(this.pageSize < 1){\r\n      return counterStart;\r\n    }\r\n    page = parseInt(page) || 1;\r\n    counterStart = this.pageSize * (page - 1) + 1;\r\n    return counterStart;\r\n  }\r\n}\r\n\r\nexport default Query","/**\r\n * @class AltrpModelUpdater\r\n */\r\nimport Resource from \"./Resource\";\r\n\r\nclass AltrpModelUpdater {\r\n  /**\r\n   *\r\n   * @param {string} modelName\r\n   * @param {int} modelId\r\n   */\r\n  constructor(modelName, modelId){\r\n    this.modelName = modelName;\r\n    if(! modelId){\r\n      console.error('ид модели не указан!');\r\n    }\r\n    this.modelId = modelId;\r\n    this.data = null;\r\n    this.subscribers = [];\r\n    this.resource = new Resource({route: `/ajax/models/${this.modelName}`});\r\n    this.updating = false;\r\n  }\r\n\r\n  /**\r\n   * Подписывает функцию на обновления\r\n   * @param {function} callback\r\n   */\r\n  subscribeToUpdates(callback){\r\n    this.subscribers.push(callback);\r\n    if(this.updating){\r\n      return;\r\n    }\r\n    if(this.data) {\r\n      this.callSubscribers();\r\n    }\r\n    this.updateData();\r\n    // } else {\r\n    // }\r\n  }\r\n\r\n  /**\r\n   * Обновляет модель с сервера\r\n   */\r\n  async updateData(){\r\n    this.updating = true;\r\n    this.data = await this.resource.get(this.modelId);\r\n    this.updating = false;\r\n    this.callSubscribers();\r\n  }\r\n\r\n  /**\r\n   * Передать данные всем подписчикам\r\n   */\r\n  callSubscribers(){\r\n    this.subscribers.forEach(subscriber=>{\r\n      if(_.isFunction(subscriber.updateModelData)){\r\n        subscriber.updateModelData(this.getData());\r\n      }\r\n      if(_.isFunction(subscriber)){\r\n        subscriber(this.getData());\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Отписаться (отписываемся перед удалением компонента)\r\n   * @param callback\r\n   */\r\n  unsubscribe(subscriber){\r\n    this.subscribers = this.subscribers.filter(_s=>(_s !== subscriber))\r\n  }\r\n  //\r\n  // unsubscribe(callback){\r\n  //   this.subscribers = _.remove(this.subscribers, (idx, item)=>{\r\n  //     console.log(item);\r\n  //     return callback === item;\r\n  //   })\r\n  // }\r\n\r\n  /**\r\n   * Получить данные модели\r\n   * @return {object | null}\r\n   */\r\n  getData(){\r\n    return this.data;\r\n  }\r\n  /**\r\n   * Обновить модель данными\r\n   * @param {{}} data\r\n   * @return void\r\n   */\r\n  updateWithData(data){\r\n    this.data = _.extend( this.data,{...data});\r\n    this.callSubscribers();\r\n  }\r\n}\r\n\r\n\r\nexport default AltrpModelUpdater","import AltrpModelUpdater from \"../AltrpModelUpdater\";\r\n\r\nclass ModelsManager {\r\n  constructor(){\r\n    this.modelsStorage = {};\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  updateModel(modelName, modelId){\r\n    if(! this.modelsStorage[`${modelName}::${modelId}`]) {\r\n      this.modelsStorage[`${modelName}::${modelId}`].updateData();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {AltrpModelUpdater} altrpModel\r\n   */\r\n  addModel(altrpModel){\r\n\r\n  }\r\n\r\n  /**\r\n   * @param {string} modelName\r\n   * @param {int} modelId\r\n   * @return {AltrpModelUpdater}\r\n   */\r\n  getModel(modelName, modelId){\r\n\r\n  }\r\n\r\n  /**\r\n   * Подписывается на изменения модели\r\n   * @param {string} modelName\r\n   * @param {int} modelId\r\n   * @param {function} callback\r\n   * @return {AltrpModelUpdater | null}\r\n   */\r\n  subscribeToModelUpdates(modelName, modelId, callback){\r\n    if(! modelId){\r\n      return null;\r\n    }\r\n    /**\r\n     * model\r\n     * @type {AltrpModelUpdater}\r\n     */\r\n    let model;\r\n    if(! this.modelsStorage[`${modelName}::${modelId}`]){\r\n      this.modelsStorage[`${modelName}::${modelId}`] = new AltrpModelUpdater(modelName, modelId);\r\n    }\r\n    model = this.modelsStorage[`${modelName}::${modelId}`];\r\n    model.subscribeToUpdates(callback);\r\n    return model;\r\n  }\r\n  /**\r\n   * удаляем подписчика\r\n   * @param {string} modelName\r\n   * @param {int} modelId\r\n   * @param {function} callback\r\n   * @return {AltrpModelUpdater | null}\r\n   */\r\n  unsubscribe(modelName, modelId, callback){\r\n    if(! modelId){\r\n      return null;\r\n    }\r\n    /**\r\n     * model\r\n     * @type {AltrpModelUpdater}\r\n     */\r\n    let model;\r\n    if(! this.modelsStorage[`${modelName}::${modelId}`]){\r\n      return\r\n    }\r\n    model = this.modelsStorage[`${modelName}::${modelId}`];\r\n    model.unsubscribe(callback);\r\n    return model;\r\n  }\r\n\r\n  /**\r\n   * Обновить названию и ИД модель данными\r\n   * @param {string} modelName\r\n   * @param {int} modelId\r\n   * @param {{}} data\r\n   * @return void\r\n   */\r\n  updateModelWithData(modelName, modelId, data){\r\n    if(! this.modelsStorage[`${modelName}::${modelId}`]) {\r\n      return;\r\n    }\r\n    this.modelsStorage[`${modelName}::${modelId}`].updateWithData(data);\r\n  }\r\n}\r\nconst modelManager =  new ModelsManager();\r\nexport default modelManager;","import React, {useState, useCallback, useEffect} from \"react\";\r\nimport Query from \"../../classes/Query\";\r\nimport {useQuery, usePaginatedQuery, queryCache} from  \"react-query\";\r\nimport {setAltrpIndex} from \"../../../../../front-app/src/js/helpers\";\r\n\r\n/**\r\n * Компонент для получения данных при помощи запросов\r\n * @param {{\r\n *  children: array,\r\n *  data: array,\r\n *  query: {Query}\r\n * }} props\r\n * @return {React.Component}\r\n * @constructor\r\n */\r\nconst AltrpQueryComponent = (props)=>{\r\n  let _data = [], _status, _error, _latestData;\r\n\r\n  const useQuerySettings = {\r\n    forceFetchOnMount: true,\r\n    refetchOnWindowFocus: true,\r\n  };\r\n\r\n  let {children = [], query, data, settings, updateToken} = props;\r\n  /**\r\n   * проверим есть ли настройки для сортировок по умолчанию\r\n   */\r\n  const defaultSortSettings =  {};\r\n  settings.tables_columns && settings.tables_columns.forEach(column => {\r\n    if(column.column_is_default_sorted && ! defaultSortSettings.order_by){\r\n      defaultSortSettings.order_by = column.accessor;\r\n      defaultSortSettings.order = _.get(column, 'column_is_default_sorted_direction', 'ASC')\r\n    }\r\n  });\r\n  const [page, setPage] = useState(1);\r\n\r\n  const [sortSetting, setSortSettings] = useState(defaultSortSettings);\r\n  const [filterSetting, setFilterSettings] = useState({});\r\n  const fetchModels = useCallback(async (key, page = 1, sortSetting, filterSetting, params, updateToken, groupBy) => {\r\n    if(settings.choose_datasource === 'datasource'){\r\n      return data;\r\n    }\r\n    let queryData = {page};\r\n    const filterSettingJSON = JSON.stringify(filterSetting);\r\n    if(sortSetting){\r\n      queryData = _.assign(sortSetting, queryData);\r\n    }\r\n    if(updateToken){\r\n      queryData.altrpUdateToken = updateToken;\r\n    }\r\n    if(groupBy){\r\n      queryData.order = 'ASC';\r\n      queryData.order_by = groupBy;\r\n    }\r\n    if(filterSettingJSON.length > 2){\r\n      queryData.filters = filterSettingJSON;\r\n    }\r\n    return await query.getQueried(queryData)\r\n  });\r\n\r\n  if(query.pageSize){\r\n    /**\r\n     * Если есть пагинация\r\n     */\r\n    const {\r\n      status,\r\n      resolvedData,\r\n      latestData,\r\n      error,\r\n    } = usePaginatedQuery([query.dataSourceName, page, sortSetting, filterSetting, query.getParams(), updateToken],\r\n        fetchModels,\r\n        useQuerySettings);\r\n    _data = resolvedData ? resolvedData : _data;\r\n    _status = status;\r\n    _error = error;\r\n    _latestData = latestData;\r\n    useEffect(() => {\r\n      if (latestData?.hasMore) {\r\n        queryCache.prefetchQuery([query.dataSourceName, page + 1], fetchModels);\r\n      }\r\n    }, [latestData, fetchModels, page, sortSetting, filterSetting, updateToken]);\r\n  }else {\r\n    /**\r\n     * Если нет пагинации\r\n     */\r\n    const {status, data, error,} = useQuery([query.dataSourceName,query.getParams(), updateToken],\r\n      (updateToken) => {\r\n        return query.getResource().getQueried({...sortSetting,filters: filterSettingJSON, groupBy})\r\n      }, useQuerySettings);\r\n    _data = data;\r\n    _status = status;\r\n    _error = error;\r\n  }\r\n  if(_.isObject(_data) && ! _.isArray(_data)){\r\n    _data = [_data];\r\n  }\r\n  if(! _data.length){\r\n    _data = data;\r\n  }\r\n\r\n  if(! _.isArray(children)){\r\n    children = [children];\r\n  }\r\n\r\n  if(_.isEmpty(data)){\r\n    data = _data\r\n  }\r\n  React.useEffect(()=>{\r\n    setAltrpIndex(data)\r\n  }, [data]);\r\n  let finalData = React.useMemo(()=>{\r\n    if(! _.isArray(data)){\r\n      if(_.isObject(data)){\r\n        return [data]\r\n      }\r\n      return [];\r\n    }\r\n    return data;\r\n  }, [data]);\r\n  const childrenProps = {...props,\r\n    data: finalData,\r\n    _status,\r\n    setFilterSettings,\r\n    setSortSettings,\r\n    filterSetting,\r\n    sortSetting,\r\n    _latestData,\r\n    setPage,\r\n    page,\r\n    _error};\r\n  return children.map(child => React.cloneElement(child, {...childrenProps, key:child.key}));\r\n\r\n};\r\n\r\nexport default AltrpQueryComponent","import { isEditor, renderFontLink } from \"../../../../front-app/src/js/helpers\";\r\n\r\nclass Styles extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      elementStyles: this.props.elementStyles || [],\r\n      fonts: []\r\n    };\r\n    this.stylesContainer = React.createRef();\r\n    window.stylesModule = this;\r\n    window.stylesModuleResolve(this);\r\n  }\r\n\r\n  /**\r\n   * шрифты для загрузки в iframe редактора\r\n   * @param {{}} prevProps\r\n   * @param {{}} prevState\r\n   */\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (!isEditor()) {\r\n      return;\r\n    }\r\n    let fonts = new Set();\r\n    const fontsPairs = _.toPairs(this.props.altrpFonts.getData());\r\n    fontsPairs.forEach(([key, value]) => {\r\n      fonts.add(value);\r\n    });\r\n    fonts = _.toArray(fonts);\r\n    if (_.isEqual(fonts, this.state.fonts)) {\r\n      return;\r\n    }\r\n    this.setState(state => ({ ...state, fonts }));\r\n  }\r\n\r\n  /**\r\n   * @param {string} elementId\r\n   * @param {string} styles\r\n   * */\r\n  addElementStyles(elementId, styles) {\r\n    if (elementId == \"_wla0hknmd\") {\r\n      console.log(\"====================================\");\r\n      console.log(styles);\r\n      console.log(\"====================================\");\r\n    }\r\n    if (!styles) {\r\n      return;\r\n    }\r\n    let elementFound = false;\r\n    let elementStyles = this.state.elementStyles;\r\n    let needUpdate = false;\r\n    elementStyles.forEach(elementStyle => {\r\n      if (elementStyle.elementId === elementId) {\r\n        elementFound = true;\r\n        // console.error(elementStyle.styles === styles);\r\n        if (elementStyle.styles !== styles) {\r\n          elementStyle.styles = styles;\r\n          needUpdate = true;\r\n        } else {\r\n          // console.log(styles);\r\n        }\r\n      }\r\n    });\r\n    if (!elementFound) {\r\n      needUpdate = true;\r\n      elementStyles.push({\r\n        elementId,\r\n        styles\r\n      });\r\n    }\r\n    if (!needUpdate) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      ...this.state,\r\n      elementStyles\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {string} elementId\r\n   * */\r\n  removeStyleById(elementId) {\r\n    let elementStyles = [...this.state.elementStyles];\r\n\r\n    elementStyles.map((element, index) => {\r\n      if (element.elementId === elementId) {\r\n        elementStyles.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      elementStyles: elementStyles,\r\n      fonts: []\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let elementStyles = _.uniqBy(this.state.elementStyles, \"elementId\");\r\n    return (\r\n      <div\r\n        className=\"styles-container\"\r\n        id=\"styles-container\"\r\n        ref={this.stylesContainer}\r\n      >\r\n        {!isEditor() ? (\r\n          <link\r\n            rel=\"stylesheet\"\r\n            href={\"/modules/front-app/front-app.css?\" + altrp.version}\r\n          />\r\n        ) : null}\r\n        {elementStyles.map(elementStyle => {\r\n          return (\r\n            <style\r\n              data-styles-id={elementStyle.elementId}\r\n              id={`altrp-styles${elementStyle.elementId}`}\r\n              className={`altrp-styles${elementStyle.elementId}`}\r\n              key={elementStyle.elementId}\r\n            >\r\n              {elementStyle.styles}\r\n            </style>\r\n          );\r\n        })}\r\n        {isEditor() ? this.state.fonts.map(renderFontLink) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  if (!isEditor()) {\r\n    return {};\r\n  }\r\n  return {\r\n    altrpFonts: state.altrpFonts\r\n  };\r\n}\r\nexport default window.reactRedux.connect(mapStateToProps)(Styles);\r\n","import {isEditor} from \"../../../../../front-app/src/js/helpers\";\r\n\r\n/**\r\n * Возвращает шаблон корневого элемента для письма\r\n * @return {React.DetailedReactHTMLElement<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> | React.DetailedReactHTMLElement<React.HTMLAttributes<T>, HTMLElement> | React.ReactSVGElement | React.DOMElement<React.DOMAttributes<T>, Element> | React.FunctionComponentElement<{}> | React.CElement<{}, React.ClassicComponent<{}, React.ComponentState>> | React.CElement<{}, React.Component<P, React.ComponentState>> | React.ReactElement<{}>}\r\n */\r\nexport default function rootElementEmailRender() {\r\n  let rootElementTag;\r\n  rootElementTag = 'table';\r\n  const elementProps = {\r\n    border: \"0\",\r\n    cellPadding: \"0\",\r\n    cellSpacing: \"0\",\r\n    width: \"100%\",\r\n    style: {\r\n      margin: 0,\r\n      padding: 0,\r\n      width: \"100%\",\r\n      fontFamily: 'Arial, sans-serif'\r\n    },\r\n  };\r\n  if (isEditor()) {\r\n    rootElementTag = 'div';\r\n    elementProps.className = 'sections-wrapper';\r\n  }\r\n  let ElementWrapper = this.props.ElementWrapper || window.ElementWrapper;\r\n  let childrenComponents = this.props.children.map(section => (\r\n      <ElementWrapper\r\n          ElementWrapper={ElementWrapper}\r\n          key={section.getId()}\r\n          component={section.componentClass}\r\n          baseRender={this.props.baseRender}\r\n          element={section}\r\n      />\r\n  ));\r\n  if (!isEditor()) {\r\n    childrenComponents = <tbody>{childrenComponents}</tbody>;\r\n  }\r\n  return React.createElement(rootElementTag, elementProps, childrenComponents);\r\n\r\n}\r\n","import {isEditor} from \"../../../../../front-app/src/js/helpers\";\r\n\r\n/**\r\n * Возвращает шаблон секции для письма\r\n * @return {React.DetailedReactHTMLElement<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> | React.DetailedReactHTMLElement<React.HTMLAttributes<T>, HTMLElement> | React.ReactSVGElement | React.DOMElement<React.DOMAttributes<T>, Element> | React.FunctionComponentElement<{}> | React.CElement<{}, React.ClassicComponent<{}, React.ComponentState>> | React.CElement<{}, React.Component<P, React.ComponentState>> | React.ReactElement<{}>}\r\n */\r\nexport default function sectionElementEmailRender(){\r\n  const settings = this.props.element.getSettings();\r\n\r\n  let sectionElementTag;\r\n  sectionElementTag = 'tr';\r\n  const elementProps = {\r\n    style: {\r\n      paddingLeft: _.get(settings, 'position_style_position_padding.left', '10') + _.get(settings, 'position_style_position_padding.unit', 'px'),\r\n      paddingRight: _.get(settings, 'position_style_position_padding.right', '10') + _.get(settings, 'position_style_position_padding.unit', 'px'),\r\n      paddingTop: _.get(settings, 'position_style_position_padding.top', '10') + _.get(settings, 'position_style_position_padding.unit', 'px'),\r\n      paddingBottom: _.get(settings, 'position_style_position_padding.bottom', '10') + _.get(settings, 'position_style_position_padding.unit', 'px'),\r\n      backgroundColor: _.get(settings, 'section_style_background_color.colorPickedHex', ''),\r\n    },\r\n  };\r\n  if(isEditor()){\r\n    sectionElementTag = 'div';\r\n    elementProps.className = 'altrp-section';\r\n  }\r\n  let ElementWrapper = this.props.ElementWrapper || window.ElementWrapper;\r\n  let columns = this.state.children.map(column => {\r\n        let columnContent = <ElementWrapper\r\n            ElementWrapper={ElementWrapper}\r\n            key={column.getId()}\r\n            component={column.componentClass}\r\n            baseRender={this.props.baseRender}\r\n            element={column}\r\n        />;\r\n        return columnContent;\r\n      }\r\n\r\n  );\r\n  if(! isEditor()){\r\n    columns =\r\n        <td style={elementProps.style}><table width=\"100%\"><tbody><tr>{columns}</tr></tbody></table></td>;\r\n  }\r\n  return React.createElement(sectionElementTag, elementProps, columns);\r\n}","import {isEditor, parseURLTemplate, prepareURLForEmail} from \"../../../../../front-app/src/js/helpers\";\r\n\r\n/**\r\n * Возвращает шаблон колонки для письма\r\n * @return {React.DetailedReactHTMLElement<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> | React.DetailedReactHTMLElement<React.HTMLAttributes<T>, HTMLElement> | React.ReactSVGElement | React.DOMElement<React.DOMAttributes<T>, Element> | React.FunctionComponentElement<{}> | React.CElement<{}, React.ClassicComponent<{}, React.ComponentState>> | React.CElement<{}, React.Component<P, React.ComponentState>> | React.ReactElement<{}>}\r\n */\r\nexport default function buttonElementEmailRender(){\r\n\r\n  const settings = this.props.element.getSettings();\r\n  const text = this.getContent('button_text') || '';\r\n  const buttonStyles = {\r\n    paddingTop: '20px',\r\n    paddingRight: '25px',\r\n    paddingBottom: '20px',\r\n    paddingLeft: '25px',\r\n    fontSize: '16px',\r\n    fontFamily: \"Open Sans\",\r\n    lineHeight: '1',\r\n    letterSpacing: '0',\r\n    fontWeight: 'normal',\r\n    color: 'white',\r\n    borderColor: '#32a852',\r\n    borderRadius: '6px',\r\n    boxShadow: '0 0 0 0 black',\r\n    backgroundColor: '#343b4c',\r\n    backgroundPosition: 'top left',\r\n    backgroundAttachment: 'scroll',\r\n    backgroundRepeat: 'repeat',\r\n    width: 'auto',\r\n    display: 'inline-block',\r\n    textDecoration: 'none'\r\n  };\r\n\r\n  if(settings['position_margin']) {\r\n    buttonStyles.marginTop = settings['position_margin'].top ? (settings['position_margin'].top + settings['position_margin'].unit) : buttonStyles.marginTop;\r\n    buttonStyles.marginRight = settings['position_margin'].right ? (settings['position_margin'].right + settings['position_margin'].unit) : buttonStyles.marginRight;\r\n    buttonStyles.marginBottom = settings['position_margin'].bottom ? (settings['position_margin'].bottom + settings['position_margin'].unit) : buttonStyles.marginBottom;\r\n    buttonStyles.marginLeft = settings['position_margin'].left ? (settings['position_margin'].left + settings['position_margin'].unit) : buttonStyles.marginLeft ;\r\n  }\r\n\r\n  if(settings['position_padding']) {\r\n    buttonStyles.paddingTop = settings['position_padding'].top ? (settings['position_padding'].top + settings['position_padding'].unit) : buttonStyles.paddingTop;\r\n    buttonStyles.paddingRight = settings['position_padding'].right ? (settings['position_padding'].right + settings['position_padding'].unit) : buttonStyles.paddingRight;\r\n    buttonStyles.paddingBottom = settings['position_padding'].bottom ? (settings['position_padding'].bottom + settings['position_padding'].unit) : buttonStyles.paddingBottom;\r\n    buttonStyles.paddingLeft = settings['position_padding'].left ? (settings['position_padding'].left + settings['position_padding'].unit) : buttonStyles.paddingLeft;\r\n  }\r\n\r\n  if(settings['background_color']) {\r\n    buttonStyles.backgroundColor = settings['background_color'].colorPickedHex;\r\n  }\r\n\r\n  if(settings['gradient'] && settings['gradient'].isWithGradient) {\r\n    buttonStyles.backgroundImage = settings['gradient'].value.slice(0, -1);\r\n  }\r\n\r\n  if(_.get(settings, 'background_image.url')) {\r\n    buttonStyles.backgroundImage = `url(${prepareURLForEmail(settings['background_image'].url)})`;\r\n  }\r\n\r\n  if(settings['background_position']) {\r\n    buttonStyles.backgroundPosition = settings['background_position'];\r\n  }\r\n\r\n  if(settings['background_attachment']) {\r\n    buttonStyles.backgroundAttachment = settings['background_attachment'];\r\n  }\r\n\r\n  if(settings['background_repeat']) {\r\n    buttonStyles.backgroundRepeat = settings['background_repeat'];\r\n  }\r\n\r\n  if(settings['background_size']) {\r\n    buttonStyles.backgroundSize = settings['background_size'];\r\n  }\r\n\r\n  if(settings['border_type'] && settings['border_type'] !== \"none\") {\r\n    buttonStyles.borderTopWidth = settings['border_width'].top + settings['border_width'].unit;\r\n    buttonStyles.borderRightWidth = settings['border_width'].right + settings['border_width'].unit;\r\n    buttonStyles.borderBottomWidth = settings['border_width'].bottom + settings['border_width'].unit;\r\n    buttonStyles.borderLeftWidth = settings['border_width'].left + settings['border_width'].unit;\r\n    buttonStyles.borderStyle = settings['border_type'];\r\n    if(settings['border_color'] && settings['border_color'].colorPickedHex)\r\n      buttonStyles.borderColor = settings['border_color'].colorPickedHex;\r\n  }\r\n\r\n  if(settings['border_radius'].top || settings['border_radius'].right || settings['border_radius'].bottom || settings['border_radius'].left) {\r\n    let borderRadiusTop = (settings['border_radius'].top ? settings['border_radius'].top : \"0\") + settings['border_radius'].unit;\r\n    let borderRadiusRight = (settings['border_radius'].right ? settings['border_radius'].right : \"0\") + settings['border_radius'].unit;\r\n    let borderRadiusBottom = (settings['border_radius'].bottom ? settings['border_radius'].bottom : \"0\") + settings['border_radius'].unit;\r\n    let borderRadiusLeft = (settings['border_radius'].left ?  settings['border_radius'].left  : \"0\")+ settings['border_radius'].unit;\r\n    buttonStyles.borderRadius = `${borderRadiusTop} ${borderRadiusRight} ${borderRadiusBottom} ${borderRadiusLeft}`;\r\n  }\r\n\r\n  if(settings['style_background_shadow']) {\r\n    let type = settings['style_background_shadow'].type;\r\n    let offsetX = settings['style_background_shadow'].horizontal;\r\n    let offsetY = settings['style_background_shadow'].vertical;\r\n    let blurRadius = settings['style_background_shadow'].blur;\r\n    let spreadRadius = settings['style_background_shadow'].spread;\r\n    let color = settings['style_background_shadow'].colorPickedHex;\r\n    buttonStyles.boxShadow = `${type} ${offsetX}px ${offsetY}px ${blurRadius}px ${spreadRadius} ${color}`;\r\n  }\r\n\r\n  if(settings['font_typographic']) {\r\n    buttonStyles.textDecoration = settings['font_typographic'].decoration || buttonStyles.textDecoration;\r\n    buttonStyles.fontFamily = settings['font_typographic'].family || buttonStyles.fontFamily;\r\n    buttonStyles.lineHeight = settings['font_typographic'].lineHeight || buttonStyles.lineHeight;\r\n    buttonStyles.fontSize = settings['font_typographic'].size ? (settings['font_typographic'].size + 'px') : buttonStyles.fontSize;\r\n    buttonStyles.letterSpacing = settings['font_typographic'].spacing + 'px' || buttonStyles.letterSpacing;\r\n    buttonStyles.fontStyle = settings['font_typographic'].style || buttonStyles.style;\r\n    buttonStyles.fontWeight = settings['font_typographic'].weight || buttonStyles.fontWeight;\r\n    buttonStyles.textTransform = settings['font_typographic'].transform || buttonStyles.textTransform;\r\n  }\r\n\r\n  if(settings['font_color']) {\r\n    buttonStyles.color = settings['font_color'].colorPickedHex;\r\n  }\r\n  let url = _.get(settings, 'link_link.url', location.origin) || '';\r\n  url = prepareURLForEmail(url);\r\n  const buttonProps = {\r\n    style: buttonStyles,\r\n    href: url,\r\n    dangerouslySetInnerHTML:{\r\n      __html: text,\r\n    },\r\n  };\r\n  const wrapperStyles = {\r\n    display: 'block',\r\n    textAlign: 'center',\r\n  };\r\n\r\n  if(settings['button_alignment']) {\r\n    wrapperStyles.justifyContent = settings['button_alignment'];\r\n    wrapperStyles.display = \"flex\";\r\n  }\r\n\r\n  const wrapperProps = {\r\n    style: wrapperStyles,\r\n  };\r\n\r\n  return <div {...wrapperProps}\r\n              children={React.createElement('a', buttonProps)}/>;\r\n}\r\n","import {isEditor} from \"../../../../../front-app/src/js/helpers\";\r\n\r\n/**\r\n * Возвращает шаблон колонки для письма\r\n * @return {React.DetailedReactHTMLElement<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> | React.DetailedReactHTMLElement<React.HTMLAttributes<T>, HTMLElement> | React.ReactSVGElement | React.DOMElement<React.DOMAttributes<T>, Element> | React.FunctionComponentElement<{}> | React.CElement<{}, React.ClassicComponent<{}, React.ComponentState>> | React.CElement<{}, React.Component<P, React.ComponentState>> | React.ReactElement<{}>}\r\n */\r\nexport default function columnElementEmailRender(){\r\n  const settings = this.props.element.getSettings();\r\n  let columnElementTag;\r\n  columnElementTag = 'td';\r\n  let width = (settings.layout_column_width || '100') + '%';\r\n  const elementProps = {\r\n    width,\r\n    style: {\r\n      paddingLeft: _.get(settings, 'positioning_padding.left', '10') + _.get(settings, 'positioning_padding.unit', 'px'),\r\n      paddingRight: _.get(settings, 'positioning_padding.right', '10') + _.get(settings, 'positioning_padding.unit', 'px'),\r\n      paddingTop: _.get(settings, 'positioning_padding.top', '10') + _.get(settings, 'positioning_padding.unit', 'px'),\r\n      paddingBottom: _.get(settings, 'positioning_padding.bottom', '10') + _.get(settings, 'positioning_padding.unit', 'px'),\r\n      backgroundColor: _.get(settings, 'column_style_background_color.colorPickedHex', ''),\r\n    },\r\n  };\r\n  if(isEditor()){\r\n    columnElementTag = 'div';\r\n    delete elementProps.width;\r\n    elementProps.className = 'altrp-column';\r\n  }\r\n  let ElementWrapper = this.props.ElementWrapper || window.ElementWrapper;\r\n  return React.createElement(columnElementTag, elementProps,\r\n      this.state.children.map(column => (\r\n          <ElementWrapper\r\n              ElementWrapper={ElementWrapper}\r\n              key={column.getId()}\r\n              component={column.componentClass}\r\n              baseRender={this.props.baseRender}\r\n              element={column}\r\n          />\r\n      ))\r\n  );\r\n}","import _, { head } from \"lodash\";\r\nimport {isEditor, parseURLTemplate, prepareURLForEmail} from \"../../../../../front-app/src/js/helpers\";\r\n\r\n/**\r\n * Возвращает шаблон колонки для письма\r\n * @return {React.DetailedReactHTMLElement<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> | React.DetailedReactHTMLElement<React.HTMLAttributes<T>, HTMLElement> | React.ReactSVGElement | React.DOMElement<React.DOMAttributes<T>, Element> | React.FunctionComponentElement<{}> | React.CElement<{}, React.ClassicComponent<{}, React.ComponentState>> | React.CElement<{}, React.Component<P, React.ComponentState>> | React.ReactElement<{}>}\r\n */\r\nexport default function headingElementEmailRender(){\r\n\r\n  const settings = this.props.element.getSettings();\r\n  const headingStyles = {\r\n    display: 'block',\r\n    fontSize: '24px',\r\n    fontWeight: '700',\r\n    textDecoration: 'none',\r\n    color: '#242424',\r\n  };\r\n\r\n  if(settings['heading_style_typographic']) {\r\n    headingStyles.textDecoration = settings['heading_style_typographic'].decoration || headingStyles.textDecoration;\r\n    headingStyles.fontFamily = settings['heading_style_typographic'].family || headingStyles.fontFamily;\r\n    headingStyles.lineHeight = settings['heading_style_typographic'].lineHeight || headingStyles.lineHeight;\r\n    headingStyles.fontSize = settings['heading_style_typographic'].size ? (settings['heading_style_typographic'].size + 'px') : headingStyles.fontSize;\r\n    headingStyles.letterSpacing = settings['heading_style_typographic'].spacing + 'px' || headingStyles.letterSpacing;\r\n    headingStyles.fontStyle = settings['heading_style_typographic'].style || headingStyles.style;\r\n    headingStyles.fontWeight = settings['heading_style_typographic'].weight || headingStyles.fontWeight;\r\n    headingStyles.textTransform = settings['heading_style_typographic'].transform || headingStyles.textTransform;\r\n  }\r\n\r\n  if(settings['heading_style_color']) {\r\n    headingStyles.color = settings['heading_style_color'].colorPickedHex;\r\n  }\r\n\r\n  if(settings['heading_style_text_shadow']) {\r\n    let type = settings['heading_style_text_shadow'].type;\r\n    let offsetX = settings['heading_style_text_shadow'].horizontal;\r\n    let offsetY = settings['heading_style_text_shadow'].vertical;\r\n    let blurRadius = settings['heading_style_text_shadow'].blur;\r\n    let spreadRadius = settings['heading_style_text_shadow'].spread;\r\n    let color = settings['heading_style_text_shadow'].colorPickedHex;\r\n    headingStyles.boxShadow = `${type} ${offsetX}px ${offsetY}px ${blurRadius}px ${spreadRadius} ${color}`;\r\n  }\r\n\r\n  if(settings['style_position_margin']) {\r\n    headingStyles.marginTop = settings['style_position_margin'].top ? (settings['style_position_margin'].top + settings['style_position_margin'].unit) : headingStyles.marginTop;\r\n    headingStyles.marginRight = settings['style_position_margin'].right ? (settings['style_position_margin'].right + settings['style_position_margin'].unit) : headingStyles.marginRight;\r\n    headingStyles.marginBottom = settings['style_position_margin'].bottom ? (settings['style_position_margin'].bottom + settings['style_position_margin'].unit) : headingStyles.marginBottom;\r\n    headingStyles.marginLeft = settings['style_position_margin'].left ? (settings['style_position_margin'].left + settings['style_position_margin'].unit) : headingStyles.marginLeft ;\r\n  }\r\n\r\n  if(settings['style_position_padding']) {\r\n    headingStyles.paddingTop = settings['style_position_padding'].top ? (settings['style_position_padding'].top + settings['style_position_padding'].unit) : headingStyles.paddingTop;\r\n    headingStyles.paddingRight = settings['style_position_padding'].right ? (settings['style_position_padding'].right + settings['style_position_padding'].unit) : headingStyles.paddingRight;\r\n    headingStyles.paddingBottom = settings['style_position_padding'].bottom ? (settings['style_position_padding'].bottom + settings['style_position_padding'].unit) : headingStyles.paddingBottom;\r\n    headingStyles.paddingLeft = settings['style_position_padding'].left ? (settings['style_position_padding'].left + settings['style_position_padding'].unit) : headingStyles.paddingLeft;\r\n  }\r\n\r\n  if(settings['style_background_color']) {\r\n    headingStyles.backgroundColor = settings['style_background_color'].colorPickedHex;\r\n  }\r\n\r\n  if(settings['gradient'] && settings['gradient'].isWithGradient) {\r\n    headingStyles.backgroundImage = settings['gradient'].value.slice(0, -1);\r\n  }\r\n  if(_.get(settings, 'background_image.url')) {\r\n    headingStyles.backgroundImage = `url(${prepareURLForEmail(settings['background_image'].url)})`;\r\n  }\r\n\r\n  if(settings['background_position']) {\r\n    headingStyles.backgroundPosition = settings['background_position'];\r\n  }\r\n\r\n  if(settings['background_attachment']) {\r\n    headingStyles.backgroundAttachment = settings['background_attachment'];\r\n  }\r\n\r\n  if(settings['background_repeat']) {\r\n    headingStyles.backgroundRepeat = settings['background_repeat'];\r\n  }\r\n\r\n  if(settings['background_size']) {\r\n    headingStyles.backgroundSize = settings['background_size'];\r\n  }\r\n\r\n  if(settings['style_background_opacity']) {\r\n    headingStyles.opacity = settings['style_background_opacity'].size;\r\n  }\r\n\r\n  if(settings['style_border_type'] && settings['style_border_type'] !== \"none\") {\r\n    headingStyles.borderTopWidth = settings['style_border_width'].top + settings['style_border_width'].unit;\r\n    headingStyles.borderRightWidth = settings['style_border_width'].right + settings['style_border_width'].unit;\r\n    headingStyles.borderBottomWidth = settings['style_border_width'].bottom + settings['style_border_width'].unit;\r\n    headingStyles.borderLeftWidth = settings['style_border_width'].left + settings['style_border_width'].unit;\r\n    if(settings[\"style_border_width\"].unit===\"%\") {\r\n      headingStyles.borderTopWidth = settings['style_border_width'].top + 'vw';\r\n      headingStyles.borderRightWidth = settings['style_border_width'].right + 'vw';\r\n      headingStyles.borderBottomWidth = settings['style_border_width'].bottom + 'vw';\r\n      headingStyles.borderLeftWidth = settings['style_border_width'].left + 'vw';\r\n    }\r\n    headingStyles.borderStyle = settings['style_border_type'];\r\n    if(settings['style_border_color'] && settings['style_border_color'].colorPickedHex)\r\n      headingStyles.borderColor = settings['style_border_color'].colorPickedHex;\r\n  }\r\n\r\n  if(settings['style_border_radius']) {\r\n    // let borderRadiusTop = settings['border_radius'].top + settings['border_radius'].unit;\r\n    // let borderRadiusRight = settings['border_radius'].right + settings['border_radius'].unit;\r\n    // let borderRadiusBottom = settings['border_radius'].bottom + settings['border_radius'].unit;\r\n    // let borderRadiusLeft = settings['border_radius'].left + settings['border_radius'].unit;\r\n    // headingStyles.borderRadius = `${borderRadiusTop} ${borderRadiusRight} ${borderRadiusBottom} ${borderRadiusLeft}`;\r\n    headingStyles.borderRadius = settings['style_border_radius'].size + settings['style_border_radius'].unit;\r\n  }\r\n\r\n  headingStyles.textDecoration = settings['style_border_text_decoration'] || headingStyles.textDecoration;\r\n\r\n  if(settings['transform_style']) {\r\n    headingStyles.transform = `${settings['transform_style'].function}(${settings['transform_style'].size}${settings['transform_style'].unit})`\r\n  }\r\n  if(settings['heading_settings_alignment']) {\r\n    headingStyles.justifyContent = settings['heading_settings_alignment'];\r\n    headingStyles.display = \"flex\";\r\n  }\r\n\r\n  let url = _.get(settings, 'link_link.url', location.origin) || '';\r\n  url = prepareURLForEmail(url);\r\n  const text = this.getContent('text') || '';\r\n  const headingProps = {\r\n    dangerouslySetInnerHTML:{\r\n      __html: text,\r\n    },\r\n    href: url,\r\n    style: headingStyles,\r\n  };\r\n  const wrapperStyles = {\r\n    display: 'block',\r\n    textAlign: 'center',\r\n  };\r\n  const wrapperProps = {\r\n    style: wrapperStyles,\r\n  };\r\n  let headingTag = url ? 'a' : 'div';\r\n  return <div {...wrapperProps}\r\n              children={React.createElement(headingTag, headingProps)}/>;\r\n}\r\n","import {isEditor, prepareURLForEmail} from \"../../../../../front-app/src/js/helpers\";\r\n\r\n/**\r\n * Возвращает шаблон колонки для письма\r\n * @return {React.DetailedReactHTMLElement<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> | React.DetailedReactHTMLElement<React.HTMLAttributes<T>, HTMLElement> | React.ReactSVGElement | React.DOMElement<React.DOMAttributes<T>, Element> | React.FunctionComponentElement<{}> | React.CElement<{}, React.ClassicComponent<{}, React.ComponentState>> | React.CElement<{}, React.Component<P, React.ComponentState>> | React.ReactElement<{}>}\r\n */\r\nexport default function textElementEmailRender(){\r\n\r\n  const settings = this.props.element.getSettings();\r\n  const wrapperStyles = {\r\n    display: 'block',\r\n  };\r\n\r\n  if(settings['text_style_position_margin']) {\r\n    wrapperStyles.marginTop = settings['text_style_position_margin'].top ? (settings['text_style_position_margin'].top + settings['text_style_position_margin'].unit) : wrapperStyles.marginTop;\r\n    wrapperStyles.marginRight = settings['text_style_position_margin'].right ? (settings['text_style_position_margin'].right + settings['text_style_position_margin'].unit) : wrapperStyles.marginRight; \r\n    wrapperStyles.marginBottom = settings['text_style_position_margin'].bottom ? (settings['text_style_position_margin'].bottom + settings['text_style_position_margin'].unit) : wrapperStyles.marginBottom;\r\n    wrapperStyles.marginLeft = settings['text_style_position_margin'].left ? (settings['text_style_position_margin'].left + settings['text_style_position_margin'].unit) : wrapperStyles.marginLeft ;\r\n  }\r\n\r\n  if(settings['text_style_position_padding']) {\r\n    wrapperStyles.paddingTop = settings['text_style_position_padding'].top ? (settings['text_style_position_padding'].top + settings['text_style_position_padding'].unit) : wrapperStyles.paddingTop;\r\n    wrapperStyles.paddingRight = settings['text_style_position_padding'].right ? (settings['text_style_position_padding'].right + settings['text_style_position_padding'].unit) : wrapperStyles.paddingRight;\r\n    wrapperStyles.paddingBottom = settings['text_style_position_padding'].bottom ? (settings['text_style_position_padding'].bottom + settings['text_style_position_padding'].unit) : wrapperStyles.paddingBottom;\r\n    wrapperStyles.paddingLeft = settings['text_style_position_padding'].left ? (settings['text_style_position_padding'].left + settings['text_style_position_padding'].unit) : wrapperStyles.paddingLeft;\r\n  }\r\n\r\n  if(settings['text_style_background_color']) {\r\n    wrapperStyles.backgroundColor = settings['text_style_background_color'].colorPickedHex;\r\n  }\r\n\r\n  if(settings['text_style_background_opacity']) {\r\n    wrapperStyles.opacity = settings['text_style_background_opacity'].size;\r\n  }\r\n\r\n  if(settings['text_style_font_typographic']) {\r\n    wrapperStyles.textDecoration = settings['text_style_font_typographic'].decoration || wrapperStyles.textDecoration;\r\n    wrapperStyles.fontFamily = settings['text_style_font_typographic'].family || wrapperStyles.fontFamily;\r\n    wrapperStyles.lineHeight = settings['text_style_font_typographic'].lineHeight || wrapperStyles.lineHeight;\r\n    wrapperStyles.fontSize = settings['text_style_font_typographic'].size ? (settings['text_style_font_typographic'].size + 'px') : wrapperStyles.fontSize;\r\n    wrapperStyles.letterSpacing = settings['text_style_font_typographic'].spacing + 'px' || wrapperStyles.letterSpacing;\r\n    wrapperStyles.fontStyle = settings['text_style_font_typographic'].style || wrapperStyles.style;\r\n    wrapperStyles.fontWeight = settings['text_style_font_typographic'].weight || wrapperStyles.fontWeight;\r\n    wrapperStyles.textTransform = settings['text_style_font_typographic'].transform || wrapperStyles.textTransform;\r\n  }\r\n\r\n  if(settings['text_style_font_color']) {\r\n    wrapperStyles.color = settings['text_style_font_color'].colorPickedHex;\r\n  }\r\n\r\n  if(settings['text_style_border_type'] && settings['text_style_border_type'] !== \"none\") {\r\n    wrapperStyles.borderTopWidth = settings['text_style_border_width'].top + settings['text_style_border_width'].unit;\r\n    wrapperStyles.borderRightWidth = settings['text_style_border_width'].right + settings['text_style_border_width'].unit;\r\n    wrapperStyles.borderBottomWidth = settings['text_style_border_width'].bottom + settings['text_style_border_width'].unit;\r\n    wrapperStyles.borderLeftWidth = settings['text_style_border_width'].left + settings['text_style_border_width'].unit;\r\n    wrapperStyles.borderStyle = settings['text_style_border_type'];\r\n    if(settings['text_style_border_color'] && settings['text_style_border_color'].colorPickedHex)\r\n      wrapperStyles.borderColor = settings['text_style_border_color'].colorPickedHex;\r\n  }\r\n\r\n  if(settings['text_style_border_radius']) {\r\n    // let borderRadiusTop = settings['border_radius'].top + settings['border_radius'].unit;\r\n    // let borderRadiusRight = settings['border_radius'].right + settings['border_radius'].unit;\r\n    // let borderRadiusBottom = settings['border_radius'].bottom + settings['border_radius'].unit;\r\n    // let borderRadiusLeft = settings['border_radius'].left + settings['border_radius'].unit;\r\n    // wrapperStyles.borderRadius = `${borderRadiusTop} ${borderRadiusRight} ${borderRadiusBottom} ${borderRadiusLeft}`;\r\n    wrapperStyles.borderRadius = settings['text_style_border_radius'].size + settings['text_style_border_radius'].unit;\r\n  }\r\n  if(settings['text_style_column-count'] && settings['text_style_column-count'] !== 1) {\r\n    wrapperStyles.columns = `${settings['text_style_column-count']} ${settings['text_style_column-gap'].size}${settings['text_style_column-gap'].unit}`\r\n  }\r\n  let textContent = this.getContent(\"text\");\r\n  const wrapperProps = {\r\n    style: wrapperStyles,\r\n    dangerouslySetInnerHTML:{\r\n      __html: textContent\r\n    },\r\n  };\r\n\r\n  if (this.props.CKEditor) {\r\n    return (\r\n      <div style={wrapperStyles}>\r\n        <this.props.CKEditor\r\n            changeText={this.changeText}\r\n            text={textContent}\r\n            readOnly={isEditor()}\r\n            textWidget={true}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  return <div {...wrapperProps} />;\r\n}","import {getDataByPath, isEditor, prepareURLForEmail} from \"../../../../../front-app/src/js/helpers\";\r\n\r\n/**\r\n * Возвращает шаблон колонки для письма\r\n * @return {React.DetailedReactHTMLElement<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> | React.DetailedReactHTMLElement<React.HTMLAttributes<T>, HTMLElement> | React.ReactSVGElement | React.DOMElement<React.DOMAttributes<T>, Element> | React.FunctionComponentElement<{}> | React.CElement<{}, React.ClassicComponent<{}, React.ComponentState>> | React.CElement<{}, React.Component<P, React.ComponentState>> | React.ReactElement<{}>}\r\n */\r\nexport default function imageElementEmailRender(){\r\n  const { element } = this.props;\r\n  const settings = this.props.element.getSettings();\r\n  \r\n  let media = settings.content_media;\r\n  const wrapperStyles = {\r\n    display: 'block',\r\n    textAlign: 'center',\r\n  };\r\n\r\n  if(settings['position_margin']) {\r\n    wrapperStyles.marginTop = settings['position_margin'].top ? (settings['position_margin'].top + settings['position_margin'].unit) : wrapperStyles.marginTop;\r\n    wrapperStyles.marginRight = settings['position_margin'].right ? (settings['position_margin'].right + settings['position_margin'].unit) : wrapperStyles.marginRight; \r\n    wrapperStyles.marginBottom = settings['position_margin'].bottom ? (settings['position_margin'].bottom + settings['position_margin'].unit) : wrapperStyles.marginBottom;\r\n    wrapperStyles.marginLeft = settings['position_margin'].left ? (settings['position_margin'].left + settings['position_margin'].unit) : wrapperStyles.marginLeft ;\r\n  }\r\n\r\n  if(settings['position_padding']) {\r\n    wrapperStyles.paddingTop = settings['position_padding'].top ? (settings['position_padding'].top + settings['position_padding'].unit) : wrapperStyles.paddingTop;\r\n    wrapperStyles.paddingRight = settings['position_padding'].right ? (settings['position_padding'].right + settings['position_padding'].unit) : wrapperStyles.paddingRight;\r\n    wrapperStyles.paddingBottom = settings['position_padding'].bottom ? (settings['position_padding'].bottom + settings['position_padding'].unit) : wrapperStyles.paddingBottom;\r\n    wrapperStyles.paddingLeft = settings['position_padding'].left ? (settings['position_padding'].left + settings['position_padding'].unit) : wrapperStyles.paddingLeft;\r\n  }\r\n  \r\n  if(settings['opacity_overlay']) {\r\n    wrapperStyles.opacity = settings['opacity_overlay'].size;\r\n  }\r\n\r\n  if(settings['image_fit_size']) {\r\n    wrapperStyles.objectFit = settings['image_fit_size'];\r\n  }\r\n\r\n  if(settings['aspect_ratio_off']) {\r\n    wrapperStyles.position =  \"relative\";\r\n  } else {\r\n    wrapperStyles.position = \"static\";\r\n  }\r\n\r\n  if(settings['height_size']) {\r\n    wrapperStyles.height = settings['height_size'].size + settings['height_size'].unit;\r\n  }\r\n\r\n  if(settings['width_size']) {\r\n    wrapperStyles.width = settings['width_size'].size + settings['width_size'].unit;\r\n  }\r\n\r\n  if(settings['image_style_alignment']) {\r\n    wrapperStyles.alignContent = settings['image_style_alignment'];\r\n  }\r\n\r\n  // if(settings['image_style_text_shadow']) {\r\n  //   wrapperStyles.filter = `blur(${settings['image_style_text_shadow'].blur}) brightness(${settings['image_style_text_shadow'].brightness}) contrast(${settings['image_style_text_shadow'].contrast}) hue-rotate(${settings['image_style_text_shadow'].hue}) saturation(${settings['image_style_text_shadow'].saturate})`\r\n  // }\r\n\r\n  if(settings['background_color']) {\r\n    wrapperStyles.backgroundColor = settings['background_color'].colorPickedHex;\r\n  }\r\n\r\n  if(settings['gradient'] && settings['gradient'].isWithGradient) {\r\n    wrapperStyles.backgroundImage = settings['gradient'].value.slice(0, -1);\r\n  }\r\n\r\n  if(_.get(settings, 'background_image.url')) {\r\n    wrapperStyles.backgroundImage = `url(${prepareURLForEmail(settings['background_image'].url)})`;\r\n  }\r\n\r\n  if(settings['background_position']) {\r\n    wrapperStyles.backgroundPosition = settings['background_position'];\r\n  }\r\n\r\n  if(settings['background_attachment']) {\r\n    wrapperStyles.backgroundAttachment = settings['background_attachment'];\r\n  }\r\n\r\n  if(settings['background_repeat']) {\r\n    wrapperStyles.backgroundRepeat = settings['background_repeat'];\r\n  }\r\n\r\n  if(settings['background_size']) {\r\n    wrapperStyles.backgroundSize = settings['background_size'];\r\n  }\r\n\r\n  if(settings['border_type'] && settings['border_type'] !== \"none\") {\r\n    wrapperStyles.borderTopWidth = settings['border_width'].top + settings['border_width'].unit;\r\n    wrapperStyles.borderRightWidth = settings['border_width'].right + settings['border_width'].unit;\r\n    wrapperStyles.borderBottomWidth = settings['border_width'].bottom + settings['border_width'].unit;\r\n    wrapperStyles.borderLeftWidth = settings['border_width'].left + settings['border_width'].unit;\r\n    wrapperStyles.borderStyle = settings['border_type'];\r\n    if(settings['border_color'] && settings['border_color'].colorPickedHex)\r\n      wrapperStyles.borderColor = settings['border_color'].colorPickedHex;\r\n  }\r\n\r\n  if(settings['border_radius']) {\r\n    // let borderRadiusTop = settings['border_radius'].top + settings['border_radius'].unit;\r\n    // let borderRadiusRight = settings['border_radius'].right + settings['border_radius'].unit;\r\n    // let borderRadiusBottom = settings['border_radius'].bottom + settings['border_radius'].unit;\r\n    // let borderRadiusLeft = settings['border_radius'].left + settings['border_radius'].unit;\r\n    // wrapperStyles.borderRadius = `${borderRadiusTop} ${borderRadiusRight} ${borderRadiusBottom} ${borderRadiusLeft}`;\r\n    wrapperStyles.borderRadius = settings['border_radius'].size + settings['border_radius'].unit;\r\n  }\r\n\r\n  if(settings['image_style_alignment']) {\r\n    wrapperStyles.justifyContent = settings['image_style_alignment'];\r\n    wrapperStyles.display = \"flex\";\r\n  }\r\n  const wrapperProps = {\r\n    style: wrapperStyles,\r\n  };\r\n\r\n  if(settings['aspect_ratio_size']) {\r\n    wrapperStyles.paddingTop = settings['aspect_ratio_size'] + '%';\r\n  }\r\n  let model = element.hasCardModel()\r\n      ? element.getCardModel()\r\n      : this.props.currentModel;\r\n  /**\r\n   * Возьмем данные из окружения\r\n   */\r\n  if (\r\n      settings.content_path &&\r\n      _.isObject(getDataByPath(settings.content_path, null, model))\r\n  ) {\r\n    media = getDataByPath(settings.content_path, null, model);\r\n    /**\r\n     * Проверим массив ли с файлами content_path\r\n     */\r\n    if (_.get(media, \"0\") instanceof File) {\r\n      media = _.get(media, \"0\");\r\n    } else {\r\n      media.assetType = \"media\";\r\n    }\r\n  } else if (\r\n      settings.content_path &&\r\n      _.isString(getDataByPath(settings.content_path, null, model))\r\n  ) {\r\n    media = getDataByPath(settings.content_path, null, model);\r\n    media = {\r\n      assetType: \"media\",\r\n      url: media,\r\n      name: \"null\"\r\n    };\r\n  }\r\n  const imageProps = {\r\n    src: prepareURLForEmail(media ? media.url : \"\"),\r\n  };\r\n  let wrapperTag = 'div';\r\n  if(_.get(settings, 'image_link.url')){\r\n    wrapperTag = 'a';\r\n    wrapperProps.href = prepareURLForEmail(_.get(settings, 'image_link.url'));\r\n  }\r\n  return React.createElement(wrapperTag, wrapperProps, React.createElement('img', imageProps));\r\n}","import AltrpQueryComponent from \"../../altrp-query-component/altrp-query-component\";\r\nimport {isEditor, prepareURLForEmail} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nexport function EmailTableComponent(props){\r\n  // console.log(props);\r\n  const {data, settings,  } = props;\r\n  const {\r\n    tables_columns: columns = [],\r\n    table_style_table_border_type,\r\n  } = settings;\r\n  const tableStyles = {\r\n    borderCollapse: 'collapse',\r\n    border: `${table_style_table_border_type} ${_.get(settings, 'table_style_table_border_width.size') + _.get(settings, 'table_style_table_border_width.unit')} ${_.get(settings, 'table_style_table_border_color.color')}`\r\n  };\r\n  const defaultCellStyle = {\r\n    textAlign: settings.table_table_header_alignment || 'center',\r\n    verticalAlign: settings.table_table_header_alignment || 'center',\r\n  };\r\n  if(settings.table_style_table_border_type && settings.table_style_table_border_type !== 'none'){\r\n    defaultCellStyle.border = `${settings.table_style_table_border_type} ${_.get(settings, 'table_style_table_border_color.color')}`;\r\n    defaultCellStyle.borderLeftWidth = `${_.get(settings, 'table_style_table_border_width.left')}${_.get(settings, 'table_style_table_border_width.unit') || 'px'}`;\r\n    defaultCellStyle.borderTopWidth = `${_.get(settings, 'table_style_table_border_width.top')}${_.get(settings, 'table_style_table_border_width.unit') || 'px'}`;\r\n    defaultCellStyle.borderRightWidth = `${_.get(settings, 'table_style_table_border_width.right')}${_.get(settings, 'table_style_table_border_width.unit') || 'px'}`;\r\n    defaultCellStyle.borderBottomWidth = `${_.get(settings, 'table_style_table_border_width.bottom')}${_.get(settings, 'table_style_table_border_width.unit') || 'px'}`;\r\n  }\r\n\r\n  return <table width=\"100%\"\r\n                style={tableStyles}>\r\n    <thead>\r\n    <tr>\r\n      {columns.map(column => {\r\n        const headCellStyle = {...defaultCellStyle};\r\n\r\n        if(_.get(settings, 'table_style_header_text_color.colorPickedHex')){\r\n          headCellStyle.color = _.get(settings, 'table_style_header_text_color.colorPickedHex');\r\n        }\r\n\r\n        if(column.column_header_alignment){\r\n          headCellStyle.textAlign = column.column_header_alignment\r\n        }\r\n\r\n        headCellStyle.paddingLeft = `${_.get(settings, 'table_style_header_padding.left')}${_.get(settings, 'table_style_header_padding.unit') || 'px'}`;\r\n        headCellStyle.paddingTop = `${_.get(settings, 'table_style_header_padding.top')}${_.get(settings, 'table_style_header_padding.unit') || 'px'}`;\r\n        headCellStyle.paddingRight = `${_.get(settings, 'table_style_header_padding.right')}${_.get(settings, 'table_style_header_padding.unit') || 'px'}`;\r\n        headCellStyle.paddingBottom = `${_.get(settings, 'table_style_header_padding.bottom')}${_.get(settings, 'table_style_header_padding.unit') || 'px'}`;\r\n\r\n        headCellStyle.fontFamily = _.get(settings, 'table_style_header_font.family') || 'Arial';\r\n        headCellStyle.lineHeight = _.get(settings, 'table_style_header_font.lineHeight') || '1.5';\r\n        headCellStyle.fontSize = (_.get(settings, 'table_style_header_font.size') || '16')\r\n            + (_.get(settings, 'table_style_header_font.sizeUnit') || 'px');\r\n        headCellStyle.letterSpacing = _.get(settings, 'table_style_header_font.spacing');\r\n        headCellStyle.fontStyle = _.get(settings, 'table_style_header_font.style') || '';\r\n        headCellStyle.textTransform = _.get(settings, 'table_style_header_font.transform') || '';\r\n\r\n        if(settings.table_style_header_border_type && settings.table_style_header_border_type !== 'none'){\r\n          headCellStyle.border = `${settings.table_style_header_border_type} ${_.get(settings, 'table_style_header_border_color.color')}`;\r\n          headCellStyle.borderLeftWidth = `${_.get(settings, 'table_style_header_border_width.left')}${_.get(settings, 'table_style_header_border_width.unit') || 'px'}`;\r\n          headCellStyle.borderTopWidth = `${_.get(settings, 'table_style_header_border_width.top')}${_.get(settings, 'table_style_header_border_width.unit') || 'px'}`;\r\n          headCellStyle.borderRightWidth = `${_.get(settings, 'table_style_header_border_width.right')}${_.get(settings, 'table_style_header_border_width.unit') || 'px'}`;\r\n          headCellStyle.borderBottomWidth = `${_.get(settings, 'table_style_header_border_width.bottom')}${_.get(settings, 'table_style_header_border_width.unit') || 'px'}`;\r\n        }\r\n        const columnProps = {\r\n          style: headCellStyle,\r\n        };\r\n        if(_.get(settings, 'table_style_header_background.colorPickedHex')){\r\n          headCellStyle.backgroundColor = _.get(settings, 'table_style_header_background.colorPickedHex');\r\n        }\r\n        if(column.column_width){\r\n          columnProps.width = column.column_width + '%';\r\n        }\r\n        return <th key={column.id} {...columnProps}>{column.column_name || ''}</th>\r\n      })}\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    {\r\n      data.map((row, idx) => {\r\n        return <tr key={idx}>\r\n          {columns.map(column => {\r\n            let cellContent = 'Test data';\r\n            if(! isEditor()){\r\n              cellContent = _.get(row, column.accessor) || '';\r\n              if(column.column_link){\r\n                let url = prepareURLForEmail(column.column_link, row);\r\n                cellContent = <a href={url} style={{\r\n                  fontFamily: _.get(settings, 'table_link_font.family') || 'Arial',\r\n                  fontSize:  _.get(settings, 'table_link_font.size') || 'inherit',\r\n                  fontStyle:  _.get(settings, 'table_link_font.style') || 'inherit',\r\n                  lineHeight:  _.get(settings, 'table_link_font.lineHeight') || 'inherit',\r\n                  color: _.get(settings, 'table_link_color.colorPickedHex') || 'inherit',\r\n                  textDecoration:  _.get(settings, 'table_link_font.decoration') || 'inherit',\r\n                  textTransform:  _.get(settings, 'table_link_font.transform') || 'inherit',\r\n                }}>{cellContent}</a>\r\n              }\r\n            } else {\r\n              if(column.column_link){\r\n                cellContent = <span style={{\r\n                  fontFamily: _.get(settings, 'table_link_font.family') || 'Arial',\r\n                  fontSize:  _.get(settings, 'table_link_font.size') || 'inherit',\r\n                  fontStyle:  _.get(settings, 'table_link_font.style') || 'inherit',\r\n                  lineHeight:  _.get(settings, 'table_link_font.lineHeight') || 'inherit',\r\n                  color: _.get(settings, 'table_link_color.colorPickedHex') || 'inherit',\r\n                  textDecoration:  _.get(settings, 'table_link_font.decoration') || 'inherit',\r\n                  textTransform:  _.get(settings, 'table_link_font.transform') || 'inherit',\r\n                }}>{cellContent}</span>\r\n              }\r\n            }\r\n            const cellStyles = {...defaultCellStyle};\r\n\r\n            cellStyles.textAlign =  column.column_body_alignment || settings.table_table_body_alignment;\r\n            cellStyles.verticalAlign =  column.column_cell_vertical_alignment || settings.cell_vertical_alignment;\r\n\r\n            if(settings.table_style_body_border_type && settings.table_style_body_border_type !== 'none'){\r\n              cellStyles.border = `${settings.table_style_header_border_type} ${_.get(settings, 'table_style_body_border_color_.color')}`;\r\n              cellStyles.borderLeftWidth = `${_.get(settings, 'table_style_body_border_width.left')}${_.get(settings, 'table_style_body_border_width.unit') || 'px'}`;\r\n              cellStyles.borderTopWidth = `${_.get(settings, 'table_style_body_border_width.top')}${_.get(settings, 'table_style_body_border_width.unit') || 'px'}`;\r\n              cellStyles.borderRightWidth = `${_.get(settings, 'table_style_body_border_width.right')}${_.get(settings, 'table_style_body_border_width.unit') || 'px'}`;\r\n              cellStyles.borderBottomWidth = `${_.get(settings, 'table_style_body_border_width.bottom')}${_.get(settings, 'table_style_body_border_width.unit') || 'px'}`;\r\n            }\r\n\r\n            cellStyles.paddingLeft = `${_.get(settings, 'table_style_body_cell_padding.left')}${_.get(settings, 'table_style_body_cell_padding.unit') || 'px'}`;\r\n            cellStyles.paddingTop = `${_.get(settings, 'table_style_body_cell_padding.top')}${_.get(settings, 'table_style_body_cell_padding.unit') || 'px'}`;\r\n            cellStyles.paddingRight = `${_.get(settings, 'table_style_body_cell_padding.right')}${_.get(settings, 'table_style_body_cell_padding.unit') || 'px'}`;\r\n            cellStyles.paddingBottom = `${_.get(settings, 'table_style_body_cell_padding.bottom')}${_.get(settings, 'table_style_body_cell_padding.unit') || 'px'}`;\r\n\r\n            cellStyles.fontFamily = _.get(settings, 'table_style_body_font.family') || 'Arial';\r\n            cellStyles.lineHeight = _.get(settings, 'table_style_body_font.lineHeight') || '1.5';\r\n            cellStyles.fontSize = (_.get(settings, 'table_style_body_font.size') || '16')\r\n                + (_.get(settings, 'table_style_body_font.sizeUnit') || 'px');\r\n            cellStyles.letterSpacing = _.get(settings, 'table_style_body_font.spacing');\r\n            cellStyles.fontStyle = _.get(settings, 'table_style_body_font.style') || '';\r\n            cellStyles.textTransform = _.get(settings, 'table_style_body_font.transform') || '';\r\n\r\n            if(_.get(settings, 'table_style_body_border_text_color.colorPickedHex')){\r\n              cellStyles.color = _.get(settings, 'table_style_body_border_text_color.colorPickedHex');\r\n            }\r\n            const cellProps = {\r\n              style: cellStyles,\r\n            };\r\n\r\n            if(_.get(settings, 'table_style_body_border_background.colorPickedHex')){\r\n              cellStyles.backgroundColor = _.get(settings, 'table_style_body_border_background.colorPickedHex');\r\n            }\r\n            return <td key={column.id + idx} {...cellProps}>{cellContent}</td>\r\n          })}\r\n        </tr>\r\n      })\r\n    }\r\n    </tbody>\r\n  </table>;\r\n}\r\n\r\nexport default (props) => {\r\n  if(isEditor()) {\r\n    props = {...props};\r\n    props.data = Array.from({length: 10}, () => ({}));\r\n    return <EmailTableComponent {...props}/>\r\n  }\r\n  return <AltrpQueryComponent {...props}><EmailTableComponent/></AltrpQueryComponent>\r\n}","import {getDataByPath,} from \"../../../../../front-app/src/js/helpers\";\r\nimport Query from \"../../classes/Query\";\r\nimport EmailTableComponent from \"../../components/altrp-table/components/EmailTableComponent\";\r\n\r\n/**\r\n * Возвращает шаблон таблицы для email-письма\r\n * @return {React.DetailedReactHTMLElement<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> | React.DetailedReactHTMLElement<React.HTMLAttributes<T>, HTMLElement> | React.ReactSVGElement | React.DOMElement<React.DOMAttributes<T>, Element> | React.FunctionComponentElement<{}> | React.CElement<{}, React.ClassicComponent<{}, React.ComponentState>> | React.CElement<{}, React.Component<P, React.ComponentState>> | React.ReactElement<{}>}\r\n */\r\nexport default function tableElementEmailRender(){\r\n\r\n  const settings = this.props.element.getSettings();\r\n  if(! this.props.currentModel.getProperty('altrpModelUpdated')){\r\n    return '';\r\n  }\r\n  let data = [];\r\n  if(this.props.element.getSettings('table_datasource')\r\n      && this.props.element.getSettings('choose_datasource') === 'datasource'){\r\n    let path = this.props.element.getSettings('table_datasource').replace(/{{/g, '').replace(/}}/g, '');\r\n    data = getDataByPath(path)\r\n  }\r\n  let query = new Query(this.props.element.getSettings().table_query || {}, this);\r\n  if(! this.showTable(query)){\r\n    return <div children=\"Please Choose Source\"/>\r\n  }\r\n  if (! (_.get(settings,'tables_columns.length'))) {\r\n    return <div children=\"Please Add Column\"/>\r\n  }\r\n  return <EmailTableComponent query={query}\r\n          updateToken={this.props.updateToken}\r\n          widgetId={this.props.element.getId()}\r\n          currentModel={this.props.currentModel}\r\n          data={data || query.getFromModel(this.state.modelData)}\r\n          settings={this.props.element.getSettings()}/>;\r\n}","import * as altrpHelpers from '../helpers';\r\nimport * as styles from '../helpers/styles';\r\nimport  Cookies from 'js-cookie';\r\nimport Resource from \"../../../../editor/src/js/classes/Resource\";\r\nimport AltrpModel from \"../../../../editor/src/js/classes/AltrpModel\";\r\nimport Styles from '../../../../editor/src/js/components/Styles';\r\nimport {baseEmailRender} from '../../../../editor/src/js/decorators/base-email-render';\r\nimport Area from \"../classes/Area\";\r\nwindow.altrpHelpers = window.altrpHelpers || {};\r\nwindow.baseEmailRender = baseEmailRender;\r\nwindow.Cookies = Cookies\r\nwindow.StylesComponent = Styles;\r\nwindow.altrpHelpers = {\r\n  ...window.altrpHelpers,\r\n  ...altrpHelpers,\r\n  styles,\r\n  Resource,\r\n  AltrpModel,\r\n  Area\r\n};\r\n/**\r\n * Install\r\n */\r\n\r\n/**\r\n * Проверка на включение BVI\r\n */\r\n(async function (){\r\n  if(window.Cookies.get('bvi-theme')){\r\n    const  loadVIPlugin =  (await import(/* webpackChunkName: 'altrp-js-plugins' */'../../js/helpers/plugins')).loadVIPlugin;\r\n    await loadVIPlugin(false);\r\n    $.bvi();\r\n  }\r\n})();\r\n/**\r\n * Запускаем обновление списка страниц\r\n */\r\n(async function () {\r\n\r\n  // const pageUpdater = (await import('./js/classes/modules/PageUpdater')).default;\r\n  // function updater(){\r\n  //   pageUpdater.startUpdating();\r\n  //   window.removeEventListener('render-altrp', updater);\r\n  // }\r\n  window.addEventListener && window.addEventListener('render-altrp', replaceApp);\r\n  // window.addEventListener('render-altrp', updater);\r\n})();\r\n/**\r\n * Смена Разрешения\r\n */\r\n(async function (){\r\n  const  setCurrentScreen =  (await import(/* webpackChunkName: 'media-screen-storage-actions' */'../../js/store/media-screen-storage/actions')).setCurrentScreen;\r\n  const  CONSTANTS =  (await import(/* webpackChunkName: 'CONSTANTS' */'../../../../editor/src/js/consts')).default;\r\n  window.CONSTANTS = CONSTANTS;\r\n  window.addEventListener && window.addEventListener('resize', e=>{\r\n    const {currentScreen} = appStore.getState();\r\n    const changedScreen = CONSTANTS.SCREENS.find(screen=>{\r\n      if(! screen.fullMediaQuery){\r\n        return false;\r\n      }\r\n      let query = screen.fullMediaQuery;\r\n      query = query.replace('@media', '');\r\n      return window.matchMedia(query).matches;\r\n    }) || CONSTANTS.SCREENS[0];\r\n    if(currentScreen !== changedScreen){\r\n      appStore.dispatch(setCurrentScreen(changedScreen));\r\n    }\r\n  });\r\n})();\r\n\r\nfunction replaceApp(){\r\n  if(! document.getElementById('front-app-server')){\r\n    console.error(document.getElementById('front-app-server'));\r\n    return;\r\n  }\r\n  const appElement = document.getElementById('front-app');\r\n  const appServer = document.getElementById('front-app-server');\r\n  appServer.remove();\r\n  appElement.removeAttribute('style');\r\n  window.removeEventListener('render-altrp', replaceApp);\r\n}\r\n","import rootElementEmailRender from \"../renders/email/rootElementEmailRender\";\r\nimport sectionElementEmailRender from \"../renders/email/sectionElementEmailRender\";\r\nimport buttonElementEmailRender from \"../renders/email/buttonElementEmailRender\";\r\nimport columnElementEmailRender from \"../renders/email/columnElementEmailRender\";\r\nimport headingElementEmailRender from \"../renders/email/headingElementEmailRender\";\r\nimport textElementEmailRender from \"../renders/email/textElementEmailRender\";\r\nimport imageElementEmailRender from \"../renders/email/imageElementEmailRender\";\r\nimport tableElementEmailRender from \"../renders/email/tableElementEmailRender\";\r\nimport {isEditor} from \"../../../../front-app/src/js/helpers\";\r\n\r\n/**\r\n * Отрисовка контента элемента для писем\r\n * @param component\r\n * @return {*}\r\n */\r\nexport function baseEmailRender(component){\r\n  switch(component.props.element.getName()){\r\n    case 'root-element':{\r\n      return rootElementEmailRender.bind(component);\r\n    }\r\n    case 'section':{\r\n      return sectionElementEmailRender.bind(component);\r\n    }\r\n    case 'column':{\r\n      return columnElementEmailRender.bind(component);\r\n    }\r\n    case 'button':{\r\n      return buttonElementEmailRender.bind(component);\r\n    }\r\n    case 'heading':{\r\n      return headingElementEmailRender.bind(component);\r\n    }\r\n    case 'text':{\r\n      return textElementEmailRender.bind(component);\r\n    }\r\n    case 'image':{\r\n      return imageElementEmailRender.bind(component);\r\n    }\r\n    case 'table':{\r\n      return tableElementEmailRender.bind(component);\r\n    }\r\n  }\r\n  return ()=>{\r\n    if(isEditor()){\r\n      return <div className=\"tba-placeholder\">TBA</div>\r\n    }\r\n    return null\r\n  };\r\n}"],"sourceRoot":""}