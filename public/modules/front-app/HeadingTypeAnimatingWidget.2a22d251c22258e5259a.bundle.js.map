{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./resources/modules/editor/src/js/components/animations/text/rotating/Rotating.js","webpack:///./resources/modules/editor/src/js/components/animations/text/highlighted/Highlighted.js","webpack:///./resources/modules/editor/src/js/components/altrp-heading/Animating.js","webpack:///./resources/modules/editor/src/js/components/widgets/HeadingTypeAnimatingWidget.js"],"names":["_assertThisInitialized","self","ReferenceError","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","TypeError","prototype","create","constructor","_possibleConstructorReturn","call","_setPrototypeOf","p","_typeof","Symbol","iterator","props","state","active","step","index","width","style","type","rotating","bind","typing","getWidth","setStep","widthRef","React","clipRef","this","current","setState","offsetWidth","prevProps","update","saveWidth","text","JSON","stringify","split","children","Array","from","forEach","span","arrayText","setTimeout","length","indexMax","clipWidth","setInterval","clearInterval","clipWidthShow","_","isString","wordNext","wordPrev","letterChanging","console","log","classes","prefix","textArray","styles","push","map","letter","idx","classNames","className","join","stylesClip","overflow","word","ref","animationTransform","transform","idxL","stylesDropIn","activePrev","stylesSlide","stylesSlideDown","Component","CircleIcon","CurlyIcon","UnderlineIcon","DoubleIcon","DoubleUnderlineIcon","UnderlineZigzagIcon","DiagonalIcon","StrikethroughIcon","XIcon","svgClasses","shape","bringToFront","roundedEdges","animating","settings","beforeText","getContent","afterText","htmlTag","html_tag_animating","text_highlighted_animating","style_animating","shape_animating","bring_to_front_shape_animating","rounded_edges_shape_animating","animation_animating","text_rotating_animating","createElement","Fragment","dangerouslySetInnerHTML","__html","window","globalDefaults","element","getSettings","component","elementDecorator","baseRender","render"],"mappings":"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","file":"HeadingTypeAnimatingWidget.2a22d251c22258e5259a.bundle.js","sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import React, {Component} from 'react';\r\nimport (\"./rotating.scss\");\r\n\r\nclass Rotating extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let state = {\r\n      active: 0,\r\n      step: 0,\r\n      index: 0,\r\n      width: 0,\r\n      style: {}\r\n    };\r\n\r\n    if(this.props.type === \"swirl\" || this.props.type === \"blinds\" || this.props.type === \"wave\") {\r\n      state.index = -1\r\n    }\r\n\r\n    if(this.props.type === \"slide\" || this.props.type === \"slideDown\") {\r\n      state.active = -1\r\n    }\r\n\r\n    if(this.props.type === \"flip\") {\r\n      state.step = 1\r\n    }\r\n\r\n    this.state = state\r\n\r\n    this.rotating = this.rotating.bind(this);\r\n    this.typing = this.typing.bind(this);\r\n    this.getWidth = this.getWidth.bind(this);\r\n    this.setStep = this.setStep.bind(this);\r\n\r\n    this.widthRef = React.createRef();\r\n    this.clipRef = React.createRef()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.rotating();\r\n\r\n    if(this.clipRef.current && this.props.type === \"clip\" || this.clipRef.current && this.props.type === \"slide\") {\r\n      this.setState({ width: this.clipRef.current.offsetWidth })\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const update = () => {\r\n      let saveWidth = false;\r\n\r\n      if(this.props.type === \"flip\") {\r\n        saveWidth = true\r\n      }\r\n\r\n      this.setState((state) => ({\r\n        active: 0,\r\n        index: 0,\r\n        step: 0,\r\n        width: saveWidth ? state.width : 0,\r\n        style: {}\r\n      }));\r\n\r\n      if(this.props.type === \"swirl\" || \"blinds\" || \"wave\" && prevProps.type !== \"swirl\" || \"blinds\" || \"wave\") {\r\n        this.setState({index: -1})\r\n      }\r\n\r\n      this.rotating();\r\n    };\r\n\r\n    if(prevProps.text !== this.props.text) {\r\n      update()\r\n    }\r\n\r\n    if(prevProps.type !== this.props.type) {\r\n      update()\r\n    }\r\n\r\n    if(JSON.stringify(this.props.text.split(\"\\n\")) !== JSON.stringify(prevProps.text.split(\"\\n\")) && this.props.type !== \"typing\" || \"clip\") {\r\n      this.getWidth();\r\n    }\r\n\r\n  }\r\n\r\n  getWidth() {\r\n    if(this.widthRef.current) {\r\n      const children = Array.from(this.widthRef.current.children);\r\n      let width = 0;\r\n\r\n      children.forEach(span => {\r\n        if(width < span.offsetWidth) {\r\n          width =  span.offsetWidth\r\n        }\r\n      })\r\n\r\n      if(this.state.width !== width) {\r\n        this.setState({width})\r\n      }\r\n    }\r\n  }\r\n\r\n  rotating() {\r\n    const arrayText = this.props.text.split(\"\\n\");\r\n\r\n    switch (this.props.type) {\r\n      case \"typing\":\r\n        setTimeout(() => {\r\n          const length = arrayText[this.state.index].split(\"\").length;\r\n          this.setState((state) => ({ step: 1, active: (length >= state.active + 1) ? state.active : 0 }));\r\n          setTimeout(() => {\r\n            const indexMax = arrayText.length--;\r\n            this.setState((state) => {\r\n              return ({ step: 2, index: indexMax > state.index+1 ? state.index+1 : 0 })\r\n            });\r\n            setTimeout(this.typing, 500)\r\n          }, 500)\r\n        }, 2000);\r\n        break;\r\n      case \"clip\":\r\n        if(this.clipRef.current) {\r\n          const length = arrayText.length;\r\n\r\n          setTimeout(() => {\r\n            const clipWidth = setInterval(() => {\r\n              if (this.state.width > 0) {\r\n                this.setState((state) => ({ width: state.width-4 }));\r\n              } else {\r\n\r\n                clearInterval(clipWidth);\r\n\r\n                setTimeout(() => {\r\n                  this.setState((state) => ({ width: 0, active: (length > state.active+1 ? state.active+1 : 0) }));\r\n                  const clipWidthShow = setInterval(() => {\r\n                    const maxWidth = this.props.type === \"clip\" ? this.clipRef.current.offsetWidth >= this.state.width : false;\r\n\r\n                    if(maxWidth) {\r\n                      this.setState((state) => ({ width: state.width+4 }))\r\n                    } else {\r\n                      if(this.props.type === \"clip\") {\r\n                        this.setState({ width: this.clipRef.current.offsetWidth });\r\n                      }\r\n                      clearInterval(clipWidthShow);\r\n                      this.rotating();\r\n                    }\r\n                  }, 20)\r\n                }, 100)\r\n              }\r\n\r\n            }, 20)\r\n          }, 4000)\r\n        }\r\n        break;\r\n      case \"flip\":\r\n\r\n        setTimeout(() => {\r\n          this.setState({step: 0});\r\n          setTimeout(() => {\r\n            const length = arrayText.length;\r\n            this.setState((state) => {\r\n              return {\r\n                active: (length > state.active+1 ? state.active+1 : 0),\r\n                step: 1\r\n              }\r\n            });\r\n\r\n            this.rotating()\r\n            }, 1500);\r\n          }, 3000);\r\n        break;\r\n      case \"swirl\":\r\n\r\n        if(_.isString(arrayText[this.state.active+1])) {\r\n          const wordNext = arrayText[arrayText.length >= this.state.active+1 ? this.state.active+1 : 0].split(\"\").length;\r\n          const wordPrev = arrayText[this.state.active].split(\"\").length;\r\n\r\n          this.setState({\r\n            step: wordNext > wordPrev ? wordNext : wordPrev\r\n          });\r\n        }\r\n\r\n        setTimeout(() => {\r\n\r\n          const letterChanging = setInterval(() => {\r\n            if(this.state.index < this.state.step) {\r\n              this.setState((state) => ({index: state.index+1}))\r\n            } else {\r\n              clearInterval(letterChanging);\r\n              setTimeout(() => {\r\n                const length = arrayText.length > this.state.active+1;\r\n                this.setState((state) => ({ active: length ? state.active+1 : 0, index: -1 }));\r\n                this.rotating();\r\n              }, 500)\r\n            }\r\n          }, 100)\r\n        }, 1000);\r\n\r\n        break;\r\n      case \"blinds\":\r\n\r\n        if(_.isString(arrayText[this.state.active+1])) {\r\n          const wordNext = arrayText[arrayText.length >= this.state.active+1 ? this.state.active+1 : 0].split(\"\").length;\r\n          const wordPrev = arrayText[this.state.active].split(\"\").length;\r\n\r\n          this.setState({\r\n            step: wordNext > wordPrev ? wordNext : wordPrev\r\n          });\r\n        }\r\n\r\n        setTimeout(() => {\r\n\r\n          const letterChanging = setInterval(() => {\r\n            if(this.state.index < this.state.step) {\r\n              this.setState((state) => ({index: state.index+1}))\r\n            } else {\r\n              clearInterval(letterChanging);\r\n              setTimeout(() => {\r\n                const length = arrayText.length > this.state.active+1;\r\n                this.setState((state) => ({ active: length ? state.active+1 : 0, index: -1 }));\r\n                this.rotating();\r\n              }, 500)\r\n            }\r\n          }, 100)\r\n        }, 1000);\r\n\r\n        break;\r\n      case \"dropIn\":\r\n\r\n        setTimeout(() => {\r\n          const wordNext = arrayText.length > this.state.active+1 ? this.state.active+1 : 0;\r\n\r\n          this.setState({\r\n            active: wordNext\r\n          })\r\n\r\n          this.rotating();\r\n        }, 4000)\r\n        break;\r\n      case \"wave\":\r\n\r\n        if(_.isString(arrayText[this.state.active+1])) {\r\n          let wordNext = \"\";\r\n\r\n          if(arrayText[arrayText.length >= this.state.active+1 ? this.state.active+1 : 0]) {\r\n            wordNext = arrayText[arrayText.length >= this.state.active+1 ? this.state.active+1 : 0].split(\"\").length\r\n          }\r\n\r\n          const wordPrev = arrayText[this.state.active].split(\"\").length;\r\n\r\n          this.setState({\r\n            step: wordNext > wordPrev ? wordNext : wordPrev\r\n          });\r\n        }\r\n\r\n        setTimeout(() => {\r\n          const letterChanging = setInterval(() => {\r\n            if(this.state.index < this.state.step) {\r\n              this.setState((state) => ({index: state.index+1}))\r\n            } else {\r\n              clearInterval(letterChanging);\r\n              setTimeout(() => {\r\n                const length = arrayText.length > this.state.active+1;\r\n                this.setState((state) => ({ active: length ? state.active+1 : 0, index: -1 }));\r\n                this.rotating();\r\n              }, 500)\r\n            }\r\n          }, 100)\r\n        }, 1000);\r\n        break;\r\n      case \"slide\":\r\n        if(this.widthRef.current) {\r\n          const length = arrayText.length - 1;\r\n          setTimeout(() => {\r\n            this.setState((state) => ({active: this.state.active+1 < length ? state.active+1 : -1}))\r\n            this.rotating()\r\n          }, 4000)\r\n        }\r\n        break;\r\n      case \"slideDown\":\r\n        if(this.widthRef.current) {\r\n          const length = arrayText.length - 1;\r\n          setTimeout(() => {\r\n            this.setState((state) => ({active: this.state.active+1 < length ? state.active+1 : -1}))\r\n            this.rotating()\r\n          }, 5000)\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  typing() {\r\n    let length = 0;\r\n\r\n    if(this.props.text.split(\"\\n\")[this.state.index].split(\"\")) {\r\n      length = this.props.text.split(\"\\n\")[this.state.index].split(\"\").length\r\n    }\r\n\r\n    setTimeout(() => {\r\n      if(length >= this.state.active + 1) {\r\n        this.setState((state) => ({ active: state.active+1 }));\r\n        this.typing()\r\n      } else {\r\n        this.rotating()\r\n      }\r\n    }, 150);\r\n  }\r\n\r\n  setStep(value) {\r\n    console.log(value)\r\n    this.setState({ step: value })\r\n  };\r\n\r\n  render() {\r\n    let classes = [(this.props.prefix ? \"altrp-\" + this.props.prefix + \"-animating-rotating\" : \" \"), \"altrp-animating-rotating\", \"altrp-animating-text\"];\r\n    const textArray = this.props.text.split(\"\\n\");\r\n    let text = textArray[this.state.index];\r\n    let styles = {};\r\n\r\n    switch (this.props.type) {\r\n      case \"typing\":\r\n        classes.push(\"altrp-animating-rotating-line\");\r\n        classes.push(\"altrp-animating-rotating-line-pulse\");\r\n\r\n        if(this.state.step === 1) {\r\n          classes.push(\"altrp-animating-rotating-typing-delete\");\r\n        } else {\r\n          const letters = textArray[this.state.index].split(\"\");\r\n\r\n          text = letters.map((letter, idx) => {\r\n            let hide = idx >= this.state.active && this.state.step >= 2 ? \"altrp-animating-rotating-typing-letter-hide\" : \"\";\r\n\r\n            const classNames = [\"altrp-animating-rotating-typing-letter\",\r\n              hide\r\n            ];\r\n            return (\r\n              <span key={idx} className={_.join(classNames, \" \")}>\r\n                {\r\n                  letter\r\n                }\r\n              </span>\r\n            )\r\n          });\r\n        }\r\n        break;\r\n      case \"clip\":\r\n        let stylesClip = {\r\n          width: this.state.width,\r\n          overflow: \"hidden\"\r\n        };\r\n\r\n        text = (\r\n          <React.Fragment>\r\n            <div style={stylesClip}>\r\n              {\r\n                textArray.map((word, idx) => {\r\n                  const classNames = \"altrp-animating-rotating-clip-word\" +\r\n                    (this.state.active !== idx ? \" altrp-animating-rotating-clip-hide\" : \"\");\r\n\r\n                  return (\r\n                    <span\r\n                      key={idx}\r\n                      ref={(this.state.active !== idx ? null : this.clipRef)}\r\n                      className={classNames}>\r\n                      {\r\n                        word\r\n                      }\r\n                    </span>\r\n                  )\r\n                })\r\n              }\r\n            </div>\r\n            <span className=\"altrp-animating-rotating-clip-line\" />\r\n          </React.Fragment>\r\n        );\r\n        break;\r\n      case \"flip\":\r\n\r\n        classes.push(\"altrp-animating-rotating-flip-container\");\r\n\r\n        let animationTransform = \"altrp-animating-rotating-flip-container-showing\";\r\n        if(this.state.step === 0) {\r\n          animationTransform = \"altrp-animating-rotating-flip-container-hiding\"\r\n        } else if(this.state.step === 1) {\r\n          animationTransform = \"altrp-animating-rotating-flip-container-showing\"\r\n        }\r\n        classes.push(animationTransform);\r\n\r\n        styles = {\r\n          ...styles,\r\n          transform: `rotateX(${this.state.style.transform}deg)`\r\n        };\r\n        text = (\r\n          <div\r\n            style={{\r\n              width: this.state.width\r\n            }}\r\n            ref={this.widthRef}\r\n          >\r\n            {\r\n              textArray.map((word, idx) => {\r\n                const classNames = \"altrp-animating-rotating-flip-word\" +\r\n                  (this.state.active !== idx ? \" altrp-animating-rotating-flip-hide\" : \" altrp-animating-rotating-flip-show\");\r\n\r\n                return (\r\n                  <span\r\n                    key={idx}\r\n                    className={classNames}\r\n                  >\r\n                    <span>\r\n                      {\r\n                        word\r\n                      }\r\n                    </span>\r\n                  </span>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n        );\r\n        break;\r\n      case \"swirl\":\r\n        text = (\r\n          <div\r\n            style={{\r\n              width: this.state.width\r\n            }}\r\n            className=\"altrp-animating-rotating-swirl\"\r\n            ref={this.widthRef}\r\n          >\r\n            {\r\n              textArray.map((word, idx) => {\r\n                const classNames = \"altrp-animating-rotating-swirl-word\";\r\n\r\n                return (\r\n                  <span key={idx} className={classNames}>\r\n                {\r\n                  word.split(\"\").map((letter, idxL) => {\r\n                    let classNames = \"altrp-animating-rotating-swirl-letter\";\r\n                    if(this.state.active !== idx) {\r\n                      classNames += \" altrp-animating-rotating-swirl-letter-hide\"\r\n                    }\r\n\r\n                    if((textArray.length > this.state.active + 1 ? this.state.active + 1 : 0) === idx) {\r\n                      if(idxL <= this.state.index) {\r\n                        classNames += \" altrp-animating-rotating-swirl-letter-showing\"\r\n                      }\r\n                    }\r\n\r\n                    if(this.state.active === idx && idxL <= this.state.index) {\r\n                      classNames += \" altrp-animating-rotating-swirl-letter-hiding\"\r\n                    }\r\n\r\n                    return (\r\n                      <div key={idxL} className={classNames}>\r\n                        {\r\n                          letter\r\n                        }\r\n                      </div>\r\n                    )\r\n                  })\r\n                }\r\n              </span>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n        )\r\n        break;\r\n      case \"blinds\":\r\n        text = (\r\n          <div\r\n            style={{\r\n              width: this.state.width\r\n            }}\r\n            className=\"altrp-animating-rotating-blinds\"\r\n            ref={this.widthRef}\r\n          >\r\n            {\r\n              textArray.map((word, idx) => {\r\n                const classNames = \"altrp-animating-rotating-blinds-word\";\r\n\r\n                return (\r\n                  <span key={idx} className={classNames}>\r\n                {\r\n                  word.split(\"\").map((letter, idxL) => {\r\n                    let classNames = \"altrp-animating-rotating-blinds-letter\";\r\n                    if(this.state.active !== idx) {\r\n                      classNames += \" altrp-animating-rotating-blinds-letter-hide\"\r\n                    }\r\n\r\n                    if((textArray.length > this.state.active + 1 ? this.state.active + 1 : 0) === idx) {\r\n                      if(idxL <= this.state.index) {\r\n                        classNames += \" altrp-animating-rotating-blinds-letter-showing\"\r\n                      }\r\n                    }\r\n\r\n                    if(this.state.active === idx && idxL <= this.state.index) {\r\n                      classNames += \" altrp-animating-rotating-blinds-letter-hiding\"\r\n                    }\r\n\r\n                    return (\r\n                      <div key={idxL} className={classNames}>\r\n                        {\r\n                          letter\r\n                        }\r\n                      </div>\r\n                    )\r\n                  })\r\n                }\r\n              </span>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n        )\r\n        break;\r\n      case \"dropIn\":\r\n        let stylesDropIn = {\r\n          width: this.state.width,\r\n        };\r\n\r\n        text = (\r\n          <div\r\n            style={stylesDropIn}\r\n            className=\"altrp-animating-rotating-drop-in\"\r\n            ref={this.widthRef}\r\n          >\r\n            {\r\n              textArray.map((word, idx) => {\r\n                let classNames = \"altrp-animating-rotating-drop-in-word\"\r\n\r\n                const activePrev = this.state.active - 1 >= 0 ? this.state.active - 1 : textArray.length - 1;\r\n\r\n                if(this.state.active !== idx) {\r\n                  if(activePrev === idx) {\r\n                    classNames += \" altrp-animating-rotating-drop-in-hiding\"\r\n                  } else {\r\n                    classNames += \" altrp-animating-rotating-drop-in-hide\"\r\n                  }\r\n                } else {\r\n                  classNames += \" altrp-animating-rotating-drop-in-show\"\r\n                }\r\n\r\n                return (\r\n                  <span\r\n                    key={idx}\r\n                    className={classNames}>\r\n                      {\r\n                        word\r\n                      }\r\n                    </span>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n        );\r\n        break;\r\n      case \"wave\":\r\n        text = (\r\n          <div\r\n            style={{\r\n              width: this.state.width\r\n            }}\r\n            className=\"altrp-animating-rotating-wave\"\r\n            ref={this.widthRef}\r\n          >\r\n            {\r\n              textArray.map((word, idx) => {\r\n                const classNames = \"altrp-animating-rotating-wave-word\";\r\n\r\n                return (\r\n                  <span key={idx} className={classNames}>\r\n                {\r\n                  word.split(\"\").map((letter, idxL) => {\r\n                    let classNames = \"altrp-animating-rotating-wave-letter\";\r\n                    if(this.state.active !== idx) {\r\n                      classNames += \" altrp-animating-rotating-wave-letter-hide\"\r\n                    }\r\n\r\n                    if((textArray.length > this.state.active + 1 ? this.state.active + 1 : 0) === idx) {\r\n                      if(idxL <= this.state.index) {\r\n                        classNames += \" altrp-animating-rotating-wave-letter-showing\"\r\n                      }\r\n                    }\r\n\r\n                    if(this.state.active === idx && idxL <= this.state.index) {\r\n                      classNames += \" altrp-animating-rotating-wave-letter-hiding\"\r\n                    }\r\n\r\n                    return (\r\n                      <div key={idxL} className={classNames}>\r\n                        {\r\n                          letter\r\n                        }\r\n                      </div>\r\n                    )\r\n                  })\r\n                }\r\n              </span>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n        )\r\n        break;\r\n      case \"slide\":\r\n        let stylesSlide = {\r\n          width: this.state.width,\r\n        };\r\n\r\n        text = (\r\n          <div\r\n            style={stylesSlide}\r\n            ref={this.widthRef}\r\n            className=\"altrp-animating-rotating-slide\"\r\n          >\r\n            {\r\n              textArray.map((word, idx) => {\r\n                let classNames = \" altrp-animating-rotating-slide-word\";\r\n                if(this.state.active !== idx) {\r\n                  if((this.state.active + 1 < textArray.length ? this.state.active + 1 : -1) === idx) {\r\n                    classNames += \" altrp-animating-rotating-slide-word-showing\"\r\n                  } else {\r\n                    classNames += \" altrp-animating-rotating-slide-word-hiding\"\r\n                  }\r\n                } else {\r\n                  classNames += \" altrp-animating-rotating-slide-word-hiding\"\r\n                }\r\n\r\n                return (\r\n                  <span\r\n                    key={idx}\r\n                    className={classNames}>\r\n                      {\r\n                        word\r\n                      }\r\n                  </span>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n        );\r\n        break;\r\n      case \"slideDown\":\r\n        let stylesSlideDown = {\r\n          width: this.state.width,\r\n        };\r\n\r\n        text = (\r\n          <div\r\n            style={stylesSlideDown}\r\n            ref={this.widthRef}\r\n            className=\"altrp-animating-rotating-slide-down\"\r\n          >\r\n            {\r\n              textArray.map((word, idx) => {\r\n                let classNames = \" altrp-animating-rotating-slide-down-word\";\r\n                if(this.state.active !== idx) {\r\n                  if((this.state.active + 1 < textArray.length ? this.state.active + 1 : 0) === idx) {\r\n                    classNames += \" altrp-animating-rotating-slide-down-word-showing\"\r\n                  } else {\r\n                    classNames += \" altrp-animating-rotating-slide-down-word-hiding\"\r\n                  }\r\n                } else {\r\n                  classNames += \" altrp-animating-rotating-slide-down-word-hiding\"\r\n                }\r\n\r\n                return (\r\n                  <span\r\n                    key={idx}\r\n                    className={classNames}>\r\n                      {\r\n                        word\r\n                      }\r\n                    </span>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n        );\r\n        break;\r\n\r\n    }\r\n\r\n    return (\r\n      <span\r\n        className={_.join(classes, \" \")}\r\n        style={styles}\r\n      >\r\n        {\r\n          text\r\n        }\r\n      </span>\r\n    )\r\n\r\n    // return <AnimationEngine from={{\r\n    //   width: 0\r\n    // }}>\r\n    //   <div>\r\n    //     help\r\n    //   </div>\r\n    // </AnimationEngine>\r\n  }\r\n}\r\n\r\nexport default Rotating;\r\n","import React, {Component} from 'react';\r\nimport CircleIcon from \"../../../.././../svgs/highlighted/circle.svg\";\r\nimport CurlyIcon from \"../../../.././../svgs/highlighted/curly.svg\";\r\nimport UnderlineIcon from \"../../../../../svgs/highlighted/underline.svg\";\r\nimport DoubleIcon from \"../../../../../svgs/highlighted/double.svg\";\r\nimport DoubleUnderlineIcon from \"../../../../../svgs/highlighted/double_underline.svg\";\r\nimport UnderlineZigzagIcon from \"../../../../../svgs/highlighted/underline_zigzag.svg\";\r\nimport DiagonalIcon from \"../../../../../svgs/highlighted/diagonal.svg\";\r\nimport StrikethroughIcon from \"../../../../../svgs/highlighted/strikethrough.svg\";\r\nimport XIcon from \"../../../../../svgs/highlighted/x.svg\";\r\nimport (\"./highlighted.scss\");\r\n\r\nclass Highlighted extends Component {\r\n  render() {\r\n    let svgClasses = \"altrp-animating-highlighted-svg\";\r\n    let shape = \"\";\r\n    const bringToFront = this.props.bringToFront || false;\r\n    const roundedEdges = this.props.roundedEdges || false;\r\n\r\n    if(roundedEdges) {\r\n      svgClasses += \" altrp-animating-highlighted-rounded-edges\"\r\n    }\r\n\r\n    if(bringToFront) {\r\n      svgClasses += \" altrp-animating-highlighted-bring-to-front\"\r\n    }\r\n\r\n    if(this.props.shape) {\r\n      svgClasses += ` altrp-animating-highlighted-${this.props.shape}`\r\n\r\n      switch (this.props.shape) {\r\n        case \"circle\":\r\n          shape = <CircleIcon/>\r\n          break\r\n        case \"curly\":\r\n          shape = <CurlyIcon/>\r\n          break\r\n        case \"underline\":\r\n          shape = <UnderlineIcon/>\r\n          break\r\n        case \"double\":\r\n          shape = <DoubleIcon/>\r\n          break\r\n        case \"doubleUnderline\":\r\n          shape = <DoubleUnderlineIcon/>\r\n          break\r\n        case \"underlineZigzag\":\r\n          shape = <UnderlineZigzagIcon/>\r\n          break\r\n        case \"diagonal\":\r\n          shape = <DiagonalIcon/>\r\n          break\r\n        case \"strikethrough\":\r\n          shape = <StrikethroughIcon/>\r\n          break\r\n        case \"x\":\r\n          shape = <XIcon/>\r\n          break\r\n      }\r\n    } else {\r\n      svgClasses += \" altrp-animating-highlighted-circle\"\r\n    }\r\n\r\n    return (\r\n      <span className=\"altrp-animating-highlighted\">\r\n        <span className=\"altrp-animating-highlighted-text altrp-animating-text\">\r\n          {\r\n            this.props.text\r\n          }\r\n        </span>\r\n        <span className={svgClasses}>\r\n          {\r\n            shape\r\n          }\r\n        </span>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Highlighted;\r\n","import Rotating from \"../animations/text/rotating/Rotating\";\nimport Highlighted from \"../animations/text/highlighted/Highlighted\";\n\nclass Animating extends Component {\n  render() {\n    let animating = \"\";\n\n    const settings = this.props.settings;\n    const beforeText = this.props.getContent('text_before_animating');\n    const afterText = this.props.getContent('text_after_animating');\n    const htmlTag = settings.html_tag_animating || \"h2\";\n    const prefix = \"heading\";\n    const text_highlighted_animating = this.props.getContent('text_highlighted_animating')\n    if(settings.style_animating === \"highlighted\") {\n\n      animating = <Highlighted\n        shape={settings.shape_animating}\n        text={text_highlighted_animating}\n        bringToFront={settings.bring_to_front_shape_animating}\n        roundedEdges={settings.rounded_edges_shape_animating}\n        prefix={prefix}\n      />\n    } else if(settings.style_animating === \"rotating\") {\n\n      animating = <Rotating\n        type={settings.animation_animating}\n        prefix={prefix}\n        text={settings.text_rotating_animating}\n      />\n    }\n\n    return <div className=\"altrp-heading-animating\">\n      {\n        React.createElement(htmlTag, {\n          className: \"altrp-heading-animating-tag\"\n        },\n          (\n            <React.Fragment>\n              {\n                beforeText ? (\n                  <span\n                    className=\"altrp-heading-no-animating-text\"\n                    dangerouslySetInnerHTML={{ __html: beforeText }}\n                  />\n                ) : null\n              }\n              &nbsp;\n              {\n                animating\n              }\n              &nbsp;\n              {\n                afterText ? (\n                  <span\n                    className=\"altrp-heading-no-animating-text\"\n                    dangerouslySetInnerHTML={{ __html: afterText }}\n                  />\n                ) : null\n              }\n            </React.Fragment>\n          )\n        )\n      }\n    </div>\n  }\n}\n\nexport default Animating;\n","import Animating from \"../altrp-heading/Animating\";\n\n(window.globalDefaults = window.globalDefaults || []).push(`\n.altrp-heading {\n  margin-top: 5px;\n  margin-right: 0;\n  margin-bottom: 5px;\n  margin-left: 0;\n  padding-top: 0;\n  padding-right: 0;\n  padding-bottom: 0;\n  padding-left: 0;\n  background-position: top left;\n  background-attachment: scroll;\n  background-repeat: repeat;\n}\n\n.altrp-heading-advanced-wrapper {\n  position: absolute;\n  left: 0;\n  margin: 0;\n  z-index: -1;\n  width: 100%;\n  top: 0;\n  box-sizing: border-box;\n}\n\n.altrp-heading-advanced {\n  display: inline-block;\n  margin: 0;\n}\n\n.altrp-heading-advanced-main-fill {\n  background-clip: unset;\n  text-fill-color: transparent;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  -webkit-transition-property: prop;\n  -moz-transition-property: prop;\n  -ms-transition-property: prop;\n  -o-transition-property: prop;\n  transition-property: prop;\n}\n\n.altrp-heading {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.altrp-heading-wrapper {\n  display: flex;\n}\n\n.altrp-heading-wrapper-sub-top {\n  flex-direction: column-reverse;\n}\n\n.altrp-heading-sub {\n  margin: 0;\n  display: flex;\n  padding: 0;\n}\n\n.altrp-heading-sub-link {\n  display: flex;\n}\n\n.altrp-heading-sub-container-link {\n  margin: 0;\n}\n\n.altrp-heading-wrapper-sub-left {\n  flex-direction: row-reverse;\n  align-items: center;\n}\n\n.altrp-heading-wrapper-sub-right {\n  flex-direction: row;\n  align-items: center;\n}\n\n.altrp-heading-animating-tag {\n  display: flex;\n}\n\n.altrp-animating-rotating {\n  display: flex;\n}\n\n`)\n\nclass HeadingTypeAnimatingWidget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      settings: props.element.getSettings()\n    };\n    props.element.component = this;\n    if (window.elementDecorator) {\n      window.elementDecorator(this);\n    }\n    if (props.baseRender) {\n      this.render = props.baseRender(this);\n    }\n  }\n\n  render() {\n    return <Animating settings={this.state.settings}\n                      getContent={this.getContent.bind(this)} />\n  }\n}\n\nexport default HeadingTypeAnimatingWidget\n"],"sourceRoot":""}