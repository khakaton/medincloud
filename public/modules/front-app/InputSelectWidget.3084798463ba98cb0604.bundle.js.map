{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./resources/modules/editor/src/js/classes/AltrpModel.js","webpack:///./resources/modules/editor/src/js/components/widgets/InputSelectWidget.js","webpack:///./resources/modules/front-app/src/js/store/forms-data-storage/actions.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_assertThisInitialized","self","ReferenceError","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","TypeError","prototype","create","constructor","_iterableToArray","iter","Symbol","iterator","from","_possibleConstructorReturn","call","_setPrototypeOf","p","_taggedTemplateLiteral","strings","raw","slice","freeze","defineProperties","_toConsumableArray","isArray","arrayLikeToArray","iterableToArray","unsupportedIterableToArray","_typeof","_unsupportedIterableToArray","minLen","n","toString","name","test","AltrpModel","data","this","cloneDeep","clone","isEmpty","defaultValue","get","has","getData","set","unset","window","altrpHelpers","convertData","isEditor","parseOptionsFromSettings","parseParamsFromString","replaceContentWithData","renderAssetIcon","renderAsset","Resource","getDataFromLocalStorage","Button","altrpLibs","Blueprint","MenuItem","Select","BlueprintSelect","globalDefaults","push","AltrpFieldContainer","styled","div","settings","content_label_position_type","InputSelectWidget","props","timeInput","onChange","e","element","getSettings","target","_","setState","state","indexOf","content_type","dispatchFieldValueToStore","userInput","formId","getFormId","fieldName","getFieldId","isObject","appStore","dispatch","changeFormFieldValue","change_actions","actionsManager","default","callAllWidgetActions","getIdForAction","getValue","getState","renderRightIcon","right_icon","getResponsiveSetting","className","renderLeftIcon","left_icon","onClick","createNewItemFromQuery","title","label","createNewItemRenderer","query","active","handleClick","options","find","option","text","replace","getCurrentModel","icon","shouldDismissPopover","component","elementDecorator","getContent","valueMustArray","paramsForUpdate","popoverProps","usePortal","position","minimal","portalClassName","getId","widgetDisabled","portalContainer","EditorFrame","contentWindow","document","body","altrpSelectRef","React","createRef","prevProps","prevState","getName","model_for_options","route","getRoute","getAll","currentModel","getProperty","contentLoaded","currentDataStorage","url","content_options","isEqual","dynamic","formsStore","updateOptions","updateValue","content_calculation","altrpforms","prevContext","altrpdata","altrpmodel","altrpuser","currentUser","altrppagestate","altrpPageState","altrpresponses","altrpmeta","altrpMeta","context","currentDataStorageLoaded","changedField","altrpstorage","eval","console","error","message","path","formData","JSON","stringify","getQueried","filters","create_url","params","resource","post","res","unshift","optionsDynamicSetting","getDynamicSetting","sortBy","getOptions","getCurrentLabel","label_icon","classLabel","styleLabel","marginBottom","label_style_spacing","size","unit","marginTop","marginRight","zIndex","content_label","style","content_required","assetType","input","placeholder","content_readonly","no_results_text","inputProps","itemsOptions","position_css_classes","position_css_id","disabled","itemRenderer","item","modifiers","matchesPredicate","itemPredicate","undefined","toLowerCase","items","noResults","onItemSelect","id","rightIcon","Component","CHANGE_FORM_FIELD_VALUE","CLEAR_FORM_FIELD_VALUE","type"],"mappings":"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","file":"InputSelectWidget.3084798463ba98cb0604.bundle.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","/**\r\n * Имеет интерфейс для доступы к свойствам data (любой вложенности)\r\n * @class AltrpModel\r\n */\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport get from 'lodash.get';\r\nimport set from 'lodash.set';\r\nimport has from 'lodash.has';\r\nimport unset from 'lodash.unset';\r\nimport isEmpty from 'lodash.isempty';\r\n// import {cloneDeep, get, set, has, unset, isString, isEmpty} from \"lodash\";\r\n\r\nclass AltrpModel {\r\n  constructor(data = {}) {\r\n    this.data = cloneDeep(data);\r\n  }\r\n\r\n  /**\r\n   * Возваращает объект данных\r\n   * @params {boolean} clone - клонировать или ссылку на данные\r\n   * @return {{}}\r\n   */\r\n  getData(clone = true) {\r\n    if(clone){\r\n      return cloneDeep(this.data);\r\n    }\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Пустой ли объект\r\n   */\r\n  isEmpty(){\r\n    return isEmpty(this.data);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  getProperty(name, defaultValue = '') {\r\n    return get(this.data, name, defaultValue);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  hasProperty(name, defaultValue = '') {\r\n    return has(this.data, name);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {{}}\r\n   */\r\n  setProperty(name, value = '') {\r\n    if(value instanceof AltrpModel){\r\n      value = value.getData(false);\r\n    }\r\n    return set(this.data, name, value);\r\n  }\r\n  /**\r\n   * Удаляет свойства name\r\n   * @params {string} name\r\n   * @return {*}\r\n   */\r\n  unsetProperty(name) {\r\n    return unset(this.data, name);\r\n  }\r\n}\r\nwindow.AltrpModel = AltrpModel;\r\nexport default AltrpModel\r\n","const {\r\n  convertData,\r\n  isEditor,\r\n  parseOptionsFromSettings,\r\n  parseParamsFromString,\r\n  replaceContentWithData,\r\n  renderAssetIcon,\r\n  renderAsset,\r\n  Resource,\r\n  getDataFromLocalStorage\r\n} = window.altrpHelpers;\r\nimport {changeFormFieldValue} from \"../../../../../front-app/src/js/store/forms-data-storage/actions\";\r\nimport AltrpModel from \"../../classes/AltrpModel\";\r\nconst Button = window.altrpLibs.Blueprint.Button;\r\nconst MenuItem = window.altrpLibs.Blueprint.MenuItem;\r\nconst Select = window.altrpLibs.BlueprintSelect.Select;\r\n\r\n(window.globalDefaults = window.globalDefaults || []).push(`\r\n\r\n.altrp-field {\r\n  border-style: solid;\r\n  width: 100%;\r\n}\r\n.altrp-field-file{\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n}\r\n.altrp-portal_input-select .bp3-menu{\r\n  max-height: 300px;\r\n  overflow: auto;\r\n}\r\n.altrp-widget_input-select .bp3-icon_right{\r\n    margin:  0 0 0 7px;\r\n}\r\n.bp3-icon_text-widget img{\r\n  width: 16px;\r\n  height: 16px;\r\n  object-fit: contain;\r\n  pointer-events: none;\r\n}\r\n.bp3-icon_text-widget svg{\r\n  width: 16px;\r\n  height: 16px;\r\n  pointer-events: none;\r\n}\r\n.altrp-widget_input-select.altrp-widget_input-select .bp3-icon:first-child:last-child{\r\n   margin: 0;\r\n}\r\n.altrp-widget_input-select .bp3-popover-wrapper{\r\n  overflow: hidden;\r\n  display: flex;\r\n}\r\n.altrp-widget_input-select .bp3-popover-target > div{\r\n  width: 100%;\r\n}\r\n.altrp-widget_input-select .bp3-popover-target{\r\n  display: flex;\r\n  flex-grow: 1;\r\n}\r\n.altrp-widget_input-select .bp3-popover-target .bp3-button{\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n  /*flex-direction: row-reverse;*/\r\n\r\n}\r\n.altrp-widget_input-select .bp3-popover-target .bp3-button .bp3-button-text{\r\n  flex-grow: 1;\r\n}\r\n.altrp-label-icon svg,\r\n.altrp-label-icon img {\r\n  width: 20px;\r\n}\r\n.altrp-label-icon svg{\r\n  height: 20px;\r\n}\r\n.altrp-field-file__field{\r\n  display: none;\r\n}\r\n.altrp-field-file__placeholder{\r\n  display: none;\r\n}\r\n.altrp-field-file_empty .altrp-field-file__placeholder{\r\n  display: block;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  cursor: pointer;\r\n  background-color: rgb(52,59,76);\r\n  color: #fff;\r\n}\r\n.input-clear-btn {\r\n  background: transparent;\r\n  padding: 0;\r\n  position: absolute;\r\n  bottom: calc(50% - 7px);\r\n  right: 15px;\r\n  display: none;\r\n}\r\n.input-clear-btn:hover {\r\n  font-weight: bold;\r\n}\r\n.altrp-field:hover + .input-clear-btn, .input-clear-btn:hover {\r\n  display: block;\r\n}\r\n.altrp-input-wrapper, .altrp-field-select2 {\r\n  position: relative;\r\n  flex-grow: 1;\r\n}\r\n.altrp-field-label--required::after {\r\n  content: \"*\";\r\n  color: red;\r\n  font-size: inherit;\r\n  padding-left: 10px;\r\n}\r\n.altrp-field-label {\r\n  font-size: 16px;\r\n  font-family: \"Open Sans\";\r\n  line-height: 1.5;\r\n  letter-spacing: 0;\r\n}\r\n.altrp-field-select2__single-value, .altrp-field {\r\n  font-size: 16px;\r\n  font-family: \"Open Sans\";\r\n  line-height: 1.5;\r\n  letter-spacing: 0;\r\n}\r\n.altrp-field-select2__control, .altrp-field {\r\n  text-align: left;\r\n  padding-top: 2px;\r\n  padding-right: 2px;\r\n  padding-bottom: 2px;\r\n  padding-left: 2px;\r\n  border-width: 1px;\r\n  border-color: #000;\r\n}\r\n.altrp-field-select2__control:hover{\r\n  border-width: 1px;\r\n  border-color: #000;\r\n}\r\n.altrp-field-container {\r\n  margin: 0;\r\n}\r\n.altrp-field::placeholder, .altrp-field-select2__placeholder {\r\n  font-size: 13px;\r\n  font-family: \"Open Sans\";\r\n  line-height: 1.5;\r\n  letter-spacing: 0;\r\n}\r\n.altrp-image-select {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n}\r\n.altrp-image-select img {\r\n  flex-grow: 1;\r\n  object-fit: contain;\r\n}\r\n.altrp-field {\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n.altrp-field.active {\r\n  border-color: lightcoral;\r\n}\r\n.altrp-field-label {\r\n  text-align: center;\r\n  display: block;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__single-value {\r\n  font-size: 14px;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__indicator-separator {\r\n  display: none;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__indicator {\r\n  align-items: center;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__control {\r\n  width: 100px;\r\n  min-height: 32px;\r\n  padding: 0;\r\n  border-radius: 0;\r\n  outline: none;\r\n  border-color: rgb(142,148,170);\r\n  -webkit-box-shadow: none;\r\n  -moz-box-shadow: none;\r\n  box-shadow: none;\r\n}\r\n.altrp-pagination__select-size .altrp-field-select2__control input {\r\n  border: none;\r\n}\r\n.altrp-field-select2 {\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  pointer-events: none;\r\n}\r\n.altrp-field-select2__control {\r\n  webkit-align-items: center;\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  align-items: center;\r\n  background-color: hsl(0,0%,100%);\r\n  border-color: hsl(0,0%,80%);\r\n  border-style: solid;\r\n  border-width: 1px;\r\n  cursor: default;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-flex-wrap: wrap;\r\n  -ms-flex-wrap: wrap;\r\n  flex-wrap: wrap;\r\n  -webkit-box-pack: justify;\r\n  -webkit-justify-content: space-between;\r\n  -ms-flex-pack: justify;\r\n  justify-content: space-between;\r\n  min-height: 38px;\r\n  outline: 0 !important;\r\n  position: relative;\r\n  -webkit-transition: all 100ms;\r\n  transition: all 100ms;\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__value-container {\r\n  -webkit-align-items: center;\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  align-items: center;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-flex: 1;\r\n  -ms-flex: 1;\r\n  flex: 1;\r\n  -webkit-flex-wrap: wrap;\r\n  -ms-flex-wrap: wrap;\r\n  flex-wrap: wrap;\r\n  padding: 2px 8px;\r\n  -webkit-overflow-scrolling: touch;\r\n  position: relative;\r\n  overflow: hidden;\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__single-value {\r\n  color: hsl(0,0%,20%);\r\n  margin-left: 2px;\r\n  margin-right: 2px;\r\n  max-width: calc(100% - 8px);\r\n  overflow: hidden;\r\n  position: absolute;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  top: 50%;\r\n  -webkit-transform: translateY(-50%);\r\n  -ms-transform: translateY(-50%);\r\n  transform: translateY(-50%);\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__indicators {\r\n  -webkit-align-items: center;\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  align-items: center;\r\n  -webkit-align-self: stretch;\r\n  -ms-flex-item-align: stretch;\r\n  align-self: stretch;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-flex-shrink: 0;\r\n  -ms-flex-negative: 0;\r\n  flex-shrink: 0;\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__indicator-separator {\r\n  -webkit-align-self: stretch;\r\n  -ms-flex-item-align: stretch;\r\n  align-self: stretch;\r\n  background-color: hsl(0,0%,80%);\r\n  margin-bottom: 8px;\r\n  margin-top: 8px;\r\n  width: 1px;\r\n  box-sizing: border-box;\r\n}\r\n.altrp-field-select2__indicator {\r\n  color: hsl(0,0%,80%);\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  padding: 8px;\r\n  -webkit-transition: color 150ms;\r\n  transition: color 150ms;\r\n  box-sizing: border-box;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.tba-placeholder {\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n}\r\n.altrp-field-subgroup {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n.altrp-field-option {\r\n  display: flex;\r\n  padding: 10px;\r\n}\r\n.altrp-field-option__label {\r\n  cursor: pointer;\r\n}\r\ntextarea.altrp-field {\r\n  display: block;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__placeholder {\r\n  white-space: nowrap;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__single-value {\r\n  font-size: 14px;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__indicator-separator {\r\n  display: none;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__indicator {\r\n  align-items: center;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__control {\r\n  width: 100%;\r\n  min-height: 19px;\r\n  padding: 0;\r\n  border-radius: 0;\r\n  outline: none;\r\n  border-color: rgb(142, 148, 170);\r\n  -webkit-box-shadow: none;\r\n  -moz-box-shadow: none;\r\n  box-shadow: none;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__control input {\r\n  border: none;\r\n}\r\n.altrp-table__filter-select .altrp-field-select2__value-container {\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n  line-height: 13px;\r\n}\r\n.altrp-field-required {\r\n  color: red;\r\n  font-size: 18px;\r\n  padding-left: 10px;\r\n}\r\n.altrp-field-container-label {\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\n.altrp-field-label-container-left {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.altrp-field-label-container {\r\n  display: inline-flex;\r\n  align-items: center;\r\n}\r\n.altrp-field-select2__indicator.altrp-field-select2__dropdown-indicator {\r\n  padding: 0 8px;\r\n  max-height: 14px;\r\n  overflow: hidden;\r\n}\r\n.altrp-field-select2 .altrp-field-select2__value-container {\r\n  padding: 0px 8px;\r\n}\r\n.altrp-field-select2 .css-b8ldur-Input {\r\n  padding-bottom: 0px;\r\n  padding-top: 0px;\r\n  margin: 0 2px;\r\n}\r\n.altrp-field-select2 .altrp-field-select2__control {\r\n  min-height: 14px;\r\n}\r\n`)\r\n\r\nconst AltrpFieldContainer = styled.div`\r\n  ${({settings: {content_label_position_type}}) => {\r\n  switch (content_label_position_type) {\r\n    case \"left\": {\r\n      return \"display: flex\";\r\n    }\r\n    case \"right\": {\r\n      return \"display:flex;flex-direction:row-reverse;justify-content:flex-end;\";\r\n    }\r\n  }\r\n  return \"\";\r\n}}\r\n`;\r\n\r\nclass InputSelectWidget extends Component {\r\n  timeInput = null;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    props.element.component = this;\r\n    if (window.elementDecorator) {\r\n      window.elementDecorator(this);\r\n    }\r\n    this.defaultValue =\r\n      this.getContent(\"content_default_value\") ||\r\n      (this.valueMustArray() ? [] : \"\");\r\n    if (this.valueMustArray() && !_.isArray(this.defaultValue)) {\r\n      this.defaultValue = [];\r\n    }\r\n    this.state = {\r\n      settings: {...props.element.getSettings()},\r\n      value: this.defaultValue,\r\n      options: parseOptionsFromSettings(\r\n        props.element.getSettings(\"content_options\")\r\n      ),\r\n      paramsForUpdate: null,\r\n    };\r\n    this.popoverProps = {\r\n      usePortal: true,\r\n      position: 'bottom',\r\n      minimal: props.element.getResponsiveSetting('minimal'),\r\n      // isOpen:true ,\r\n      portalClassName: `altrp-portal altrp-portal_input-select altrp-portal${this.props.element.getId()} ${this.state.widgetDisabled ? 'pointer-event-none' : ''}`,\r\n      portalContainer: window.EditorFrame ? window.EditorFrame.contentWindow.document.body : document.body,\r\n    };\r\n    this.altrpSelectRef = React.createRef();\r\n    if (this.getContent(\"content_default_value\")) {\r\n      this.dispatchFieldValueToStore(this.getContent(\"content_default_value\"));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * В некоторых случаях значение поля должно быть массивом\r\n   * @return {boolean}\r\n   */\r\n  valueMustArray() {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Чистит значение\r\n   */\r\n  clearValue() {\r\n    let value = \"\";\r\n    this.onChange(value);\r\n    this.dispatchFieldValueToStore(value, true);\r\n  }\r\n\r\n\r\n  /**\r\n   * Загрузка виджета\r\n   * @param {{}} prevProps\r\n   * @param {{}} prevState\r\n   */\r\n  async _componentDidMount(prevProps, prevState) {\r\n    if (this.props.element.getSettings(\"content_options\")) {\r\n      let options = parseOptionsFromSettings(\r\n        this.props.element.getSettings(\"content_options\")\r\n      );\r\n\r\n      this.setState(state => ({...state, options}));\r\n    } else if (\r\n      [\"input-select\"].indexOf(this.props.element.getName()) >= 0 &&\r\n      this.state.settings.model_for_options\r\n    ) {\r\n      let options = await new Resource({route: this.getRoute()}).getAll();\r\n      options = !_.isArray(options) ? options.data : options;\r\n      options = _.isArray(options) ? options : [];\r\n      this.setState(state => ({...state, options}));\r\n    }\r\n    let value = this.state.value;\r\n\r\n    /**\r\n     * Если динамическое значение загрузилось,\r\n     * то используем this.getContent для получение этого динамического значения\r\n     * старые динамические данные\r\n     * */\r\n    if (\r\n      _.get(value, \"dynamic\") &&\r\n      this.props.currentModel.getProperty(\"altrpModelUpdated\")\r\n    ) {\r\n      value = this.getContent(\"content_default_value\");\r\n    }\r\n\r\n    /**\r\n     * Если модель обновилась при смене URL\r\n     */\r\n    if (\r\n      prevProps &&\r\n      !prevProps.currentModel.getProperty(\"altrpModelUpdated\") &&\r\n      this.props.currentModel.getProperty(\"altrpModelUpdated\")\r\n    ) {\r\n      value = this.getContent(\"content_default_value\");\r\n      this.setState(\r\n        state => ({...state, value, contentLoaded: true}),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    if (\r\n      this.props.currentModel.getProperty(\"altrpModelUpdated\") &&\r\n      this.props.currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\r\n      !this.state.contentLoaded\r\n    ) {\r\n      value = this.getContent(\"content_default_value\");\r\n      this.setState(\r\n        state => ({...state, value, contentLoaded: true}),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n      return;\r\n    }\r\n    if (this.state.value !== value) {\r\n      this.setState(\r\n        state => ({...state, value}),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Получить url для запросов\r\n   */\r\n  getRoute() {\r\n    let url = this.props.element.getSettings(\"model_for_options\");\r\n\r\n    if (url.indexOf(\"/\") === -1) {\r\n      return `/ajax/models/${url}_options`;\r\n    }\r\n    if (url.indexOf(\"{{\") !== -1) {\r\n      url = replaceContentWithData(url);\r\n    }\r\n    return url;\r\n  }\r\n\r\n  /**\r\n   * Обновление виджета\r\n   */\r\n  async _componentDidUpdate(prevProps, prevState) {\r\n    const {content_options, model_for_options} = this.state.settings;\r\n    if (\r\n      prevProps &&\r\n      !prevProps.currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\r\n      this.props.currentDataStorage.getProperty(\"currentDataStorageLoaded\")\r\n    ) {\r\n      let value = this.getContent(\r\n        \"content_default_value\",\r\n        this.props.element.getSettings(\"select2_multiple\")\r\n      );\r\n      this.setState(\r\n        state => ({...state, value, contentLoaded: true}),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n    }\r\n    if (\r\n      this.props.element.getName() === \"input-select\" &&\r\n      this.props.element.getSettings(\"model_for_options\")\r\n    ) {\r\n      if (\r\n        !(\r\n          this.state.settings.model_for_options ===\r\n          prevProps.element.getSettings(\"model_for_options\")\r\n        )\r\n      ) {\r\n        let model_for_options = prevProps.element.getSettings(\r\n          \"model_for_options\"\r\n        );\r\n        let options = await new Resource({route: this.getRoute()}).getAll();\r\n        options = !_.isArray(options) ? options.data : options;\r\n        options = _.isArray(options) ? options : [];\r\n        this.setState(state => ({...state, options, model_for_options}));\r\n      }\r\n    }\r\n    /**\r\n     * Если обновилась модель, то пробрасываем в стор новое значение (старый источник диамических данных)\r\n     */\r\n    if (\r\n      !_.isEqual(this.props.currentModel, prevProps.currentModel) &&\r\n      this.state.value &&\r\n      this.state.value.dynamic\r\n    ) {\r\n      this.dispatchFieldValueToStore(this.getContent(\"content_default_value\"));\r\n    }\r\n\r\n    /**\r\n     * Если обновилось хранилище данных формы, currentDataStorage или модель, то получаем новые опции c сервера\r\n     */\r\n    if (\r\n      this.props.formsStore !== prevProps.formsStore ||\r\n      this.props.currentModel !== prevProps.currentModel ||\r\n      this.props.currentDataStorage !== prevProps.currentDataStorage\r\n    ) {\r\n      this.updateOptions();\r\n    }\r\n    // if (content_options && !model_for_options) {\r\n    //   let options = parseOptionsFromSettings(content_options);\r\n    //   if (!_.isEqual(options, this.state.options)) {\r\n    //     this.setState(state => ({...state, options}));\r\n    //   }\r\n    // }\r\n    this.updateValue(prevProps);\r\n  }\r\n\r\n  /**\r\n   * Обновить значение если нужно\r\n   * @param {{}} prevProps\r\n   */\r\n  updateValue(prevProps) {\r\n    if (isEditor()) {\r\n      return;\r\n    }\r\n    let content_calculation = this.props.element.getSettings(\r\n      \"content_calculation\"\r\n    );\r\n    const altrpforms = this.props.formsStore;\r\n    const fieldName = this.props.element.getFieldId();\r\n    const formId = this.props.element.getFormId();\r\n    if (!content_calculation) {\r\n      /**\r\n       * Обновить значение, если formsStore изменилось из другого компонента\r\n       */\r\n      const path = `${formId}.${fieldName}`;\r\n      if (\r\n        this.props.formsStore !== prevProps.formsStore &&\r\n        _.get(altrpforms, path) !== this.state.value\r\n      ) {\r\n        this.setState(state => ({\r\n          ...state,\r\n          value: _.get(altrpforms, path)\r\n        }));\r\n      }\r\n      return;\r\n    }\r\n\r\n    const prevContext = {};\r\n\r\n    const altrpdata = this.props.currentDataStorage.getData();\r\n    const altrpmodel = this.props.currentModel.getData();\r\n    const altrpuser = this.props.currentUser.getData();\r\n    const altrppagestate = this.props.altrpPageState.getData();\r\n    const altrpresponses = this.props.altrpresponses.getData();\r\n    const altrpmeta = this.props.altrpMeta.getData();\r\n    const context = this.props.element.getCurrentModel().getData();\r\n    if (content_calculation.indexOf(\"altrpdata\") !== -1) {\r\n      context.altrpdata = altrpdata;\r\n      if (!altrpdata.currentDataStorageLoaded) {\r\n        prevContext.altrpdata = altrpdata;\r\n      } else {\r\n        prevContext.altrpdata = prevProps.currentDataStorage.getData();\r\n      }\r\n    }\r\n    if (content_calculation.indexOf(\"altrpforms\") !== -1) {\r\n      context.altrpforms = altrpforms;\r\n      /**\r\n       * Не производим вычисления, если изменилось текущее поле\r\n       */\r\n      if (`${formId}.${fieldName}` === altrpforms.changedField) {\r\n        prevContext.altrpforms = altrpforms;\r\n      } else {\r\n        prevContext.altrpforms = prevProps.formsStore;\r\n      }\r\n    }\r\n    if (content_calculation.indexOf(\"altrpmodel\") !== -1) {\r\n      context.altrpmodel = altrpmodel;\r\n      prevContext.altrpmodel = prevProps.currentModel.getData();\r\n    }\r\n    if (content_calculation.indexOf(\"altrpuser\") !== -1) {\r\n      context.altrpuser = altrpuser;\r\n      prevContext.altrpuser = prevProps.currentUser.getData();\r\n    }\r\n    if (content_calculation.indexOf(\"altrpuser\") !== -1) {\r\n      context.altrpuser = altrpuser;\r\n      prevContext.altrpuser = prevProps.currentUser.getData();\r\n    }\r\n    if (content_calculation.indexOf(\"altrppagestate\") !== -1) {\r\n      context.altrppagestate = altrppagestate;\r\n      prevContext.altrppagestate = prevProps.altrpPageState.getData();\r\n    }\r\n    if (content_calculation.indexOf(\"altrpmeta\") !== -1) {\r\n      context.altrpmeta = altrpmeta;\r\n      prevContext.altrpmeta = prevProps.altrpMeta.getData();\r\n    }\r\n    if (content_calculation.indexOf(\"altrpresponses\") !== -1) {\r\n      context.altrpresponses = altrpresponses;\r\n      prevContext.altrpresponses = prevProps.altrpresponses.getData();\r\n    }\r\n\r\n    if (content_calculation.indexOf(\"altrpstorage\") !== -1) {\r\n      context.altrpstorage = getDataFromLocalStorage(\"altrpstorage\", {});\r\n    }\r\n\r\n    if (\r\n      _.isEqual(prevProps.currentDataStorage, this.props.currentDataStorage) &&\r\n      _.isEqual(prevProps.currentUser, this.props.currentUser) &&\r\n      _.isEqual(prevProps.formsStore, this.props.formsStore) &&\r\n      _.isEqual(prevProps.altrpPageState, this.props.altrpPageState) &&\r\n      _.isEqual(prevProps.altrpMeta, this.props.altrpMeta) &&\r\n      _.isEqual(prevProps.altrpresponses, this.props.altrpresponses) &&\r\n      _.isEqual(prevProps.currentModel, this.props.currentModel)\r\n    ) {\r\n      return;\r\n    }\r\n    if (\r\n      !_.isEqual(prevProps.formsStore, this.props.formsStore) &&\r\n      `${formId}.${fieldName}` === altrpforms.changedField\r\n    ) {\r\n      return;\r\n    }\r\n    let value = \"\";\r\n    try {\r\n      content_calculation = content_calculation\r\n        .replace(/}}/g, \"')\")\r\n        .replace(/{{/g, \"_.get(context, '\");\r\n      value = eval(content_calculation);\r\n      if (value === this.state.value) {\r\n        return;\r\n      }\r\n      this.setState(\r\n        state => ({...state, value}),\r\n        () => {\r\n          this.dispatchFieldValueToStore(value);\r\n        }\r\n      );\r\n    } catch (e) {\r\n      console.error(\r\n        \"Evaluate error in Input \" + e.message,\r\n        this.props.element.getId()\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Обновляет опции для селекта при обновлении данных, полей формы\r\n   */\r\n  async updateOptions() {\r\n    {\r\n      let formId = this.props.element.getFormId();\r\n      let paramsForUpdate = this.props.element.getSettings(\"params_for_update\");\r\n      let formData = _.get(this.props.formsStore, [formId], {});\r\n      paramsForUpdate = parseParamsFromString(\r\n        paramsForUpdate,\r\n        new AltrpModel(formData)\r\n      );\r\n      /**\r\n       * Сохраняем параметры запроса, и если надо обновляем опции\r\n       */\r\n      let options = [...this.state.options];\r\n      if (!_.isEqual(paramsForUpdate, this.state.paramsForUpdate)) {\r\n        if (!_.isEmpty(paramsForUpdate)) {\r\n          if (this.props.element.getSettings(\"params_as_filters\", false)) {\r\n            paramsForUpdate = JSON.stringify(paramsForUpdate);\r\n            options = await new Resource({\r\n              route: this.getRoute()\r\n            }).getQueried({filters: paramsForUpdate});\r\n          } else {\r\n            options = await new Resource({route: this.getRoute()}).getQueried(\r\n              paramsForUpdate\r\n            );\r\n          }\r\n          options = !_.isArray(options) ? options.data : options;\r\n          options = _.isArray(options) ? options : [];\r\n        } else if (this.state.paramsForUpdate) {\r\n          options = await new Resource({route: this.getRoute()}).getAll();\r\n          options = !_.isArray(options) ? options.data : options;\r\n          options = _.isArray(options) ? options : [];\r\n        }\r\n        this.setState(state => ({\r\n          ...state,\r\n          paramsForUpdate,\r\n          options\r\n        }));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Изменение значения в виджете\r\n   * @param e\r\n   */\r\n  onChange = (e)=> {\r\n    let value = \"\";\r\n    let valueToDispatch;\r\n    const settings = this.props.element.getSettings();\r\n    value = e.target.value;\r\n\r\n    if (e && e.value) {\r\n      value = e.value;\r\n    }\r\n\r\n    if (_.isArray(e)) {\r\n      value = _.cloneDeep(e);\r\n    }\r\n    if (\r\n      this.props.element.getSettings(\"content_options_nullable\") &&\r\n      e &&\r\n      e.value === \"<null>\"\r\n    ) {\r\n      value = null;\r\n    }\r\n\r\n    this.setState(\r\n      state => ({\r\n        ...state,\r\n        value\r\n      }),\r\n      () => {\r\n\r\n        if (\r\n          [\"text\", \"email\", \"phone\", \"tel\", \"number\", \"password\"].indexOf(\r\n            this.state.settings.content_type\r\n          ) === -1\r\n        ) {\r\n          this.dispatchFieldValueToStore(\r\n            valueToDispatch !== undefined ? valueToDispatch : value,\r\n            true\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  async onItemSelect(value) {\r\n    if (value.value) {\r\n      value = value.value;\r\n    }\r\n    const options = [...this.state.options];\r\n    const element = this.props.element;\r\n    if(! options.find(option => option.value === value)){\r\n      const create_url = element.getResponsiveSetting('create_url');\r\n      if(element.getResponsiveSetting('create') && create_url){\r\n        this.setState(state =>({...state, widgetDisabled: true}))\r\n        let params = element.getResponsiveSetting('create_params') || '';\r\n        params = params.replace(/\\{\\{__query__\\}\\}/g, value);\r\n        params = parseParamsFromString(params, element.getCurrentModel(), true)\r\n        const resource = new Resource({route: create_url});\r\n        try{\r\n          let res = await resource.post(params)\r\n          if(res.data){\r\n            res = res.data\r\n          }\r\n          options.unshift(res)\r\n        } catch (e) {\r\n\r\n        }finally {\r\n          this.setState(state =>({...state, widgetDisabled: false}))\r\n        }\r\n      } else {\r\n        options.unshift(arguments[0])\r\n      }\r\n    }\r\n    this.setState(state => ({\r\n        ...state,\r\n        options,\r\n        value\r\n      }),\r\n      () => {\r\n        /**\r\n         * Обновляем хранилище\r\n         */\r\n        this.dispatchFieldValueToStore(\r\n          value,\r\n          true\r\n        );\r\n      })\r\n  }\r\n\r\n\r\n  /**\r\n   * получить опции\r\n   */\r\n  getOptions() {\r\n    let options = [...this.state.options];\r\n    const optionsDynamicSetting = this.props.element.getDynamicSetting(\r\n      \"content_options\"\r\n    );\r\n    if (optionsDynamicSetting) {\r\n      options = convertData(optionsDynamicSetting, options);\r\n    }\r\n    if (!this.props.element.getSettings(\"sort_default\")) {\r\n      options = _.sortBy(options, o => o && (o.label ? o.label.toString() : o));\r\n    }\r\n    return options;\r\n  }\r\n\r\n  /**\r\n   * Передадим значение в хранилище формы\r\n   * @param {*} value\r\n   * @param {boolean} userInput true - имзенилось пользователем\r\n   */\r\n  dispatchFieldValueToStore = async (value, userInput = false) => {\r\n    let formId = this.props.element.getFormId();\r\n    let fieldName = this.props.element.getFieldId();\r\n    if (fieldName.indexOf(\"{{\") !== -1) {\r\n      fieldName = replaceContentWithData(fieldName);\r\n    }\r\n    if (_.isObject(this.props.appStore) && fieldName && formId) {\r\n      this.props.appStore.dispatch(\r\n        changeFormFieldValue(fieldName, value, formId, userInput)\r\n      );\r\n      if (userInput) {\r\n        const change_actions = this.props.element.getSettings(\"change_actions\");\r\n\r\n        if (change_actions && !isEditor()) {\r\n          const actionsManager = (\r\n            await import(\r\n              /* webpackChunkName: 'ActionsManager' */\r\n              \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\r\n              )\r\n          ).default;\r\n          await actionsManager.callAllWidgetActions(\r\n            this.props.element.getIdForAction(),\r\n            \"change\",\r\n            change_actions,\r\n            this.props.element\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Взовращает имя для атрибута name\r\n   * @return {string}\r\n   */\r\n  getName() {\r\n    return `${this.props.element.getFormId()}[${this.props.element.getFieldId()}]`;\r\n  }\r\n\r\n  escapeRegExpChars(text) {\r\n    return text.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @returns {*}\r\n   */\r\n  getValue = () => {\r\n    let value;\r\n    let formId = this.props.element.getFormId();\r\n    let fieldName = this.props.element.getFieldId();\r\n    if (isEditor()) {\r\n      value = this.state.value;\r\n    } else {\r\n      value = _.get(appStore.getState(), `formsStore.${formId}.${fieldName}`, '')\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * @return {*}\r\n   */\r\n  getCurrentLabel() {\r\n    const value = this.getValue()\r\n    const options = this.getOptions() || []\r\n    return options.find(option => option.value === value)?.label || ''\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {JSX.Element|string}\r\n   */\r\n  renderRightIcon = ()=>{\r\n    const right_icon = this.props.element.getResponsiveSetting('right_icon')\r\n    if(_.isEmpty(right_icon)){\r\n      return 'caret-down'\r\n    }\r\n    return <span className=\"bp3-icon bp3-icon_text-widget bp3-icon_right\" >\r\n      {renderAsset(right_icon )}\r\n    </span>\r\n  }\r\n  /**\r\n   *\r\n   * @return {JSX.Element|null}\r\n   */\r\n  renderLeftIcon = ()=>{\r\n    const left_icon = this.props.element.getResponsiveSetting('left_icon')\r\n    if(_.isEmpty(left_icon)){\r\n      return null\r\n    }\r\n    return <span className=\"bp3-icon bp3-icon_text-widget bp3-icon_left\" >\r\n      {renderAsset(left_icon)}\r\n    </span>\r\n  }\r\n  /**\r\n   * Обработка клика по кнопке\r\n   * @return {Promise<void>}\r\n   */\r\n  onClick = async ()=>{\r\n    if (this.props.element.getSettings(\"click_actions\", []) && !isEditor()) {\r\n      const actionsManager = (\r\n        await import(\r\n          /* webpackChunkName: 'ActionsManager' */\r\n          \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\r\n          )\r\n      ).default;\r\n      await actionsManager.callAllWidgetActions(\r\n        this.props.element.getIdForAction(),\r\n        \"click\",\r\n        this.props.element.getSettings(\"click_actions\", []),\r\n        this.props.element\r\n      );\r\n    }\r\n  }\r\n  /**\r\n   * Создаем элемент из поисковой строки\r\n   * @param title\r\n   * @return {{label, value}}\r\n   */\r\n  createNewItemFromQuery = (title) => {\r\n    return{label: title,value: title};\r\n  }\r\n  /**\r\n   * отрисовываем создание нового элемента\r\n   * @param query\r\n   * @param active\r\n   * @param handleClick\r\n   * @return {JSX.Element|null}\r\n   */\r\n\r\n  createNewItemRenderer = ( query,\r\n                         active,\r\n                         handleClick) => {\r\n    /**\r\n     * @type {FrontElement}\r\n     */\r\n    const {element} = this.props;\r\n    // console.log(query,\r\n    //   active,\r\n    //   handleClick);\r\n    if(! element.getResponsiveSetting('create')){\r\n      return null;\r\n    }\r\n    const {options} = this.state;\r\n    if(options.find(option => option.value === query)) {\r\n      return null\r\n    }\r\n      let text = element.getResponsiveSetting('create_text') || ''\r\n    text = text.replace('{{__query__}}', query)\r\n    text = replaceContentWithData(text, element.getCurrentModel().getData())\r\n    return (\r\n      <MenuItem\r\n        icon=\"add\"\r\n        text={text}\r\n        active={active}\r\n        onClick={handleClick}\r\n        shouldDismissPopover={false}\r\n      />)\r\n  }\r\n\r\n  render() {\r\n    const element = this.props.element;\r\n    let label = null;\r\n    const settings = this.props.element.getSettings();\r\n    let value = this.getCurrentLabel();\r\n\r\n    const {\r\n      label_icon\r\n    } = settings;\r\n\r\n    let classLabel = \"\";\r\n    let styleLabel = {};\r\n    const content_label_position_type = this.props.element.getResponsiveSetting(\r\n      \"content_label_position_type\"\r\n    );\r\n    switch (content_label_position_type) {\r\n      case \"top\":\r\n        styleLabel = {\r\n          marginBottom: this.state.settings.label_style_spacing\r\n            ? this.state.settings.label_style_spacing.size +\r\n            this.state.settings.label_style_spacing.unit\r\n            : 2 + \"px\"\r\n        };\r\n        classLabel = \"\";\r\n        break;\r\n      case \"bottom\":\r\n        styleLabel = {\r\n          marginTop: this.state.settings.label_style_spacing\r\n            ? this.state.settings.label_style_spacing.size +\r\n            this.state.settings.label_style_spacing.unit\r\n            : 2 + \"px\"\r\n        };\r\n        classLabel = \"\";\r\n        break;\r\n      case \"left\":\r\n        styleLabel = {\r\n          marginRight: this.state.settings.label_style_spacing\r\n            ? this.state.settings.label_style_spacing.size +\r\n            this.state.settings.label_style_spacing.unit\r\n            : 2 + \"px\"\r\n        };\r\n        classLabel = \"altrp-field-label-container-left\";\r\n        // this.label.current.classList.add(\"hello\")\r\n\r\n        break;\r\n      case \"absolute\":\r\n        styleLabel = {\r\n          position: \"absolute\",\r\n          zIndex: 2\r\n        };\r\n        classLabel = \"\";\r\n        break;\r\n    }\r\n    const content_label = this.getContent('content_label')\r\n    if (content_label) {\r\n      label = (\r\n        <div\r\n          className={\"altrp-field-label-container \" + classLabel}\r\n          style={styleLabel}\r\n        >\r\n          <label\r\n            className={`altrp-field-label ${this.state.settings.content_required\r\n              ? \"altrp-field-label--required\"\r\n              : \"\"\r\n            }`}\r\n          >\r\n            {content_label}\r\n          </label>\r\n          {label_icon && label_icon.assetType && (\r\n            <span className=\"altrp-label-icon\">\r\n              {renderAssetIcon(label_icon)}\r\n            </span>\r\n          )}\r\n        </div>\r\n      );\r\n    } else {\r\n      label = null;\r\n    }\r\n\r\n    const placeholder = element.getResponsiveSetting('content_placeholder');\r\n    const content_readonly = element.getResponsiveSetting('content_readonly');\r\n    const no_results_text = element.getResponsiveSetting('no_results_text');\r\n\r\n    const inputProps = {\r\n      placeholder,\r\n      className: element.getResponsiveSetting('hide_search') ? 'altrp-hidden' : '',\r\n    };\r\n\r\n    let input = null;\r\n\r\n    let itemsOptions = this.getOptions();\r\n    const position_css_classes = element.getResponsiveSetting('position_css_classes', '', '')\r\n    const position_css_id = this.getContent('position_css_id')\r\n\r\n    input = (\r\n        <Select\r\n          inputProps={inputProps}\r\n          disabled={content_readonly}\r\n          popoverProps={this.popoverProps}\r\n          createNewItemFromQuery={element.getResponsiveSetting('create') ? this.createNewItemFromQuery : null}\r\n          createNewItemRenderer={this.createNewItemRenderer}\r\n          itemRenderer={(item, {handleClick, modifiers, query}) => {\r\n            if (!modifiers.matchesPredicate) {\r\n              return null;\r\n            }\r\n            return <MenuItem\r\n              text={item.label}\r\n              key={item.value}\r\n              active={item.value === value}\r\n              disabled={modifiers.disabled || item.disabled}\r\n              onClick={handleClick}\r\n            />\r\n          }}\r\n          itemPredicate={(query, item) => {\r\n            if (query === undefined || query.length === 0) {\r\n              return true\r\n            }\r\n            return `${item?.label?.toLowerCase() || ''}`.indexOf(query.toLowerCase()) >= 0;\r\n          }}\r\n          items={itemsOptions}\r\n          // itemRenderer={({label})=>label}\r\n          noResults={<MenuItem disabled={true} text={no_results_text}/>}\r\n          name={this.getName()}\r\n          onItemSelect={item => this.onItemSelect(item)}\r\n          id={position_css_id}\r\n          className={`${position_css_classes} ${this.state.widgetDisabled ? 'pointer-event-none' : ''}`}\r\n        >\r\n          <Button\r\n            text={value}\r\n            disabled={content_readonly}\r\n            onClick={this.onClick}\r\n            icon={this.renderLeftIcon()}\r\n            rightIcon={this.renderRightIcon()}\r\n          />\r\n        </Select>\r\n    );\r\n\r\n    return (\r\n      <AltrpFieldContainer\r\n        settings={settings}\r\n        className={\"altrp-field-container \"}\r\n      >\r\n        {content_label_position_type === \"top\" ? label : \"\"}\r\n        {content_label_position_type === \"left\" ? label : \"\"}\r\n        {content_label_position_type === \"right\" ? label : \"\"}\r\n        {content_label_position_type === \"absolute\" ? label : \"\"}\r\n        {/* .altrp-field-label-container */}\r\n        {input}\r\n        {content_label_position_type === \"bottom\" ? label : \"\"}\r\n      </AltrpFieldContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputSelectWidget;\r\n","export const CHANGE_FORM_FIELD_VALUE = 'CHANGE_FORM_FIELD_VALUE';\nexport const CLEAR_FORM_FIELD_VALUE = 'CHANGE_FORM_FIELD_VALUE';\n\n/**\n * Получает данные поля формы и сохраняет в хранилище\n * @param {string}fieldName\n * @param {*}value\n * @param {string}formId\n * @param {boolean}userInput\n * @return {{type: string, fieldName: *, value: *, formId: *}}\n */\nexport function changeFormFieldValue(fieldName, value, formId, userInput) {\n  return {\n    type: CHANGE_FORM_FIELD_VALUE,\n    fieldName,\n    value,\n    formId,\n    changedField: userInput ? `${formId}.${fieldName}` : null,\n  };\n}\n/**\n * Очистить данные поля формы и сохраняет в хранилище\n * @param {string | null}formId\n * @return {{type: string, fieldName: *, value: *, formId: *}}\n */\nexport function clearFormStorage(formId = null) {\n  return {\n    type: CLEAR_FORM_FIELD_VALUE,\n    formId,\n  };\n}\n\n"],"sourceRoot":""}