{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack:///./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","webpack:///./resources/modules/editor/src/js/components/altrp-image/Skeleton.js","webpack:///./resources/modules/editor/src/js/components/altrp-image/ImagePlaceholder.js","webpack:///./resources/modules/editor/src/js/components/altrp-image/AltrpImage.js","webpack:///./resources/modules/editor/src/js/components/altrp-menu/LinkMenu.js","webpack:///./resources/modules/editor/src/js/components/altrp-menu/dropdown/DropdownSub.js","webpack:///./resources/modules/editor/src/js/components/altrp-menu/dropdown/DropdownMenu.js","webpack:///./resources/modules/editor/src/js/components/altrp-menu/AltrpMenu.js","webpack:///./resources/modules/editor/src/js/components/altrp-breadcrumbs/AltrpBreadcrumbs.js","webpack:///./resources/modules/editor/src/js/components/widgets/NavWidget.js"],"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","_taggedTemplateLiteral","strings","raw","slice","freeze","defineProperties","value","defaultBaseColor","SkeletonSpan","styled","duration","delay","keyframes","Math","floor","undefined","color","highlightColor","props","className","_","isNumber","width","settings","aspect_ratio_size","getResponsiveSetting","Number","height","indexOf","style","custom_aspect","isString","mediaWidth","mediaHeight","window","altrpHelpers","isEditor","isSSR","renderAsset","AltrpImage","imageRef","React","createRef","visible","element","lazy","altrpImageLazy","state","update","timeoutId","setTimeout","setState","clearTimeout","this","prevProps","prevState","current","getRoot","popupGUID","popupTrigger","popupID","scrollPosition","scroller","mainScrollbars","document","querySelector","checkElementInViewBox","media","image","noDefault","placeholderStyles","File","default","keys","length","url","name","assetType","background","placeholder","main_color","ref","getSettings","altrpSkeletonColor","altrpSkeletonHighlightColor","cloneElement","id","Fragment","Component","reactRedux","connect","LinkMenu","defaultChildren","link","modelId","modelData","children","linkContainer","linkProps","rel","noFollow","href","dangerouslySetInnerHTMLCondition","tag","openInNew","target","to","replace","isObject","parseURLTemplate","show","list","changeShow","bind","setList","li","forEach","push","onClick","label_repeater_menu_layout","chevron_dropdown_menu_section","iconComponent","iconsManager","renderIcon","map","idx","link_repeater_menu_layout","key","id_repeater_menu_layout","DropdownSub","divider","divider_switch_dropdown_menu_section","setStateList","propsRepeater","repeater_menu_layout","liParent","parent_id_repeater_menu_layout","indexInArray","findIndex","item","childrenParent","parentIdRepeater","parentIndexInArray","classes","align_dropdown_menu_layout","icon_dropdown_menu_layout","active_icon_dropdown_menu_layout","iconButton","component","elementDecorator","HorizontalVerticalMenu","content","layout","menu_layout","currentBreakpoint","breakpoint","breakpoint_dropdown_menu_layout","type","size","bodyWidth","body","offsetWidth","getElementById","currentScreen","idElement","getId","AltrpBreadcrumbs","breadcrumbs","routes","title","path","parent_page_id","appStore","getState","appRoutes","currentId","currentPageId","idCurrent","route","breadcrumbsClone","getParent","parentId","reverse","separatorType","getContent","separatorClasses","separator","textSeparator","iconSeparator","label","replaceContentWithData","Link","e","preventDefault","withRouter","baseRender","render","hasCardModel","getCardModel","getData","currentModel","getModelId"],"mappings":"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","file":"NavWidget.681fa08b87d3d085c72c.bundle.js","sourcesContent":["import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import styled, { keyframes} from 'styled-components';\r\n\r\nexport const defaultBaseColor = \"#eee\";\r\n\r\nexport const defaultHighlightColor = \"#f5f5f5\";\r\n\r\nexport const skeletonKeyframes = (duration, delay) => keyframes`\r\n  0% {\r\n    background-position: -200px 0;\r\n  }\r\n  ${\r\n  delay > 0\r\n    ? `${Math.floor((1 / (duration + delay)) * duration * 100)}% {\r\n    background-position: calc(200px + 100%) 0;\r\n  }`\r\n    : undefined\r\n}\r\n  100% {\r\n    background-position: calc(200px + 100%) 0;\r\n  }\r\n`;\r\nconst SkeletonSpan = styled.span`\r\n  animation: ${skeletonKeyframes} 1.2s ease-in-out infinite;\r\n  background-color: ${({color})=>`${color || defaultBaseColor}`};\r\n  background-size: 200px 100%;\r\n  background-repeat: no-repeat;\r\n  background-image: linear-gradient(90deg, ${({highlightColor, color})=>{\r\n    return `${color || defaultBaseColor}, ${highlightColor || defaultHighlightColor}, ${color || defaultBaseColor}`;\r\n  }});\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  height: 100%;\r\n`;\r\nconst Skeleton = (props) => <div className={props.className}><SkeletonSpan {...props} className=\"altrp-skeleton__span\"/></div>\r\nexport default Skeleton;\r\n","import styled from 'styled-components';\r\nimport {getResponsiveSetting} from \"../../../../../front-app/src/js/helpers\";\r\n\r\nconst ImagePlaceholder = styled.div`& {\r\n  position: relative;\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n  width:${props => {\r\n  if (_.isNumber(props.width)) {\r\n    return props.width + 'px';\r\n  }\r\n  return props.width ? props.width : '100%'\r\n}};\r\n${(props) => {\r\n  const {settings} = props;\r\n  const aspect_ratio_size = getResponsiveSetting(settings, 'aspect_ratio_size');\r\n  if(Number(aspect_ratio_size) !== 0 && aspect_ratio_size === 'custom'|| Number(aspect_ratio_size)){\r\n    return 'height:auto;'\r\n  }\r\n  if(! props.height || props.height.indexOf('%') !== -1) {\r\n    return 'height:auto;'\r\n  }\r\n  return `height:${props.height ? props.height : 'auto'};`;\r\n}}\r\n\r\n  background-color: ${props => props.color ? props.color : '#fff'};\r\n}\r\n&::before{\r\n  display: block;\r\n  content: '';\r\n  width: 100%;\r\n${(props) => {\r\n  const {settings, height} = props;\r\n  let style = '';\r\n  const aspect_ratio_size = getResponsiveSetting(settings, 'aspect_ratio_size');\r\n  if(Number(aspect_ratio_size) !== 0) {\r\n    if(aspect_ratio_size === 'custom') {\r\n      let custom_aspect = getResponsiveSetting(settings, 'custom_aspect');\r\n      custom_aspect = Number(custom_aspect) || 100;\r\n      style += `padding-top:${custom_aspect}%;`;\r\n    } else if(Number(aspect_ratio_size)){\r\n      style += `padding-top:${aspect_ratio_size}%;`;\r\n    }\r\n    return style;\r\n  }\r\n  if (height && _.isString(height) && height.indexOf('%') === -1) {\r\n    return style;\r\n  }\r\n  if (Number(props.mediaWidth) && Number(props.mediaHeight)) {\r\n    style += `padding-top:${(props.mediaHeight / props.mediaWidth) * 100}%;`\r\n  }\r\n  return style;\r\n}};\r\n}\r\n&& .altrp-skeleton,\r\n&& .altrp-image{\r\n  position:absolute;\r\n  top:0;\r\n  left:0;\r\n  right:0;\r\n  bottom:0;\r\n  height:100%;\r\n  width:100%;\r\n}\r\n`;\r\n\r\nexport default ImagePlaceholder;\r\n","import Skeleton from './Skeleton';\r\nimport ImagePlaceholder from \"./ImagePlaceholder\";\r\nimport {checkElementInViewBox} from \"../../../../../front-app/src/js/helpers/elements\";\r\nconst {isEditor, isSSR, renderAsset} = window.altrpHelpers;\r\n\r\nclass AltrpImage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.imageRef = React.createRef();\r\n    let visible = true;\r\n    if(isSSR() && ! props.element?.getResponsiveSetting('lazyload_disable')){\r\n      visible = false;\r\n    } else if (isEditor() || props.lazy === false) {\r\n\r\n    } else if (window.altrpImageLazy\r\n        && window.altrpImageLazy !== 'none'\r\n        && props.element\r\n        && ! props.element?.getResponsiveSetting('lazyload_disable')) {\r\n      visible = false;\r\n    }\r\n    this.state = {\r\n      visible,\r\n      update: 0,\r\n    };\r\n    this.timeoutId = setTimeout(() => this.setState(state => ({...state, update: state.update++})), 500);\r\n  }\r\n\r\n  /**\r\n   * очищаем обновление\r\n   */\r\n  componentWillUnmount() {\r\n    clearTimeout(this.timeoutId);\r\n  }\r\n\r\n  /**\r\n   * Проверим нужно ли обновить видимость\r\n   * @param {{}} prevProps\r\n   * @param {{}} prevState\r\n   */\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(this.state.visible){\r\n      clearTimeout(this.timeoutId);\r\n    }\r\n    if (this.state.visible || ! this.imageRef.current) {\r\n      return;\r\n    }\r\n    if(this.props?.element?.getRoot()?.popupGUID && this.props.element.getRoot().popupGUID === this.props.popupTrigger.popupID){\r\n      this.setState(state => ({...state, visible: true}));\r\n    }\r\n    if (prevProps.scrollPosition === this.props.scrollPosition && prevState.update === this.state.update) {\r\n      return;\r\n    }\r\n    let scroller = window.mainScrollbars;\r\n    if(! scroller){\r\n      scroller = document.querySelector('.front-app-content');\r\n    }\r\n    if(! scroller){\r\n      scroller = document.querySelector('.front-app');\r\n    }\r\n    if (this.imageRef.current && checkElementInViewBox(this.imageRef.current, scroller)) {\r\n      clearTimeout(this.timeoutId);\r\n      this.setState(state => ({...state, visible: true}));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let media = {...this.props.image};\r\n    const {visible} = this.state;\r\n    const noDefault = this.props.noDefault || false;\r\n    const placeholderStyles = {};\r\n\r\n    let width = this.props.width;\r\n    let height = this.props.height;\r\n    if (! isSSR() && this.props.image instanceof File) {\r\n      media = this.props.image\r\n    } else {\r\n      if (this.props.default) {\r\n        if ((Object.keys(media).length === 0)) {\r\n          media = this.props.default;\r\n        }\r\n      } else if (noDefault) {\r\n        return \"\"\r\n      } else {\r\n        media.url = media.url || '/img/nullImage.png';\r\n        media.name = media.name || 'null';\r\n        media.assetType = media.assetType || undefined;\r\n      }\r\n    }\r\n    let image = renderAsset(media);\r\n    if(visible || window.altrpImageLazy === 'skeleton'){\r\n      placeholderStyles.background = 'transparent';\r\n    }\r\n\r\n    let placeholder = <ImagePlaceholder color={media.main_color}\r\n                                        className={'altrp-image-placeholder '}\r\n                                        ref={this.imageRef}\r\n                                        settings={this.props.element?.getSettings() || {}}\r\n                                        height={height}\r\n                                        width={width}\r\n                                        style={placeholderStyles}\r\n                                        mediaWidth={media.width || 100}\r\n                                        mediaHeight={media.height || 75}>\r\n      {window.altrpImageLazy === 'skeleton'\r\n        && ! visible\r\n        &&\r\n          <Skeleton className=\"altrp-skeleton\"\r\n                    color={window.altrpSkeletonColor}\r\n                    highlightColor={window.altrpSkeletonHighlightColor}/>\r\n\r\n      }\r\n      {visible && React.cloneElement(image, {\r\n        className: this.props.className,\r\n        id: this.props.id || null,\r\n        style: this.props.style,\r\n      })}\r\n      </ImagePlaceholder>;\r\n\r\n    return <React.Fragment>\r\n      {placeholder}\r\n    </React.Fragment>\r\n  }\r\n}\r\n\r\nlet _export;\r\nif (isEditor()) {\r\n  _export = AltrpImage;\r\n} else {\r\n\r\n  function mapStateToProps(state) {\r\n    return {\r\n      scrollPosition: state.scrollPosition,\r\n      popupTrigger: state.popupTrigger,\r\n    };\r\n  }\r\n\r\n  _export = window.reactRedux.connect(mapStateToProps)(AltrpImage)\r\n}\r\nexport default _export;\r\n","import AltrpLink from \"../altrp-link/AltrpLink\";\r\nimport {isEditor, parseURLTemplate} from \"../../../../../front-app/src/js/helpers\";\r\nimport React, {Component} from 'react';\r\n\r\nclass LinkMenu extends Component {\r\n  render() {\r\n    const {defaultChildren, link, modelId, modelData, children, className} = this.props;\r\n    let linkContainer = React.cloneElement(defaultChildren, {}, children);\r\n\r\n    if(link) {\r\n      let linkProps = {\r\n        rel: link.noFollow ? \"nofollow\" : null,\r\n        href: link.url,\r\n        dangerouslySetInnerHTMLCondition: false,\r\n        className: className,\r\n      };\r\n\r\n      linkProps.tag = link.tag || \"a\";\r\n      // linkProps.creativelink = this.getContent(\"heading_settings_html_tag\") !== \"p\" ? this.getContent(\"creative_link_controller\") : null;\r\n\r\n      if(link.openInNew){\r\n        linkProps.target = '_black';\r\n      }\r\n\r\n      if ((link.tag === 'Link') && ! isEditor()) {\r\n        linkProps.to = link.url.replace(':id', modelId || '');\r\n        linkProps.href = link.url.replace(':id', modelId || '');\r\n      }\r\n\r\n      if(_.isObject(this.props.modelData)){\r\n        linkProps.to = parseURLTemplate(link.url, modelData);\r\n        linkProps.href = parseURLTemplate(link.url, modelData);\r\n      }\r\n\r\n      linkContainer = (\r\n        <AltrpLink {...linkProps}>\r\n          {\r\n            children\r\n          }\r\n        </AltrpLink>\r\n      );\r\n    }\r\n\r\n    return linkContainer\r\n  }\r\n}\r\n\r\nexport default LinkMenu;\r\n","import React, {Component} from 'react';\r\nimport AltrpLink from \"../../altrp-link/AltrpLink\";\r\nimport AltrpImage from \"../../altrp-image/AltrpImage\";\r\nimport LinkMenu from \"../LinkMenu\";\r\n\r\nclass DropdownSub extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      show: false,\r\n      list: []\r\n    };\r\n\r\n    this.changeShow = this.changeShow.bind(this);\r\n    this.setList = this.setList.bind(this);\r\n  }\r\n\r\n  setList() {\r\n    let list = [];\r\n    if(this.props.li.children) {\r\n      this.props.list.forEach(li => {\r\n        this.props.li.children.forEach(id => {\r\n          if(li.id === id) {\r\n            list.push(li);\r\n          }\r\n        })\r\n\r\n      })\r\n    }\r\n\r\n    this.setState({ list })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setList()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(prevProps.list !== this.props.list) {\r\n      this.setList()\r\n    }\r\n  }\r\n\r\n  changeShow() {\r\n    this.setState((state) => ({ show: !state.show }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"altrp-nav-menu-dropdown-sub\">\r\n        <div className=\"altrp-nav-menu-li-link-dropdown altrp-nav-menu-dropdown-sub-label\" onClick={this.changeShow}>\r\n          <span>\r\n            {\r\n              this.props.li.label_repeater_menu_layout\r\n            }\r\n          </span>\r\n          <AltrpImage\r\n            image={this.props.settings.chevron_dropdown_menu_section}\r\n            element={this.props.element}\r\n            default={{\r\n              assetType: \"icon\",\r\n              name: 'chevron',\r\n              iconComponent: iconsManager.renderIcon('chevron')\r\n            }}\r\n            className={\"altrp-nav-menu-li-link-chevron-dropdown\" + (this.state.show ? \" altrp-nav-menu-li-link-active-chevron-dropdown\" : \"\")}\r\n          />\r\n        </div>\r\n        <div className={\"altrp-nav-menu-dropdown-sub-content altrp-nav-menu-ul-wrapper-dropdown altrp-nav-menu-dropdown-content\" + (!this.state.show ? \" altrp-nav-menu-dropdown-content-hide\" : \" altrp-nav-menu-dropdown-content-show\")}>\r\n          <ul className=\"altrp-nav-menu-ul-dropdown\">\r\n            {\r\n              this.state.list.map((li, idx) => {\r\n                let link = <LinkMenu\r\n                  defaultChildren={(<div className=\"altrp-nav-menu-li-link-dropdown altrp-nav-menu-li-link-label-dropdown\"/>)}\r\n                  modelData={this.props.modelData}\r\n                  modelId={this.props.modelId || null}\r\n                  link={li.link_repeater_menu_layout}\r\n                  className=\"altrp-nav-menu-li-link-dropdown altrp-nav-menu-li-link-label-dropdown\"\r\n                >\r\n                  {\r\n                    li.label_repeater_menu_layout\r\n                  }\r\n                </LinkMenu>;\r\n\r\n                return <li className=\"altrp-nav-menu-li-dropdown\" key={idx}>\r\n                  {!li.id_repeater_menu_layout ? (\r\n                    <React.Fragment>\r\n                      {\r\n                        link\r\n                      }\r\n                      {\r\n                        this.props.settings.divider_switch_dropdown_menu_section ? <div className=\"altrp-nav-menu-dropdown-s-content-divider\"/> : \"\"\r\n                      }\r\n                    </React.Fragment>\r\n                  ) : (\r\n                    <DropdownSub settings={this.props.settings} divider={false} list={this.props.list} li={li}/>\r\n                  )\r\n                  }\r\n                </li>\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DropdownSub;\r\n","import React, {Component} from 'react';\r\nimport AltrpImage from \"../../altrp-image/AltrpImage\";\r\nimport AltrpLink from \"../../altrp-link/AltrpLink\";\r\nimport DropdownSub from \"./DropdownSub\";\r\nimport LinkMenu from \"../LinkMenu\";\r\n\r\nclass DropdownMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      show: false,\r\n      list: []\r\n    };\r\n\r\n    this.changeShow = this.changeShow.bind(this);\r\n    this.setStateList = this.setStateList.bind(this);\r\n  }\r\n\r\n  changeShow() {\r\n    this.setState((state) => ({ show: !state.show }))\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setStateList();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    let propsRepeater = this.props.settings.repeater_menu_layout;\r\n\r\n    if (prevState.list !== propsRepeater) {\r\n      this.setStateList()\r\n    }\r\n  }\r\n\r\n  setStateList() {\r\n    let list = this.props.settings.repeater_menu_layout;\r\n    list.forEach(liParent => {\r\n      if(liParent.id_repeater_menu_layout) {\r\n        let children = [];\r\n        list.forEach(li => {\r\n          if(liParent.id !== li.id) {\r\n            if(li.parent_id_repeater_menu_layout) {\r\n              if(li.parent_id_repeater_menu_layout === liParent.id_repeater_menu_layout) {\r\n                const indexInArray = list.findIndex(item => item.id == li.id);\r\n                list[indexInArray] && (list[indexInArray].childrenParent = true);\r\n                // list[li.id] && (list[li.id].childrenParent = true);\r\n                children.push(li.id);\r\n              }\r\n            }\r\n          }\r\n        });\r\n        const parentIdRepeater = liParent.id_repeater_menu_layout;\r\n        const parentIndexInArray = list.findIndex(item => item.id_repeater_menu_layout == parentIdRepeater);\r\n        if (list[parentIndexInArray]) {\r\n          list[parentIndexInArray].children = children;\r\n          // if(liParent.id_repeater_menu_layout) {\r\n          // }\r\n        }\r\n      }\r\n    });\r\n\r\n    this.setState({ list });\r\n  }\r\n\r\n  render() {\r\n    let list = this.state.list;\r\n\r\n    let classes = \"altrp-nav-menu-dropdown\";\r\n\r\n    switch (this.props.settings.align_dropdown_menu_layout) {\r\n      case \"left\":\r\n        classes += \" altrp-nav-menu-dropdown-left\";\r\n        break;\r\n      case \"center\":\r\n        classes += \" altrp-nav-menu-dropdown-center\";\r\n        break;\r\n      case \"right\":\r\n        classes += \" altrp-nav-menu-dropdown-right\";\r\n        break;\r\n      default:\r\n    }\r\n    const icon_dropdown_menu_layout = this.props.element?.getResponsiveSetting('icon_dropdown_menu_layout');\r\n    const active_icon_dropdown_menu_layout = this.props.element?.getResponsiveSetting('icon_dropdown_menu_layout');\r\n    let iconButton = (\r\n      <AltrpImage\r\n        image={icon_dropdown_menu_layout}\r\n        element={this.props.element}\r\n        default={{\r\n          name: \"in_width\",\r\n          assetType: \"icon\",\r\n          iconComponent: iconsManager.renderIcon(\"in_width\")\r\n        }}\r\n        className=\"altrp-nav-menu-dropdown-button-icon\"\r\n      />\r\n    );\r\n\r\n    if(this.state.show && active_icon_dropdown_menu_layout) {\r\n      iconButton = (\r\n        <AltrpImage\r\n          image={active_icon_dropdown_menu_layout}\r\n          element={this.props.element}\r\n          default={{\r\n            name: \"add\",\r\n            assetType: \"icon\",\r\n            iconComponent: iconsManager.renderIcon(\"add\")\r\n          }}\r\n          className=\"altrp-nav-menu-dropdown-button-icon altrp-nav-menu-dropdown-button-icon-close\"\r\n        />\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className={classes}>\r\n        <div className=\"altrp-nav-menu-dropdown-wrapper\">\r\n          <div className=\"altrp-nav-menu-dropdown-button\" onClick={this.changeShow}>\r\n            {\r\n              iconButton\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className={\"altrp-nav-menu-ul-wrapper-dropdown altrp-nav-menu-dropdown-content\" + (!this.state.show ? \"\" : \" altrp-nav-menu-dropdown-content-show\")}>\r\n          <ul className=\"altrp-nav-menu-ul-dropdown\">\r\n            {\r\n              list.map((li, idx) => {\r\n                let link = <LinkMenu\r\n                  defaultChildren={(<div className=\"altrp-nav-menu-li-link-dropdown altrp-nav-menu-li-link-label-dropdown\"/>)}\r\n                  modelData={this.props.modelData}\r\n                  modelId={this.props.modelId || null}\r\n                  link={li.link_repeater_menu_layout}\r\n                  className=\"altrp-nav-menu-li-link-dropdown altrp-nav-menu-li-link-label-dropdown\"\r\n                >\r\n                  {\r\n                    li.label_repeater_menu_layout\r\n                  }\r\n                </LinkMenu>;\r\n\r\n                return (\r\n                  !li.id_repeater_menu_layout ? (\r\n                      !li?.childrenParent ? (\r\n                        <li className=\"altrp-nav-menu-li-dropdown\" key={idx}>\r\n                          {\r\n                            link\r\n                          }\r\n                          {\r\n                            this.props.settings.divider_switch_dropdown_menu_section ? <div className=\"altrp-nav-menu-dropdown-s-content-divider\"/> : \"\"\r\n                          }\r\n                        </li>\r\n                      ) : \"\"\r\n                    ) :\r\n                    !li?.childrenParent ? <li className=\"altrp-nav-menu-li-dropdown altrp-nav-menu-li-sub\" key={idx}>\r\n                        <DropdownSub\r\n                          settings={this.props.settings}\r\n                          list={this.state.list}\r\n                          li={li}\r\n                          modelData={this.props.modelData}\r\n                          modelId={this.props.modelId}\r\n                        />\r\n                      </li>\r\n                      : \"\"\r\n                )})\r\n            }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DropdownMenu;\r\n","import React, {Component} from \"react\";\r\nimport DropdownMenu from \"./dropdown/DropdownMenu\";\r\nimport (\"./altrp-menu.scss\");\r\nimport {isEditor} from \"../../../../../front-app/src/js/helpers\";\r\n\r\nclass AltrpMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      settings: props.element.getSettings(),\r\n    };\r\n\r\n    props.element.component = this;\r\n\r\n    if (window.elementDecorator) {\r\n      window.elementDecorator(this);\r\n    }\r\n  }\r\n\r\n  async _componentDidMount(){\r\n    const HorizontalVerticalMenu = (await import(/* webpackChunkName: 'HorizontalVerticalMenu' */\"./horizontalVertical/HorizontalVerticalMenu\")).default;\r\n    this.setState(state => ({...state, HorizontalVerticalMenu}));\r\n  }\r\n  render() {\r\n    let content = <div>{isEditor() ? 'create menu' : ''}</div>;\r\n    let layout = this.state.settings.menu_layout;\r\n    let currentBreakpoint = {};\r\n    let breakpoint = this.state.settings.breakpoint_dropdown_menu_layout;\r\n\r\n    switch (breakpoint) {\r\n      case \"never\":\r\n        currentBreakpoint = {\r\n          type: \"never\",\r\n          size: 0\r\n        };\r\n        break;\r\n      case \"mobile\":\r\n        currentBreakpoint = {\r\n          type: \"mobile\",\r\n          size: 768\r\n        };\r\n        break;\r\n      case \"tablet\":\r\n        currentBreakpoint = {\r\n          type: \"tablet\",\r\n          size: 1025\r\n        };\r\n        break;\r\n      default:\r\n    }\r\n\r\n    if(breakpoint !== \"never\") {\r\n      let bodyWidth = document.body.offsetWidth;\r\n\r\n      if(isEditor()) {\r\n        bodyWidth = document.getElementById(\"editorWindow\").offsetWidth\r\n      }\r\n\r\n      if(bodyWidth <= currentBreakpoint.size) {\r\n        layout = \"dropdown\"\r\n      }\r\n    }\r\n    if(this.state.settings.repeater_menu_layout && this.state.HorizontalVerticalMenu) {\r\n      content = layout !== \"dropdown\" ?\r\n        <this.state.HorizontalVerticalMenu modelId={this.props.modelId}\r\n                                currentScreen={this.props.currentScreen}\r\n                                modelData={this.props.modelData}\r\n                                settings={this.props.element.getSettings()}\r\n                                element={this.props.element}\r\n                                idElement={this.props.element.getId()}/>\r\n        :\r\n        <DropdownMenu modelId={this.props.modelId} modelData={this.props.modelData} settings={this.state.settings} idElement={this.props.element.getId()}/>\r\n    }\r\n    return (\r\n      <div className=\"altrp-nav-menu\">\r\n        {\r\n          content\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AltrpMenu\r\n","import { withRouter } from \"react-router\";\r\nimport (\"./altrp-breadcrumbs.scss\");\r\nimport {isEditor, replaceContentWithData} from \"../../../../../front-app/src/js/helpers\";\r\nimport AltrpImage from \"../altrp-image/AltrpImage\";\r\n\r\n\r\nclass AltrpBreadcrumbs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let breadcrumbs = [];\r\n    const routes = !isEditor() ? appStore.getState().appRoutes.routes : [\r\n      {\r\n        title: \"this\",\r\n        id: 1,\r\n        path: \"/thisSiteIsWonderful\",\r\n        parent_page_id: null\r\n      },\r\n      {\r\n        title: \"site\",\r\n        id: 2,\r\n        path: \"/thisSiteIsWonderful\",\r\n        parent_page_id: 1\r\n      },\r\n      {\r\n        title: \"is\",\r\n        id: 3,\r\n        path: \"/thisSiteIsWonderful\",\r\n        parent_page_id: 2\r\n      },\r\n      {\r\n        title: \"wonderful\",\r\n        id: 4,\r\n        path: \"/thisSiteIsWonderful\",\r\n        parent_page_id: 3\r\n      }\r\n    ];\r\n\r\n    const currentId = !isEditor() ? window.currentPageId : 4;\r\n    if(currentId !== routes[0].id) {\r\n\r\n\r\n      let idCurrent = 0;\r\n\r\n      routes.forEach((route, idx) => {\r\n        if(currentId === route.id) {\r\n          idCurrent = idx\r\n        }\r\n      })\r\n\r\n      let breadcrumbsClone = [];\r\n\r\n      breadcrumbsClone.push(routes[idCurrent])\r\n\r\n      function getParent(parentId) {\r\n        routes.forEach(route => {\r\n          if(route.id === parentId) {\r\n            breadcrumbsClone.push(route)\r\n            if(route.parent_page_id) {\r\n              getParent(route.parent_page_id)\r\n            }\r\n          }\r\n        })\r\n      }\r\n\r\n      if(routes[idCurrent].parent_page_id) {\r\n        getParent(routes[idCurrent].parent_page_id)\r\n      }\r\n\r\n      breadcrumbs = breadcrumbsClone.reverse()\r\n    } else {\r\n      breadcrumbs.push(routes[0])\r\n    }\r\n\r\n\r\n    const separatorType = this.props.element.getContent(\"breadcrumbs_type_separator\", \"default\");\r\n    let separatorClasses = \"altrp-nav-breadcrumbs-separator\";\r\n    let separator = \"-\";\r\n\r\n    switch (separatorType) {\r\n      case \"text\":\r\n        const textSeparator = this.props.element.getContent(\"breadcrumbs_separator_text\", \">\");\r\n        separatorClasses += \" altrp-nav-breadcrumbs-separator-text\";\r\n        separator = textSeparator;\r\n        break\r\n      case \"icon\":\r\n        const iconSeparator = this.props.element.getContent(\"breadcrumbs_separator_icon\", {});\r\n        separatorClasses += \" altrp-nav-breadcrumbs-separator-icon\";\r\n        separator = <AltrpImage\r\n          image={iconSeparator}\r\n          element={this.props.element}\r\n          default={{\r\n            assetType: \"icon\",\r\n            name: 'star',\r\n            iconComponent: iconsManager.renderIcon('star')\r\n          }}\r\n        />\r\n        break\r\n      default:\r\n        separatorClasses += \" altrp-nav-breadcrumbs-separator-default\";\r\n    }\r\n\r\n    return (\r\n      <ul className=\"altrp-nav-breadcrumbs\">\r\n        {\r\n          breadcrumbs.map((route, idx) => {\r\n            const to = route.path;\r\n            let label = route.title;\r\n            label = replaceContentWithData(label);\r\n            return <li className=\"altrp-nav-breadcrumbs-li\" key={idx}>\r\n              {\r\n                route.id !== currentId ? (\r\n                  <window.Link\r\n                    to={to}\r\n                    onClick={isEditor() ? (e) => e.preventDefault() : null}\r\n                    className=\"altrp-nav-breadcrumbs-label altrp-nav-breadcrumbs-link\"\r\n                  >\r\n                    { label }\r\n                  </window.Link>\r\n                ) : (\r\n                  <div className=\"altrp-nav-breadcrumbs-label altrp-nav-breadcrumbs-current\">\r\n                    { label }\r\n                  </div>\r\n                )\r\n              }\r\n              {\r\n                idx !== (breadcrumbs.length - 1) ? (\r\n                  <span className={separatorClasses}>\r\n                    { separator }\r\n                  </span>\r\n                ) : \"\"\r\n              }\r\n            </li>\r\n          })\r\n        }\r\n      </ul>\r\n    );\r\n  }\r\n}\r\nlet _export\r\nif(window['h-altrp']){\r\n  _export = AltrpBreadcrumbs;\r\n} else {\r\n  _export = withRouter(AltrpBreadcrumbs);\r\n}\r\nexport default _export;\r\n","import AltrpMenu from \"../altrp-menu/AltrpMenu\";\r\nimport AltrpBreadcrumbs from \"../altrp-breadcrumbs/AltrpBreadcrumbs\";\r\n\r\nclass NavWidget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      settings: props.element.getSettings()\r\n    };\r\n    props.element.component = this;\r\n    if (window.elementDecorator) {\r\n      window.elementDecorator(this);\r\n    }\r\n    if(props.baseRender){\r\n      this.render = props.baseRender(this);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let content;\r\n    let modelData = this.props.element.hasCardModel()\r\n      ? this.props.element.getCardModel().getData()\r\n      : this.props.currentModel.getData();\r\n\r\n    switch (this.props.element.getContent(\"type_type\", \"menu\")) {\r\n      case \"menu\":\r\n        content = <AltrpMenu modelData={modelData}\r\n                             currentScreen={this.props.currentScreen}\r\n                             modelId={this.getModelId()}\r\n                             element={this.props.element}/>;\r\n        break;\r\n      case \"breadCrumbs\":\r\n        content = <AltrpBreadcrumbs element={this.props.element} />;\r\n        break\r\n    }\r\n\r\n    return content || '';\r\n  }\r\n}\r\n\r\nexport default NavWidget;\r\n"],"sourceRoot":""}