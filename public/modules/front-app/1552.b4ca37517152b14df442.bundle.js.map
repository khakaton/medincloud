{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/classes/AltrpModel.js","webpack:///./resources/modules/editor/src/js/components/altrp-image/Skeleton.js","webpack:///./resources/modules/editor/src/js/components/altrp-image/ImagePlaceholder.js","webpack:///./resources/modules/editor/src/js/components/altrp-image/AltrpImage.js","webpack:///./resources/modules/editor/src/js/components/template-loader/TemplateLoader.js","webpack:///./resources/modules/front-app/src/js/components/FrontPopupWrapper.js","webpack:///./resources/modules/front-app/src/js/components/altrp-offcanvas/AltrpOffcanvas.js","webpack:///./resources/modules/front-app/src/js/components/FrontPopup.js"],"names":["AltrpModel","data","this","cloneDeep","clone","isEmpty","name","defaultValue","get","has","value","getData","set","unset","window","defaultBaseColor","SkeletonSpan","styled","duration","delay","keyframes","Math","floor","undefined","color","highlightColor","props","className","_","isNumber","width","settings","aspect_ratio_size","getResponsiveSetting","Number","height","indexOf","style","custom_aspect","isString","mediaWidth","mediaHeight","altrpHelpers","isEditor","isSSR","renderAsset","AltrpImage","imageRef","React","createRef","visible","element","lazy","altrpImageLazy","state","update","timeoutId","setTimeout","setState","clearTimeout","prevProps","prevState","current","getRoot","popupGUID","popupTrigger","popupID","scrollPosition","scroller","mainScrollbars","document","querySelector","checkElementInViewBox","media","image","noDefault","placeholderStyles","File","default","Object","keys","length","url","assetType","background","placeholder","main_color","ref","getSettings","altrpSkeletonColor","altrpSkeletonHighlightColor","cloneElement","id","Fragment","Component","reactRedux","connect","TemplateLoader","templateComponent","templateLoader","frontElementsFabric","ElementWrapper","loadTemplate","templateId","loadParsedTemplate","cardModel","setCardModel","createElement","componentClass","children","isFunction","onLoad","div","styles","width_popup_layout","size","unit","dimensionsControllerToStyles","popup_close_button_height_size","popup_close_button_width_size","popup_close_button_border_type","popup_close_button_border_color","colorPickedHex","popup_close_button_background_color","shadowControllerToStyles","popup_close_icon_height_size","popup_close_icon_width_size","time_offcanvas","elementId","template","getId","show","offcanvasRef","offcanvasContentRef","bind","hide","hideButton","mainContent","getElementsByClassName","addEventListener","animations_offcanvas","direction_offcanvas","left","e","path","includes","close","hideAnimation","removeEventListener","classes","classesWrapper","content","rootElement","close_cursor_offcanvas","overflow_visible_offcanvas","closeButton","switcher_close_button_popup_layout","popup_close_icon_alignment","onClick","popup_close_icon","ReactDOM","autoHide","autoHideTimeout","autoHideDuration","universal","getElementById","FrontPopup","isVisible","parseData","page","models","isShownOnScroll","getContent","on_scroll","to_element","closePopup","rootElementSettings","rootElementId","push","overlay_close_popup_layout","height_popup_layout","horizontal_position_popup_layout","vertical_position_popup_layout","closeButtonCondition","maxHeight","height_custom_popup_layout","popup","join","popup_close_click_on_dark_area","stopPropagation","autoHeight","renderThumbHorizontal","renderTrackHorizontal","renderTrackVertical","autoHeightMin","autoHeightMax","type_popup","AltrpOffcanvas","dispatch","togglePopup"],"mappings":"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","file":"1552.b4ca37517152b14df442.bundle.js","sourcesContent":["/**\r\n * Имеет интерфейс для доступы к свойствам data (любой вложенности)\r\n * @class AltrpModel\r\n */\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport get from 'lodash.get';\r\nimport set from 'lodash.set';\r\nimport has from 'lodash.has';\r\nimport unset from 'lodash.unset';\r\nimport isEmpty from 'lodash.isempty';\r\n// import {cloneDeep, get, set, has, unset, isString, isEmpty} from \"lodash\";\r\n\r\nclass AltrpModel {\r\n  constructor(data = {}) {\r\n    this.data = cloneDeep(data);\r\n  }\r\n\r\n  /**\r\n   * Возваращает объект данных\r\n   * @params {boolean} clone - клонировать или ссылку на данные\r\n   * @return {{}}\r\n   */\r\n  getData(clone = true) {\r\n    if(clone){\r\n      return cloneDeep(this.data);\r\n    }\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Пустой ли объект\r\n   */\r\n  isEmpty(){\r\n    return isEmpty(this.data);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  getProperty(name, defaultValue = '') {\r\n    return get(this.data, name, defaultValue);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  hasProperty(name, defaultValue = '') {\r\n    return has(this.data, name);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {{}}\r\n   */\r\n  setProperty(name, value = '') {\r\n    if(value instanceof AltrpModel){\r\n      value = value.getData(false);\r\n    }\r\n    return set(this.data, name, value);\r\n  }\r\n  /**\r\n   * Удаляет свойства name\r\n   * @params {string} name\r\n   * @return {*}\r\n   */\r\n  unsetProperty(name) {\r\n    return unset(this.data, name);\r\n  }\r\n}\r\nwindow.AltrpModel = AltrpModel;\r\nexport default AltrpModel\r\n","import styled, { keyframes} from 'styled-components';\r\n\r\nexport const defaultBaseColor = \"#eee\";\r\n\r\nexport const defaultHighlightColor = \"#f5f5f5\";\r\n\r\nexport const skeletonKeyframes = (duration, delay) => keyframes`\r\n  0% {\r\n    background-position: -200px 0;\r\n  }\r\n  ${\r\n  delay > 0\r\n    ? `${Math.floor((1 / (duration + delay)) * duration * 100)}% {\r\n    background-position: calc(200px + 100%) 0;\r\n  }`\r\n    : undefined\r\n}\r\n  100% {\r\n    background-position: calc(200px + 100%) 0;\r\n  }\r\n`;\r\nconst SkeletonSpan = styled.span`\r\n  animation: ${skeletonKeyframes} 1.2s ease-in-out infinite;\r\n  background-color: ${({color})=>`${color || defaultBaseColor}`};\r\n  background-size: 200px 100%;\r\n  background-repeat: no-repeat;\r\n  background-image: linear-gradient(90deg, ${({highlightColor, color})=>{\r\n    return `${color || defaultBaseColor}, ${highlightColor || defaultHighlightColor}, ${color || defaultBaseColor}`;\r\n  }});\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  height: 100%;\r\n`;\r\nconst Skeleton = (props) => <div className={props.className}><SkeletonSpan {...props} className=\"altrp-skeleton__span\"/></div>\r\nexport default Skeleton;\r\n","import styled from 'styled-components';\r\nimport {getResponsiveSetting} from \"../../../../../front-app/src/js/helpers\";\r\n\r\nconst ImagePlaceholder = styled.div`& {\r\n  position: relative;\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n  width:${props => {\r\n  if (_.isNumber(props.width)) {\r\n    return props.width + 'px';\r\n  }\r\n  return props.width ? props.width : '100%'\r\n}};\r\n${(props) => {\r\n  const {settings} = props;\r\n  const aspect_ratio_size = getResponsiveSetting(settings, 'aspect_ratio_size');\r\n  if(Number(aspect_ratio_size) !== 0 && aspect_ratio_size === 'custom'|| Number(aspect_ratio_size)){\r\n    return 'height:auto;'\r\n  }\r\n  if(! props.height || props.height.indexOf('%') !== -1) {\r\n    return 'height:auto;'\r\n  }\r\n  return `height:${props.height ? props.height : 'auto'};`;\r\n}}\r\n\r\n  background-color: ${props => props.color ? props.color : '#fff'};\r\n}\r\n&::before{\r\n  display: block;\r\n  content: '';\r\n  width: 100%;\r\n${(props) => {\r\n  const {settings, height} = props;\r\n  let style = '';\r\n  const aspect_ratio_size = getResponsiveSetting(settings, 'aspect_ratio_size');\r\n  if(Number(aspect_ratio_size) !== 0) {\r\n    if(aspect_ratio_size === 'custom') {\r\n      let custom_aspect = getResponsiveSetting(settings, 'custom_aspect');\r\n      custom_aspect = Number(custom_aspect) || 100;\r\n      style += `padding-top:${custom_aspect}%;`;\r\n    } else if(Number(aspect_ratio_size)){\r\n      style += `padding-top:${aspect_ratio_size}%;`;\r\n    }\r\n    return style;\r\n  }\r\n  if (height && _.isString(height) && height.indexOf('%') === -1) {\r\n    return style;\r\n  }\r\n  if (Number(props.mediaWidth) && Number(props.mediaHeight)) {\r\n    style += `padding-top:${(props.mediaHeight / props.mediaWidth) * 100}%;`\r\n  }\r\n  return style;\r\n}};\r\n}\r\n&& .altrp-skeleton,\r\n&& .altrp-image{\r\n  position:absolute;\r\n  top:0;\r\n  left:0;\r\n  right:0;\r\n  bottom:0;\r\n  height:100%;\r\n  width:100%;\r\n}\r\n`;\r\n\r\nexport default ImagePlaceholder;\r\n","import Skeleton from './Skeleton';\r\nimport ImagePlaceholder from \"./ImagePlaceholder\";\r\nimport {checkElementInViewBox} from \"../../../../../front-app/src/js/helpers/elements\";\r\nconst {isEditor, isSSR, renderAsset} = window.altrpHelpers;\r\n\r\nclass AltrpImage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.imageRef = React.createRef();\r\n    let visible = true;\r\n    if(isSSR() && ! props.element?.getResponsiveSetting('lazyload_disable')){\r\n      visible = false;\r\n    } else if (isEditor() || props.lazy === false) {\r\n\r\n    } else if (window.altrpImageLazy\r\n        && window.altrpImageLazy !== 'none'\r\n        && props.element\r\n        && ! props.element?.getResponsiveSetting('lazyload_disable')) {\r\n      visible = false;\r\n    }\r\n    this.state = {\r\n      visible,\r\n      update: 0,\r\n    };\r\n    this.timeoutId = setTimeout(() => this.setState(state => ({...state, update: state.update++})), 500);\r\n  }\r\n\r\n  /**\r\n   * очищаем обновление\r\n   */\r\n  componentWillUnmount() {\r\n    clearTimeout(this.timeoutId);\r\n  }\r\n\r\n  /**\r\n   * Проверим нужно ли обновить видимость\r\n   * @param {{}} prevProps\r\n   * @param {{}} prevState\r\n   */\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(this.state.visible){\r\n      clearTimeout(this.timeoutId);\r\n    }\r\n    if (this.state.visible || ! this.imageRef.current) {\r\n      return;\r\n    }\r\n    if(this.props?.element?.getRoot()?.popupGUID && this.props.element.getRoot().popupGUID === this.props.popupTrigger.popupID){\r\n      this.setState(state => ({...state, visible: true}));\r\n    }\r\n    if (prevProps.scrollPosition === this.props.scrollPosition && prevState.update === this.state.update) {\r\n      return;\r\n    }\r\n    let scroller = window.mainScrollbars;\r\n    if(! scroller){\r\n      scroller = document.querySelector('.front-app-content');\r\n    }\r\n    if(! scroller){\r\n      scroller = document.querySelector('.front-app');\r\n    }\r\n    if (this.imageRef.current && checkElementInViewBox(this.imageRef.current, scroller)) {\r\n      clearTimeout(this.timeoutId);\r\n      this.setState(state => ({...state, visible: true}));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let media = {...this.props.image};\r\n    const {visible} = this.state;\r\n    const noDefault = this.props.noDefault || false;\r\n    const placeholderStyles = {};\r\n\r\n    let width = this.props.width;\r\n    let height = this.props.height;\r\n    if (! isSSR() && this.props.image instanceof File) {\r\n      media = this.props.image\r\n    } else {\r\n      if (this.props.default) {\r\n        if ((Object.keys(media).length === 0)) {\r\n          media = this.props.default;\r\n        }\r\n      } else if (noDefault) {\r\n        return \"\"\r\n      } else {\r\n        media.url = media.url || '/img/nullImage.png';\r\n        media.name = media.name || 'null';\r\n        media.assetType = media.assetType || undefined;\r\n      }\r\n    }\r\n    let image = renderAsset(media);\r\n    if(visible || window.altrpImageLazy === 'skeleton'){\r\n      placeholderStyles.background = 'transparent';\r\n    }\r\n\r\n    let placeholder = <ImagePlaceholder color={media.main_color}\r\n                                        className={'altrp-image-placeholder '}\r\n                                        ref={this.imageRef}\r\n                                        settings={this.props.element?.getSettings() || {}}\r\n                                        height={height}\r\n                                        width={width}\r\n                                        style={placeholderStyles}\r\n                                        mediaWidth={media.width || 100}\r\n                                        mediaHeight={media.height || 75}>\r\n      {window.altrpImageLazy === 'skeleton'\r\n        && ! visible\r\n        &&\r\n          <Skeleton className=\"altrp-skeleton\"\r\n                    color={window.altrpSkeletonColor}\r\n                    highlightColor={window.altrpSkeletonHighlightColor}/>\r\n\r\n      }\r\n      {visible && React.cloneElement(image, {\r\n        className: this.props.className,\r\n        id: this.props.id || null,\r\n        style: this.props.style,\r\n      })}\r\n      </ImagePlaceholder>;\r\n\r\n    return <React.Fragment>\r\n      {placeholder}\r\n    </React.Fragment>\r\n  }\r\n}\r\n\r\nlet _export;\r\nif (isEditor()) {\r\n  _export = AltrpImage;\r\n} else {\r\n\r\n  function mapStateToProps(state) {\r\n    return {\r\n      scrollPosition: state.scrollPosition,\r\n      popupTrigger: state.popupTrigger,\r\n    };\r\n  }\r\n\r\n  _export = window.reactRedux.connect(mapStateToProps)(AltrpImage)\r\n}\r\nexport default _export;\r\n","import AltrpModel from \"../../classes/AltrpModel\";\r\n\r\nclass TemplateLoader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      templateComponent: null,\r\n    };\r\n  }\r\n  /**\r\n   * Загрузим необходимые модули\r\n   * @return {Promise<void>}\r\n   */\r\n  async componentDidMount() {\r\n    const templateLoader = (await import(/* webpackChunkName: 'TemplateLoader' */\"../../classes/modules/TemplateLoader\")).default;\r\n    const frontElementsFabric = (await import( /* webpackChunkName: 'FrontElementsFabric' */\"../../../../../front-app/src/js/classes/FrontElementsFabric\")).default;\r\n    const ElementWrapper = (await import( /* webpackChunkName: 'ElementWrapper' */\"../../../../../front-app/src/js/components/ElementWrapper\")).default;\r\n    this.setState(state => ({...state, templateLoader, frontElementsFabric, ElementWrapper}), this.loadTemplate);\r\n  }\r\n  /**\r\n   * Загрузим шаблон\r\n   * @return {Promise<void>}\r\n   */\r\n  async loadTemplate(){\r\n    let templateComponent = null;\r\n    const {templateLoader, frontElementsFabric} = this.state;\r\n    if(this.props.templateId){\r\n      templateComponent = await templateLoader.loadParsedTemplate(this.props.templateId);\r\n      templateComponent = frontElementsFabric.cloneElement(templateComponent);\r\n      if(this.props.cardModel instanceof AltrpModel){\r\n        templateComponent.setCardModel(this.props.cardModel);\r\n      }\r\n      templateComponent = React.createElement(templateComponent.componentClass,\r\n          {...this.props,\r\n            children: templateComponent.children,\r\n            element: templateComponent,\r\n            ElementWrapper: this.state.ElementWrapper\r\n          });\r\n    }\r\n\r\n\r\n    this.setState(state => ({...state, templateComponent}), async () => {\r\n      if(_.isFunction(this.props.onLoad)) {\r\n        // await delay(50);\r\n        this.props.onLoad();\r\n      };\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Обновление компонента\r\n   * @param {{}} prevProps\r\n   * @param {{}} prevState\r\n   */\r\n  componentDidUpdate(prevProps, prevState) {\r\n\r\n    /**\r\n     * Проверим обновилось ли ИД шаблона\r\n     */\r\n    if(this.props.templateId !== prevProps.templateId){\r\n      this.loadTemplate();\r\n    }\r\n  }\r\n  render() {\r\n    return <div className=\"inner-template\">{this.state.templateComponent}</div>;\r\n  }\r\n}\r\n\r\nexport default TemplateLoader\r\n","\r\nimport { getResponsiveSetting } from '../helpers';\r\nimport { shadowControllerToStyles, dimensionsControllerToStyles } from '../helpers/styles';\r\n\r\n\r\nconst FrontPopupWrapper = window.styled.div`\r\n& .popup-content {\r\n  ${({settings}) => {\r\n    let styles = \"\";\r\n\r\n    if(settings.width_popup_layout && settings.width_popup_layout.size)\r\n    styles += `width: ${settings.width_popup_layout.size} ${settings.width_popup_layout.unit};`;\r\n\r\n    return styles;\r\n  }}\r\n}\r\n& .popup-close-button {\r\n  ${({settings}) => {\r\n    let styles = \"\";\r\n    styles += dimensionsControllerToStyles(getResponsiveSetting(settings, 'popup_close_button_padding'));\r\n\r\n    if(settings.popup_close_button_height_size && settings.popup_close_button_height_size.size) {\r\n      let {size, unit} = getResponsiveSetting(settings, 'popup_close_button_height_size');\r\n      styles += `height: ${size}${unit};`;\r\n    }\r\n\r\n    if(settings.popup_close_button_width_size && settings.popup_close_button_width_size.size) {\r\n      let {size, unit} = getResponsiveSetting(settings, 'popup_close_button_width_size');\r\n      styles += `width: ${size}${unit};`\r\n    }\r\n\r\n    if(settings.popup_close_button_border_type) {\r\n      styles += dimensionsControllerToStyles(getResponsiveSetting(settings, \"popup_close_button_border_width\"), \"border\");\r\n      styles += `border-style: ${getResponsiveSetting(settings, \"popup_close_button_border_type\")};`;\r\n      if(settings.popup_close_button_border_color && settings.popup_close_button_border_color.colorPickedHex)\r\n        styles += `border-color: ${getResponsiveSetting(settings, \"popup_close_button_border_color.colorPickedHex\")};`;\r\n    }\r\n    styles += dimensionsControllerToStyles(getResponsiveSetting(settings, \"popup_close_button_border_radius\"), \"border-radius\");\r\n    if(settings.popup_close_button_background_color) {\r\n      styles += `background-color: ${getResponsiveSetting(settings, \"popup_close_button_background_color\").colorPickedHex} !important;`;\r\n    }\r\n\r\n    styles += shadowControllerToStyles(getResponsiveSetting(settings, \"popup_close_button_box_shadow\"));\r\n\r\n    return styles;\r\n  }}\r\n}\r\n& .popup-close-button:hover {\r\n  ${({settings}) => {\r\n    let styles = '';\r\n    let popupCloseButtonPadding = getResponsiveSetting(settings, 'popup_close_button_padding', ':hover');\r\n    styles += popupCloseButtonPadding;\r\n    return styles;\r\n  }}\r\n}\r\n& .popup-close-button-icon {\r\n  ${({settings}) => {\r\n    let styles = '';\r\n    if(settings.popup_close_icon_height_size && settings.popup_close_icon_height_size.size) {\r\n      let {size, unit} = getResponsiveSetting(settings, 'popup_close_icon_height_size');\r\n      styles += `height: ${size}${unit};`\r\n    }\r\n    if(settings.popup_close_icon_width_size && settings.popup_close_icon_width_size.size) {\r\n      let {size, unit} = getResponsiveSetting(settings, 'popup_close_icon_width_size');\r\n      styles += `width: ${size}${unit};`\r\n    }\r\n    return styles;\r\n  }}\r\n}\r\n& .altrp-offcanvas {\r\n  ${({settings}) => {\r\n    let styles ='';\r\n    if(settings.time_offcanvas  && settings.time_offcanvas.size) {\r\n      styles += `animation-duration: ${settings.time_offcanvas.size}${settings.time_offcanvas.unit} !important;`\r\n    }\r\n    return styles;\r\n  }}\r\n}\r\n`\r\n\r\nexport default FrontPopupWrapper;\r\n","import { isEditor } from \"../../helpers\";\r\nimport \"./altrp-offcanvas.scss\";\r\nimport TemplateLoader from \"../../../../../editor/src/js/components/template-loader/TemplateLoader\";\r\nimport ReactDOM from \"react-dom\";\r\nimport React, { Component } from \"react\";\r\nimport AltrpImage from \"../../../../../editor/src/js/components/altrp-image/AltrpImage\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport FrontPopupWrapper from \"../FrontPopupWrapper\";\r\n\r\nclass OffcanvasWidget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      settings: props.settings,\r\n      elementId: props.template.getId(),\r\n      show: false\r\n    };\r\n\r\n    this.offcanvasRef = React.createRef();\r\n    this.offcanvasContentRef = React.createRef();\r\n\r\n    this.show = this.show.bind(this);\r\n    this.hide = this.hide.bind(this);\r\n    this.hideButton = this.hideButton.bind(this);\r\n    this.mainContent = document.getElementsByClassName(\"main-content\")[0];\r\n  }\r\n\r\n  show() {\r\n    this.setState({\r\n      show: true\r\n    });\r\n    document.addEventListener(\"click\", this.hide);\r\n    if (this.state.settings.animations_offcanvas === \"push\") {\r\n      if (this.state.settings.direction_offcanvas === \"left\") {\r\n        this.mainContent.style.width = \"70%\";\r\n        this.mainContent.style.left = \"30%\";\r\n      } else if (this.state.settings.direction_offcanvas === \"right\") {\r\n        this.mainContent.style.width = \"70%\";\r\n      }\r\n    }\r\n  }\r\n\r\n  hide(e) {\r\n    if (!e.path.includes(this.offcanvasContentRef.current)) {\r\n      this.props.close();\r\n      this.setState(state => {\r\n        return {\r\n          ...state,\r\n          hideAnimation: true\r\n        };\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          hideAnimation: false,\r\n          show: false\r\n        });\r\n      }, 200);\r\n      document.removeEventListener(\"click\", this.hide);\r\n    }\r\n    this.mainContent.style.width = \"100%\";\r\n    this.mainContent.style.left = \"0\";\r\n  }\r\n\r\n  hideButton() {\r\n    this.setState(state => {\r\n      return {\r\n        ...state,\r\n        hideAnimation: true\r\n      };\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        hideAnimation: false,\r\n        show: false\r\n      });\r\n      document.removeEventListener(\"click\", this.hide);\r\n    }, 200);\r\n    this.props.close();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.show !== prevProps.show) {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let classes = \"altrp-offcanvas\";\r\n\r\n    switch (this.state.settings.direction_offcanvas) {\r\n      case \"left\":\r\n        classes += \" altrp-offcanvas-left altrp-offcanvas-vertical\";\r\n        break;\r\n      case \"right\":\r\n        classes += \" altrp-offcanvas-right altrp-offcanvas-vertical\";\r\n        break;\r\n      case \"top\":\r\n        classes += \" altrp-offcanvas-top altrp-offcanvas-horizontal\";\r\n        break;\r\n      case \"bottom\":\r\n        classes += \" altrp-offcanvas-bottom altrp-offcanvas-horizontal\";\r\n        break;\r\n      case \"topLeft\":\r\n        classes +=\r\n          \" altrp-offcanvas-top-left altrp-offcanvas-horizontal altrp-offcanvas-vertical\";\r\n        break;\r\n      case \"topRight\":\r\n        classes +=\r\n          \" altrp-offcanvas-top-right altrp-offcanvas-horizontal altrp-offcanvas-vertical\";\r\n        break;\r\n      case \"bottomLeft\":\r\n        classes +=\r\n          \" altrp-offcanvas-bottom-left altrp-offcanvas-horizontal altrp-offcanvas-vertical\";\r\n        break;\r\n      case \"bottomRight\":\r\n        classes +=\r\n          \" altrp-offcanvas-bottom-right altrp-offcanvas-horizontal altrp-offcanvas-vertical\";\r\n        break;\r\n    }\r\n\r\n    let classesWrapper = \"\";\r\n    switch (this.state.settings.animations_offcanvas) {\r\n      case \"push\":\r\n        classesWrapper += \" altrp-offcanvas-animation-push\";\r\n        break;\r\n      case \"reveal\":\r\n        classesWrapper += \" altrp-offcanvas-animation-reveal\";\r\n        break;\r\n      case \"none\":\r\n        classesWrapper += \" altrp-offcanvas-animation-none\";\r\n        break;\r\n      default:\r\n        classesWrapper += \" altrp-offcanvas-animation-slide\";\r\n    }\r\n\r\n    let content = \"\";\r\n    let rootElement = this.props.template;\r\n\r\n    if (rootElement) {\r\n      content = React.createElement(rootElement.componentClass, {\r\n        element: rootElement,\r\n        children: rootElement.children\r\n      });\r\n    }\r\n    classesWrapper += ` altrp-offcanvas-wrapper-cursor-${\r\n      this.state.settings.close_cursor_offcanvas\r\n    } ${\r\n      this.state.settings.overflow_visible_offcanvas\r\n        ? \"altrp-offcanvas-wrapper-overflow-visible\"\r\n        : \"\"\r\n    }`;\r\n\r\n    const closeButton = this.state.settings\r\n      .switcher_close_button_popup_layout ? (\r\n      <div\r\n        className={\r\n          \"altrp-offcanvas-button popup-close-button\" +\r\n          ` altrp-offcanvas-button-${this.state.settings.popup_close_icon_alignment}`\r\n        }\r\n        onClick={this.hideButton}\r\n      >\r\n        <AltrpImage\r\n          image={this.state.settings.popup_close_icon}\r\n          default={{ assetType: \"icon\", name: \"deleteOne\" }}\r\n          className=\"altrp-offcanvas-button-icon popup-close-button-icon\"\r\n        />\r\n      </div>\r\n    ) : (\r\n      \"\"\r\n    );\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"altrp-offcanvas-ref\" ref={this.offcanvasRef} />\r\n        {ReactDOM.createPortal(\r\n          <FrontPopupWrapper settings={this.state.settings}>\r\n            <div\r\n              className={\r\n                \"altrp-offcanvas-wrapper\" +\r\n                (this.state.show ? \" altrp-offcanvas-wrapper-show\" : \"\") +\r\n                ` ${this.state.elementId}-altrp-offcanvas` +\r\n                (this.state.hideAnimation\r\n                  ? \" altrp-offcanvas-wrapper-animation-hide\"\r\n                  : \"\") +\r\n                classesWrapper\r\n              }\r\n            >\r\n              <div className={classes} ref={this.offcanvasContentRef}>\r\n                <Scrollbars\r\n                  autoHide\r\n                  autoHideTimeout={1000}\r\n                  autoHideDuration={200}\r\n                  universal={true}\r\n                >\r\n                  {closeButton}\r\n\r\n                  {content}\r\n                </Scrollbars>\r\n              </div>\r\n            </div>\r\n          </FrontPopupWrapper>,\r\n          document.getElementById(\"front-app\")\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OffcanvasWidget;\r\n","import { Scrollbars } from \"react-custom-scrollbars\";\r\nimport AltrpOffcanvas from \"./altrp-offcanvas/AltrpOffcanvas\";\r\nimport { togglePopup } from \"../store/popup-trigger/actions\";\r\nimport AltrpImage from \"../../../../editor/src/js/components/altrp-image/AltrpImage\";\r\nimport FrontPopupWrapper from \"./FrontPopupWrapper\";\r\n\r\nclass FrontPopup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.ElementWrapper = props.ElementWrapper || window.ElementWrapper;\r\n    this.state = {\r\n      isVisible: false,\r\n      rootElement: window.frontElementsFabric.parseData(\r\n        this.props.template.data,\r\n        null,\r\n        this.props.page,\r\n        this.props.models\r\n      ),\r\n      isShownOnScroll: false\r\n    };\r\n\r\n    this.close = this.close.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    switch (this.state.rootElement.getContent(\"type_popup\")) {\r\n      case \"popup\":\r\n        // const { on_page_load, on_click, inactivity, on_exit, to_element } = _.get(this.props, 'template.triggers.data', {});\r\n\r\n        // if (on_page_load || on_page_load === 0) {\r\n        //   setTimeout(() => this.setState({ isVisible: true }), on_page_load * 1000)\r\n        // }\r\n        //\r\n        // if (on_click) {\r\n        //   this.clickCounter = 0;\r\n        //   document.addEventListener('click', () => {\r\n        //     this.clickCounter += 1;\r\n        //     if (this.clickCounter === +on_click) {\r\n        //       this.clickCounter = 0;\r\n        //       this.setState({ isVisible: true });\r\n        //     }\r\n        //   })\r\n        // }\r\n        //\r\n        // if (inactivity) {\r\n        //   this.inactivityTimeout = setTimeout(() => this.setState({ isVisible: true }), inactivity * 1000);\r\n        //\r\n        //   this.resetTimer = () => {\r\n        //     clearTimeout(this.inactivityTimeout);\r\n        //     this.inactivityTimeout = setTimeout(() => this.setState({ isVisible: true }), inactivity * 1000);\r\n        //   };\r\n        //\r\n        //   const events = ['mousedown', 'keydown', 'touchstart'];\r\n        //   events.forEach(event => {\r\n        //     document.addEventListener(event, this.resetTimer, true);\r\n        //   });\r\n        // }\r\n        //\r\n        // if (on_exit) {\r\n        //   // window.addEventListener('beforeunload', (event) => {\r\n        //   //   // Отмените событие, как указано в стандарте.\r\n        //   //   event.preventDefault();\r\n        //   //   this.setState({ isVisible: true })\r\n        //   //   // Хром требует установки возвратного значения.\r\n        //   //   event.returnValue = '';\r\n        //   // });\r\n        //   document.addEventListener('mouseleave', () => this.setState({ isVisible: true }))\r\n        // }\r\n\r\n        // if (to_element) {\r\n        //   const htmlCollection = document.getElementsByClassName(to_element);\r\n        //   console.log(htmlCollection);\r\n        //   this.elements = []\r\n        //   for (let index = 0; index < htmlCollection.length; index++) {\r\n        //     const element = htmlCollection[index];\r\n        //     this.elements[index] = getTopPosition(element);\r\n        //   }\r\n        //   console.log(this.elements);\r\n        // }\r\n        break;\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { popupTrigger } = this.props;\r\n    const { on_scroll, to_element } = _.get(\r\n      this.props,\r\n      \"template.triggers.data\",\r\n      {}\r\n    );\r\n    const { isShownOnScroll } = this.state;\r\n    switch (this.state.rootElement.getSettings(\"type_popup\", \"popup\")) {\r\n      case \"popup\":\r\n        // if (on_scroll && !isShownOnScroll && on_scroll.size <= this.props.scrollPosition.top * 100) {\r\n        //   this.setState({ isVisible: true, isShownOnScroll: true });\r\n        //\r\n        // }\r\n        // if (this.resetTimer && this.props.scrollPosition.top !== prevProps.scrollPosition.top) {\r\n        //\r\n        //  this.resetTimer();\r\n        //\r\n        // }\r\n        // if (to_element && this.props.scrollPosition.top !== prevProps.scrollPosition.top) {\r\n        //\r\n        //  // console.log(this.elements)\r\n        //\r\n        //  console.log(this.props.scrollPosition.scrollTop)\r\n        //  const { scrollTop, clientHeight } = this.props.scrollPosition;\r\n        //\r\n        //  for (let index = 0; index < this.elements.length; index++) {\r\n        //\r\n        //    const element = this.elements[index];\r\n        //\r\n        //     if (isElementTopInViewport(element, scrollTop, clientHeight)) {\r\n        //\r\n        //      this.setState({ isVisible: true });\r\n        //       // this.elements.splice(index, 1);\r\n        //     }\r\n        //   }\r\n\r\n        // }\r\n        if (popupTrigger !== prevProps.popupTrigger) {\r\n          this.setState({\r\n            isVisible:\r\n              popupTrigger.popupID === _.get(this.props, \"template.guid\")\r\n          });\r\n        }\r\n        break;\r\n      case \"offcanvas\":\r\n        // if (on_scroll && !isShownOnScroll && on_scroll.size <= this.props.scrollPosition.top * 100) {\r\n        //   this.setState({ isVisible: true, isShownOnScroll: true });\r\n        // }\r\n        //\r\n        // if (this.resetTimer && this.props.scrollPosition.top !== prevProps.scrollPosition.top) {\r\n        //   this.resetTimer();\r\n        // }\r\n\r\n        // if (to_element && this.props.scrollPosition.top !== prevProps.scrollPosition.top) {\r\n        //   // console.log(this.elements)\r\n        //   console.log(this.props.scrollPosition.scrollTop)\r\n        //   const { scrollTop, clientHeight } = this.props.scrollPosition;\r\n\r\n        //   for (let index = 0; index < this.elements.length; index++) {\r\n        //     const element = this.elements[index];\r\n\r\n        //     if (isElementTopInViewport(element, scrollTop, clientHeight)) {\r\n        //       this.setState({ isVisible: true });\r\n        //       // this.elements.splice(index, 1);\r\n        //     }\r\n        //   }\r\n\r\n        // }\r\n        if (popupTrigger !== prevProps.popupTrigger) {\r\n          this.setState({\r\n            isVisible:\r\n              popupTrigger.popupID === _.get(this.props, \"template.guid\")\r\n          });\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.setState({ isVisible: false, isShownOnScroll: false });\r\n    this.props.closePopup();\r\n  }\r\n\r\n  render() {\r\n    const { isVisible } = this.state;\r\n    let classes = [`app-popup`];\r\n    // const { positioning_custom_top } = this.props.template.data.rootElementSettings;\r\n    const rootElement = this.state.rootElement;\r\n    rootElement.popupGUID = _.get(this.props, \"template.guid\");\r\n    const rootElementSettings = rootElement.getSettings(\"\");\r\n    const rootElementId = rootElement.getId();\r\n\r\n    classes.push(`${rootElementId}-app-popup`);\r\n    const overlayCondition =\r\n      rootElementSettings.overlay_close_popup_layout || true;\r\n\r\n    if (overlayCondition) {\r\n      classes.push(\"app-popup-overlay\");\r\n    }\r\n\r\n    //height popup\r\n    switch (rootElementSettings.height_popup_layout) {\r\n      case \"fitToScreen\":\r\n        classes.push(\"app-popup-height-fit-to-screen\");\r\n        break;\r\n      case \"custom\":\r\n        classes.push(\"app-popup-height-custom\");\r\n        break;\r\n    }\r\n\r\n    //horizontal position horizontal_position_popup_layout\r\n    switch (rootElementSettings.horizontal_position_popup_layout) {\r\n      case \"left\":\r\n        classes.push(\"app-popup-horizontal-left\");\r\n        break;\r\n      case \"center\":\r\n        classes.push(\"app-popup-horizontal-center\");\r\n        break;\r\n      case \"right\":\r\n        classes.push(\"app-popup-horizontal-right\");\r\n        break;\r\n      default:\r\n        classes.push(\"app-popup-horizontal-center\");\r\n    }\r\n\r\n    //vertical position vertical_position_popup_layout\r\n    switch (rootElementSettings.vertical_position_popup_layout) {\r\n      case \"top\":\r\n        classes.push(\"app-popup-vertical-top\");\r\n        break;\r\n      case \"center\":\r\n        classes.push(\"app-popup-vertical-center\");\r\n        break;\r\n      case \"bottom\":\r\n        classes.push(\"app-popup-vertical-bottom\");\r\n        break;\r\n      default:\r\n        classes.push(\"app-popup-vertical-center\");\r\n    }\r\n\r\n    // let styleButtonClose = {};\r\n\r\n    // if(rootElementSettings.popup_close_button_height_size && rootElementSettings.popup_close_button_height_size.size)\r\n    //   styleButtonClose.height = rootElementSettings.popup_close_button_height_size.size + rootElementSettings.popup_close_button_height_size.unit;\r\n    // if(rootElementSettings.popup_close_button_width_size && rootElementSettings.popup_close_button_width_size.size)\r\n    //   styleButtonClose.width = rootElementSettings.popup_close_button_width_size.size + rootElementSettings.popup_close_button_width_size.unit;\r\n\r\n    // if(rootElementSettings.popup_close_button_padding) {\r\n    //   styleButtonClose.paddingTop = rootElementSettings.popup_close_button_padding.top + rootElementSettings.popup_close_button_padding.unit;\r\n    //   styleButtonClose.paddingRight = rootElementSettings.popup_close_button_padding.right + rootElementSettings.popup_close_button_padding.unit;\r\n    //   styleButtonClose.paddingBottom = rootElementSettings.popup_close_button_padding.bottom + rootElementSettings.popup_close_button_padding.unit;\r\n    //   styleButtonClose.paddingLeft = rootElementSettings.popup_close_button_padding.left + rootElementSettings.popup_close_button_padding.unit;\r\n    // }\r\n\r\n    // if(rootElementSettings.popup_close_button_border_type && rootElementSettings.popup_close_button_border_type !== \"none\") {\r\n    //   styleButtonClose.borderTopWidth = rootElementSettings.popup_close_button_border_width.top + rootElementSettings.popup_close_button_border_width.unit;\r\n    //   styleButtonClose.borderRightWidth = rootElementSettings.popup_close_button_border_width.right + rootElementSettings.popup_close_button_border_width.unit;\r\n    //   styleButtonClose.borderBottomWidth = rootElementSettings.popup_close_button_border_width.bottom + rootElementSettings.popup_close_button_border_width.unit;\r\n    //   styleButtonClose.borderLeftWidth = rootElementSettings.popup_close_button_border_width.left + rootElementSettings.popup_close_button_border_width.unit;\r\n    //   styleButtonClose.borderStyle = rootElementSettings.popup_close_button_border_type;\r\n    //   if(rootElementSettings.popup_close_button_border_color && rootElementSettings.popup_close_button_border_color.colorPickedHex)\r\n    //     styleButtonClose.borderColor = rootElementSettings.popup_close_button_border_color.colorPickedHex;\r\n    // }\r\n\r\n    // if(rootElementSettings.popup_close_button_border_radius) {\r\n    //   let borderRadiusTop = (rootElementSettings.popup_close_button_border_radius.top ? rootElementSettings.popup_close_button_border_radius.top : \"0\") + rootElementSettings.popup_close_button_border_radius.unit;\r\n    //   let borderRadiusRight = (rootElementSettings.popup_close_button_border_radius.right ? rootElementSettings.popup_close_button_border_radius.right : \"0\") + rootElementSettings.popup_close_button_border_radius.unit;\r\n    //   let borderRadiusBottom = (rootElementSettings.popup_close_button_border_radius.bottom ? rootElementSettings.popup_close_button_border_radius.bottom : \"0\") + rootElementSettings.popup_close_button_border_radius.unit;\r\n    //   let borderRadiusLeft = (rootElementSettings.popup_close_button_border_radius.left ?  rootElementSettings.popup_close_button_border_radius.left  : \"0\")+ rootElementSettings.popup_close_button_border_radius.unit;\r\n    //   styleButtonClose.borderRadius = `${borderRadiusTop} ${borderRadiusRight} ${borderRadiusBottom} ${borderRadiusLeft}`;\r\n    // }\r\n\r\n    // if(rootElementSettings.popup_close_button_background_color) {\r\n    //   styleButtonClose.backgroundColor = rootElementSettings.popup_close_button_background_color.colorPickedHex;\r\n    // }\r\n\r\n    // if(rootElementSettings.popup_close_button_box_shadow) {\r\n    //   let type = rootElementSettings.popup_close_button_box_shadow.type;\r\n    //   let offsetX = rootElementSettings.popup_close_button_box_shadow.horizontal;\r\n    //   let offsetY = rootElementSettings.popup_close_button_box_shadow.vertical;\r\n    //   let blurRadius = rootElementSettings.popup_close_button_box_shadow.blur;\r\n    //   let spreadRadius = rootElementSettings.popup_close_button_box_shadow.spread;\r\n    //   let color = rootElementSettings.popup_close_button_box_shadow.colorPickedHex;\r\n    //   styleButtonClose.boxShadow = `${type} ${offsetX}px ${offsetY}px ${blurRadius}px ${spreadRadius} ${color}`;\r\n    // }\r\n\r\n    let content = \"\";\r\n    const closeButtonCondition =\r\n      rootElementSettings.switcher_close_button_popup_layout || true;\r\n    let { popup_close_icon_alignment } = rootElementSettings;\r\n    popup_close_icon_alignment = popup_close_icon_alignment || \"right\";\r\n    const closeButton = closeButtonCondition ? (\r\n      <button\r\n        className={\r\n          \"popup-close-button\" +\r\n          (popup_close_icon_alignment === \"right\"\r\n            ? \" popup-close-button-right\"\r\n            : \" popup-close-button-left\")\r\n        }\r\n        onClick={() => {\r\n          this.setState({ isVisible: false });\r\n          this.props.closePopup();\r\n        }}\r\n      >\r\n        <AltrpImage\r\n          image={rootElementSettings.popup_close_icon}\r\n          lazy={false}\r\n          default={{\r\n            assetType: \"icon\",\r\n            name: \"deleteOne\",\r\n            url: \"/img/nullImage.png\"\r\n          }}\r\n          className=\"popup-close-button-icon\"\r\n        />\r\n      </button>\r\n    ) : null;\r\n\r\n    let maxHeight = \"100%\";\r\n\r\n    if (rootElementSettings.height_popup_layout === \"custom\") {\r\n      maxHeight =\r\n        Number(rootElementSettings.height_custom_popup_layout.size) || 0;\r\n    }\r\n\r\n    const popup = isVisible ? (\r\n      <FrontPopupWrapper\r\n        settings={rootElementSettings}\r\n        className={classes.join(\" \")}\r\n        onClick={() => {\r\n          if (\r\n            rootElementSettings.popup_close_click_on_dark_area === undefined ||\r\n            rootElementSettings.popup_close_click_on_dark_area\r\n          ) {\r\n            this.setState({ isVisible: false });\r\n            this.props.closePopup();\r\n          }\r\n        }}\r\n      >\r\n        <div\r\n          className=\"popup-window\"\r\n          // style={{ top: positioning_custom_top.size + positioning_custom_top.unit}}\r\n          onClick={e => e.stopPropagation()}\r\n        >\r\n          {closeButton}\r\n\r\n          <Scrollbars\r\n            autoHide\r\n            autoHeight\r\n            renderThumbHorizontal={props => (\r\n              <div {...props} className=\"popup-scrollbar-vertical\" />\r\n            )}\r\n            renderTrackHorizontal={() => (\r\n              <div className=\"popup-scrollbar-track-horizontal\" />\r\n            )}\r\n            renderTrackVertical={props => (\r\n              <div {...props} className=\"popup-scrollbar-track-vertical\" />\r\n            )}\r\n            className=\"popup-scrollbar\"\r\n            autoHeightMin={100}\r\n            autoHeightMax={maxHeight}\r\n            autoHideTimeout={1000}\r\n            autoHideDuration={200}\r\n          >\r\n            <div className=\"popup-content\">\r\n              {React.createElement(rootElement.componentClass, {\r\n                element: rootElement,\r\n                ElementWrapper :this.ElementWrapper,\r\n                children: rootElement.children\r\n              })}\r\n            </div>\r\n          </Scrollbars>\r\n        </div>\r\n      </FrontPopupWrapper>\r\n    ) : null;\r\n    const type = rootElementSettings.type_popup || \"popup\";\r\n    switch (type) {\r\n      case \"popup\":\r\n        content = popup;\r\n        break;\r\n      case \"offcanvas\":\r\n        content = (\r\n          <AltrpOffcanvas\r\n            close={this.close}\r\n            show={this.state.isVisible}\r\n            settings={rootElementSettings}\r\n            template={rootElement}\r\n          />\r\n        );\r\n        break;\r\n    }\r\n    return content;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    scrollPosition: state.scrollPosition,\r\n    popupTrigger: state.popupTrigger\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    closePopup: () => dispatch(togglePopup(null))\r\n  };\r\n};\r\n\r\nexport default window.reactRedux.connect(mapStateToProps, mapDispatchToProps)(FrontPopup);\r\n"],"sourceRoot":""}