{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/DashboardComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/DiagramComponent.js","webpack:///./resources/modules/front-app/src/js/components/SimpleElementWrapper.js","webpack:///./resources/modules/front-app/src/js/store/elements-storage/actions.js"],"names":["DashboardComponent","settings","styles","style_font_typographic","value","getResponsiveSetting","family","_","isString","dashboardStyles","styledString","DiagramComponent","SimpleElementWrapper","props","updateStore","state","currentModel","appStore","getState","setState","currentUser","currentDataStorage","elementDisplay","element","getSettings","wrapper","elementWrapperRef","elementRef","React","createRef","dispatch","addElement","error","errorInfo","this","window","altrpHelpers","isEditor","frontApp","onWidgetMount","isFunction","update","updateFonts","checkElementDisplay","get","stylesModule","stylesContainer","current","getElementsByClassName","getId","prevProps","prevState","getProperty","getName","title","currentTitle","replaceContentWithData","altrpPage","changeCurrentPageProperty","setTitle","updateToken","altrpRandomId","conditions","map","c","modelField","conditional_model_field","operator","conditional_other_operator","conditional_other_condition_value","conditionsChecker","getCurrentModel","formsStore","formId","logic","formConditions","display","forEach","altrpCompare","field_id","hide_on_trigger","tooltip_position","tooltip_text","className","getType","style","whiteSpace","toString","componentStack","Number","width","CSSId","getData","ContentComponent","frontElementsManager","getComponentClass","content","createElement","ref","rootElement","ElementWrapper","children","getChildren","match","altrpresponses","altrpPageState","altrpMeta","currentScreen","baseRender","history","backend","HTML5Backend","WrapperComponent","Fragment","NavComponent","wrapperProps","elementId","hideTriggers","includes","position","Component","reactRedux","connect","ADD_ELEMENT","CLEAR_ELEMENTS","elementComponent","type"],"mappings":"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","file":"SimpleElementWrapper.c39d73f5290119c42959.bundle.js","sourcesContent":["import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport function dashboardStyles(settings){\r\n\r\n    const style_font_typographic =() => {\r\n        const value = getResponsiveSetting(settings, \"style_font_typographic\");\r\n    \r\n        if(value) {\r\n          if(value.family) {\r\n            if(_.isString(value.family)) {\r\n              return `font-family: \"${value.family}\" sans-serif !important;`;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    \r\n    return [\r\n        \"altrp-dashboard__card--background\",\r\n          [\"background-color\", \"style_background_color\", \"color\", \"\", true],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--settings-tooltip-background\",\r\n          [\"background-color\", \"style_settings_tooltip_background_color\", \"color\", \"\", true],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--settings-tooltip-icon-background\",\r\n          [\"background-color\", \"style_settings_tooltip_icon_background_color\", \"color\", \"\", true],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--border-color\",\r\n          [\"border-color\", \"style_border_color\", \"color\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--border-style\",\r\n          [\"border-style\", \"style_border_style\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--border\",\r\n          [\"border-width\", \"style_border_width\", \"slider\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--border-radius\",\r\n          [\"border-radius\", \"style_border_radius\", \"slider\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--font\",\r\n          [\"border-style\", \"border_type_card\"],\r\n          [\"border-width\", \"border_width_card\", \"dimensions\"],\r\n          [\"border-color\", \"altrp-dashboard__card--font\", \"color\"],\r\n          [\"border-radius\", \"border_radius_card\", \"dimensions\"],\r\n          [\"\", \"style_background_shadow\", \"shadow\"],\r\n          style_font_typographic(),\r\n          \"& text\",\r\n            style_font_typographic(),\r\n          \"}\",\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--font-color\",\r\n          [\"color\", \"style_font_color\", \"color\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--font-size\",\r\n          [\"font-size\", \"style_font_size\", \"slider\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--font-weight\",\r\n          [\"font-weight\", \"style_font_weight\", \"slider\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__tooltip--label-background\",\r\n          [\"margin\", \"style_margin_tooltip\", \"dimensions\"],\r\n          [\"background-color\", \"style_background_color_tooltip\", \"color\", \"\", true],\r\n          [\"\", \"style_background_tooltip_shadow\", \"shadow\"],\r\n          [\"border-style\", \"border_type_tooltip\"],\r\n          [\"border-width\", \"border_width_tooltip\", \"dimensions\"],\r\n          [\"border-color\", \"border_color_tooltip\", \"color\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__tooltip--font\",\r\n          [\"padding\", \"style_padding_tooltip\", \"dimensions\"],\r\n          [\"\", \"style_font_tooltip\", \"typographic\"],\r\n          [\"color\", \"style_font_color_tooltip\", \"color\"],\r\n        \"}\",\r\n      ];\r\n}\r\n\r\nexport default function DashboardComponent(settings){\r\n    const styles=[\r\n        ...dashboardStyles(settings)\r\n    ];\r\n\r\n    return styledString(styles,settings);\r\n}","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport default function DiagramComponent(settings) {\r\n  const styles = [\r\n    \"altrp-dashboard__tooltip--margin\",\r\n      [\"margin\", \"style_margin_tooltip\", \"dimensions\"],\r\n      [\"padding\", \"style_padding_tooltip\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--width\",\r\n      [\"padding-top\", \"style_width_tooltip\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--font\",\r\n      [\"\", \"style_font_tooltip\", \"typographic\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--font-color\",\r\n      [\"color\", \"style_font_color_tooltip\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--label-background\",\r\n      [\"background-color\", \"style_background_color_tooltip\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--label-background-shadow\",\r\n      [\"background-color\", \"style_background_tooltip_shadow\", \"shadow\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--border-type\",\r\n      [\"border-style\", \"border_type_tooltip\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--border-width\",\r\n      [\"border-width\", \"border_width_tooltip\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--border-color\",\r\n      [\"border-color\", \"border_color_tooltip\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-diagram\",\r\n      [\"width\", \"width\", \"slider\"],\r\n      [\"height\", \"height\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-btn\",\r\n      [\"margin\", \"margin\", \"dimensions\"],\r\n    \"}\",\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n","import { addElement } from \"../store/elements-storage/actions\";\r\nimport { changeCurrentPageProperty } from \"../store/current-page/actions\";\r\nimport AltrpTooltip from \"../../../../editor/src/js/components/altrp-tooltip/AltrpTooltip\";\r\nimport NavComponent from \"../../../../editor/src/js/components/widgets/styled-components/NavComponent\";\r\nimport DiagramComponent from \"../../../../editor/src/js/components/widgets/styled-components/DiagramComponent\";\r\nimport DashboardComponent from \"../../../../editor/src/js/components/widgets/styled-components/DashboardComponent\";\r\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\r\nimport {DndProvider} from \"react-dnd\";\r\n\r\nclass SimpleElementWrapper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      elementDisplay: !this.props.element.getSettings(\"default_hidden\"),\r\n    };\r\n    props.element.wrapper = this;\r\n    this.elementWrapperRef = this.props.elementWrapperRef;\r\n    this.elementRef = React.createRef();\r\n    this.settings = props.element.getSettings();\r\n    appStore.dispatch(addElement(this));\r\n  }\r\n\r\n  /**\r\n   * Отлавливаем ошибки\r\n   * @param error\r\n   * @param errorInfo\r\n   */\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState(state => ({\r\n      ...state,\r\n      error: error,\r\n      errorInfo: errorInfo\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Иногда надо обновить элемент (FrontElement)\r\n   */\r\n  componentDidMount() {\r\n    ! window.altrpHelpers.isEditor() && window?.frontApp?.onWidgetMount();\r\n    if (_.isFunction(this.props.element.update)) {\r\n      this.props.element.update();\r\n      this.props.element.updateFonts();\r\n    }\r\n    this.checkElementDisplay();\r\n  }\r\n  /**\r\n   * Подписываемся на обновление store редакса\r\n   */\r\n  updateStore = () => {\r\n    if (this.state.currentModel !== appStore.getState().currentModel) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        currentModel: appStore.getState().currentModel\r\n      }));\r\n    }\r\n    /**\r\n     * Обновляем пользователя\r\n     */\r\n    if (this.state.currentUser !== appStore.getState().currentUser) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        currentModel: appStore.getState().currentUser\r\n      }));\r\n    }\r\n\r\n    /**\r\n     * Обновляем currentDataStorage\r\n     */\r\n    if (\r\n      this.state.currentDataStorage !== appStore.getState().currentDataStorage\r\n    ) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        currentDataStorage: appStore.getState().currentDataStorage\r\n      }));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Вернет HTMLElement, в котором записаны css стили текущего компонента\r\n   * @return {null | HTMLElement}\r\n   */\r\n  getStylesHTMLElement() {\r\n    if (!_.get(window, \"stylesModule.stylesContainer.current\")) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      window.stylesModule.stylesContainer.current.getElementsByClassName(\r\n        `altrp-styles${this.props.element.getId()}`\r\n      )[0] || null\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Нужно ли обновить отображение обертки элементов\r\n   * @param {{}} prevProps\r\n   * @param {{}} prevState\r\n   */\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.checkElementDisplay();\r\n    if (appStore.getState().currentModel.getProperty('altrpModelUpdated') &&\r\n      appStore.getState().currentDataStorage.getProperty('currentDataStorageLoaded') &&\r\n      !window.altrpHelpers.isEditor() &&\r\n      this.props.element.getName() === 'section') {\r\n      let title = appStore.getState().currentTitle;\r\n      title = window.altrpHelpers.replaceContentWithData(title);\r\n      if (appStore.getState().altrpPage.getProperty('title') !== title) {\r\n        appStore.dispatch(changeCurrentPageProperty('title', title));\r\n      }\r\n      window.altrpHelpers.setTitle(title);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Обновить элемент изменив this.state.updateToken\r\n   */\r\n  updateElement() {\r\n    this.setState(state => ({ ...state, updateToken: window.altrpHelpers.altrpRandomId() }))\r\n  }\r\n\r\n  /**\r\n   * Проверка видимости элемента\r\n   * @param {{}} prevProps\r\n   * @param {{}} prevState\r\n   */\r\n  checkElementDisplay(prevProps, prevState) {\r\n    /**\r\n     * @member {FrontElement} element\r\n     */\r\n    const { element } = this.props;\r\n    if (!element.getSettings(\"conditional_other\")) {\r\n      return;\r\n    }\r\n    let conditions = element.getSettings(\"conditions\", []);\r\n    conditions = conditions.map(c => {\r\n      const {\r\n        conditional_model_field: modelField,\r\n        conditional_other_operator: operator,\r\n        conditional_other_condition_value: value\r\n      } = c;\r\n      return {\r\n        modelField,\r\n        operator,\r\n        value\r\n      };\r\n    });\r\n    let elementDisplay = window.altrpHelpers.conditionsChecker(\r\n      conditions,\r\n      element.getSettings(\"conditional_other_display\") === \"AND\",\r\n      this.props.element.getCurrentModel(),\r\n      true\r\n    );\r\n\r\n    if (this.state.elementDisplay === elementDisplay) {\r\n      return;\r\n    }\r\n\r\n    this.setState(state => ({\r\n      ...state,\r\n      elementDisplay\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Переключает видимость элемента\r\n   */\r\n  toggleElementDisplay() {\r\n    this.setState(state => ({\r\n      ...state,\r\n      elementDisplay: !state.elementDisplay\r\n    }));\r\n  }\r\n  /**\r\n   * Метод для проверки видимости поля формы\r\n   * @return {boolean}\r\n   */\r\n  inputIsDisplay() {\r\n    const { formsStore } = this.state;\r\n    const formId = this.props.element.getSettings(\"form_id\", \"\");\r\n    const logic = this.props.element.getSettings(\r\n      \"form_condition_display_on\",\r\n      \"AND\"\r\n    );\r\n    const formConditions = this.props.element.getSettings(\r\n      \"form_conditions\",\r\n      []\r\n    );\r\n    let display = true;\r\n    formConditions.forEach(c => {\r\n      if (logic === \"AND\") {\r\n        display *= window.altrpHelpers.altrpCompare(\r\n          _.get(formsStore, `${formId}.${c.field_id}`),\r\n          c.value,\r\n          c.operator\r\n        );\r\n      } else {\r\n        display += window.altrpHelpers.altrpCompare(\r\n          _.get(formsStore, `${formId}.${c.field_id}`),\r\n          c.value,\r\n          c.operator\r\n        );\r\n      }\r\n    });\r\n    return display;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      hide_on_trigger,\r\n      tooltip_position\r\n    } = this.props.element.settings;\r\n    let {\r\n      tooltip_text,\r\n    } = this.props.element.settings\r\n\r\n    if (this.state.errorInfo) {\r\n      return (\r\n        <div className=\"altrp-error\" data-eltype={this.props.element.getType()}>\r\n          <h2>Something went wrong.</h2>\r\n          <details style={{ whiteSpace: \"pre-wrap\" }}>\r\n            {this.state.error && this.state.error.toString()}\r\n            <br />\r\n            {this.state.errorInfo.componentStack}\r\n          </details>\r\n        </div>\r\n      );\r\n    }\r\n    const styles = {};\r\n\r\n    if (this.props.element.getResponsiveSetting('layout_column_width')) {\r\n      if (Number(this.props.element.getResponsiveSetting('layout_column_width'))) {\r\n        styles.width = this.props.element.getResponsiveSetting('layout_column_width') + '%';\r\n      } else {\r\n        styles.width = this.props.element.getResponsiveSetting('layout_column_width');\r\n      }\r\n    }\r\n    if (!this.state.elementDisplay) {\r\n      styles.display = \"none\";\r\n    }\r\n    let CSSId = this.props.element.getSettings(\"advanced_element_id\", \"\");\r\n    CSSId = window.altrpHelpers.replaceContentWithData(CSSId, this.props.element.getCurrentModel().getData());\r\n    if (this.CSSId !== CSSId) {\r\n      this.CSSId = CSSId;\r\n    }\r\n    let ContentComponent = frontElementsManager.getComponentClass(this.props.element.getName());\r\n    let content = React.createElement(ContentComponent, {\r\n      ref: this.elementRef,\r\n      rootElement: this.props.rootElement,\r\n      ElementWrapper: this.props.ElementWrapper,\r\n      element: this.props.element,\r\n      children: this.props.element.getChildren(),\r\n      match: this.props.match,\r\n      currentModel: this.props.currentModel,\r\n      currentUser: this.props.currentUser,\r\n      currentDataStorage: this.props.currentDataStorage,\r\n      altrpresponses: this.props.altrpresponses,\r\n      formsStore: this.props.formsStore,\r\n      elementDisplay: this.state.elementDisplay,\r\n      altrpPageState: this.props.altrpPageState,\r\n      altrpMeta: this.props.altrpMeta,\r\n      updateToken: this.state.updateToken,\r\n      currentScreen: this.props.currentScreen,\r\n      baseRender: this.props.baseRender,\r\n      history: this.props.history,\r\n      appStore\r\n    });\r\n    if(this.props.element.getName() === 'table'){\r\n      content = <DndProvider backend={HTML5Backend}>\r\n        {content}\r\n      </DndProvider>\r\n      }\r\n    let WrapperComponent = React.Fragment;\r\n\r\n    switch (this.props.element.getName()) {\r\n      case \"diagram\":\r\n        WrapperComponent = DiagramComponent;\r\n        break;\r\n      case \"dashboards\":\r\n        WrapperComponent = DashboardComponent;\r\n        break;\r\n      case \"nav\":\r\n        WrapperComponent = NavComponent;\r\n        break;\r\n    }\r\n    tooltip_text = window.altrpHelpers.replaceContentWithData(tooltip_text, this.props.element.getCurrentModel().getData())\r\n    const wrapperProps = {\r\n      elementId: this.elementId,\r\n      settings: this.settings,\r\n      styles\r\n    };\r\n    if(WrapperComponent === React.Fragment){\r\n      delete  wrapperProps.elementId;\r\n      delete  wrapperProps.settings;\r\n      delete  wrapperProps.styles;\r\n      if(this.state.elementDisplay){\r\n        this.elementWrapperRef.current.style.display = null;\r\n      } else {\r\n        this.elementWrapperRef.current.style.display = 'none';\r\n      }\r\n    }\r\n    return this.props.hideTriggers.includes(hide_on_trigger) ? null : (\r\n      <WrapperComponent {...wrapperProps} >\r\n        {content}\r\n        {tooltip_text && <AltrpTooltip position={tooltip_position}>{tooltip_text}</AltrpTooltip>}\r\n      </WrapperComponent>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    hideTriggers: state.hideTriggers,\r\n    altrpresponses: state.altrpresponses,\r\n    formsStore: state.formsStore,\r\n    currentDataStorage: state.currentDataStorage,\r\n    currentModel: state.currentModel,\r\n    currentUser: state.currentUser,\r\n    altrpMeta: state.altrpMeta,\r\n    altrpPageState: state.altrpPageState,\r\n    currentScreen: state.currentScreen,\r\n  };\r\n}\r\n\r\nexport default window.reactRedux.connect(mapStateToProps)(SimpleElementWrapper);\r\n","export const ADD_ELEMENT = 'ADD_ELEMENT';\r\nexport const CLEAR_ELEMENTS = 'CLEAR_ELEMENTS';\r\n\r\n/**\r\n *\r\n * @param {React.Component}elementComponent\r\n * @return {{}} - {\r\n *     type: {string},\r\n *     sectionComponent: {React.Component},\r\n *   }\r\n */\r\nexport function addElement(elementComponent) {\r\n  return {\r\n    type: ADD_ELEMENT,\r\n    elementComponent\r\n  };\r\n}\r\n\r\n/**\r\n * Перед загрузкой новых данных, старые удаляем\r\n * @return {{type: string}}\r\n */\r\nexport function clearElements() {\r\n  return {\r\n    type: CLEAR_ELEMENTS,\r\n  };\r\n}\r\n\r\n"],"sourceRoot":""}