{"version":3,"sources":["webpack:///./resources/modules/front-app/src/js/components/AreaComponent.js","webpack:///./resources/modules/front-app/src/js/classes/PageLoader.js","webpack:///./resources/modules/front-app/src/js/classes/modules/DatastorageUpdater.js","webpack:///./resources/modules/front-app/src/js/components/RouteContent.js","webpack:///./resources/modules/front-app/src/js/components/EmailTemplatesRenderer.js","webpack:///./resources/modules/front-app/src/js/components/AppContent.js","webpack:///./resources/modules/front-app/src/js/components/FontsManager.js","webpack:///./resources/modules/front-app/src/js/components/GlobalStyles.js","webpack:///./resources/modules/front-app/src/FrontApp.js"],"names":["AreaComponent","props","area","component","window","pageUpdater","startUpdating","stylesModule","removeStyleById","this","rootElement","id","classes","getTemplates","length","className","join","map","template","FrontPopup","key","data","lastElement","frontElementsFabric","parseData","page","models","scrollPosition","top","children","forEach","section","lazySection","filter","child","isCustomArea","concat","getAreaClasses","React","componentClass","element","Component","connect","state","PageLoader","resource","Resource","route","pageId","_","isObject","pageStorage","get","pageLoader","altrpHelpers","isJSON","mbParseJSON","replaceContentWithData","DataStorageUpdater","onStoreUpdate","formsStore","appStore","getState","isEqual","getProperty","setProperty","onFormsUpdate","subscribe","dataSources","initialUpdate","ds","Datasource","currentUser","isEmpty","getAll","dispatch","changeCurrentUser","dataSource","parameters","find","param","paramValue","toString","indexOf","params","getParams","currentRouterMatch","subscribeToFormsUpdate","required","value","groupedDataSources","push","currentDataStorageLoading","groupPriority","hasOwnProperty","requests","getWebUrl","defaultParams","cloneDeep","needUpdateFromForms","each","paramName","replace","res","preloadedData","altrpPreloadedDatasources","getAlias","unset","getType","getQueried","Promise","then","console","error","changeCurrentDataStorage","log","performance","now","all","currentDataStorageLoaded","unsetProperty","clearCurrentDataStorage","findIndex","sortBy","data_source","priority","updating","oldParams","undefined","pendingParameters","AltrpModel","dataStorageUpdater","global","ssr","AdminBar","lazy","RouteContent","title","changeCurrentTitle","areas","Area","admin","hasRoles","scrollbar","createRef","isReport","location","href","includes","clearElements","match","currentPageId","currentRouteComponent","altrpHistory","history","updateAppData","nextProps","queryCache","changeRouteCurrentModel","changeCurrentPageProperty","setState","mainScrollbars","current","allowed","setAreas","clearAllResponseData","formsManager","clearFieldsStorage","renderEvent","Event","dispatchEvent","clearFormsStore","data_sources","clearPageState","model","modelName","oldModel","currentModel","getData","altrpModelUpdated","changeCurrentModel","prevProps","Fragment","Suspense","fallback","idPage","idx","to","redirect","withRouter","EmailTemplatesRenderer","baseEmailRender","emailTemplate","emailTemplatesRenderer","currentEmailTemplate","templateType","content","createElement","baseRender","style","width","display","ref","reactRedux","altrpresponses","currentDataStorage","altrpMeta","altrpPageState","AppContent","mainScroller","router","frontAppRouter","addEventListener","e","setScrollValue","target","scrollTop","isAltrpTestMode","routes","path","exact","StylesComponent","appRoutes","FontsManager","fonts","helmetRef","delay","renderFonts","prevState","Set","toPairs","altrpFonts","add","toArray","Helmet","renderFontLink","isEditor","GlobalStyles","createGlobalStyle","elementsSettings","styles","getRouteStyles","prefix","item","name","ImageLightboxComponent","settings","DiagramComponent","TabsSwitcherComponent","ButtonComponent","CarouselComponent","GalleryComponent","DividerComponent","VideoComponent","ListComponent","AccordionComponent","SectionWidgetComponent","childrenLength","ColumnComponent","DropbarWidgetComponent","DashboardComponent","getImageStyles","getTabsStyles","getMenuStyles","getBreadcrumbsStyles","getHeadingTypeHeadingStyles","getHeadingTypeAnimatingStyles","getTextStyles","getTableStyles","getPostsStyles","FormComponent","InputDateComponent","DatePickerComponent","InputCheckboxComponent","InputSliderComponent","InputRangeSliderComponent","getInputTextCommonStyles","getInputSelectStyles","getInputSelectPopoverStyles","InputRadioComponent","getInputFileStyles","getInputGalleryStyles","MapComponent","MapConstructorComponent","AdvancedComponent","element_css_editor","getResponsiveSetting","isString","globalDefaults","currentScreen","getRoutes","FrontApp","frontApp","default","pusherKey","websocketsPort","websocketsHost","pusher_app_key","websockets_port","pusher_host","Pusher","require","Echo","broadcaster","wsHost","wsPort","forceTLS","disableStats","private","notification","setUserNotice","presenceChannel","activeUsers","here","users","setUsersOnline","joining","user","leaving","splice","Provider","store","DndProvider","backend","HTML5Backend","__hot","module"],"mappings":"kVAIMA,E,wcACJ,WAAYC,GAAO,4BACjB,cAAMA,GAENA,EAAMC,KAAKC,WAAX,UAHiB,E,mDAKnB,WAAuB,MAmBjBC,OAAOC,aACTD,OAAOC,YAAYC,gBAErBF,OAAOG,aAAaC,gBAApB,UAAoCC,KAAKC,mBAAzC,aAAoC,EAAkBC,M,oBAGxD,WAAS,QACHC,EAAU,CAAC,WAAD,mBAAyBH,KAAKR,MAAMU,KAIlD,QAC0C,IAAjCF,KAAKR,MAAMC,KAAKW,cACvBJ,KAAKR,MAAMC,KAAKW,eAAeC,OAS/B,OANE,uBAAKC,UAAWH,EAAQI,KAAK,MAC1BP,KAAKR,MAAMC,KAAKW,eAAeI,KAAI,SAAAC,GAClC,OAAO,gBAACC,EAAA,QAAD,CAAYC,IAAKF,EAASP,GAAIO,SAAUA,QASvD,GAAI,UAAET,KAAKR,aAAP,iBAAE,EAAYiB,gBAAd,QAAE,EAAsBG,KAC1B,OAAO,uBAAKN,UAAWH,EAAQI,KAAK,OAEjB,WAAlBP,KAAKR,MAAMU,KACZF,KAAKR,MAAMiB,SAASG,KAAKC,aAAc,GAEzC,IAAIZ,EAAcD,KAAKC,YACnBD,KAAKC,YACLN,OAAOmB,oBAAoBC,UACzBf,KAAKR,MAAMiB,SAASG,KACpB,KACAZ,KAAKR,MAAMwB,KACXhB,KAAKR,MAAMyB,QAEjBjB,KAAKC,YAAcA,EACnBN,OAAO,GAAD,OAAIK,KAAKR,MAAMU,GAAf,kBAAoCF,KAAKC,YAC3CD,KAAKR,MAAM0B,eAAeC,IAAM,GAClCnB,KAAKC,YAAYmB,SAASC,SAAQ,SAAAC,GAChCA,EAAQC,aAAc,KAG1B,IAAMH,EAAapB,KAAKC,YAAlBmB,SAON,OANAA,EAAWA,EAASI,QAAO,SAAAC,GAAK,OAAMA,EAAMF,eAEzCvB,KAAKR,MAAMC,KAAKiC,iBACjBvB,EAAUA,EAAQwB,OAAO3B,KAAKR,MAAMC,KAAKmC,mBAGpCC,gBAAoB,MAAO,CAChCvB,UAAUH,EAAQI,KAAK,MACtBsB,gBAAoB7B,KAAKC,YAAY6B,eAAgB,CACtDC,QAAS/B,KAAKC,YACdmB,kB,GApFsBY,aA+F5B,GAAeC,cANf,SAAyBC,GACvB,MAAO,CACLhB,eAAgBgB,EAAMhB,kBAI1B,CAAwC3B,G,WC7FlC4C,E,WACJ,cAAc,eACZnC,KAAKoC,SAAW,IAAIC,IAAS,CAC3BC,MAAO,gB,kEAQX,WAAeC,GAAf,2EACMC,EAAEC,SAAS9C,OAAO+C,YAAYH,IADpC,yCAKW5C,OAAO+C,YAAYH,IAL9B,uBAOmBvC,KAAKoC,SAASO,IAAIJ,GAPrC,cAOMvB,EAPN,OAQErB,OAAO+C,YAAYH,GAAUvB,EAR/B,kBASSA,GATT,gD,qDAaFrB,OAAOiD,WAAa,IAAIT,EACxB,MAAexC,OAAf,W,mlCCxBA,MAAiEA,OAAOkD,aAAhER,EAAR,EAAQA,SAAUS,EAAlB,EAAkBA,OAAQC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,uBAKjCC,E,4cAEJ,WAAYrC,GAAM,6BAAK,cAAMA,IA2K7BsC,eA3KkB,iBA2KF,uFAKVC,EAAaC,SAASC,WAAWF,WAE/BX,EAAEc,QAAQ,EAAKC,YAAY,cAAeJ,KAAe,EAAKI,YAAY,WAPlE,uBAQZ,EAAKC,YAAY,aAAcL,GARnB,SASN,EAAKM,gBATC,2CA1Kd,EAAKD,YAAY,4BAA6B,IAC9C,EAAKA,YAAY,aAAcJ,SAASC,WAAWF,YACnDC,SAASM,UAAU,EAAKR,eAHR,E,iEAWlB,oHAAoBS,EAApB,+BAAkC,KAAMC,IAAxC,iCACED,EAAcA,EAAYnD,KAAI,SAAAqD,GAC5B,OAAGA,aAAcC,IACRD,EAEF,IAAIC,IAAWD,OAErBT,SAASC,WAAWU,YAAYC,UAPrC,gCAQ4B,IAAI3B,EAAS,CAAEC,MAAO,uBAAwB2B,SAR1E,OASIF,GADIA,EARR,QAS8BnD,KAC1BwC,SAASc,UAASC,QAAkBJ,IAVxC,OAYMH,GAAkBpB,EAAEG,IAAIgB,EAAa,YACvCA,EAAc3D,KAAKuD,YAAY,uBAE5BI,IACHA,EAAc,IAEbC,IACD5D,KAAKwD,YAAY,qBAAsBG,GACvC3D,KAAKwD,YAAY,WAAW,GAC5BG,EAAcA,EAAYnC,QAAO,SAAA4C,GAAU,OAAIA,EAAWb,YAAY,gBAMxEI,EAAcA,EAAYnC,QAAO,SAAA4C,GAC/B,IAAIC,EAAaD,EAAWb,YAAY,cACxC,OAAKT,EAAOuB,OAGZA,EAAatB,EAAYsB,EAAY,MAIbA,EAAWC,MAAK,SAAAC,GACtC,IAA4D,IAAxDA,EAAMC,WAAWC,WAAWC,QAAQ,eAItC,OAAO,EAHP,IAAIC,EAASP,EAAWQ,UAAUjF,OAAOkF,mBAAmBjE,KAAK+D,OAAQ,eAK3E,GAJEf,GAAiB,EAAKkB,uBAAuBV,EAAYO,IAItDJ,EAAMQ,SACT,OAAO,EAET,IAAIC,EAAQT,EAAMC,YAAc,GAIhC,OAH4B,IAAzBQ,EAAMN,QAAQ,QACfM,EAAQhC,EAAuBgC,KAExBA,SAOPC,EAAqB,GAC3BtB,EAAYtC,SAAQ,SAAA+C,GAClBa,EAAmBb,EAAWb,YAAY,aAAe0B,EAAmBb,EAAWb,YAAY,cAAgB,GACnH0B,EAAmBb,EAAWb,YAAY,aAAa2B,KAAKd,MAE9DR,GAAiBR,SAASc,UAASiB,WA9DrC,cA+D4BF,GA/D5B,kDA+DWG,EA/DX,WAgESH,EAAmBI,eAAeD,GAhE3C,+DAmEIxB,GAAiBR,SAASc,UAASiB,WAC/BG,EAAWL,EAAmBG,GAAe5E,IAAlC,mCAAsC,WAAM4D,GAAN,qFAE/CA,EAAWmB,YAFoC,oBAG7CZ,EAASP,EAAWQ,UAAUjF,OAAOkF,mBAAmBF,OAAQ,eAChEa,EAAgBhD,EAAEiD,UAAUd,GAC5Be,GAAsB,EAC1BlD,EAAEmD,KAAKhB,GAAQ,SAACH,EAAYoB,GAC2B,IAAjDpB,EAAWC,WAAWC,QAAQ,iBAChCC,EAAOiB,GAAapD,EAAEG,IAAIS,SAASC,WAAWF,WAAYqB,EAAWC,WAAWoB,QAAQ,cAAe,IAAK,IAC5GH,GAAsB,MAOtBA,GACF9B,GAAiB,EAAKkB,uBAAuBV,EAAY5B,EAAEiD,UAAUD,IAEnEM,EAAM,GAnBuC,WAqBzCC,EAAgBvD,EAAEG,IAAIhD,OAAOqG,0BAA2B5B,EAAW6B,aArB1B,iBAuB7CH,EAAMC,EACNvD,EAAE0D,MAAMvG,OAAOqG,0BAA2B5B,EAAW6B,YAxBR,2BA0BhB,SAAzB7B,EAAW+B,UA1B8B,sBA2BzCjG,EAAKsC,EAAEG,IAAIgC,EAAQ,KAAMnC,EAAEG,IAAI,EAAKnD,MAAO,qBA3BF,kCA6B9B,IAAI6C,EAAS,CAAEC,MAAO8B,EAAWmB,cAAgB5C,IAAIzC,GA7BvB,QA6B3C4F,EA7B2C,0CA+BnCtD,EAAEwB,QAAQW,GA/ByB,kCAgChC,IAAItC,EAAS,CAAEC,MAAO8B,EAAWmB,cAAgBa,WAAWzB,GAhC5B,QAgC7CmB,EAhC6C,OAiC7C1B,EAAWO,OAASnC,EAAEiD,UAAUd,GAjCa,yCAmChC,IAAItC,EAAS,CAAEC,MAAO8B,EAAWmB,cAAgBtB,SAnCjB,QAmC7C6B,EAnC6C,sEAsC5C,gBAAeO,SAtC6B,kCAuCjC,KAAIC,OAvC6B,4BAyC/CC,QAAQC,MAAR,MAzC+C,eA2CjDV,EAAMtD,EAAEG,IAAImD,EAAK,OAAQA,IACzBnC,EAAcA,EAAYnC,QAAO,SAAAqC,GAAE,OAAIA,IAAOO,MAC7B/D,QACf,EAAKmD,YAAY,WAAW,GAE9BJ,SAASc,UAASuC,QAAyBrC,EAAW6B,WAAYH,IAhDjB,kBAiD1CA,GAjD0C,0DAAtC,uDAoDfS,QAAQG,IAAI,4BAA4BC,YAAYC,OAxHxD,UAyH0BP,QAAQQ,IAAIvB,GAzHtC,eA0HIiB,QAAQG,IAAI,0BAA0BC,YAAYC,OAClDhD,GAAiBR,SAASc,UAAS4C,WA3HvC,wBA6HOnD,EAAYtD,QACf+C,SAASc,UAAS4C,WA9HtB,iD,uEAqIA,WACE9G,KAAK+G,cAAc,sBACnB/G,KAAKwD,YAAY,4BAA6B,IAC9CJ,SAASc,UAAS8C,a,oCAOpB,SAAuB5C,EAAYO,GACjC,IAAIhB,EAAc3D,KAAKuD,YAAY,8BAM3B,IAFJf,EAAEyE,UAAUtD,GAAa,SAAAE,GAC3B,OAAOA,EAAGO,aAAeA,MAEzBT,EAAYuB,KAAK,CACfd,aACAO,a,gDAwBN,4FAMEhB,GALIA,EAAc3D,KAAKuD,YAAY,4BAA6B,KAKtC/B,QAAO,SAAAqC,GAC/B,IACIQ,EADiBR,EAAdO,WACqBb,YAAY,cACxC,OAAKT,EAAOuB,MAGZA,EAAatB,EAAYsB,EAAY,KAIjBC,MAAK,SAAAC,GACvB,IAAKA,EAAMQ,SACT,OAAO,EAET,IAAIC,EAAQT,EAAMC,YAAc,GAIhC,OAH4B,IAAzBQ,EAAMN,QAAQ,QACfM,EAAQhC,EAAuBgC,KAExBA,QAIbrB,EAAcnB,EAAE0E,OAAOvD,GAAa,SAAAwD,GAAW,OAAIA,EAAYC,YAC3DjE,EAAaC,SAASC,WAAWF,WA7BvC,IA8BiBQ,GA9BjB,sHA8BWE,EA9BX,QA+BUO,EAAyBP,EAAzBO,WAAYiD,EAAaxD,EAAbwD,SACdC,EAAY9E,EAAEiD,UAAUrB,EAAWO,QAInCA,EAASP,EAAWQ,UAAUjF,OAAOkF,mBAAmBF,OAAQ,eACpEnC,EAAEnB,QAAQsD,GAAQ,SAACH,EAAYoB,GACwB,IAAjDpB,EAAWC,WAAWC,QAAQ,iBAChCC,EAAOiB,GAAapD,EAAEG,IAAIQ,EAAYqB,EAAWqB,QAAQ,cAAe,SAUtErD,EAAEc,QAAQqB,EAAQ2C,IAAgBD,EAjD5C,wBAkDMjD,EAAWO,OAASnC,EAAEiD,UAAUd,GAChCd,EAAGwD,UAAW,EACVvB,EAAM,GApDhB,oBAsDqB,IAAIzD,EAAS,CAAEC,MAAO8B,EAAWmB,cAAgBa,WAAWzB,GAtDjF,QAsDQmB,EAtDR,OAuDQA,EAAMtD,EAAEG,IAAImD,EAAK,OAAQA,GACzB1C,SAASc,UAASuC,QAAyBrC,EAAW6B,WAAYH,IAxD1E,wDA0DW,gBAAeO,SA1D1B,kCA2DsB,KAAIC,OA3D1B,oBA4DU,KAAMvD,EAAY,EAAD,IA5D3B,QA8DQwD,QAAQC,MAAR,MA9DR,0BAoEqCe,IAAzB1D,EAAG2D,mBAAsChF,EAAEc,QAAQO,EAAG2D,kBAAmB7C,GApErF,4CAsEyB,IAAItC,EAAS,CAAEC,MAAO8B,EAAWmB,cAAgBa,WAAWvC,EAAG2D,mBAtExF,QAsEY1B,EAtEZ,OAuEYA,EAAMtD,EAAEG,IAAImD,EAAK,OAAQA,GACzB1C,SAASc,UAASuC,QAAyBrC,EAAW6B,WAAYH,IAClE1B,EAAWO,OAASnC,EAAEiD,UAAU5B,EAAG2D,mBAzE/C,wDA2Ee,gBAAenB,SA3E9B,kCA4E0B,KAAIC,OA5E9B,oBA6Ec,KAAMvD,EAAY,EAAD,IA7E/B,QA+EYwD,QAAQC,MAAR,MA/EZ,yBAiFYhE,EAAE0D,MAAMrC,EAAI,qBAjFxB,4BAoFQA,EAAGwD,UAAW,EApFtB,8CA0FiB7E,EAAEc,QAAQqB,EAAQ2C,IAAeD,IAC5CxD,EAAG2D,kBAAoBhF,EAAEiD,UAAUd,IA3FzC,yW,kDA9L+B8C,YA8RjC9H,OAAO+H,mBAAqB/H,OAAO+H,oBAAsB,IAAIzE,EAC7D,MAAetD,OAAf,mB,2nBCzSsB,oBAAXA,SAETgI,GAAOhI,OAAOiI,KAAM,GAMtB,IAAMC,EAAWhG,MAAMiG,MAAK,kBAAM,mCAiB5BC,E,kdACJ,WAAYvI,GAAO,wBAEjB,IAAIwI,GADJ,cAAMxI,IACWA,MAAMwI,MAFN,OAGjB5E,oBAAkB6E,OAAmBD,IACrC,EAAK9F,MAAQ,CACXgG,OACiB,IAAfvI,OAAOiI,IACH,EAAKpI,MAAM0I,MAAM1H,KAAI,SAAAf,GAAI,OAAI0I,gBAAiB1I,MAC9C,EAAKD,MAAM0I,OAAS,GAC1BE,MAAO,EAAK5I,MAAMuE,YAAYsE,SAAS,UAEzC,EAAKC,UAAYzG,MAAM0G,YACvB,EAAKC,UAAW,UAAA7I,OAAO8I,gBAAP,eAAiBC,KAAKC,SAAS,cAAc,EAC7DvF,oBAAkBwF,WAClBjJ,OAAOkF,mBAAqB,IAAI4C,IAAWjI,EAAMqJ,OACjDlJ,OAAOmJ,cAAgBtJ,EAAMU,GAC7BP,OAAOoJ,uBAAP,UACApJ,OAAOqJ,aAAe,EAAKxJ,MAAMyJ,QACjC1C,QAAQG,IAAI,sBAAuBC,YAAYC,OAC/C,EAAKsC,gBAnBY,E,6EAsBnB,WAAgCC,GAAhC,oEACEC,aAEE5G,EAAEG,IAAI3C,KAAKR,MAAO,qBAClBgD,EAAEG,IAAIwG,EAAW,oBACjB3G,EAAEG,IAAI3C,KAAKR,MAAO,qBAClBgD,EAAEG,IAAIwG,EAAW,mBANrB,gCAQUnJ,KAAKqJ,wBAAwBF,GARvC,OASI/F,oBAAkBkG,QAA0B,MAAOb,SAASC,OAThE,OAgBKlG,EAAEc,QACDd,EAAEG,IAAI3C,KAAKR,MAAO,gBAClBgD,EAAEG,IAAIwG,EAAW,kBAGnBnJ,KAAKkJ,gBAEPlJ,KAAKuJ,UAAS,SAAArH,GAAK,cACdA,GADc,IAEjBkG,MAAOe,EAAUpF,YAAYsE,SAAS,cAzB1C,gD,kGAkCA,2FACE1I,OAAO6J,eAAiBxJ,KAAKsI,UAAUmB,QAKvCrG,oBAAkBkG,QAA0B,MAAOb,SAASC,QACxD1I,KAAKR,MAAMsI,OAAQ9H,KAAKR,MAAMkK,QAPpC,gCAQqB9G,WAAoB5C,KAAKR,MAAMU,IARpD,OAQQc,EARR,OASQkH,EAAQlH,EAAKkH,MAAM1H,KAAI,SAAAf,GAAI,OAAI0I,gBAAiB1I,MACpD2D,oBAAkBuG,OAASzB,IAC3BlI,KAAKuJ,UAAS,SAAArH,GAAK,cACdA,GADc,IAEjBgG,aAbN,OAoBElI,KAAKqJ,0BAILjG,oBAAkBwG,WAIlBjK,OAAOkK,aAAaC,qBACpBvD,QAAQG,IAAI,kBAAmBC,YAAYC,OACrCmD,EAAc,IAAIC,MAAM,gBAC9BrK,OAAOsK,cAAcF,GA/BvB,iD,+EAuCA,c,gDAOA,oFACErC,iBACI/H,OAAOkK,cACTA,aAAaK,kBAKTC,EAAiBnK,KAAKR,MAAtB2K,aACNzC,gBAAiCyC,GACjC/G,oBAAkBgH,WAVpB,gD,uGAeA,WAA8BjB,GAA9B,+EAEI3G,EAAEG,IAAI3C,KAAKR,MAAO,qBAClBgD,EAAEG,IAAI3C,KAAKR,MAAO,mBAHtB,wBAKQA,EAAQ2J,GAAwBnJ,KAAKR,MAL7C,kBAOwB,IAAI6C,IAAS,CAC7BC,MAAO,gBAAF,OAAkB9C,EAAM6K,MAAMC,aAClC3H,IAAInD,EAAMqJ,MAAMlE,OAAOzE,IAThC,OAOUmK,EAPV,OAUUE,EAAWnH,qBAAoBoH,aAAaC,UAChDJ,EAAMK,mBAAoB,EACrBlI,EAAEc,QAAQ+G,EAAOE,KACpBnH,oBAAkBuH,OAAmB,CAAED,mBAAmB,KAC1DtH,oBAAkBuH,OAAmBN,KAd7C,kDAiBM9D,QAAQC,MAAR,MACApD,oBAAkBuH,OAAmB,CAAED,mBAAmB,KAlBhE,gCAqBItH,oBAAkBuH,OAAmB,CAAED,mBAAmB,KArB9D,0D,mGA8BA,WAAyBE,GAAzB,iEAEOpI,EAAEc,QAAQd,EAAEG,IAAI3C,KAAKR,MAAO,SAAUgD,EAAEG,IAAIiI,EAAW,YAC1DjL,OAAOkF,mBAAqB,IAAI4C,IAAWzH,KAAKR,MAAMqJ,QAH1D,gD,kEAQA,WAAS,WACP,OAAK7I,KAAKR,MAAMkK,QAId,oBAAC7H,MAAMgJ,SAAP,KACE,oBAACC,SAAD,CAAUC,SAAU,iCACjB/K,KAAKkC,MAAMkG,OACV,oBAACP,EAAD,CACEK,MAAOlI,KAAKkC,MAAMgG,MAClBtH,KAAMZ,KAAKR,MAAMuE,YAAYnD,KAC7BoK,OAAQhL,KAAKR,MAAMU,KAEpB,KAsBH,2BAAKI,UAAU,gBAAgBJ,GAAG,iBAC/BF,KAAKkC,MAAMgG,MAAM1H,KAAI,SAACf,EAAMwL,GAC3B,OACE,oBAAC,GAAD,UACMxL,EADN,CAEEA,KAAMA,EACNyI,MAAO,EAAKhG,MAAMgG,MAClBlH,KAAM,EAAKxB,MAAMU,GACjBe,OAAQ,CAAC,EAAKzB,MAAM6K,OACpB1J,IAAK,WAAalB,EAAKS,WA1C5B,oBAAC,KAAD,CAAUgL,GAAIlL,KAAKR,MAAM2L,UAAY,U,GA9JvBnJ,WA6N3B,GAAeC,cAVS,SAAAC,GAAK,MAAK,CAChC6B,YAAa7B,EAAM6B,eASrB,EAGEqH,QAAWrD,I,eCzPPsD,G,wcACJ,WAAY7L,GAAO,6BACjB,cAAMA,IACD0C,MAAQ,CACXoJ,gBAAiB3L,OAAO2L,iBAE1B,EAAKC,cAAgB1J,MAAM0G,YAC3B5I,OAAO6L,wBAAP,UANiB,E,qCAcnB,WACE,IAAMxL,KAAKR,MAAMiM,uBAA0BzL,KAAKkC,MAAMoJ,gBACpD,OAAO,KAET,IAAIrL,EAAcN,OAAOkD,aAAaE,YAAY/C,KAAKR,MAAMiM,qBAAqB7K,OAClFX,EAAcN,OAAOmB,oBAAoBC,UAAUd,IACvCyL,aAAe,QAC3B,IAAIC,EAAU9J,MAAM+J,cAAc3L,EAAY6B,eAAgB,CAC5DC,QAAS9B,EACTmB,SAAUnB,EAAYmB,SACtByK,WAAY7L,KAAKkC,MAAMoJ,kBAMzB,OAAO,6BAAOpL,GAAG,uBACH4L,MALQ,CACpBC,MAAO,OACPC,QAAS,QAIGC,IAAKjM,KAAKuL,eACpB,iCACA,8BACE,8BACGI,U,GArCwBhM,OAAOqC,WAgE5C,GAAerC,OAAOuM,WAAWjK,SAbjC,SAAyBC,GACvB,MAAO,CACLiK,eAAgBjK,EAAMiK,eACtBhJ,WAAYjB,EAAMiB,WAClBiJ,mBAAoBlK,EAAMkK,mBAC1B5B,aAActI,EAAMsI,aACpBzG,YAAa7B,EAAM6B,YACnBsI,UAAWnK,EAAMmK,UACjBC,eAAgBpK,EAAMoK,eACtBb,qBAAsBvJ,EAAMuJ,wBAIhC,CAA0DJ,I,gBC1DpDkB,G,wcACJ,WAAY/M,GAAO,6BACjB,cAAMA,IACDgN,aAAe3K,MAAM0G,YAC1B,EAAKkE,OAAS5K,MAAM0G,YAHH,E,gDAKnB,WACMvI,KAAKyM,OAAOhD,UACd9J,OAAO+M,eAAiB1M,KAAKyM,OAAOhD,SAMnCzJ,KAAKwM,aAAa/C,SACnBzJ,KAAKwM,aAAa/C,QAAQkD,iBAAiB,UAAU,SAAAC,GACnDxJ,oBAAkByJ,QAAe,CAAC1L,IAAKyL,EAAEE,OAAOC,kB,oBAKtD,WACE,OACE,oBAAC,KAAD,CAAQd,IAAKjM,KAAKyM,QAChB,oBAAC,GAAD,MACA,2BAAKR,IAAKjM,KAAKwM,aAAclM,UAAS,6BAAuB0M,uBAAoB,yBAA2B,KAC1G,oBAAC,KAAD,KACGhN,KAAKR,MAAMyN,OAAOzM,KAAI,SAAA8B,GAAK,OAC1B,oBAAC,KAAD,CACE3B,IAAK2B,EAAMpC,GACXkB,SAAU,oBAAC,EAAiBkB,GAC5B4K,KAAM5K,EAAM4K,KACZC,OAAK,SAKb,oBAACxN,OAAOyN,gBAAR,W,GArCiBpL,WAiDzB,IAAeC,cANf,SAAyBC,GACvB,MAAO,CACL+K,OAAQ/K,EAAMmL,UAAUJ,UAI5B,CAAwCV,I,wmBCrDlCe,G,0cAEJ,WAAY9N,GAAO,6BACjB,cAAMA,IACD0C,MAAQ,CACXqL,MAAO,IAET,EAAKC,UAAY3L,MAAM0G,YACvB5I,OAAO6N,UAAY,EAAKA,UANP,E,qEASnB,+FACQC,WAAM,KADd,OAEEzN,KAAKuJ,UAAS,SAAArH,GAAK,gBAAOA,GAAP,IAAcwL,aAAa,OAFhD,gD,6EAUA,SAAmB9C,EAAW+C,GAC5B,GAAI3N,KAAKkC,MAAMwL,YAAf,CAGA,IAAIH,EAAQ,IAAIK,IACGpL,EAAEqL,QAAQ7N,KAAKR,MAAMsO,WAAWrD,WACxCpJ,SAAQ,YAAkB,oBAAX2D,GAAW,WACnCuI,EAAMQ,IAAI/I,MAEZuI,EAAQ/K,EAAEwL,QAAQT,GACd/K,EAAEc,QAAQiK,EAAOvN,KAAKkC,MAAMqL,QAGhCvN,KAAKuJ,UAAS,SAAArH,GAAK,gBAASA,GAAT,IAAgBqL,gB,oBAGrC,WACE,IAAOA,EAASvN,KAAKkC,MAAdqL,MAEP,OAAO,oBAACU,GAAA,EAAD,CAAQhC,IAAKjM,KAAKwN,WACtBD,EAAM/M,IAAI0N,uB,GAzCUlM,WAoD3B,GAAerC,OAAOuM,WAAWjK,SANjC,SAAyBC,GACvB,MAAO,CACL4L,WAAY5L,EAAM4L,cAItB,CAA0DR,I,+eCTnDa,GAAYxO,OAAOkD,aAAnBsL,SAEDC,GAAeC,kBAAH,4BAAuB,YAAiC,IAA9BC,EAA8B,EAA9BA,iBAAkBpG,EAAY,EAAZA,MACxDqG,EAAS,GACVrG,IACDqG,IAAUC,QAAetG,IAE3B,IAAIuG,EAAS,gBAwLb,OAvLAjM,EAAEmD,KAAK2I,GAAkB,SAACI,EAAMxO,GAC9B,GAAIwO,EAAM,CACR,OAAQA,EAAKC,MACX,IAAK,iBACHJ,IAAQK,QAAuBF,EAAKG,SAAS3O,GAC7C,MACF,IAAK,UACHqO,GAAU,IAAJ,OAAQE,GAAR,OAAiBvO,EAAjB,cAAwB4O,QAAiBJ,EAAKG,UAA9C,KACN,MACF,IAAK,gBACHN,GAAU,IAAJ,OAAQE,GAAR,OAAiBvO,EAAjB,cAAwB6O,QAAsBL,EAAKG,UAAnD,KACN,MACF,IAAK,SACHN,GAAU,IAAJ,OAAQE,GAAR,OAAiBvO,EAAjB,cAAwB8O,QAAgBN,EAAKG,UAA7C,KACN,MACF,IAAK,WACHN,GAAU,IAAJ,OAAQE,GAAR,OAAiBvO,EAAjB,cAAwB+O,QAAkBP,EAAKG,UAA/C,KACN,MACF,IAAK,UACHN,GAAU,IAAJ,OAAQE,GAAR,OAAiBvO,EAAjB,cAAwBgP,QAAiBR,EAAKG,UAA9C,KACN,MACF,IAAK,UACHN,GAAU,IAAJ,OAAQE,GAAR,OAAiBvO,EAAjB,cAAwBiP,QAAiBT,EAAKG,UAA9C,KACN,MACF,IAAK,QACHN,GAAU,IAAJ,OAAQE,GAAR,OAAiBvO,EAAjB,cAAwBkP,QAAeV,EAAKG,UAA5C,KACN,MACF,IAAK,OACHN,GAAU,IAAJ,OAAQE,GAAR,OAAiBvO,EAAjB,cAAwBmP,QAAcX,EAAKG,UAA3C,KACN,MACF,IAAK,YACHN,GAAU,IAAJ,OAAQE,GAAR,OAAiBvO,EAAjB,cAAwBoP,QAAmBZ,EAAKG,UAAhD,KACN,MACF,IAAK,UAGL,IAAK,iBACHN,GAAU,IAAJ,OAAQE,GAAR,OAAiBvO,EAAjB,cAAwBqP,QAAuBb,EAAKG,SAAUH,EAAKc,gBAAkB,GAArF,KACN,MACF,IAAK,SACHjB,GAAU,IAAJ,OAAQE,GAAR,OAAiBvO,EAAjB,cAAwBuP,QAAgBf,EAAKG,UAA7C,KACN,MACF,IAAK,UACHN,GAAU,IAAJ,OAAQE,GAAR,OAAiBvO,EAAjB,cAAwBwP,QAAuBhB,EAAKG,UAApD,KACN,MACF,IAAK,YACHN,GAAM,WAAME,GAAN,OAAevO,EAAf,cAAsByP,QAAmBjB,EAAKG,UAA9C,KACN,MACF,IAAK,QACHN,IAAQqB,QAAelB,EAAKG,SAAS3O,GACrC,MACF,IAAK,OACHqO,IAAQsB,QAAcnB,EAAKG,SAAU3O,GACrC,MACF,IAAK,OACHqO,IAAQuB,QAAcpB,EAAKG,SAAS3O,GACpC,MACF,IAAK,cACHqO,IAAQwB,QAAqBrB,EAAKG,SAAS3O,GAC3C,MACF,IAAK,UACHqO,IAAUyB,QAA4BtB,EAAKG,SAAU3O,GAErD,MACF,IAAK,yBACHqO,IAAU0B,QAA8BvB,EAAKG,SAAU3O,GAEvD,MACF,IAAK,OACHqO,IAAU2B,QAAcxB,EAAKG,SAAU3O,GAEvC,MACF,IAAK,QACHqO,IAAU4B,QAAezB,EAAKG,SAAU3O,GAExC,MACF,IAAK,QACHqO,IAAU6B,QAAe1B,EAAKG,SAAU3O,GAExC,MACF,IAAK,gBACHqO,GAAU,IAAJ,OAAQE,GAAR,OAAiBvO,EAAjB,aAAwBmQ,mBAC5B3B,EAAKG,SACL3O,GAFI,KAKNqO,GAAU,GAAJ,OAAO8B,oBAA6B3B,EAAKG,SAAU3O,GAAnD,KAEN,MACF,IAAK,aACHqO,IAAU+B,QACR5B,EAAKG,SACL3O,EACAuO,GAEFF,GAAU,GAAJ,QAAOgC,QACX7B,EAAKG,SACL3O,IAGF,MACF,IAAK,iBACHqO,GAAU,IAAJ,OAAQE,GAAR,OAAiBvO,EAAjB,cAAwBsQ,QAC5B9B,EAAKG,SACL3O,GAFI,KAKN,MACF,IAAK,eACHqO,GAAU,IAAJ,OAAQE,GAAR,OAAiBvO,EAAjB,cAAwBuQ,QAC5B/B,EAAKG,UADD,KAIN,MACF,IAAK,qBACHN,GAAU,IAAJ,OAAQE,GAAR,OAAiBvO,EAAjB,cAAwBwQ,QAC5BhC,EAAKG,UADD,KAIN,MACF,IAAK,oBACHN,GAAU,IAAJ,OAAQE,GAAR,OAAiBvO,EAAjB,cAAwByQ,QAAyBjC,EAAKG,SAAU3O,GAAhE,KAEN,MACF,IAAK,eACHqO,GAAU,IAAJ,OAAQE,GAAR,OAAiBvO,EAAjB,cAAwB0Q,QAAqBlC,EAAKG,SAAU3O,GAA5D,KACNqO,GAAU,GAAJ,QAAOsC,QAA4BnC,EAAKG,SAAU3O,IAExD,MACF,IAAK,cACHqO,IAAUuC,QACRpC,EAAKG,SACL3O,EACAuO,GAEH,MACD,IAAK,aACL,IAAK,iBACL,IAAK,eACL,IAAK,cACL,IAAK,YACL,IAAK,aACHF,GAAU,IAAJ,OAAQE,GAAR,OAAiBvO,EAAjB,cAAwB6Q,QAC5BrC,EAAKG,SACL3O,GAFI,KAIP,MACD,IAAK,gBACHqO,GAAU,IAAJ,OAAQE,GAAR,OAAiBvO,EAAjB,cAAwB8Q,QAC5BtC,EAAKG,SACL3O,GAFI,KAIP,MACD,IAAK,qBACL,IAAK,eACL,IAAK,iBACL,IAAK,gBACHqO,GAAU,IAAJ,OAAQE,GAAR,OAAiBvO,EAAjB,aAAwBmQ,mBAC5B3B,EAAKG,SACL3O,GAFI,KAKN,MACF,IAAK,MACHqO,GAAU,IAAJ,OAAQE,GAAR,OAAiBvO,EAAjB,cAAwB+Q,QAAavC,EAAKG,UAA1C,KACN,MACF,IAAK,cACHN,GAAU,IAAJ,OAAQE,GAAR,OAAiBvO,EAAjB,cAAwBgR,QAAwBxC,EAAKG,UAArD,KAGVN,GAAU,OAAJ,OAAWE,GAAX,OAAoBvO,EAApB,YAA0BuO,GAA1B,OAAmCvO,EAAnC,cAA0CiR,QAC9CzC,EAAKG,UADD,KAIN,IAAIuC,GAAqBC,0BAAqB3C,EAAKG,SAAU,sBAC1DrM,EAAE8O,SAASF,KACZ7C,GAAQ6C,EAAmBvL,QAAQ,gBAA3B,UAA+C4I,GAA/C,OAAwDvO,SAKtEqO,GAAU,KACV5O,OAAO4R,iBAAmBhD,GAAU5O,OAAO4R,eAAehR,KAAK,KACxDgO,KAcT,GAAe5O,OAAOuM,WAAWjK,SAXjC,SAAyBC,GACvB,OAAGiM,KACM,GAEF,CACLG,iBAAkBpM,EAAMoM,iBACxBpG,MAAOhG,EAAMgG,MACbsJ,cAAetP,EAAMsP,iBAIzB,CAA0DpD,I,WCpP1D,OAA8BzO,OAAOkD,aAAnBR,IAAlB,GAAOoP,UAAP,GAAkBpP,UAGZqP,G,0cACJ,WAAYlS,GAAO,4BACjB,cAAMA,GACNG,OAAOgS,UAAP,UACA,EAAKF,YAELlL,QAAQG,IAAI,cAAcC,YAAYC,OALrB,E,wCAOnB,WAAY,WACV,OAAOjH,OAAOkD,aAAa4O,YAAYnL,MAAK,SAAAR,GAC1C,EAAKmH,OAASnH,EAAI8L,a,2BAItB,WACErL,QAAQG,IAAIC,YAAYC,S,oDAW1B,6GACE,IAAIvE,GAAS,CAAEC,MAAO,WAAYK,IAAI,gBAAgB2D,MAAK,SAAAR,GACpDtD,EAAEc,QAAQF,qBAAoBW,YAAY0G,UAAW3E,EAAIlF,OAC5DwC,oBAAkBe,QAAkB2B,EAAIlF,UAH9C,SAMwB,IAAIyB,GAAS,CAAEC,MAAO,yBAA0BK,IAAI,kBAN5E,cAMMkP,EANN,gBAO6B,IAAIxP,GAAS,CAAEC,MAAO,yBAA0BK,IAAI,mBAPjF,cAOMmP,EAPN,gBAQ6B,IAAIzP,GAAS,CAAEC,MAAO,yBAA0BK,IAAI,eARjF,OAeE,GAPIoP,EARN,OAUEF,EAAS,UAAGA,SAAH,aAAG,EAAWG,eACvBF,EAAc,UAAGA,SAAH,aAAG,EAAgBG,gBACjCF,EAAc,UAAGA,SAAH,aAAG,EAAgBG,YAG9BL,GAAaC,EAAe,CAC7B,IACEnS,OAAOwS,OAASC,EAAQ,OACxBzS,OAAO0S,KAAO,IAAIA,KAAK,CACrBC,YAAa,SACb3R,IAAKkR,EACLU,OAAQR,EACRS,OAAQV,EACRW,UAAU,EACVC,cAAc,IAGhB,MAAOlM,GACPD,QAAQC,MAAMA,GAba,EAePpD,qBAAfW,EAfsB,EAetBA,YAEPpE,OAAO0S,KAAKM,QAAQ,YAAc5O,EAAY7D,IAC7C0S,cAAa,SAACA,GAEbxP,oBAAkByP,QAAcD,IAChCrM,QAAQG,IAAItD,qBAAoBW,YAAa,mBAI3C+O,EAAkBnT,OAAO0S,KAAK9R,KAAK,UACnCwS,EAAc,GAClBD,EAAgBE,MAAK,SAACC,GACpBF,EAAcE,EACd7P,oBAAkB8P,QAAeH,OAElCI,SAAQ,SAACC,GACRL,EAAY7N,KAAKkO,GACjBhQ,oBAAkB8P,QAAeH,OAElCM,SAAQ,SAACD,GACRL,EAAYO,OAAOP,EAAYrO,QAAQ0O,GAAO,GAC9ChQ,oBAAkB8P,QAAeH,YAIpCxM,QAAQG,IAAI,uBAxDf,4C,iEA4DA,WACE,OACE,oBAAC,EAAA6M,SAAD,CAAUC,MAAOpQ,WACf,oBAACqQ,GAAA,EAAD,CAAaC,QAASC,OACpB,oBAAC,GAAD,OAEF,oBAAC,GAAD,MACA,oBAAC,GAAD,W,GA7Fe3R,WAmGvB,GAAerC,OAAOiU,MAAMC,EAA5B,CAAoCnC","file":"FrontApp.01c762d3f870a1ac099f.bundle.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport FrontPopup from \"./FrontPopup\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass AreaComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // console.log(\"AreaComponent: \", performance.now());\r\n    props.area.component = this;\r\n  }\r\n  componentWillUnmount() {\r\n    /**\r\n     * Перенесем все секции для ленивой подгрузки в хранилище страниц (текущая стрнаца)\r\n     */\r\n    // if( _.isArray(window.lazySections)){\r\n    //   if(window.pageStorage.hasOwnProperty(page_id) ){\r\n    //     let page = window.pageStorage[page_id];\r\n    //\r\n    //     window.lazySections.forEach(section => {\r\n    //       let area = page.areas.find(area => area.id === section.area_name);\r\n    //       if(area){\r\n    //         section.element.lazySection = true;\r\n    //         area.template.data.children.push(section.element)\r\n    //       }\r\n    //     });\r\n    //   }\r\n    //   window.lazySections = null;\r\n    // }\r\n\r\n    if (window.pageUpdater) {\r\n      window.pageUpdater.startUpdating();\r\n    }\r\n    window.stylesModule.removeStyleById(this.rootElement?.id);\r\n  }\r\n\r\n  render() {\r\n    let classes = [`app-area`, `app-area_${this.props.id}`];\r\n    /**\r\n     * Если это попап\r\n     */\r\n    if (\r\n      typeof this.props.area.getTemplates !== \"undefined\" &&\r\n      this.props.area.getTemplates().length\r\n    ) {\r\n      let popups = (\r\n        <div className={classes.join(\" \")}>\r\n          {this.props.area.getTemplates().map(template => {\r\n            return <FrontPopup key={template.id} template={template} />;\r\n          })}\r\n        </div>\r\n      );\r\n      return popups;\r\n    }\r\n    /**\r\n     * Если шаблон привязанный к странице удалили, то ничего не отрисовываем\r\n     */\r\n    if (! this.props?.template?.data) {\r\n      return <div className={classes.join(\" \")} />;\r\n    }\r\n    if(this.props.id === 'footer'){\r\n      this.props.template.data.lastElement = true;\r\n    }\r\n    let rootElement = this.rootElement\r\n      ? this.rootElement\r\n      : window.frontElementsFabric.parseData(\r\n          this.props.template.data,\r\n          null,\r\n          this.props.page,\r\n          this.props.models\r\n        );\r\n    this.rootElement = rootElement;\r\n    window[`${this.props.id}_root_element`] = this.rootElement;\r\n    if (this.props.scrollPosition.top > 0) {\r\n      this.rootElement.children.forEach(section => {\r\n        section.lazySection = false;\r\n      });\r\n    }\r\n    let { children } = this.rootElement;\r\n    children = children.filter(child => ! child.lazySection);\r\n\r\n    if(this.props.area.isCustomArea()){\r\n      classes = classes.concat(this.props.area.getAreaClasses())\r\n    }\r\n\r\n    return React.createElement('div', {\r\n      className:classes.join(\" \"),\r\n    }, React.createElement(this.rootElement.componentClass, {\r\n      element: this.rootElement,\r\n      children\r\n    }));\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    scrollPosition: state.scrollPosition\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(AreaComponent);\r\n","/**\r\n * Загружает и хранит страницы с шаблонами\r\n * @class PageLoader\r\n */\r\nimport Resource from \"../../../../editor/src/js/classes/Resource\";\r\n\r\nclass PageLoader {\r\n  constructor() {\r\n    this.resource = new Resource({\r\n      route: \"/ajax/pages\"\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {int} pageId\r\n   * @return {Promise}\r\n   */\r\n  async loadPage(pageId) {\r\n    if (_.isObject(window.pageStorage[pageId])) {\r\n      // return new Promise((resolve, reject)=>{\r\n      //   resolve(this.pagesStorage[pageId]);\r\n      // });\r\n      return window.pageStorage[pageId];\r\n    }\r\n    let page = await this.resource.get(pageId);\r\n    window.pageStorage[pageId] = page;\r\n    return page;\r\n  }\r\n}\r\n\r\nwindow.pageLoader = new PageLoader();\r\nexport default window.pageLoader;\r\n","import {\r\n  changeCurrentDataStorage,\r\n  clearCurrentDataStorage,\r\n  currentDataStorageLoaded, currentDataStorageLoading\r\n} from \"../../store/current-data-storage/actions\";\r\nimport {changeCurrentUser} from \"../../store/current-user/actions\";\r\nimport Datasource from \"../Datasource\";\r\nconst { Resource, isJSON, mbParseJSON, replaceContentWithData} = window.altrpHelpers;\r\n\r\n/**\r\n * @class DataStorageUpdater\r\n */\r\nclass DataStorageUpdater extends AltrpModel {\r\n\r\n  constructor(data) {    super(data);\r\n    this.setProperty('dataSourcesFormsDependent', []);\r\n    this.setProperty('formsStore', appStore.getState().formsStore);\r\n    appStore.subscribe(this.onStoreUpdate)\r\n  }\r\n\r\n  /**\r\n   *  обновление currentDataStorage\r\n   *  @param {Datasource[]} dataSources\r\n   *  @param {boolean} initialUpdate\r\n   */\r\n  async updateCurrent(dataSources = null, initialUpdate = true) {\r\n    dataSources = dataSources.map(ds => {\r\n      if(ds instanceof Datasource){\r\n        return ds;\r\n      }\r\n      return new Datasource(ds)\r\n    });\r\n    if(appStore.getState().currentUser.isEmpty()){\r\n      let currentUser = await new Resource({ route: \"/ajax/current-user\" }).getAll();\r\n      currentUser = currentUser.data;\r\n      appStore.dispatch(changeCurrentUser(currentUser));\r\n    }\r\n    if(!initialUpdate && !_.get(dataSources, 'length')){\r\n      dataSources = this.getProperty('currentDataSources');\r\n    }\r\n    if(! dataSources){\r\n      dataSources = [];\r\n    }\r\n    if(initialUpdate){\r\n      this.setProperty('currentDataSources', dataSources);\r\n      this.setProperty('updated', false);\r\n      dataSources = dataSources.filter(dataSource => dataSource.getProperty('autoload'));\r\n    }\r\n\r\n    /**\r\n     * Фильтруем проверяя на наличие обязательных параметров\r\n     */\r\n    dataSources = dataSources.filter(dataSource => {\r\n      let parameters = dataSource.getProperty('parameters');\r\n      if(! isJSON(parameters)){\r\n        return true;\r\n      }\r\n      parameters = mbParseJSON(parameters, []);\r\n      /**\r\n       * Находим хотя бы один обязательный параметр, который не имеет значения\r\n       */\r\n      return ! (parameters && parameters.find(param=>{\r\n        if (param.paramValue.toString().indexOf('altrpforms.') !== -1) {\r\n          let params = dataSource.getParams(window.currentRouterMatch.data.params, 'altrpforms.');\r\n          initialUpdate && this.subscribeToFormsUpdate(dataSource, params);\r\n        } else {\r\n          return false;\r\n        }\r\n        if(! param.required){\r\n          return false;\r\n        }\r\n        let value = param.paramValue || '';\r\n        if(value.indexOf('{{') !== -1){\r\n          value = replaceContentWithData(value);\r\n        }\r\n        return ! value;\r\n      }));\r\n    });\r\n    // dataSources = _.sortBy(dataSources, ['data.priority']);\r\n    /**\r\n     * @member {Datasource} dataSource\r\n     */\r\n    const groupedDataSources = {};\r\n    dataSources.forEach(dataSource => {\r\n      groupedDataSources[dataSource.getProperty('priority')] = groupedDataSources[dataSource.getProperty('priority')] || [];\r\n      groupedDataSources[dataSource.getProperty('priority')].push(dataSource);\r\n    });\r\n    initialUpdate && appStore.dispatch(currentDataStorageLoading());\r\n    for (let groupPriority in groupedDataSources){\r\n      if(! groupedDataSources.hasOwnProperty(groupPriority)){\r\n        continue;\r\n      }\r\n      initialUpdate && appStore.dispatch(currentDataStorageLoading());\r\n      let requests = groupedDataSources[groupPriority].map(async dataSource => {\r\n\r\n        if (dataSource.getWebUrl()) {\r\n          let params = dataSource.getParams(window.currentRouterMatch.params, 'altrpforms.');\r\n          let defaultParams = _.cloneDeep(params);\r\n          let needUpdateFromForms = false;\r\n          _.each(params, (paramValue, paramName) => {\r\n            if (paramValue.toString().indexOf('altrpforms.') === 0) {\r\n              params[paramName] = _.get(appStore.getState().formsStore, paramValue.toString().replace('altrpforms.', ''), '');\r\n              needUpdateFromForms = true;\r\n            }\r\n          });\r\n          /**\r\n           * Если нужно взять параметры из формы, то подписываемся на изменения полeй формы\r\n           * и сохраняем параметры, с которыми уже получили данные\r\n           */\r\n          if (needUpdateFromForms) {\r\n            initialUpdate && this.subscribeToFormsUpdate(dataSource, _.cloneDeep(defaultParams));\r\n          }\r\n          let res = {};\r\n          try {\r\n            const preloadedData = _.get(window.altrpPreloadedDatasources, dataSource.getAlias());\r\n            if(preloadedData){\r\n              res = preloadedData;\r\n              _.unset(window.altrpPreloadedDatasources, dataSource.getAlias());\r\n            } else\r\n              if (dataSource.getType() === 'show') {\r\n              let id = _.get(params, 'id', _.get(this.props, 'match.params.id'));\r\n              if (id) {\r\n                res = await (new Resource({ route: dataSource.getWebUrl() })).get(id);\r\n              }\r\n            } else if (!_.isEmpty(params)) {\r\n              res = await (new Resource({ route: dataSource.getWebUrl() })).getQueried(params);\r\n              dataSource.params = _.cloneDeep(params);\r\n            } else {\r\n              res = await (new Resource({ route: dataSource.getWebUrl() })).getAll();\r\n            }\r\n          } catch (err) {\r\n            if(err instanceof Promise){\r\n              err = await err.then();\r\n            }\r\n            console.error(err);\r\n          }\r\n          res = _.get(res, 'data', res);\r\n          dataSources = dataSources.filter(ds => ds !== dataSource);\r\n          if(! dataSources.length){\r\n            this.setProperty('updated', true);\r\n          }\r\n          appStore.dispatch(changeCurrentDataStorage(dataSource.getAlias(), res));\r\n          return res;\r\n        }\r\n      });\r\n      console.log('Update Datasource Start: ',performance.now());\r\n      let responses = await Promise.all(requests);\r\n      console.log('Update Datasource End: ',performance.now());\r\n      initialUpdate && appStore.dispatch(currentDataStorageLoaded());\r\n    }\r\n    if(! dataSources.length){\r\n      appStore.dispatch(currentDataStorageLoaded());\r\n    }\r\n\r\n  }\r\n  /**\r\n   * Обнуляем текущее хранилище dataStorage\r\n   */\r\n  clearCurrent() {\r\n    this.unsetProperty('currentDataSources');\r\n    this.setProperty('dataSourcesFormsDependent', []);\r\n    appStore.dispatch(clearCurrentDataStorage())\r\n  }\r\n  /**\r\n    * подписывает какой либо источник данных на обновление от формы\r\n   * @param {Datasource} dataSource\r\n   * @param {{}} params\r\n   */\r\n  subscribeToFormsUpdate(dataSource, params) {\r\n    let dataSources = this.getProperty('dataSourcesFormsDependent');\r\n    // if(dataSources.indexOf(dataSource) === -1){\r\n    //   dataSources.push(dataSource);\r\n    // }\r\n    if (_.findIndex(dataSources, ds => {\r\n      return ds.dataSource === dataSource;\r\n    }) === -1) {\r\n      dataSources.push({\r\n        dataSource,\r\n        params\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * Вызывается, когда обновляется redux-хранилище\r\n   */\r\n  onStoreUpdate = async () => {\r\n    /**\r\n     * Проверяем обновились ли формы\r\n     * @type {formsStore}\r\n     */\r\n    let formsStore = appStore.getState().formsStore;\r\n\r\n    if (! _.isEqual(this.getProperty('formsStore'), formsStore) && this.getProperty('updated')) {\r\n      this.setProperty('formsStore', formsStore);\r\n      await this.onFormsUpdate();\r\n    }\r\n  };\r\n  /**\r\n   * Вызывается, когда обновляется поле формы для того,\r\n   * чтобы сделать новый запрос по тем dataSource,\r\n   * которые зависят от полей формы\r\n   */\r\n  async onFormsUpdate() {\r\n    let dataSources = this.getProperty('dataSourcesFormsDependent', []);\r\n\r\n    /**\r\n     * Фильтруем, проверяя на наличие обязательных параметров\r\n     */\r\n    dataSources = dataSources.filter(ds => {\r\n      const {dataSource} = ds;\r\n      let parameters = dataSource.getProperty('parameters');\r\n      if(! isJSON(parameters)){\r\n        return true;\r\n      }\r\n      parameters = mbParseJSON(parameters, []);\r\n      /**\r\n       * Находим хотя бы один обзяательный параметр, который имеет пустое значения\r\n       */\r\n      return ! parameters.find(param=>{\r\n        if(! param.required){\r\n          return false;\r\n        }\r\n        let value = param.paramValue || '';\r\n        if(value.indexOf('{{') !== -1){\r\n          value = replaceContentWithData(value);\r\n        }\r\n        return ! value;\r\n      });\r\n    });\r\n    // console.log(dataSources);\r\n    dataSources = _.sortBy(dataSources, data_source => data_source.priority);\r\n    let formsStore = appStore.getState().formsStore;\r\n    for (let ds of dataSources) {\r\n      let { dataSource, updating } = ds;\r\n      let oldParams = _.cloneDeep(dataSource.params);\r\n      /**\r\n       * @member {Datasource} dataSource\r\n       */\r\n      let params = dataSource.getParams(window.currentRouterMatch.params, 'altrpforms.');\r\n      _.forEach(params, (paramValue, paramName) => {\r\n        if (paramValue.toString().indexOf('altrpforms.') === 0) {\r\n          params[paramName] = _.get(formsStore, paramValue.replace('altrpforms.', ''));\r\n          // if(_.isArray(params[paramName])){\r\n          //   params[paramName] = JSON.stringify(params[paramName]);\r\n          // }\r\n        }\r\n      });\r\n      if(updating){\r\n        // console.error(params);\r\n        // console.error(ds);\r\n      }\r\n      if (! _.isEqual(params, oldParams) && ! updating) {\r\n        dataSource.params = _.cloneDeep(params);\r\n        ds.updating = true;\r\n        let res = {};\r\n        try{\r\n          res = await (new Resource({ route: dataSource.getWebUrl() })).getQueried(params);\r\n          res = _.get(res, 'data', res);\r\n          appStore.dispatch(changeCurrentDataStorage(dataSource.getAlias(), res));\r\n        } catch (err) {\r\n          if(err instanceof Promise){\r\n            err = await err.then();\r\n            err = mbParseJSON(err);\r\n          }\r\n          console.error(err);\r\n        } finally {\r\n          /**\r\n           * В случае, если во время запроса возникла необходимость обновления с новыми параметрами,\r\n           * сделаем новый запрос\r\n           */\r\n          if((ds.pendingParameters !== undefined) && ! _.isEqual(ds.pendingParameters, params)){\r\n            try{\r\n              res = await (new Resource({ route: dataSource.getWebUrl() })).getQueried(ds.pendingParameters);\r\n              res = _.get(res, 'data', res);\r\n              appStore.dispatch(changeCurrentDataStorage(dataSource.getAlias(), res));\r\n              dataSource.params = _.cloneDeep(ds.pendingParameters);\r\n            } catch (err) {\r\n              if(err instanceof Promise){\r\n                err = await err.then();\r\n                err = mbParseJSON(err);\r\n              }\r\n              console.error(err);\r\n            } finally {\r\n              _.unset(ds, 'pendingParameters');\r\n            }\r\n          }\r\n          ds.updating = false;\r\n        }\r\n        /**\r\n         * В случае, если во время запроса возникла необходимость обновления с новыми параметрами,\r\n         * сохраним эти параметры\r\n         */\r\n      } else if((! _.isEqual(params, oldParams)) && updating){\r\n        ds.pendingParameters = _.cloneDeep(params);\r\n      }\r\n    }\r\n  }\r\n}\r\nwindow.dataStorageUpdater = window.dataStorageUpdater || new DataStorageUpdater();\r\nexport default window.dataStorageUpdater\r\n","import {setAreas} from \"../store/areas/actions\";\r\n\r\nif (typeof window === \"undefined\") {\r\n  global.window = {};\r\n  global.window.ssr = true;\r\n}\r\nif (typeof document === \"undefined\") {\r\n  global.document = {};\r\n}\r\nimport AreaComponent from \"./AreaComponent\";\r\nconst AdminBar = React.lazy(() => import(/* webpackChunkName: 'AdminBar' */\"./AdminBar\"));\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport pageLoader from \"./../classes/PageLoader\";\r\nimport Area from \"../classes/Area\";\r\nimport Resource from \"../../../../editor/src/js/classes/Resource\";\r\nimport appStore from \"../store/store\";\r\nimport { changeCurrentModel } from \"../store/current-model/actions\";\r\nimport { queryCache } from \"react-query\";\r\nimport { connect } from \"react-redux\";\r\nimport AltrpModel from \"../../../../editor/src/js/classes/AltrpModel\";\r\nimport dataStorageUpdater from \"../classes/modules/DatastorageUpdater\";\r\nimport { clearElements } from \"../store/elements-storage/actions\";\r\nimport { clearAllResponseData } from \"../store/responses-storage/actions\";\r\nimport { clearPageState } from \"../store/altrp-page-state-storage/actions\";\r\nimport { changeCurrentTitle } from \"../store/current-title/actions\";\r\nimport { changeCurrentPageProperty } from \"../store/current-page/actions\";\r\n\r\nclass RouteContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let title = this.props.title;\r\n    appStore.dispatch(changeCurrentTitle(title));\r\n    this.state = {\r\n      areas:\r\n        window.ssr === true\r\n          ? this.props.areas.map(area => Area.areaFactory(area))\r\n          : this.props.areas || [],\r\n      admin: this.props.currentUser.hasRoles(\"admin\")\r\n    };\r\n    this.scrollbar = React.createRef();\r\n    this.isReport = window.location?.href.includes(\"reports\") || false;\r\n    appStore.dispatch(clearElements());\r\n    window.currentRouterMatch = new AltrpModel(props.match);\r\n    window.currentPageId = props.id;\r\n    window.currentRouteComponent = this;\r\n    window.altrpHistory = this.props.history;\r\n    console.log('Route constructor: ', performance.now());\r\n    this.updateAppData();\r\n  }\r\n\r\n  async componentWillReceiveProps(nextProps) {\r\n    queryCache.clear();\r\n    if (\r\n      _.get(this.props, \"model.modelName\") !==\r\n      _.get(nextProps, \"model.modelName\") ||\r\n      _.get(this.props, \"match.params.id\") !==\r\n      _.get(nextProps, \"match.params.id\")\r\n    ) {\r\n      await this.changeRouteCurrentModel(nextProps);\r\n      appStore.dispatch(changeCurrentPageProperty(\"url\", location.href));\r\n    }\r\n    /**\r\n     * При изменении страницы без изменения текущего роута\r\n     * отправляем запросы на обновление данных и altrpPageState\r\n     */\r\n    if (\r\n      !_.isEqual(\r\n        _.get(this.props, \"match.params\"),\r\n        _.get(nextProps, \"match.params\")\r\n      )\r\n    ) {\r\n      this.updateAppData();\r\n    }\r\n    this.setState(state => ({\r\n      ...state,\r\n      admin: nextProps.currentUser.hasRoles(\"admin\")\r\n    }));\r\n  }\r\n  /**\r\n   * Меняем заголовок страницы\r\n   * лениво подгружаем области, если необходимо и страница доступна к просмотру\r\n   * главный скролбар сохраняем в глобальной области видимости\r\n   * @return {Promise<void>}\r\n   */\r\n  async componentDidMount() {\r\n    window.mainScrollbars = this.scrollbar.current;\r\n\r\n    /**\r\n     * Запускаем обновление списка страниц\r\n     */\r\n    appStore.dispatch(changeCurrentPageProperty(\"url\", location.href));\r\n    if (this.props.lazy && this.props.allowed) {\r\n      let page = await pageLoader.loadPage(this.props.id);\r\n      let areas = page.areas.map(area => Area.areaFactory(area));\r\n      appStore.dispatch(setAreas(areas))\r\n      this.setState(state => ({\r\n        ...state,\r\n        areas\r\n      }));\r\n    }\r\n\r\n    /**\r\n     * Меняем текущую модель\r\n     */\r\n    this.changeRouteCurrentModel();\r\n    /**\r\n     * Обнуляем хранилище ответов на отправленные формы\r\n     */\r\n    appStore.dispatch(clearAllResponseData());\r\n    /**\r\n     * затем отправляем запросы на обновление данных и altrpPageState\r\n     */\r\n    window.formsManager.clearFieldsStorage();\r\n    console.log('Route Mounted: ', performance.now());\r\n    const renderEvent = new Event('render-altrp');\r\n    window.dispatchEvent(renderEvent);\r\n\r\n  }\r\n\r\n  /**\r\n   * Очистим currentDataSource после удаления компонента\r\n   * todo: отключили очищение так как componentWillUnmount вызывается после загрузки другого RouteContent\r\n   */\r\n  componentWillUnmount() {\r\n    // dataStorageUpdater.clearCurrent();\r\n  }\r\n  /**\r\n   *  обновление currentDataStorage\r\n   *  Сброс altrpPageState\r\n   */\r\n  async updateAppData() {\r\n    dataStorageUpdater.clearCurrent();\r\n    if (window.formsManager) {\r\n      formsManager.clearFormsStore();\r\n    }\r\n    /**\r\n     * @member {array} data_sources\r\n     */\r\n    let { data_sources } = this.props;\r\n    dataStorageUpdater.updateCurrent(data_sources);\r\n    appStore.dispatch(clearPageState());\r\n  }\r\n  /**\r\n   * Меняем текущую модель\r\n   */\r\n  async changeRouteCurrentModel(nextProps) {\r\n    if (\r\n      _.get(this.props, \"model.modelName\") &&\r\n      _.get(this.props, \"match.params.id\")\r\n    ) {\r\n      let props = nextProps ? nextProps : this.props\r\n      try {\r\n        let model = await new Resource({\r\n          route: `/ajax/models/${props.model.modelName}`\r\n        }).get(props.match.params.id);\r\n        let oldModel = appStore.getState().currentModel.getData();\r\n        model.altrpModelUpdated = true;\r\n        if(! _.isEqual(model, oldModel)){\r\n          appStore.dispatch(changeCurrentModel({ altrpModelUpdated: false }));\r\n          appStore.dispatch(changeCurrentModel(model));\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n        appStore.dispatch(changeCurrentModel({ altrpModelUpdated: true }));\r\n      }\r\n    } else {\r\n      appStore.dispatch(changeCurrentModel({ altrpModelUpdated: true }));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Если меняется роут\r\n   * @params {{}} prevProps\r\n   * @return {Promise<void>}\r\n   */\r\n  async componentDidUpdate(prevProps) {\r\n\r\n    if (!_.isEqual(_.get(this.props, \"match\"), _.get(prevProps, \"match\"))) {\r\n      window.currentRouterMatch = new AltrpModel(this.props.match);\r\n      // appStore.dispatch(clearFormStorage());\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.allowed) {\r\n      return <Redirect to={this.props.redirect || \"/\"} />;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <Suspense fallback={<div />}>\r\n          {this.state.admin && (\r\n            <AdminBar\r\n              areas={this.state.areas}\r\n              data={this.props.currentUser.data}\r\n              idPage={this.props.id}\r\n            />\r\n          )}{\" \"}\r\n        </Suspense>\r\n\r\n        {/*<Scrollbars*/}\r\n        {/*  className=\"main-content\"*/}\r\n        {/*  universal={true}*/}\r\n        {/*  ref={this.scrollbar}*/}\r\n        {/*  onUpdate={this.props.setScrollValue}*/}\r\n        {/*  // style={{ zIndex: 99999 }}*/}\r\n        {/*  autoHide*/}\r\n        {/*  autoHideTimeout={500}*/}\r\n        {/*  autoHideDuration={200}*/}\r\n        {/*  renderTrackVertical={({ style, ...props }) => {*/}\r\n        {/*    return (*/}\r\n        {/*      <div*/}\r\n        {/*        className=\"altrp-scroll__vertical-track\"*/}\r\n        {/*        style={style}*/}\r\n        {/*        {...props}*/}\r\n        {/*      />*/}\r\n        {/*    );*/}\r\n        {/*  }}*/}\r\n        {/*>*/}\r\n          <div className=\"route-content\" id=\"route-content\">\r\n            {this.state.areas.map((area, idx) => {\r\n              return (\r\n                <AreaComponent\r\n                  {...area}\r\n                  area={area}\r\n                  areas={this.state.areas}\r\n                  page={this.props.id}\r\n                  models={[this.props.model]}\r\n                  key={\"appArea_\" + area.id}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        {/*</Scrollbars>*/}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: state.currentUser\r\n});\r\n//\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     setScrollValue: topPosition => dispatch(setScrollValue(topPosition))\r\n//   };\r\n// };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  // mapDispatchToProps\r\n)(withRouter(RouteContent));\r\n","\r\n\r\nclass EmailTemplatesRenderer extends window.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      baseEmailRender: window.baseEmailRender\r\n    };\r\n    this.emailTemplate = React.createRef();\r\n    window.emailTemplatesRenderer = this;\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @return {*}\r\n   */\r\n  render() {\r\n    if (! this.props.currentEmailTemplate || ! this.state.baseEmailRender) {\r\n      return null\r\n    }\r\n    let rootElement = window.altrpHelpers.mbParseJSON(this.props.currentEmailTemplate.data);\r\n    rootElement = window.frontElementsFabric.parseData(rootElement);\r\n    rootElement.templateType = 'email';\r\n    let content = React.createElement(rootElement.componentClass, {\r\n      element: rootElement,\r\n      children: rootElement.children,\r\n      baseRender: this.state.baseEmailRender,\r\n    });\r\n    const wrapperStyles = {\r\n      width: '100%',\r\n      display: 'none',\r\n    };\r\n    return <table id=\"altrp-email-renderer\"\r\n                  style={wrapperStyles}\r\n                  ref={this.emailTemplate}>\r\n        <tbody>\r\n        <tr>\r\n          <td>\r\n            {content}\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param state\r\n * @return {{altrpresponses: *, formsStore: *, currentDataStorage: *, currentModel: *, currentUser: *, altrpMeta: *, altrpPageState: *, currentEmailTemplate: currentEmailTemplate}}\r\n */\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    altrpresponses: state.altrpresponses,\r\n    formsStore: state.formsStore,\r\n    currentDataStorage: state.currentDataStorage,\r\n    currentModel: state.currentModel,\r\n    currentUser: state.currentUser,\r\n    altrpMeta: state.altrpMeta,\r\n    altrpPageState: state.altrpPageState,\r\n    currentEmailTemplate: state.currentEmailTemplate,\r\n  };\r\n}\r\n\r\nexport default window.reactRedux.connect(mapStateToProps)(EmailTemplatesRenderer)\r\n","\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport RouteContent from \"./RouteContent\";\r\nimport {isAltrpTestMode} from \"../helpers\";\r\nimport EmailTemplatesRenderer from \"./EmailTemplatesRenderer\";\r\nimport appStore from \"../store/store\";\r\nimport {setScrollValue} from \"../store/scroll-position/actions\";\r\nclass AppContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.mainScroller = React.createRef();\r\n    this.router = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    if (this.router.current) {\r\n      window.frontAppRouter = this.router.current;\r\n    }\r\n\r\n    /**\r\n     * todo: изменить подписку на скролл при необходимости\r\n     */\r\n    if(this.mainScroller.current){\r\n      this.mainScroller.current.addEventListener('scroll', e=>{\r\n        appStore.dispatch(setScrollValue({top: e.target.scrollTop}))\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router ref={this.router}>\r\n        <EmailTemplatesRenderer/>\r\n        <div ref={this.mainScroller} className={`front-app-content ${isAltrpTestMode() ? 'front-app-content_test' : ''}`}>\r\n          <Switch>\r\n            {this.props.routes.map(route => (\r\n              <Route\r\n                key={route.id}\r\n                children={<RouteContent {...route} />}\r\n                path={route.path}\r\n                exact\r\n              />\r\n            ))}\r\n          </Switch>\r\n        </div>\r\n        <window.StylesComponent />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    routes: state.appRoutes.routes\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(AppContent);\r\n","import {Helmet} from \"react-helmet\";\r\nimport {renderFontLink, delay} from \"../helpers\";\r\n\r\n\r\nclass FontsManager extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fonts: [],\r\n    };\r\n    this.helmetRef = React.createRef();\r\n    window.helmetRef = this.helmetRef;\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await delay(1000);\r\n    this.setState(state=>({...state, renderFonts: true}));\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {{}} prevProps\r\n   * @param {{}} prevState\r\n   */\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(!this.state.renderFonts){\r\n      return;\r\n    }\r\n    let fonts = new Set();\r\n    const fontsPairs = _.toPairs(this.props.altrpFonts.getData());\r\n    fontsPairs.forEach(([key, value]) => {\r\n      fonts.add(value);\r\n    });\r\n    fonts = _.toArray(fonts);\r\n    if (_.isEqual(fonts, this.state.fonts)) {\r\n      return;\r\n    }\r\n    this.setState(state => ({...state, fonts}));\r\n  }\r\n\r\n  render() {\r\n    const {fonts} = this.state;\r\n\r\n    return <Helmet ref={this.helmetRef}>\r\n      {fonts.map(renderFontLink)}\r\n    </Helmet>\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    altrpFonts: state.altrpFonts,\r\n  };\r\n}\r\n\r\nexport default window.reactRedux.connect(mapStateToProps)(FontsManager);\r\n\r\n\r\n","import { getHeadingTypeHeadingStyles } from \"./helpers/stylesForTheHeadingTypeHeading\";\nimport { getHeadingTypeAnimatingStyles } from \"./helpers/stylesForTheHeadingTypeAnimating\";\nimport {getTextStyles} from \"./helpers/stylesForTheText\";\nimport {getTableStyles} from \"./helpers/stylesForTheTable\";\nimport {getPostsStyles} from \"./helpers/stylesForThePosts\";\nimport getImageStyles from \"./helpers/stylesForTheImage\";\nimport getTabsStyles from \"./helpers/stylesForTheTabs\";\nimport getMenuStyles from \"./helpers/stylesForTheMenu\";\nimport getBreadcrumbsStyles from \"./helpers/stylesForTheBreadcrumbs\";\nimport ButtonComponent from \"../../../../editor/src/js/components/widgets/styled-components/ButtonComponent\";\nimport CarouselComponent from \"../../../../editor/src/js/components/widgets/styled-components/CarouselComponent\";\nimport GalleryComponent from \"../../../../editor/src/js/components/widgets/styled-components/GalleryComponent\";\nimport DividerComponent from \"../../../../editor/src/js/components/widgets/styled-components/DividerComponent\";\nimport VideoComponent from \"../../../../editor/src/js/components/widgets/styled-components/VideoComponent\";\nimport ListComponent from \"../../../../editor/src/js/components/widgets/styled-components/ListComponent\";\nimport DashboardComponent from \"../../../../editor/src/js/components/widgets/styled-components/DashboardComponent\";\nimport AdvancedComponent from \"../../../../editor/src/js/components/widgets/styled-components/AdvancedComponent\";\nimport SectionWidgetComponent\n  from \"../../../../editor/src/js/components/widgets/styled-components/SectionWidgetComponent\";\nimport ColumnComponent from \"../../../../editor/src/js/components/widgets/styled-components/ColumnComponents\";\nimport DropbarWidgetComponent\n  from \"../../../../editor/src/js/components/widgets/styled-components/DropbarWidgetComponent\";\nimport FormComponent from \"../../../../editor/src/js/components/widgets/styled-components/FormComponent\";\nimport AccordionComponent from \"../../../../editor/src/js/components/widgets/styled-components/AccordionComponent\";\nimport getRouteStyles from \"../functions/get-route-styles\";\nimport MapComponent from \"../../../../editor/src/js/components/widgets/styled-components/MapComponent\";\nimport MapConstructorComponent\n  from \"../../../../editor/src/js/components/widgets/styled-components/MapConstructorComponent\";\nimport TabsSwitcherComponent\n  from \"../../../../editor/src/js/components/widgets/styled-components/TabsSwitcherComponent\";\nimport DiagramComponent from \"../../../../editor/src/js/components/widgets/styled-components/DiagramComponent\";\nimport ImageLightboxComponent\n  from \"../../../../editor/src/js/components/widgets/styled-components/ImageLightboxComponent\";\nimport InputDateComponent from \"../../../../editor/src/js/components/widgets/styled-components/InputDateComponent\";\nimport DatePickerComponent from \"../../../../editor/src/js/components/widgets/styled-components/DatePickerComponent\";\nimport InputCheckboxComponent\n  from \"../../../../editor/src/js/components/widgets/styled-components/InputCheckboxComponent\";\nimport getInputTextCommonStyles from \"./helpers/getInputTextCommonStyles\";\nimport getInputSelectStyles, {getInputSelectPopoverStyles} from \"./helpers/getInputSelectStyles\";\nimport InputRadioComponent from \"../../../../editor/src/js/components/widgets/styled-components/InputRadioComponent\";\nimport InputSliderComponent from \"../../../../editor/src/js/components/widgets/styled-components/InputSliderComponent\";\nimport getInputFileStyles from \"./helpers/getInputFileStyles\";\nimport getInputGalleryStyles from \"./helpers/getInputGalleryStyles\";\nimport {getResponsiveSetting} from \"../helpers\";\nimport InputRangeSliderComponent\n  from \"../../../../editor/src/js/components/widgets/styled-components/InputRangeSliderComponent\";\n\nconst {isEditor} = window.altrpHelpers;\n\nconst GlobalStyles = createGlobalStyle`${({ elementsSettings, areas }) => {\n  let styles = \"\";\n  if(areas){\n    styles += getRouteStyles(areas);\n  }\n  let prefix = \"altrp-element\";\n  _.each(elementsSettings, (item, id) => {\n    if (item) {\n      switch (item.name) {\n        case \"image-lightbox\":\n          styles+=ImageLightboxComponent(item.settings,id);\n          break;\n        case \"diagram\":\n          styles += `.${prefix}${id} {${DiagramComponent(item.settings)}}`;\n          break;\n        case \"tabs-switcher\":\n          styles += `.${prefix}${id} {${TabsSwitcherComponent(item.settings)}}`;\n          break;\n        case \"button\":\n          styles += `.${prefix}${id} {${ButtonComponent(item.settings)}}`;\n          break;\n        case \"carousel\":\n          styles += `.${prefix}${id} {${CarouselComponent(item.settings)}}`;\n          break;\n        case \"gallery\":\n          styles += `.${prefix}${id} {${GalleryComponent(item.settings)}}`;\n          break;\n        case \"divider\":\n          styles += `.${prefix}${id} {${DividerComponent(item.settings)}}`;\n          break;\n        case \"video\":\n          styles += `.${prefix}${id} {${VideoComponent(item.settings)}}`;\n          break;\n        case \"list\":\n          styles += `.${prefix}${id} {${ListComponent(item.settings)}}`;\n          break;\n        case \"accordion\":\n          styles += `.${prefix}${id} {${AccordionComponent(item.settings)}}`;\n          break;\n        case \"section\":\n          styles += `.${prefix}${id} {${SectionWidgetComponent(item.settings, item.childrenLength || 1)}}`;\n          break;\n        case \"section_widget\":\n          styles += `.${prefix}${id} {${SectionWidgetComponent(item.settings, item.childrenLength || 1)}}`;\n          break;\n        case \"column\":\n          styles += `.${prefix}${id} {${ColumnComponent(item.settings)}}`;\n          break;\n        case \"dropbar\":\n          styles += `.${prefix}${id} {${DropbarWidgetComponent(item.settings)}}`;\n          break;\n        case \"dashboard\":\n          styles+=`.${prefix}${id} {${DashboardComponent(item.settings)}}`;\n          break;\n        case \"image\":\n          styles+=getImageStyles(item.settings,id);\n          break;\n        case \"tabs\":\n          styles+=getTabsStyles(item.settings, id);\n          break;\n        case \"menu\":\n          styles+=getMenuStyles(item.settings,id);\n          break;\n        case \"breadcrumbs\":\n          styles+=getBreadcrumbsStyles(item.settings,id);\n          break;\n        case 'heading': {\n          styles += getHeadingTypeHeadingStyles(item.settings, id);\n        }\n          break;\n        case 'heading-type-animating': {\n          styles += getHeadingTypeAnimatingStyles(item.settings, id);\n        }\n          break;\n        case 'text': {\n          styles += getTextStyles(item.settings, id);\n        }\n          break;\n        case 'table': {\n          styles += getTableStyles(item.settings, id);\n        }\n          break;\n        case 'posts': {\n          styles += getPostsStyles(item.settings, id);\n        }\n          break;\n        case \"input-select2\": {\n          styles += `.${prefix}${id} {${FormComponent.FormComponent(\n            item.settings,\n            id\n          )}}`;\n          //select2 options style\n          styles += `${FormComponent.select2Options(item.settings, id)}}`;\n        }\n          break;\n        case \"input-date\": {\n          styles += InputDateComponent(\n            item.settings,\n            id,\n            prefix\n          );\n          styles += `${DatePickerComponent(\n            item.settings,\n            id,\n          )}`;\n        }\n          break\n        case \"input-checkbox\": {\n          styles += `.${prefix}${id} {${InputCheckboxComponent(\n            item.settings,\n            id\n          )}}`;\n        }\n          break\n        case \"input-slider\": {\n          styles += `.${prefix}${id} {${InputSliderComponent(\n            item.settings,\n          )}}`;\n        }\n          break\n        case \"input-range-slider\": {\n          styles += `.${prefix}${id} {${InputRangeSliderComponent(\n            item.settings,\n          )}}`;\n        }\n          break\n        case \"input-text-common\":{\n          styles += `.${prefix}${id} {${getInputTextCommonStyles(item.settings, id)}}`\n        }\n          break;\n        case \"input-select\":{\n          styles += `.${prefix}${id} {${getInputSelectStyles(item.settings, id)}}`\n          styles += `${getInputSelectPopoverStyles(item.settings, id)}`\n        }\n          break;\n        case \"input-radio\": {\n          styles += InputRadioComponent(\n            item.settings,\n            id,\n            prefix\n          )\n        }break;\n        case \"input-text\":\n        case \"input-password\":\n        case \"input-number\":\n        case \"input-email\":\n        case \"input-tel\":\n        case \"input-file\":{\n          styles += `.${prefix}${id} {${getInputFileStyles(\n            item.settings,\n            id\n          )}}`;\n        }break\n        case \"input-gallery\":{\n          styles += `.${prefix}${id} {${getInputGalleryStyles(\n            item.settings,\n            id\n          )}}`;\n        }break\n        case \"input-image-select\":\n        case \"input-accept\":\n        case \"input-textarea\":\n        case \"input-wysiwyg\": {\n          styles += `.${prefix}${id} {${FormComponent.FormComponent(\n            item.settings,\n            id\n          )}}`;\n        }\n          break;\n        case \"map\":\n          styles += `.${prefix}${id} {${MapComponent(item.settings)}}`;\n          break;\n        case \"map_builder\":\n          styles += `.${prefix}${id} {${MapConstructorComponent(item.settings)}}`;\n          break;\n      }\n      styles += `div.${prefix}${id}.${prefix}${id} {${AdvancedComponent(\n        item.settings\n      )}}`;\n\n      let element_css_editor = getResponsiveSetting(item.settings, \"element_css_editor\");\n      if(_.isString(element_css_editor)){\n        styles+=element_css_editor.replace(/__selector__/g, `${prefix}${id}`)\n      }\n    }\n  });\n\n  styles += `} `;\n  window.globalDefaults && (styles += window.globalDefaults.join(''));\n  return styles;\n}}`\n\nfunction mapStateToProps(state) {\n  if(isEditor()){\n    return {};\n  }\n  return {\n    elementsSettings: state.elementsSettings,\n    areas: state.areas,\n    currentScreen: state.currentScreen,\n  };\n}\n\nexport default window.reactRedux.connect(mapStateToProps)(GlobalStyles)\n\n","import appStore from \"./js/store/store\";\r\nimport AppContent from \"./js/components/AppContent\";\r\nimport { Provider } from \"react-redux\";\r\nimport {changeCurrentUser, setUserNotice, setUsersOnline} from \"./js/store/current-user/actions\";\r\nimport FontsManager from \"./js/components/FontsManager\";\r\nimport Echo from \"laravel-echo\";\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\nimport { DndProvider, } from 'react-dnd'\r\nconst {getRoutes, Resource} = window.altrpHelpers;\r\nimport GlobalStyles from \"./js/components/GlobalStyles\";\r\n\r\nclass FrontApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    window.frontApp = this;\r\n    this.getRoutes();\r\n    // this.onWidgetMount();\r\n    console.log('FRONT APP: ',performance.now());\r\n  }\r\n  getRoutes() {\r\n    return window.altrpHelpers.getRoutes().then(res => {\r\n      this.routes = res.default;\r\n    });\r\n  }\r\n\r\n  onWidgetMount(){\r\n    console.log(performance.now());\r\n    // if(this.timeoutId){\r\n    //   clearTimeout(this.timeoutId);\r\n    // }\r\n    // this.timeoutId = setTimeout(() =>{\r\n    // }, 100);\r\n  }\r\n\r\n  /**\r\n   * Обновляем текущего пользователя\r\n   */\r\n  async componentDidMount() {\r\n    new Resource({ route: '/ajax/' }).get('current-user').then(res=>{\r\n      if(! _.isEqual(appStore.getState().currentUser.getData(), res.data)){\r\n        appStore.dispatch(changeCurrentUser(res.data));\r\n      }\r\n    })\r\n    let pusherKey = await new Resource({ route: \"/admin/ajax/settings\" }).get(\"pusher_app_key\");\r\n    let websocketsPort = await new Resource({ route: \"/admin/ajax/settings\" }).get(\"websockets_port\");\r\n    let websocketsHost = await new Resource({ route: \"/admin/ajax/settings\" }).get(\"pusher_host\");\r\n\r\n    pusherKey = pusherKey?.pusher_app_key;\r\n    websocketsPort = websocketsPort?.websockets_port;\r\n    websocketsHost = websocketsHost?.pusher_host;\r\n\r\n    // Проверка наличия ключа и порта\r\n    if(pusherKey && websocketsPort){\r\n      try {\r\n        window.Pusher = require(\"pusher-js\");\r\n        window.Echo = new Echo({\r\n          broadcaster: \"pusher\",\r\n          key: pusherKey,\r\n          wsHost: websocketsHost,\r\n          wsPort: websocketsPort,\r\n          forceTLS: false,\r\n          disableStats: true,\r\n        });\r\n\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n      const {currentUser} = appStore.getState();\r\n      // Подключение слушателя канала\r\n      window.Echo.private(\"App.User.\" + currentUser.id)\r\n      .notification((notification) => {\r\n        // Запись пришедших по каналу уведомлений в appStore\r\n        appStore.dispatch(setUserNotice(notification));\r\n        console.log(appStore.getState().currentUser, 'STORE NOTICE');\r\n      });\r\n\r\n      // Подключение слушателя для получения users online\r\n      let presenceChannel = window.Echo.join(\"online\");\r\n      let activeUsers = [];\r\n      presenceChannel.here((users) => {\r\n        activeUsers = users;\r\n        appStore.dispatch(setUsersOnline(activeUsers));\r\n      })\r\n      .joining((user) => {\r\n        activeUsers.push(user);\r\n        appStore.dispatch(setUsersOnline(activeUsers));\r\n      })\r\n      .leaving((user) => {\r\n        activeUsers.splice(activeUsers.indexOf(user), 1);\r\n        appStore.dispatch(setUsersOnline(activeUsers));\r\n      });\r\n\r\n    } else {\r\n     console.log(\"Вебсокеты выключены\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={appStore}>\r\n        <DndProvider backend={HTML5Backend}>\r\n          <AppContent />\r\n        </DndProvider>\r\n        <FontsManager />\r\n        <GlobalStyles/>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default window.__hot(module)(FrontApp);\r\n"],"sourceRoot":""}