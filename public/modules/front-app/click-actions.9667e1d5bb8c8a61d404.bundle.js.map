{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/classes/AltrpModel.js","webpack:///./resources/modules/front-app/src/js/helpers/element-search.js","webpack:///./resources/modules/front-app/src/js/functions/actions/click-actions.js"],"names":["AltrpModel","data","this","cloneDeep","clone","isEmpty","name","defaultValue","get","has","value","getData","set","unset","window","elementSearch","elementId","params","element","elements","appStore","getState","find","el","props","getId","checkElement","page_areas","area","recursiveSearch","template","FrontElement","id","children","child","_el","result","_","settings","isArray","settingParam","settingValue","getSettings","settingName","checks","length","filter","check","isFunction","CLICK_EXCLUDE_TAG_NAMES","ACTIONS_CACHE","altrp","clickActions","e","html_element","target","indexOf","tagName","toLowerCase","actions","dataset","elementUuid","closest","altrpWrapperClickActions","v4","parentElement","preventDefault","then","actionsManager","callAllWidgetActions","getIdForAction"],"mappings":"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","file":"click-actions.9667e1d5bb8c8a61d404.bundle.js","sourcesContent":["/**\r\n * Имеет интерфейс для доступы к свойствам data (любой вложенности)\r\n * @class AltrpModel\r\n */\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport get from 'lodash.get';\r\nimport set from 'lodash.set';\r\nimport has from 'lodash.has';\r\nimport unset from 'lodash.unset';\r\nimport isEmpty from 'lodash.isempty';\r\n// import {cloneDeep, get, set, has, unset, isString, isEmpty} from \"lodash\";\r\n\r\nclass AltrpModel {\r\n  constructor(data = {}) {\r\n    this.data = cloneDeep(data);\r\n  }\r\n\r\n  /**\r\n   * Возваращает объект данных\r\n   * @params {boolean} clone - клонировать или ссылку на данные\r\n   * @return {{}}\r\n   */\r\n  getData(clone = true) {\r\n    if(clone){\r\n      return cloneDeep(this.data);\r\n    }\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Пустой ли объект\r\n   */\r\n  isEmpty(){\r\n    return isEmpty(this.data);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  getProperty(name, defaultValue = '') {\r\n    return get(this.data, name, defaultValue);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  hasProperty(name, defaultValue = '') {\r\n    return has(this.data, name);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {{}}\r\n   */\r\n  setProperty(name, value = '') {\r\n    if(value instanceof AltrpModel){\r\n      value = value.getData(false);\r\n    }\r\n    return set(this.data, name, value);\r\n  }\r\n  /**\r\n   * Удаляет свойства name\r\n   * @params {string} name\r\n   * @return {*}\r\n   */\r\n  unsetProperty(name) {\r\n    return unset(this.data, name);\r\n  }\r\n}\r\nwindow.AltrpModel = AltrpModel;\r\nexport default AltrpModel\r\n","import FrontElement from \"../classes/FrontElement\";\r\n/**\r\n *\r\n * @param {string} elementId\r\n * @param {{}} params\r\n * @return {FrontElement | null}\r\n */\r\nexport default function elementSearch(elementId, params = {}){\r\n  let element = null;\r\n  let elements = appStore.getState().elements\r\n  element = elements.find(el=> (el.props.element.getId() === elementId && checkElement(el.props.element, params))) || element;\r\n  if (element?.props?.element){\r\n    return element.props.element;\r\n  }\r\n  for(let area of page_areas){\r\n    element = recursiveSearch(area?.template?.data, elementId, params)\r\n    if (element){\r\n      if(! (element instanceof FrontElement)){\r\n        element = new FrontElement(element, true)\r\n      }\r\n      return element;\r\n    }\r\n  }\r\n  if(! (element instanceof FrontElement)){\r\n    element = new FrontElement(element)\r\n  }\r\n  return element;\r\n}\r\n\r\n/**\r\n *\r\n * @param {FrontElement | {}} element\r\n * @param {string} elementId\r\n * @param {{}} params\r\n * @return {FrontElement | {} | null}\r\n */\r\nexport function recursiveSearch(element, elementId, params = {}){\r\n\r\n  if(!element?.id){\r\n    return null\r\n  }\r\n  if(element.id === elementId && checkElement(element, params)){\r\n    return element\r\n  }\r\n  if(element?.children){\r\n    for(let child of element.children){\r\n      if(child.id === elementId && checkElement(child, params)){\r\n        return child\r\n      }\r\n      let _el = recursiveSearch(child, elementId, params)\r\n      if(_el){\r\n        return _el;\r\n      }\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\n/**\r\n *\r\n * @param {FrontElement|{}}element\r\n * @param {{}}params\r\n * @return {boolean}\r\n */\r\nexport function checkElement(element, params = {}){\r\n  let result = false;\r\n  if(_.isEmpty(params.settings) || ! _.isArray(params.settings)){\r\n    return ! result;\r\n  }\r\n  if(! element instanceof FrontElement){\r\n    element = new FrontElement(element, true)\r\n  }\r\n  result = params.settings.find(settingParam => {\r\n    let settingValue = element.getSettings(settingParam?.settingName);\r\n    return settingParam?.checks.length === settingParam?.checks.filter(check=>{\r\n      return _.isFunction(check) && check(settingValue)\r\n    })\r\n  })\r\n  return result\r\n}\r\n","import elementSearch from '../../helpers/element-search';\r\nimport { v4 } from 'uuid';\r\n\r\nconst CLICK_EXCLUDE_TAG_NAMES = [\r\n  // 'input',todo: выяснить нужно ли исключение\r\n  // 'a',\r\n  // 'button',\r\n  // 'textarea',\r\n  // 'select',\r\n];\r\n\r\nconst ACTIONS_CACHE = (window.altrp.ACTIONS_CACHE = window.altrp.ACTIONS_CACHE || {})\r\n/**\r\n *\r\n * @param {PointerEvent} e\r\n */\r\nexport default function clickActions(e){\r\n  let html_element = e.target;\r\n  if(CLICK_EXCLUDE_TAG_NAMES.indexOf(e.target.tagName.toLowerCase()) >=0){\r\n    return\r\n  }\r\n  let actions\r\n  let element\r\n  if(e.target.dataset.elementUuid && _.get(ACTIONS_CACHE, `clickActions.${e.target.dataset.elementUuid}`)){\r\n    actions = _.get(ACTIONS_CACHE, `clickActions.${e.target.dataset.elementUuid}.actions`);\r\n    element = _.get(ACTIONS_CACHE, `clickActions.${e.target.dataset.elementUuid}.element`);\r\n  } else {\r\n    while ((html_element = html_element?.closest('[data-altrp-wrapper-click-actions]'))){\r\n      const _el = elementSearch(html_element?.dataset?.altrpWrapperClickActions)\r\n      if(_el && ! _.isEmpty(_el.getSettings('wrapper_click_actions'))){\r\n        actions = _el.getSettings('wrapper_click_actions')\r\n        element = _el\r\n        e.target.dataset.elementUuid = v4();\r\n        _.set(ACTIONS_CACHE, `clickActions.${e.target.dataset.elementUuid}`, {actions, element})\r\n        break;\r\n      }\r\n      html_element = html_element.parentElement\r\n    }\r\n  }\r\n  if(! actions){\r\n    return;\r\n  }\r\n  e.preventDefault();\r\n  import(/* webpackChunkName: 'ActionsManager' */'../../classes/modules/ActionsManager').then(()=>{\r\n    window.actionsManager.callAllWidgetActions(\r\n      element.getIdForAction(),\r\n      'wrapper_click_actions',\r\n      actions,\r\n      element\r\n    )\r\n  })\r\n}\r\n"],"sourceRoot":""}