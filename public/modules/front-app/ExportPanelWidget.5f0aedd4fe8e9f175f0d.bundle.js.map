{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/classes/AltrpModel.js","webpack:///./resources/modules/editor/src/js/components/widgets/ExportPanelWidget.js"],"names":["AltrpModel","data","this","cloneDeep","clone","isEmpty","name","defaultValue","get","has","value","getData","set","unset","window","Frame3","Code","ExportPanelWindget","props","console","log","state","hidePanel","element","getSettings","print","bind","code","fireAction","action","alert","beautify","indent_size","indent_char","max_preserve_newlines","preserve_newlines","keep_array_indentation","break_chained_methods","indent_scripts","brace_style","space_before_conditional","unescape_strings","jslint_happy","end_with_newline","wrap_line_length","indent_inner_html","comma_first","e4x","indent_empty_lines","documentVar","document","cloneNode","exportPanel","getElementById","remove","currentRoute","location","pathname","getRoutes","default","resource","getAll","routes","currentID","_","find","pages","path","id","completeStyles","styleTags","getElementsByTagName","indexStyle","length","innerText","parentNode","removeChild","querySelectorAll","hasAttribute","getAttribute","removeAttribute","imgs","img","src","toString","html","formatting","documentElement","innerHTML","Resource","route","post","dom","reportID","cssRules","then","res","message","replace","rej","className","onClick","Component"],"mappings":"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","file":"ExportPanelWidget.5f0aedd4fe8e9f175f0d.bundle.js","sourcesContent":["/**\r\n * Имеет интерфейс для доступы к свойствам data (любой вложенности)\r\n * @class AltrpModel\r\n */\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport get from 'lodash.get';\r\nimport set from 'lodash.set';\r\nimport has from 'lodash.has';\r\nimport unset from 'lodash.unset';\r\nimport isEmpty from 'lodash.isempty';\r\n// import {cloneDeep, get, set, has, unset, isString, isEmpty} from \"lodash\";\r\n\r\nclass AltrpModel {\r\n  constructor(data = {}) {\r\n    this.data = cloneDeep(data);\r\n  }\r\n\r\n  /**\r\n   * Возваращает объект данных\r\n   * @params {boolean} clone - клонировать или ссылку на данные\r\n   * @return {{}}\r\n   */\r\n  getData(clone = true) {\r\n    if(clone){\r\n      return cloneDeep(this.data);\r\n    }\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Пустой ли объект\r\n   */\r\n  isEmpty(){\r\n    return isEmpty(this.data);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  getProperty(name, defaultValue = '') {\r\n    return get(this.data, name, defaultValue);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  hasProperty(name, defaultValue = '') {\r\n    return has(this.data, name);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {{}}\r\n   */\r\n  setProperty(name, value = '') {\r\n    if(value instanceof AltrpModel){\r\n      value = value.getData(false);\r\n    }\r\n    return set(this.data, name, value);\r\n  }\r\n  /**\r\n   * Удаляет свойства name\r\n   * @params {string} name\r\n   * @return {*}\r\n   */\r\n  unsetProperty(name) {\r\n    return unset(this.data, name);\r\n  }\r\n}\r\nwindow.AltrpModel = AltrpModel;\r\nexport default AltrpModel\r\n","import Frame3 from \"../../../svgs/Frame 3.svg\";\r\nimport Code from \"../../../svgs/code.svg\";\r\nimport Resource from \"../../classes/Resource\";\r\nimport beautify from \"js-beautify\";\r\nimport { getRoutes } from \"../../../../../front-app/src/js/helpers\";\r\n\r\nclass ExportPanelWindget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n    this.state = {\r\n      hidePanel: props.element.getSettings().hidePanel\r\n    };\r\n    this.print = this.print.bind(this);\r\n    this.code = this.code.bind(this);\r\n    this.fireAction = this.fireAction.bind(this);\r\n  }\r\n\r\n  fireAction(action) {\r\n    if (typeof this[action] !== \"undefined\") {\r\n      this[action]();\r\n    } else {\r\n      alert(\"NOT FOUND ACTION\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Форматируем специальные символы для корректного отображения\r\n   * @param code\r\n   */\r\n  formatting(code) {\r\n    let result = beautify.html(code, {\r\n      indent_size: \"4\",\r\n      indent_char: \" \",\r\n      max_preserve_newlines: \"5\",\r\n      preserve_newlines: true,\r\n      keep_array_indentation: false,\r\n      break_chained_methods: false,\r\n      indent_scripts: \"normal\",\r\n      brace_style: \"collapse\",\r\n      space_before_conditional: true,\r\n      unescape_strings: false,\r\n      jslint_happy: false,\r\n      end_with_newline: false,\r\n      wrap_line_length: \"0\",\r\n      indent_inner_html: false,\r\n      comma_first: false,\r\n      e4x: false,\r\n      indent_empty_lines: false\r\n    });\r\n    return result;\r\n  }\r\n  /**\r\n   * Работает только при собранном проекте (npm run front-build)\r\n   */\r\n  async code() {\r\n    let documentVar = document.cloneNode(true);\r\n    let exportPanel = documentVar.getElementById(\"export-panel\");\r\n    if (exportPanel !== null) {\r\n      exportPanel.remove();\r\n    }\r\n    let currentRoute = window.location.pathname;\r\n    let routes = await (await getRoutes()).default.resource.getAll();\r\n    let currentID = _.find(routes.pages, { path: currentRoute }).id;\r\n\r\n    if (documentVar.getElementById(\"ace-solarized-dark\") !== null)\r\n      documentVar.getElementById(\"ace-solarized-dark\").remove();\r\n    if (documentVar.getElementById(\"ace-tm\") !== null)\r\n      documentVar.getElementById(\"ace-tm\").remove();\r\n    if (documentVar.getElementById(\"ace_editor.css\") !== null)\r\n      documentVar.getElementById(\"ace_editor.css\").remove();\r\n    if (documentVar.getElementById(\"styles-container\") !== null)\r\n      documentVar.getElementById(\"styles-container\").remove();\r\n\r\n    let completeStyles = \"\";\r\n    let styleTags = document.getElementsByTagName(\"style\");\r\n\r\n    let indexStyle = 0;\r\n    while (styleTags.length > 0 && indexStyle < styleTags.length) {\r\n      if (styleTags[indexStyle] !== \"undefined\") {\r\n        completeStyles +=\r\n          typeof styleTags[indexStyle] !== \"undefined\"\r\n            ? styleTags[indexStyle].innerText\r\n            : \"\";\r\n        styleTags[indexStyle].parentNode.removeChild(styleTags[indexStyle]);\r\n        indexStyle++;\r\n      }\r\n    }\r\n\r\n    for (let element of documentVar.querySelectorAll(\"[id]\")) {\r\n      if (element.hasAttribute(\"id\") && element.getAttribute(\"id\") == \"\") {\r\n        element.removeAttribute(\"id\");\r\n      }\r\n      if (\r\n        element.hasAttribute(\"id\") &&\r\n        element.getAttribute(\"id\") == \"columnCount\"\r\n      ) {\r\n        element.removeAttribute(\"id\");\r\n      }\r\n    }\r\n\r\n    var imgs = documentVar.getElementsByTagName(\"img\");\r\n    for (let img of imgs) {\r\n      img.src = img.src.toString();\r\n    }\r\n    const html = this.formatting(documentVar.documentElement.innerHTML);\r\n    new Resource({\r\n      route: \"/reports/generate\"\r\n    })\r\n      .post({\r\n        dom: html,\r\n        reportID: currentID,\r\n        cssRules: completeStyles\r\n      })\r\n      .then(\r\n        res => {\r\n          if (typeof res.message !== \"undefined\") {\r\n            alert(\"ОШИБКА\");\r\n            return;\r\n          }\r\n          window.location.replace(res.path);\r\n        },\r\n        rej => {\r\n          console.log(rej);\r\n        }\r\n      );\r\n  }\r\n\r\n  print() {\r\n    window.print();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {!this.state.hidePanel && (\r\n          <div className=\"export-panel\" id=\"export-panel\">\r\n            <div className=\"col\">\r\n              <div className=\"row justify-content-start d-flex py-3\">\r\n                <div className=\"col-auto\">\r\n                  <button onClick={this.code}>\r\n                    <Code />\r\n                  </button>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <button onClick={this.print}>\r\n                    <Frame3 />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExportPanelWindget;\r\n"],"sourceRoot":""}