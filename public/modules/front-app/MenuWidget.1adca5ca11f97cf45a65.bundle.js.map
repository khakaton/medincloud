{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/classes/AltrpModel.js","webpack:///./resources/modules/front-app/src/js/functions/menus.js","webpack:///./resources/modules/editor/src/js/components/widgets/MenuWidget.js","webpack:///./resources/modules/front-app/src/js/store/menus-storage/actions.js"],"names":["AltrpModel","data","this","cloneDeep","clone","isEmpty","name","defaultValue","get","has","value","getData","set","unset","window","getMenuByGUID","guid","resource","Resource","route","altrpLibs","Blueprint","Button","ButtonGroup","Menu","MenuItem","Position","Popover2","GlobalStyles","createGlobalStyle","elementId","settings","styles","padding","getResponsiveSetting","dimensionsControllerToStyles","typographic","typographicControllerToStyles","bg","color","gap","sub_menu_padding","sub_menu_bg","sub_menu_shadow","shadowControllerToStyles","sub_menu_radius","menuPadding","menu_radius","replace","menuBg","mainPortalWidth","props","getMenuData","menuGUID","element","state","menuData","loading","menus","appStore","getState","altrpMenus","find","menu","children","mbParseJSON","dispatch","addMenu","setState","getMenuClasses","join","renderSubItems","items","depth","length","popoverProps","usePortal","portalClassName","portalContainer","EditorFrame","contentWindow","document","body","renderButton","position","BOTTOM_LEFT","map","item","href","url","width","className","key","id","onClick","e","preventDefault","isEditor","history","push","location","icon","dangerouslySetInnerHTML","__html","text","label","toggle_icon","_","content","renderVerticalMenu","minimal","elementDecorator","baseRender","render","getId","fill","alignText","rightIcon","type","getSettings","Component","ADD_MENU"],"mappings":"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","file":"MenuWidget.1adca5ca11f97cf45a65.bundle.js","sourcesContent":["/**\r\n * Имеет интерфейс для доступы к свойствам data (любой вложенности)\r\n * @class AltrpModel\r\n */\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport get from 'lodash.get';\r\nimport set from 'lodash.set';\r\nimport has from 'lodash.has';\r\nimport unset from 'lodash.unset';\r\nimport isEmpty from 'lodash.isempty';\r\n// import {cloneDeep, get, set, has, unset, isString, isEmpty} from \"lodash\";\r\n\r\nclass AltrpModel {\r\n  constructor(data = {}) {\r\n    this.data = cloneDeep(data);\r\n  }\r\n\r\n  /**\r\n   * Возваращает объект данных\r\n   * @params {boolean} clone - клонировать или ссылку на данные\r\n   * @return {{}}\r\n   */\r\n  getData(clone = true) {\r\n    if(clone){\r\n      return cloneDeep(this.data);\r\n    }\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Пустой ли объект\r\n   */\r\n  isEmpty(){\r\n    return isEmpty(this.data);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  getProperty(name, defaultValue = '') {\r\n    return get(this.data, name, defaultValue);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  hasProperty(name, defaultValue = '') {\r\n    return has(this.data, name);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {{}}\r\n   */\r\n  setProperty(name, value = '') {\r\n    if(value instanceof AltrpModel){\r\n      value = value.getData(false);\r\n    }\r\n    return set(this.data, name, value);\r\n  }\r\n  /**\r\n   * Удаляет свойства name\r\n   * @params {string} name\r\n   * @return {*}\r\n   */\r\n  unsetProperty(name) {\r\n    return unset(this.data, name);\r\n  }\r\n}\r\nwindow.AltrpModel = AltrpModel;\r\nexport default AltrpModel\r\n","import Resource from \"../../../../editor/src/js/classes/Resource\";\r\n\r\n/**\r\n *\r\n * @param guid\r\n * @return {Promise<{}>}\r\n */\r\nexport async function getMenuByGUID(guid = ''){\r\n  if(! guid){\r\n    return null;\r\n  }\r\n  const resource = new Resource({route: '/ajax/menus'})\r\n  let data = await resource.get(guid);\r\n  return data;\r\n}\r\n","import {getMenuByGUID} from \"../../../../../front-app/src/js/functions/menus\";\r\nimport {addMenu} from \"../../../../../front-app/src/js/store/menus-storage/actions\";\r\nimport {getResponsiveSetting, isEditor, mbParseJSON} from \"../../../../../front-app/src/js/helpers\";\r\nimport {\r\n  dimensionsControllerToStyles, shadowControllerToStyles,\r\n  typographicControllerToStyles\r\n} from \"../../../../../front-app/src/js/helpers/styles\";\r\n\r\nconst {Button, ButtonGroup, Menu, MenuItem, Position} = window.altrpLibs.Blueprint;\r\nconst Popover2 = window.altrpLibs.Popover2;\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  ${({elementId, settings}) => {\r\n\r\n  let styles = `.bp3-menu-item.altrp-menu-item${elementId}{align-items:center;border-radius:0;`;\r\n\r\n  let padding = getResponsiveSetting(settings, 'padding');\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  let typographic = getResponsiveSetting(settings, 'typographic');\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  let bg = getResponsiveSetting(settings, 'bg');\r\n\r\n\r\n  if (bg && bg.color) {\r\n    styles += `background-color: ${bg.color};`;\r\n  }\r\n  let color = getResponsiveSetting(settings, 'color');\r\n\r\n  if (color && color.color) {\r\n    styles += `color: ${color.color};`;\r\n    styles += `.bp3-icon svg, .bp3-icon path{fill: ${color.color};}`;\r\n  }\r\n\r\n\r\n  styles += '}';\r\n  /**\r\n   * Hover Styles\r\n   */\r\n  styles += `.bp3-popover-open.bp3-popover-target .bp3-menu-item.altrp-menu-item.altrp-menu-item${elementId},\r\n    .bp3-menu-item.altrp-menu-item.altrp-menu-item${elementId}:hover{`;\r\n  bg = getResponsiveSetting(settings, 'bg', ':hover');\r\n  if (bg && bg.color) {\r\n    styles += `background-color: ${bg.color};`;\r\n  }\r\n\r\n  typographic = getResponsiveSetting(settings, 'typographic', ':hover');\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  color = getResponsiveSetting(settings, 'color', ':hover');\r\n  if (color && color.color) {\r\n    styles += `color: ${color.color};`;\r\n    styles += `.bp3-icon svg, .bp3-icon path{fill: ${color.color};}`;\r\n  }\r\n  styles += '}';\r\n\r\n  let gap = getResponsiveSetting(settings, 'gap');\r\n  if (gap) {\r\n    styles += `.altrp-portal${elementId} .bp3-menu > li:not(:last-child) { margin-bottom: ${gap}}`;\r\n  }\r\n\r\n  /**\r\n   * Submenu styles\r\n   */\r\n  styles += `.altrp-portal${elementId} .bp3-menu{`;\r\n\r\n  let sub_menu_padding = getResponsiveSetting(settings, 'sub_menu_padding');\r\n  if (sub_menu_padding) {\r\n    styles += dimensionsControllerToStyles(sub_menu_padding);\r\n  }\r\n\r\n  let sub_menu_bg = getResponsiveSetting(settings, 'sub_menu_bg');\r\n  if (sub_menu_bg && sub_menu_bg.color) {\r\n    styles += `background-color: ${sub_menu_bg.color};`;\r\n  }\r\n\r\n\r\n  styles += '}';\r\n\r\n  styles += `.bp3-portal .altrp-portal.altrp-portal${elementId} .bp3-popover-content{`\r\n\r\n  let sub_menu_shadow = getResponsiveSetting(settings, 'sub_menu_shadow');\r\n  if (sub_menu_shadow) {\r\n    styles += shadowControllerToStyles(sub_menu_shadow);\r\n  }\r\n  styles += '}';\r\n\r\n  styles += `.altrp-portal.altrp-portal${elementId} .bp3-popover-content,\r\n    .altrp-portal.altrp-portal${elementId} .bp3-menu{`;\r\n  let sub_menu_radius = getResponsiveSetting(settings, 'sub_menu_radius');\r\n  if (sub_menu_radius) {\r\n    styles += dimensionsControllerToStyles(sub_menu_radius, 'border-radius');\r\n  }\r\n  styles += '}';\r\n  styles += `.altrp-portal${elementId} .bp3-menu:hover{`;\r\n\r\n  sub_menu_bg = getResponsiveSetting(settings, 'sub_menu_bg', ':hover');\r\n  if (sub_menu_bg && sub_menu_bg.color) {\r\n    styles += `background-color: ${sub_menu_bg.color};`;\r\n  }\r\n\r\n\r\n  styles += `.bp3-portal .altrp-portal.altrp-portal${elementId} .bp3-popover-content:hover{`\r\n\r\n  sub_menu_shadow = getResponsiveSetting(settings, 'sub_menu_shadow', ':hover');\r\n  if (sub_menu_shadow) {\r\n    styles += shadowControllerToStyles(sub_menu_shadow);\r\n  }\r\n  styles += '}';\r\n  styles += '}';\r\n\r\n  styles += `.altrp-portal.altrp-portal${elementId} .bp3-popover-content:hover,\r\n    .altrp-portal.altrp-portal${elementId} .bp3-menu:hover{`;\r\n\r\n  sub_menu_radius = getResponsiveSetting(settings, 'sub_menu_radius', ':hover');\r\n  if (sub_menu_radius) {\r\n    styles += dimensionsControllerToStyles(sub_menu_radius, 'border-radius');\r\n  }\r\n  styles += '}';\r\n\r\n  return styles;\r\n}}\r\n\r\n  ${({elementId, settings}) => {\r\n  let styles = `.altrp-element${elementId}.altrp-widget_menu {`; // было .altrp-portal${elementId} .altrp-menu\r\n\r\n  const menuPadding = getResponsiveSetting(settings, 'menu_padding');\r\n  if (menuPadding) {\r\n    styles += dimensionsControllerToStyles(menuPadding);\r\n  }\r\n  let menu_radius = getResponsiveSetting(settings, 'menu_radius');\r\n  if (menu_radius) {\r\n    styles += dimensionsControllerToStyles(menu_radius, 'border-radius');\r\n  }\r\n  let gap = getResponsiveSetting(settings, 'gap');\r\n  if (gap) {\r\n    gap = gap.replace(',', '.')\r\n    styles += `& > li:not(:last-child) { margin-${\r\n      getResponsiveSetting(settings, 'type') === 'horizontal' ? 'right' : 'bottom'\r\n    }: ${gap}}`;\r\n  }\r\n  styles += '}';\r\n  styles += `.altrp-element${elementId} .altrp-menu{`;\r\n  let menuBg = getResponsiveSetting(settings, 'menu_bg');\r\n  if (menuBg && menuBg.color) {\r\n    styles += `background-color: ${menuBg.color};`;\r\n  }\r\n  styles += '}';\r\n  /**\r\n   * стили для ховера\r\n   * @type {string}\r\n   */\r\n  styles += `.altrp-element${elementId}.altrp-widget_menu:hover {`; // было .altrp-portal${elementId} .altrp-menu:hover\r\n\r\n  menu_radius = getResponsiveSetting(settings, 'menu_radius', ':hover');\r\n  if (menu_radius) {\r\n    styles += dimensionsControllerToStyles(menu_radius, 'border-radius');\r\n  }\r\n\r\n  styles += '}';\r\n  let renderButton = getResponsiveSetting(settings, 'button');\r\n  if (renderButton) {\r\n    styles += `.altrp-portal_main.altrp-portal${elementId} .altrp-menu{`;\r\n    let mainPortalWidth = getResponsiveSetting(settings, 'width');\r\n    if (mainPortalWidth) {\r\n      styles += `max-width:${mainPortalWidth};width:${mainPortalWidth};`;\r\n    }\r\n    styles += '}';\r\n  }\r\n  return styles;\r\n}}\r\n  .altrp-menu-item__icon svg {\r\n    display: block;\r\n    height: 20px;\r\n    width: 20px;\r\n  }\r\n`;\r\n\r\nclass MenuWidget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n\r\n    if (window.elementDecorator) {\r\n      window.elementDecorator(this);\r\n    }\r\n    if (props.baseRender) {\r\n      this.render = props.baseRender(this);\r\n    }\r\n    this.elementId = props.element.getId();\r\n  }\r\n\r\n  getMenuData = async () => {\r\n    let menuGUID = this.props.element.getResponsiveSetting('menu')\r\n    if (this.state.menuData || this.loading || !menuGUID) {\r\n      return\r\n    }\r\n    this.loading = true;\r\n    const menus = appStore.getState().altrpMenus;\r\n    let menuData = menus.find(menu => menu.guid === menuGUID)\r\n    if (!menuData) {\r\n      menuData = await getMenuByGUID(menuGUID);\r\n      menuData.children = mbParseJSON(menuData.children)\r\n      menuData.settings = mbParseJSON(menuData.settings)\r\n      appStore.dispatch(addMenu(menuData));\r\n    }\r\n    this.setState(state => ({...state, menuData}), () => {\r\n      this.loading = false;\r\n    })\r\n  }\r\n\r\n  renderHorizontalMenu() {\r\n    this.getMenuData();\r\n    const {menuData} = this.state;\r\n    if (!menuData) {\r\n      return 'Select Menu';\r\n    }\r\n    return <ButtonGroup fill={true} alignText=\"left\">\r\n      {menuData.children.map(item => {\r\n        return <Button\r\n          minimal={true}\r\n          icon={<span className=\"altrp-menu-item__icon\" dangerouslySetInnerHTML={{__html: item.icon}}/>}\r\n          rightIcon=\"caret-down\"\r\n          text={item.label}\r\n          href={item.url}\r\n          key={item.id}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            if (isEditor() || !this.props.history) {\r\n              window.location.href = item.url\r\n              return\r\n            }\r\n            this.props.history.push(item.url);\r\n          }}/>\r\n      })}\r\n\r\n    </ButtonGroup>\r\n  }\r\n\r\n  renderVerticalMenu() {\r\n    this.getMenuData();\r\n    const {menuData} = this.state;\r\n    if (!menuData) {\r\n      return 'Select Menu';\r\n    }\r\n    return <Menu className={this.getMenuClasses()}>\r\n      {/*{menuData.children.map(child)}*/}\r\n      {this.renderSubItems(menuData.children, 1)}\r\n    </Menu>\r\n  }\r\n\r\n  /**\r\n   * @return {string}\r\n   */\r\n  getMenuClasses = () => {\r\n    let classes = ['altrp-menu'];\r\n\r\n    return classes.join(' ');\r\n  }\r\n  /**\r\n   *\r\n   * @param {[]} items\r\n   * @param {int} depth\r\n   * @return {JSX.Element|null}\r\n   */\r\n  renderSubItems = (items, depth) => {\r\n    if (!items.length) {\r\n      return null;\r\n    }\r\n    const {element} = this.props;\r\n    const popoverProps = {\r\n      usePortal: true,\r\n      // isOpen:true ,\r\n      portalClassName: `altrp-portal altrp-portal${this.elementId}`,\r\n      portalContainer: window.EditorFrame ? window.EditorFrame.contentWindow.document.body : document.body,\r\n    };\r\n    let renderButton = this.props.element.getResponsiveSetting('button');\r\n\r\n    if (depth === 1 && element.getResponsiveSetting('type') === 'horizontal' && !renderButton) {\r\n      popoverProps.position = Position.BOTTOM_LEFT;\r\n    }\r\n    return <>\r\n      {items.map((item) => {\r\n        return <MenuItem\r\n          popoverProps={popoverProps}\r\n          depth={depth}\r\n          href={item.url}\r\n          width={100}\r\n          className={`altrp-menu-item altrp-menu-item${this.elementId}`}\r\n          key={item.id}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            if (isEditor() || !this.props.history) {\r\n              window.location.href = item.url\r\n              return\r\n            }\r\n            this.props.history.push(item.url);\r\n          }}\r\n          icon={<span className=\"altrp-menu-item__icon\" dangerouslySetInnerHTML={{__html: item.icon}}/>}\r\n          // text={<Link className=\"altrp-menu-item__link\" to={item.url}>{item.label}</Link>}>\r\n          text={item.label}>\r\n          {this.renderSubItems(item.children, depth + 1)}\r\n        </MenuItem>\r\n\r\n      })}\r\n    </>\r\n  }\r\n\r\n\r\n  renderButton = () => {\r\n    const {menuData} = this.state;\r\n    if (!menuData) {\r\n      return null;\r\n    }\r\n    let toggle_icon = _.get(menuData, 'settings.toggle_icon', '')\r\n    return <Popover2 content={this.renderVerticalMenu()}\r\n                     className=\"altrp-popover\"\r\n                     portalContainer={window.EditorFrame ? window.EditorFrame.contentWindow.document.body : document.body}\r\n                     portalClassName={`altrp-portal altrp-portal_main altrp-portal${this.elementId}`}\r\n                     minimal={true}>\r\n      <Button className=\"altrp-menu-toggle\" text={toggle_icon ?\r\n        <span className=\"altrp-menu-item__icon\" dangerouslySetInnerHTML={{__html: toggle_icon}}/> : ''}/>\r\n    </Popover2>\r\n  }\r\n\r\n  render() {\r\n    this.getMenuData();\r\n    let type = this.props.element.getResponsiveSetting('type');\r\n    let renderButton = this.props.element.getResponsiveSetting('button');\r\n    if (renderButton) {\r\n      return <>\r\n        <GlobalStyles {...this.props} settings={this.props.element.getSettings()} elementId={this.elementId}/>\r\n        {this.renderButton()}\r\n      </>\r\n    }\r\n    switch (type) {\r\n      case 'horizontal': {\r\n        return <>\r\n          <GlobalStyles {...this.props} settings={this.props.element.getSettings()} elementId={this.elementId}/>\r\n          {this.renderVerticalMenu()}\r\n        </>\r\n      }\r\n      default: {\r\n        return <>\r\n          <GlobalStyles {...this.props} settings={this.props.element.getSettings()} elementId={this.elementId}/>\r\n          {this.renderVerticalMenu()}\r\n        </>;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default MenuWidget\r\n","export const ADD_MENU = 'ADD_MENU';\r\n/**\r\n *\r\n * @param {{}} menu\r\n * @return {{}} -\r\n *   {\r\n *     type: {string},\r\n *     menu: {},\r\n *   }\r\n */\r\nexport function addMenu(menu) {\r\n  return {\r\n    type: ADD_MENU,\r\n    menu,\r\n  };\r\n}\r\n"],"sourceRoot":""}