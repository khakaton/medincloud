{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/classes/AltrpModel.js","webpack:///./resources/modules/editor/src/js/components/widgets/ListWidget.js"],"names":["AltrpModel","data","this","cloneDeep","clone","isEmpty","name","defaultValue","get","has","value","getData","set","unset","window","globalDefaults","push","ListWidget","props","state","settings","element","getSettings","component","elementDecorator","baseRender","render","list","ul_classes","divider","position_css_classes","layout_meta_data","li_styles","space_between_list_style","marginTop","size","marginBottom","marginLeft","marginRight","divider_classes","divider_switcher_list_style","className","repeater_meta_data_section","map","li","idx","li_container","li_label","li_classes","li_icon_classes","li_icon_x","position_relative_x_custom_repeater","li_icon_y","position_relative_y_custom_repeater","link_icon","link_url","link_newTab","link_noFollow","link_custom_repeater","url","openInNew","noFollow","li_icon_styles","position_relative_switcher_custom_repeater","left","unit","top","vertical_alignment_icon_repeater","li_icon","icon_select_repeater","style","renderAssetIcon","icon_repeater","link_switcher_custom_repeater","hover_all_switcher_custom_repeater","type_repeater","custom_repeater","key","href","target","rel","Component"],"mappings":"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","file":"ListWidget.bf73e245e0912b4edc16.bundle.js","sourcesContent":["/**\r\n * Имеет интерфейс для доступы к свойствам data (любой вложенности)\r\n * @class AltrpModel\r\n */\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport get from 'lodash.get';\r\nimport set from 'lodash.set';\r\nimport has from 'lodash.has';\r\nimport unset from 'lodash.unset';\r\nimport isEmpty from 'lodash.isempty';\r\n// import {cloneDeep, get, set, has, unset, isString, isEmpty} from \"lodash\";\r\n\r\nclass AltrpModel {\r\n  constructor(data = {}) {\r\n    this.data = cloneDeep(data);\r\n  }\r\n\r\n  /**\r\n   * Возваращает объект данных\r\n   * @params {boolean} clone - клонировать или ссылку на данные\r\n   * @return {{}}\r\n   */\r\n  getData(clone = true) {\r\n    if(clone){\r\n      return cloneDeep(this.data);\r\n    }\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Пустой ли объект\r\n   */\r\n  isEmpty(){\r\n    return isEmpty(this.data);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  getProperty(name, defaultValue = '') {\r\n    return get(this.data, name, defaultValue);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  hasProperty(name, defaultValue = '') {\r\n    return has(this.data, name);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {{}}\r\n   */\r\n  setProperty(name, value = '') {\r\n    if(value instanceof AltrpModel){\r\n      value = value.getData(false);\r\n    }\r\n    return set(this.data, name, value);\r\n  }\r\n  /**\r\n   * Удаляет свойства name\r\n   * @params {string} name\r\n   * @return {*}\r\n   */\r\n  unsetProperty(name) {\r\n    return unset(this.data, name);\r\n  }\r\n}\r\nwindow.AltrpModel = AltrpModel;\r\nexport default AltrpModel\r\n","import {renderAssetIcon} from \"../../../../../front-app/src/js/helpers\";\r\n\r\n(window.globalDefaults = window.globalDefaults || []).push(`\r\n  .altrp-list-ul {\r\n    padding: 0;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    display: flex;\r\n  }\r\n\r\n  .altrp-list-li {\r\n    list-style: none;\r\n    display: flex;\r\n    position: relative;\r\n    justify-items: center;\r\n  }\r\n\r\n  .altrp-list-ul-inline {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  .altrp-list-ul-inline .altrp-list-label-content {\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .altrp-list-ul-inline .altrp-list-li:first-child .altrp-list-li-content {\r\n    margin-left: 0 !important;\r\n  }\r\n\r\n  .altrp-list-ul-default .altrp-list-li:first-child .altrp-list-li-content {\r\n    margin-top: 0 !important;\r\n  }\r\n\r\n  .altrp-list-ul-inline .altrp-list-li:last-child .altrp-list-li-content {\r\n    margin-right: 0 !important;\r\n  }\r\n\r\n  .altrp-list-ul-default .altrp-list-li:last-child .altrp-list-li-content {\r\n    margin-bottom: 0 !important;\r\n  }\r\n\r\n  .altrp-list-ul-default {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .altrp-list-icon svg {\r\n    width: inherit;\r\n    height: inherit;\r\n  }\r\n\r\n  .altrp-list-icon-top {\r\n    margin-bottom: auto;\r\n  }\r\n\r\n  .altrp-list-icon-center {\r\n    margin-bottom: auto;\r\n    margin-top: auto;\r\n  }\r\n\r\n  .altrp-list-icon-bottom {\r\n    margin-top: auto;\r\n  }\r\n\r\n  .altrp-list-icon-relative {\r\n    position: relative;\r\n  }\r\n\r\n  .altrp-list-li-divider-default {\r\n    position: absolute;\r\n    border-top-style: solid;\r\n    border-top-width: 1px;\r\n    bottom: 0;\r\n  }\r\n\r\n  .altrp-list-li-divider {\r\n    width: 100%\r\n  }\r\n\r\n  .altrp-list-li:last-child .altrp-list-li-divider-default {\r\n    border-top: none;\r\n  }\r\n\r\n  .altrp-list-li:last-child .altrp-list-li-divider-inline {\r\n    border-right: none;\r\n  }\r\n\r\n  .altrp-list-li-content {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-items: center;\r\n  }\r\n\r\n  .altrp-list-icon {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .altrp-list-icon, .altrp-list-icon svg {\r\n    height: 25px;\r\n    width: 25px;\r\n  }\r\n`);\r\n\r\nclass ListWidget extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      settings: props.element.getSettings()\r\n    };\r\n    props.element.component = this;\r\n    if (window.elementDecorator) {\r\n      window.elementDecorator(this);\r\n    }\r\n    if(props.baseRender){\r\n      this.render = props.baseRender(this);\r\n    }\r\n  }\r\n\r\n  render(){\r\n    let list = null;\r\n    let ul_classes = null;\r\n    let divider = \"\";\r\n    const { position_css_classes } = this.state.settings;\r\n\r\n    ul_classes += this.state.settings.layout_meta_data == \"inline\" ? \" altrp-list-ul-inline\" : \" altrp-list-ul-default\";\r\n\r\n    if (position_css_classes) {\r\n      ul_classes += \" \" + position_css_classes;\r\n    }\r\n    let li_styles = {};\r\n\r\n    if(this.state.settings.layout_meta_data != \"inline\") {\r\n      if(this.state.settings.space_between_list_style) {\r\n        li_styles = {\r\n          marginTop: this.state.settings.space_between_list_style.size + \"px\",\r\n          marginBottom: this.state.settings.space_between_list_style.size + \"px\"\r\n        }\r\n      }\r\n    }else {\r\n      if(this.state.settings.space_between_list_style) {\r\n        li_styles = {\r\n          marginLeft: this.state.settings.space_between_list_style.size + \"px\",\r\n          marginRight: this.state.settings.space_between_list_style.size + \"px\"\r\n        }\r\n      }\r\n    };\r\n\r\n    let divider_classes = this.state.settings.layout_meta_data == \"inline\" ? \"altrp-list-li-divider-inline\" : \"altrp-list-li-divider-default\";\r\n    if(this.state.settings.divider_switcher_list_style) {\r\n      divider = <div className={\"altrp-list-li-divider \" + divider_classes}>\r\n      </div>\r\n    }\r\n\r\n    if(this.state.settings.repeater_meta_data_section) {\r\n      list = this.state.settings.repeater_meta_data_section.map((li, idx) => {\r\n        let li_container = null;\r\n        let li_label = null;\r\n        let li_classes = \"altrp-list-li \";\r\n        let li_icon_classes = \"\";\r\n        let li_icon_x = li.position_relative_x_custom_repeater;\r\n        let li_icon_y = li.position_relative_y_custom_repeater;\r\n        let link_icon = \"\";\r\n        let link_url = \"\";\r\n        let link_newTab = \"\";\r\n        let link_noFollow = \"\";\r\n\r\n        if(li.link_custom_repeater) {\r\n          if(li.link_custom_repeater.url) {\r\n            link_url = li.link_custom_repeater.url;\r\n          };\r\n          if(li.link_custom_repeater.openInNew) {\r\n            link_newTab = \"_blank\"\r\n          };\r\n          if(!li.link_custom_repeater.noFollow) {\r\n            link_noFollow = \"nofollow\"\r\n          };\r\n        };\r\n\r\n        let li_icon_styles = {};\r\n\r\n        if(li.position_relative_switcher_custom_repeater) {\r\n          if(li_icon_x) {\r\n            li_icon_styles = {\r\n              ...li_icon_styles,\r\n              left: li_icon_x.size + li_icon_x.unit\r\n            };\r\n          };\r\n\r\n        if(li_icon_y) {\r\n          li_icon_styles = {\r\n            ...li_icon_styles,\r\n            top: li_icon_y.size + li_icon_y.unit\r\n          };\r\n        };\r\n      };\r\n\r\n        li_icon_classes = li.position_relative_switcher_custom_repeater ? \"altrp-list-icon-relative\" : li_icon_classes;\r\n        switch (li.vertical_alignment_icon_repeater) {\r\n          case \"top\":\r\n            li_icon_classes += \" altrp-list-icon-top\";\r\n            break;\r\n          case \"center\":\r\n            li_icon_classes += \" altrp-list-icon-center\";\r\n            break;\r\n          case \"bottom\":\r\n            li_icon_classes += \" altrp-list-icon-bottom\";\r\n            break;\r\n          default:\r\n            li_icon_classes += \" altrp-list-icon-center\";\r\n        }\r\n\r\n        let li_icon = li.icon_select_repeater == \"custom\" ?\r\n          <span className={\"altrp-list-icon \" + li_icon_classes} style={li_icon_styles}>\r\n            {renderAssetIcon(li.icon_repeater)}\r\n          </span> : null;\r\n\r\n        if(li.link_switcher_custom_repeater) {\r\n          if(!li.hover_all_switcher_custom_repeater) {\r\n            link_icon = li_icon\r\n          };\r\n        };\r\n\r\n        switch (li.type_repeater) {\r\n          case \"custom\":\r\n            li_label = <span className=\"altrp-list-label\">{li.custom_repeater}</span>;\r\n\r\n            li_classes = li_classes + \"altrp-list-custom\";\r\n\r\n            li_container = <li key={idx} className={li_classes}>\r\n              <div className=\"altrp-list-li-content\" style={li_styles}>\r\n                {link_icon}\r\n                {\r\n                  li.link_switcher_custom_repeater ? <a className=\"altrp-list-li-content altrp-list-li-link\" href={link_url} target={link_newTab} rel={link_noFollow}>\r\n                    {li.hover_all_switcher_custom_repeater ? li_icon : \"\"}\r\n                    {li_label}\r\n                  </a>\r\n                    : <div className=\"altrp-list-li-content\" style={li_styles}>\r\n                      {li_icon}\r\n                      {li_label}\r\n                    </div>\r\n                }\r\n              </div>\r\n              {divider}\r\n            </li>\r\n            break\r\n        };\r\n\r\n        return li_container\r\n\r\n      })\r\n    }\r\n\r\n    return <div className=\"altrp-list\">\r\n      <ul className={\"altrp-list-ul \" + ul_classes}>\r\n        {\r\n          list\r\n        }\r\n      </ul>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default ListWidget\r\n"],"sourceRoot":""}