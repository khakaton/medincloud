{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/AccordionComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/AdvancedComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/ButtonComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/CarouselComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/ColumnComponents.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/DashboardComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/DatePickerComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/DiagramComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/DividerComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/DropbarWidgetComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/FormComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/GalleryComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/ImageLightboxComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/InputCheckboxComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/InputDateComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/InputRadioComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/InputRangeSliderComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/InputSliderComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/ListComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/MapComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/MapConstructorComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/SectionWidgetComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/TabsSwitcherComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/VideoComponent.js","webpack:///./resources/modules/front-app/src/js/components/helpers/getInputFileStyles.js","webpack:///./resources/modules/front-app/src/js/components/helpers/getInputGalleryStyles.js","webpack:///./resources/modules/front-app/src/js/components/helpers/getInputSelectStyles.js","webpack:///./resources/modules/front-app/src/js/components/helpers/getInputTextCommonStyles.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheBreadcrumbs.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheHeadingTypeAnimating.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheHeadingTypeHeading.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheImage.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheMenu.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForThePosts.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheTable.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheTabs.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheText.js","webpack:///./resources/modules/front-app/src/js/functions/get-route-styles.js"],"names":["AccordionComponent","settings","styles","value","getResponsiveSetting","slider","sliderStyled","styledString","AdvancedComponent","size","color","btnStyles","ButtonComponent","stylesInString","backgroundColorActive","colorPropertyStyled","gradientActive","gradientStyled","backgroundImageActive","backgroundImageControllerToStyles","borderTypeActive","simplePropertyStyled","borderWidthActive","borderWidthStyled","borderColorActive","borderRadiusActive","sizeStyled","boxShadowActive","shadowControllerToStyles","typographicActive","typographicControllerToStyles","colorActive","backgroundColorSvgActive","fillColorSvgActive","strokeColorSvgActive","backgroundColorSvg","backgroundColorSvgHover","fillColorSvg","strokeColorSvg","fillColorSvgHover","strokeColorSvgHover","paddingIconRightBtn","dimensionsControllerToStyles","iconRightSizeBtn","iconSizeStyled","paddingIconLeftBtn","iconLeftSizeBtn","paddingIconTopBtn","iconTopSizeBtn","paddingIconBottomBtn","iconBottomSizeBtn","CarouselComponent","window","globalDefaults","push","altrpHelpers","flexWrap","flexDirection","align","justifyContent","overflow","backgroundColor","gradient","zIndex","borderType","borderWidth","borderColor","borderRadius","boxShadow","backgroundColorH","gradientH","borderTypeH","borderWidthH","borderColorH","borderRadiusH","boxShadowH","marginBottom","marginBottomH","backgroundImage","backgroundPosition","backgroundAttachment","backgroundRepeat","backgroundSizeInUnits","backgroundSize","backgroundImageH","backgroundPositionH","backgroundAttachmentH","backgroundRepeatH","backgroundSizeInUnitsH","backgroundSizeH","margin","padding","undefined","shadowStyled","DashboardComponent","style_font_typographic","family","_","isString","dashboardStyles","DatePickerComponent","elementId","DiagramComponent","DividerComponent","DropbarWidgetComponent","FormComponent","background_section_opacity","inputWrapperStyles","width","inputWrapperStyle","containerStyles","containerStyle","fieldStyles","typographic","placeholder_and_value_alignment_position_section","position_z_index","input_position","textarea_resize","justify_options","image_select_item_width","image_select_item_height","image_select_image_fit","image_select_image_position","cross_size","unit","fieldStyle","filedSelect2ControllerStyles","fieldSelect2ControlStyle","imageSelectLabelStyles","imageSelectLabel","fieldSelect2SingleValueStyles","fieldSelect2SingleValueStyle","fieldLabelContainerStyles","label_position_top","label_position_left","label_icon_position","fieldLabelContainerStyle","fieldLabelStyles","fieldLabel","labelIconStyles","iconSize","labelIconStyle","placeholderStyles","placeholderStyle","fieldLabelRequiredStyles","fieldLabelRequired","maskMismatchMessageStyles","id","maskMismatchMessage","select2Options","GalleryComponent","aspectRatio","def","defaultStyled","objectFit","height","opacity","filters","transitionDuration","animationDuration","backgroundSizeInUnit","aspect_ratio_size","parentClass","filtersControllerToStyles","opacityStyled","Number","fieldAlignment","backgroundColorHover","boxShadowHover","fontTypographic","fontColor","fontTypographicHover","fontColorHover","fontTypographicActive","fontColorActive","colorStyled","fieldStylesHover","fieldStyleHover","fieldStylesActive","fieldStyleActive","fieldStylesFocus","fieldStyleFocus","prefix","aligment","dotColor","dotSize","colorPickedHex","colorRGB","r","g","b","a","colorStyledSecond","InputRangeSliderComponent","thickness","InputSliderComponent","ListComponent","MapComponent","MapConstructorComponent","altrpSectionHover","borderStyle","state","SectionWidgetComponent","childrenLength","verticalAlign","gorizontalAlign","minHeight","altrpSection","altrpSectionColumn","positionTop","positionRight","positionLeft","positionBottom","altrpSectionSecond","altrpSectionSecondHover","altrpBackgroundImage","altrpBackgroundImageHover","altrpSectionBoxed","page_areas","length","altrpSectionSectionBoxed","altrpSectionFull","TabsSwitcherComponent","VideoComponent","getInputFileStyles","alignment","getInputGalleryStyles","columns","v_gap","getInputSelectStyles","button_gradient","getInputSelectPopoverStyles","getInputTextCommonStyles","colorIcon","icon_ml","icon_mr","delimiter","url","delimiter_width","delimiter_height","delimiter_ml","delimiter_mr","font","current_color","current_font","getHeadingTypeAnimatingStyles","justifyContentHeaddingSubHover","marginBottomForHorizontalHover","marginBottomForVerticalHover","marginBottomForRotateHover","typographicAnimating","colorAnimating","typographicAnimatingHover","colorAnimatingHover","typographicNoAnimating","colorNoAnimating","typographicNoAnimatingHover","colorNoAnimatingHover","strokeWidthAnimatingSvg","colorAnimatingSvg","strokeWidthAnimatingSvgHover","colorAnimatingSvgHover","getHeadingTypeHeadingStyles","justifyContentHeaddingSub","textShadowHeaddingSub","textShadowControllerToStyles","typographicHeaddingSub","paddingHeaddingSub","colorHeaddingSub","backgroundColorHeaddingSub","widthHeadingSub","textShadowHeaddingSubHover","typographicHeaddingSubHover","paddingHeaddingSubHover","colorHeaddingSubHover","backgroundColorHeaddingSubHover","widthHeadingSubHover","marginTop","marginTopHover","marginBottomHover","marginRight","marginRightHover","marginLeft","marginLeftHover","textAlignAdvancedWrapper","backgroundColorHeadingAdvanced","colorHeadingAdvanced","paddingHeadingAdvanced","typographicHeadingAdvanced","textShadowHeadingAdvanced","borderTypeHeadingAdvanced","borderWidthHeadingAdvanced","borderColorHeadingAdvanced","borderRadiusHeadingAdvanced","opacityHeadingAdvanced","backgroundColorHeadingAdvancedHover","colorHeadingAdvancedHover","paddingHeadingAdvancedHover","typographicHeadingAdvancedHover","textShadowHeadingAdvancedHover","borderTypeHeadingAdvancedHover","borderWidthHeadingAdvancedHover","borderColorHeadingAdvancedHover","borderRadiusHeadingAdvancedHover","opacityHeadingAdvancedHover","marginBottomForHorizontal","marginBottomForVertical","marginBottomForRotate","textShadow","transform","translateStyled","colorLinkHover","colorHover","typographicHover","textShadowHover","marginHover","paddingHover","zIndexHover","opacityHover","gradientHover","borderTypeHover","borderWidthHover","borderColorHover","borderRadiusHover","transformHover","backgroundImageHover","backgroundPositionHover","backgroundAttachmentHover","backgroundRepeatHover","backgroundSizeInUnitsHover","backgroundSizeHover","renderButton","buttonBg","buttonColor","buttonPadding","border","getPostsStyles","flexDirectionPaginPrev","marginPaginPrev","paddingPaginPrev","colorPaginPrev","typographicPaginPrev","borderTypePaginPrev","borderWidthPaginPrev","borderColorPaginPrev","borderRadiusPaginPrev","boxShadowPaginPrev","flexDirectionPaginPrevHover","marginPaginPrevHover","paddingPaginPrevHover","colorPaginPrevHover","typographicPaginPrevHover","borderTypePaginPrevHover","borderWidthPaginPrevHover","borderColorPaginPrevHover","borderRadiusPaginPrevHover","boxShadowPaginPrevHover","marginPaginPrevSvgImg","marginPaginPrevSvgImgHover","sizePaginPrevSvg","sizePaginPrevSvgHover","heightPaginPrevImg","heightPaginPrevImgHover","fillPaginPrevPath","fillPaginPrevPathHover","flexDirectionPaginNext","marginPaginNext","paddingPaginNext","colorPaginNext","typographicPaginNext","borderTypePaginNext","borderWidthPaginNext","borderColorPaginNext","borderRadiusPaginNext","boxShadowPaginNext","flexDirectionPaginNextHover","marginPaginNextHover","paddingPaginNextHover","colorPaginNextHover","typographicPaginNextHover","borderTypePaginNextHover","borderWidthPaginNextHover","borderColorPaginNextHover","borderRadiusPaginNextHover","boxShadowPaginNextHover","marginPaginNextSvgImg","marginPaginNextSvgImgHover","sizePaginNextSvg","sizePaginNextSvgHover","heightPaginNextImg","heightPaginNextImgHover","fillPaginNextPath","fillPaginNextPathHover","marginPaginCount","backgroundColorPaginCount","paddingPaginCount","marginPaginCountHover","backgroundColorPaginCountHover","paddingPaginCountHover","colorPaginCountPagesItem","colorPaginCountPagesItemHover","marginPaginPagesItem","backgroundColorPaginPagesItem","borderTypePaginPagesItem","borderWidthPaginPagesItem","borderRadiusPaginPagesItem","borderColorPaginPagesItem","boxShadowPaginPagesItem","marginPaginPagesItemHover","backgroundColorPaginPagesItemHover","borderTypePaginPagesItemHover","borderWidthPaginPagesItemHover","borderRadiusPaginPagesItemHover","borderColorPaginPagesItemHover","boxShadowPaginPagesItemHover","colorActivePaginPagesItem","backgroundColorActivePaginPagesItem","borderColorActivePaginPagesItem","colorActivePaginPagesItemHover","backgroundColorActivePaginPagesItemHover","borderColorActivePaginPagesItemHover","typographicPaginPaginPagesItem","typographicPaginPaginPagesItemHover","marginPaginEllipsis","colorPaginEllipsis","typographicPaginEllipsis","marginPaginEllipsisHover","colorPaginEllipsisHover","typographicPaginEllipsisHover","marginPaginGotoPage","paddingPaginGotoPage","colorPaginGotoPage","backgroundColorPaginGotoPage","borderTypePaginGotoPage","borderWidthPaginGotoPage","borderColorPaginGotoPage","borderRadiusPaginGotoPage","boxShadowPaginGotoPage","marginPaginGotoPageHover","paddingPaginGotoPageHover","colorPaginGotoPageHover","backgroundColorPaginGotoPageHover","borderTypePaginGotoPageHover","borderWidthPaginGotoPageHover","borderColorPaginGotoPageHover","borderRadiusPaginGotoPageHover","boxShadowPaginGotoPageHover","paddingPosts","paddingPostsHover","paddingPaginPages","paddingPaginPagesHover","typographicPaginPaginGotoPages","typographicPaginPaginGotoPagesHover","typographicPaginPaginPagesItemCountPrev","typographicPaginPaginPagesItemCountPrevHover","marginPaginSelectSize","marginPaginSelectSizeHover","paddingPaginSelectSizeControl","paddingPaginSelectSizeControlHover","typographicPaginPaginSelectSize","typographicPaginPaginSelectSizeHover","borderTypePaginSelect2Control","borderWidthPaginSelect2Control","borderRadiusPaginSelect2Control","borderColorPaginSelect2Control","boxShadowPaginSelect2Control","colorPaginSelect2Control","backgroundColorPaginSelect2Control","borderTypePaginSelect2ControlHover","borderWidthPaginSelect2ControlHover","borderRadiusPaginSelect2ControlHover","borderColorPaginSelect2ControlHover","boxShadowPaginSelect2ControlHover","colorPaginSelect2ControlHover","backgroundColorPaginSelect2ControlHover","getTableStyles","flexDirectionHover","marginPaginationSvg","marginPaginationSvgHover","iconSizeHover","iconSizeNextImg","iconSizeNextImgHover","iconFillNextPath","iconFillNextPathHover","flexDirectionPaginationPrev","marginPaginationPrev","flexDirectionPaginationPrevHover","marginPaginationPrevHover","marginPrevSvg","iconSizePrevSvg","marginPrevSvgHover","iconSizePrevSvgHover","iconSizePrevImg","iconSizePrevImgHover","iconFillPrevPath","iconFillPrevPathHover","colorReplaceText","typographicReplaceText","colorReplaceTextHover","typographicReplaceTextHover","widthPictureReplacePicture","heightReplacePicture","paddingGroupedColumn","paddingGroupedColumnHover","iconFillTableThPath","iconFillTableThPathHover","iconSizeGroupedColumnSvgImg","iconSizeGroupedColumnSvgImgHover","paddingNotGroupedColumn","paddingNotGroupedColumnHover","iconFillNotGroupedColumnPath","iconFillNotGroupedColumnPathHover","iconSizeNotGroupedColumnSvgImg","iconSizeNotGroupedColumnSvgImgHover","paddingExpandedRow","paddingExpandedRowHover","iconFillExpandedRowPath","iconFillExpandedRowPathHover","iconSizeExpandedRowSvgImg","iconSizeExpandedRowSvgImgHover","paddingNotExpandedRow","paddingNotExpandedRowHover","iconFillNotExpandedRowPath","iconFillNotExpandedRowPathHover","iconSizeNotExpandedRowSvgImg","iconSizeNotExpandedRowSvgImgHover","colorThNthChild","colorThNthChildHover","colorFieldSelect2ControlBtn","backgroundColorFieldSelect2ControlBtn","inputPaddingFieldSelect2ControlBtn","typographicFieldSelect2ControlBtn","borderTypeFieldSelect2ControlBtn","borderWidthFieldSelect2ControlBtn","borderColorFieldSelect2ControlBtn","colorFieldSelect2ControlBtnHover","backgroundColorFieldSelect2ControlBtnHover","inputPaddingFieldSelect2ControlBtnHover","typographicFieldSelect2ControlBtnHover","borderTypeFieldSelect2ControlBtnHover","borderWidthFieldSelect2ControlBtnHover","borderColorFieldSelect2ControlBtnHover","labelPaddingLabel","labelPaddingLabelHover","textAlignTableTh","typographicTableTh","colorTableTh","paddingTableTh","borderTypeTableTh","borderColorTableTh","borderWidthTableTh","backgroundColorTableTh","textAlignTableThHover","typographicTableThHover","colorTableThHover","paddingTableThHover","borderTypeTableThHover","borderColorTableThHover","borderWidthTableThHover","backgroundColorTableThHover","backgroundColorTableHead","backgroundColorTableHeadHover","borderWidthTableThNotFirstChild","marginTopLeftStyled","borderWidthTableThNotFirstChildHover","borderWidthTableTrNotFirstChild","borderWidthTableTrNotFirstChildHover","verticalAlignDivNotAltrpElement","verticalAlignDivNotAltrpElementHover","textAlignTableTd","paddingTableTd","borderTypeTableTd","borderColorTableTd","colorTableTd","typographicTableTd","borderWidthTableTd","textAlignTableTdHover","paddingTableTdHover","borderTypeTableTdHover","borderColorTableTdHover","colorTableTdHover","typographicTableTdHover","borderWidthTableTdHover","colorTableTdA","typographicTableTdA","colorTableTdAHover","typographicTableTdAHover","backgroundColorTbodyBackground","backgroundColorTbodyBackgroundHover","borderWidthTransposeTableTdNot","borderWidthTransposeTableTdNotHover","borderWidthTransposeTableTdNotTd","borderWidthTransposeTableTdNotTdHover","colorTdGrouping","typographicTdGrouping","paddingTdGrouping","colorTdGroupingHover","typographicTdGroupingHover","paddingTdGroupingHover","backgroundColorTbodyTdGrouping","textAlignTbodyTdGrouping","backgroundColorTbodyTdGroupingHover","textAlignTbodyTdGroupingHover","verticalAlignDivNotAltrpElTd","verticalAlignDivNotAltrpElTdHover","iconSizeTdGroupingIconSvg","iconLeftSpaceTdGroupingIconSvg","iconRightSpaceTdGroupingIconSvg","iconTopTranslateTdGroupingIconSvg","iconLeftTranslateTdGroupingIconSvg","iconSizeTdGroupingIconSvgHover","iconLeftSpaceTdGroupingIconSvgHover","iconRightSpaceTdGroupingIconSvgHover","iconTopTranslateTdGroupingIconSvgHover","iconLeftTranslateTdGroupingIconSvgHover","iconFillTdGroupingIconSvgPath","iconFillTdGroupingIconSvgPathHover","paddingTableFootTd","textAlignTableFootTd","backgroundColorTableFootTd","colorTableFootTd","typographicTableFootTd","paddingTableFootTdHover","textAlignTableFootTdHover","backgroundColorTableFootTdHover","colorTableFootTdHover","typographicTableFootTdHover","paddingGlobalFilterLabel","colorGlobalFilterLabel","typographicGlobalFilterLabel","paddingGlobalFilterLabelHover","colorGlobalFilterLabelHover","typographicGlobalFilterLabelHover","paddingGlobalFilterInput","widthGlobalFilterInput","marginLeftGlobalFilterInput","colorGlobalFilterInput","backgroundColorGlobalFilterInput","typographicGlobalFilterInput","borderTypeGlobalFilterInput","borderWidthGlobalFilterInput","borderRadiusGlobalFilterInput","borderColorGlobalFilterInput","boxShadowGlobalFilterInput","paddingGlobalFilterInputHover","widthGlobalFilterInputHover","marginLeftGlobalFilterInputHover","colorGlobalFilterInputHover","backgroundColorGlobalFilterInputHover","typographicGlobalFilterInputHover","borderTypeGlobalFilterInputHover","borderWidthGlobalFilterInputHover","borderRadiusGlobalFilterInputHover","borderColorGlobalFilterInputHover","boxShadowGlobalFilterInputHover","paddingPagination","paddingPaginationHover","typographicPaginationPrev","typographicPaginationPrevHover","typographicPaginationNext","typographicPaginationNextHover","typographicPaginationPagesItem","typographicPaginationPagesItemHover","colorPaginationPrevNext","backgroundColorPaginationPrevNext","paddingPaginationPrevNext","borderTypePaginationPrevNext","borderWidthPaginationPrevNext","borderRadiusPaginationPrevNext","borderColorPaginationPrevNext","boxShadowPaginationPrevNext","colorPaginationPrevNextHover","backgroundColorPaginationPrevNextHover","paddingPaginationPrevNextHover","borderTypePaginationPrevNextHover","borderWidthPaginationPrevNextHover","borderRadiusPaginationPrevNextHover","borderColorPaginationPrevNextHover","boxShadowPaginationPrevNextHover","typographicNextItemCountPrevGotoSelect","typographicNextItemCountPrevGotoSelectHover","marginPaginationCount","colorPaginationCount","backgroundColorPaginationCount","paddingPaginationCount","marginPaginationCountHover","colorPaginationCountHover","backgroundColorPaginationCountHover","paddingPaginationCountHover","marginPaginationEllipsis","colorPaginationEllipsis","typographicPaginationEllipsis","marginPaginationEllipsisHover","colorPaginationEllipsisHover","typographicPaginationEllipsisHover","marginPaginationGotoPages","paddingPaginationGotoPages","colorPaginationGotoPages","backgroundColorPaginationGotoPages","borderTypePaginationGotoPages","borderWidthPaginationGotoPages","borderRadiusPaginationGotoPages","borderColorPaginationGotoPages","boxShadowPaginationGotoPages","marginPaginationGotoPagesHover","paddingPaginationGotoPagesHover","colorPaginationGotoPagesHover","backgroundColorPaginationGotoPagesHover","borderTypePaginationGotoPagesHover","borderWidthPaginationGotoPagesHover","borderRadiusPaginationGotoPagesHover","borderColorPaginationGotoPagesHover","boxShadowPaginationGotoPagesHover","widthPaginSelectSizeControl","borderTypePaginSelectSizeControl","borderWidthPaginSelectSizeControl","borderRadiusPaginSelectSizeControl","borderColorPaginSelectSizeControl","boxShadowPaginSelectSizeControl","colorPaginSelectSizeControl","backgroundColorPaginSelectSizeControl","widthPaginSelectSizeControlHover","borderTypePaginSelectSizeControlHover","borderWidthPaginSelectSizeControlHover","borderRadiusPaginSelectSizeControlHover","borderColorPaginSelectSizeControlHover","boxShadowPaginSelectSizeControlHover","colorPaginSelectSizeControlHover","backgroundColorPaginSelectSizeControlHover","typographicPaginSelectSize","marginCheckIconSvg","sizeCheckIconSvg","marginCheckIconSvgHover","sizeCheckIconSvgHover","marginUncheckIconSvg","sizeUncheckIconSvg","marginUncheckIconSvgHover","sizeUncheckIconSvgHover","marginCheckIconIndeterminateSvg","sizeCheckIconIndeterminateSvg","marginCheckIconIndeterminateSvgHover","sizeCheckIconIndeterminateSvgHover","iconFillCheckIconCheckedPath","iconFillCheckIconCheckedPathHover","iconFillCheckIconUncheckedPath","iconFillCheckIconUncheckedPathHover","iconFillCheckIconIndeterminatePath","iconFillCheckIconIndeterminatePathHover","sliderSizeTableResizer","backgroundColorTableResizer","sliderSizeTableResizerHover","backgroundColorTableResizerHover","backgroundColorTableResizerResizing","backgroundColorTableResizerResizingHover","filtersImage","filtersImageHover","fill","i_size","contentBackgroundColor","contentPadding","contentBorderType","contentBorderWidth","contentBorderColor","contentBorderRadius","indicatorColor","getTextStyles","columnCount","columnGap","columnGapStyled","borderRadiusStyled","columnCountHover","borderStyleHover","FRONT_DEFAULT_AREAS","getRouteStyles","areas","isArray","filter","area","indexOf","columnsGrid","rightSidebar","find","area_type","sidebar_location","leftSidebar","sidebar_width","contentRow","get","getCustomCSS","getSetting"],"mappings":"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","file":"6698.4ab96c0049d3643441b7.bundle.js","sourcesContent":["import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function AccordionComponent(settings) {\r\n  const styles = [\r\n    \"altrp-accordion-item-label\",\r\n\r\n    [\"\", \"font_typographic_title_style\", \"typographic\"],\r\n    [\"text-align\", \"alignment_item_style\"],\r\n    [\"color\", \"color_title_style\", \"color\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"spacing_icon_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `margin-left: ${slider}; margin-right: ${slider};`\r\n      }\r\n    },\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-content\",\r\n\r\n    [\"background-color\", \"background_color_content_style\", \"color\"],\r\n    [\"color\", \"color_content_style\", \"color\"],\r\n    [\"border-radius\", \"border_radius_content_style\", \"dimensions\"],\r\n    [\"text-align\", \"alignment_item_style\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-content-show\",\r\n\r\n    [\"padding\", \"padding_content_style\", \"dimensions\"],\r\n    [\"margin-top\", \"spacing_content_style\", \"slider\"],\r\n    [\"\", \"typographic_content_style\", \"typographic\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item\",\r\n\r\n    [\"margin-top\", \"spacing_item_style\", \"slider\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-button\",\r\n\r\n    [\"flex-direction\", \"alignment_icon_style\"],\r\n    [\"background-color\", \"background_color_title_style\", \"color\"],\r\n    [\"border-style\", \"border_type_title_style\"],\r\n    [\"border-width\", \"border_width_title_style\", \"dimensions\"],\r\n    [\"border-color\", \"border_color_title_style\", \"color\"],\r\n    [\"border-radius\", \"border_radius_title_style\", \"dimensions\"],\r\n    [\"padding\", \"padding_title_style\", \"dimensions\"],\r\n    [\"\", \"box_shadow_title_style\", \"shadow\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-icon path\",\r\n\r\n    [\"fill\", \"color_icon_style\", \"color\"],\r\n\r\n    \"}\",\r\n\r\n\r\n    \"altrp-accordion-item-button:hover .altrp-accordion-item-label\",\r\n\r\n    [\"color\", \"color_title_style\", \"color\", \":hover\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"spacing_icon_style\", \":hover\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `margin-left: ${slider}; margin-right: ${slider};`\r\n      } else {\r\n        return \"\"\r\n      }\r\n    },\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-content:hover\",\r\n\r\n    [\"background-color\", \"background_color_content_style\", \"color\", \":hover\"],\r\n    [\"color\", \"color_content_style\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border_radius_content_style\", \"dimensions\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-content-show:hover\",\r\n    [\"margin-top\", \"spacing_content_style\", \"slider\", \":hover\"],\r\n    [\"\", \"typographic_content_style\", \"typographic\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-button:hover\",\r\n\r\n    [\"background-color\", \"background_color_title_style\", \"color\", \":hover\"],\r\n    [\"border-style\", \"border_type_title_style\", null, \":hover\"],\r\n    [\"border-width\", \"border_width_title_style\", \"dimensions\", \":hover\"],\r\n    [\"border-color\", \"border_color_title_style\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border_radius_title_style\", \"dimensions\", \":hover\"],\r\n    [\"\", \"box_shadow_title_style\", \"shadow\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-button:hover .altrp-accordion-item-icon path\",\r\n\r\n    [\"fill\", \"color_icon_style\", \"color\", \":hover\"],\r\n\r\n    \"}\",\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function AdvancedComponent(settings) {\r\n\r\n  const styles = [\r\n    [\"z-index\", \"z_index\"],\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"advanced_opacity\");\r\n\r\n      if(value && value.size) {\r\n        return `opacity: ${value.size};`\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    // () => {\r\n    //   let element_css_editor = getResponsiveSetting(settings, \"element_css_editor\");\r\n    //   console.log(element_css_editor);\r\n    //   return _.isString(element_css_editor) ? element_css_editor.replace(/__selector__/g, '&') : '';\r\n    // },\r\n\r\n    [\"padding\", \"positioning_padding\", \"dimensions\"],\r\n    [\"margin\", \"positioning_margin\", \"dimensions\"],\r\n\r\n    [\"width\", \"positioning_width_type\"],\r\n    [\"width\", \"positioning_custom_width\", \"slider\"],\r\n\r\n    [\"align-self\", \"positioning_vertical_align\"],\r\n\r\n    [\"position\", \"positioning_position_type\", \"\", \"\"],\r\n\r\n    [\"left\", \"positioning_horizontal_offset\", \"slider\"],\r\n    [\"bottom\", \"positioning_vertical_offset\", \"slider\"],\r\n\r\n    \"& > .altrp-tooltip\",\r\n      [\"padding\", \"tooltip_position_padding\", \"dimensions\"],\r\n      [\"left\", \"tooltip_horizontal_offset\", \"slider\"],\r\n      [\"bottom\", \"tooltip_vertical_offset\", \"slider\"],\r\n      [\"\", \"tooltip_font_typographic\", \"typographic\"],\r\n      [\"color\", \"tooltip_font_color\", \"color\"],\r\n      [\"background-color\", \"tooltip_background_color\", \"color\"],\r\n      [\"border-radius\", \"tooltip_border_radius\", \"dimensions\"],\r\n      [\"\", \"tooltip_background_shadow\", \"shadow\"],\r\n      () => {\r\n        const value = getResponsiveSetting(settings, \"tooltip_background_color\");\r\n        if(value) {\r\n          if(value.color) {\r\n            return `border-color: transparent transparent ${value.color}`\r\n          } else {\r\n            return \"\"\r\n          }\r\n        } else {\r\n          return \"\"\r\n        }\r\n      },\r\n\r\n      \"&::after\",\r\n        [\"border-width\", \"arrow_size\", \"slider\"],\r\n      \"}\",\r\n    \"}\",\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"arrow_size\");\r\n      const slider = sliderStyled(value);\r\n      if(slider !== \"\") {\r\n        return `\r\n          & > .altrp-tooltip::after { border-width: ${slider}; }\r\n          & > .altrp-tooltip--top { bottom: calc(100% + ${slider}); }\r\n          & > .altrp-tooltip--bottom { top: calc(100% + ${slider}); }\r\n          & > .altrp-tooltip--right { left: calc(100% + ${slider}); }\r\n          & > .altrp-tooltip--left { right: calc(100% + ${slider}); }\r\n          & > .altrp-tooltip--top::after { margin-left: -${slider}; }\r\n          & > .altrp-tooltip--bottom::after { margin-left: -${slider}; }\r\n          & > .altrp-tooltip--right::after { margin-top: -${slider}; }\r\n          & > .altrp-tooltip--left::after { margin-top: -${slider}; }\r\n        `\r\n      } else {\r\n        return \"\"\r\n      }\r\n    },\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import {\r\n  sliderStyled,\r\n  styledString,\r\n  colorPropertyStyled,\r\n  gradientStyled,\r\n  backgroundImageControllerToStyles,\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  sizeStyled,\r\n  shadowControllerToStyles,\r\n  typographicControllerToStyles,\r\n  iconSizeStyled,\r\n  dimensionsControllerToStyles,\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nexport function btnStyles(settings) {\r\n  return [\r\n    \"altrp-btn-wrapper\",\r\n\r\n    [\"align-items\", \"button_alignment\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-btn\",\r\n    // [\"flex-direction\", \"button_icon_position\"],\r\n    [\"justify-content\", \"content_alignment\"],\r\n    [\"margin\", \"position_margin\", \"dimensions\"],\r\n    [\"padding\", \"position_padding\", \"dimensions\"],\r\n    [\"z-index\", \"position_z_index\"],\r\n    [\"transition-property\", \"button_transition_property\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"button_transition_duration\");\r\n\r\n      if(value) {\r\n        return `transition-duration: ${value.size}s;`;\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    [\"transition-timing-function\", \"button_transition_timing\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"button_transition_delay\");\r\n\r\n      if (value) {\r\n        return `transition-delay: ${value.size}s;`;\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"position_opacity\");\r\n\r\n      if(value && value.size) {\r\n        return `opacity: ${value.size};`\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    [\"background-color\", \"background_color\", \"color\"],\r\n    [\"\", \"gradient\", \"gradient\"],\r\n    [\"\", \"background_image\", \"media\"],\r\n    [\"border-style\", \"border_type\"],\r\n    [\"border-width\", \"border_width\", \"dimensions\"],\r\n    [\"border-color\", \"border_color\", \"color\"],\r\n    [\"border-radius\", \"border_radius\", \"dimensions\"],\r\n    [\"\", \"style_background_shadow\", \"shadow\"],\r\n    [\"\", \"font_typographic\", \"typographic\"],\r\n    [\"color\", \"font_color\", \"color\"],\r\n\r\n    \"&:hover\",\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"position_opacity\", ':hover');\r\n\r\n      if (value && value.size) {\r\n        return `opacity: ${value.size};`\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    [\"background-color\", \"background_color\", \"color\", \":hover\"],\r\n    [\"\", \"gradient\", \"gradient\", \":hover\"],\r\n    [\"border-style\", \"border_type\", \"\", \":hover\"],\r\n    [\"border-width\", \"border_width\", \"dimensions\", \":hover\"],\r\n    [\"border-color\", \"border_color\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border_radius\", \"dimensions\", \":hover\"],\r\n    [\"\", \"style_background_shadow\", \"shadow\", \":hover\"],\r\n    [\"color\", \"font_color\", \"color\", \":hover\"],\r\n    [\"\", \"background_image\", \"media\", \":hover\"],\r\n\r\n    \"& .altrp-btn-icon\",\r\n    // [\"width\", \"icon_size\", \"slider\", \":hover\"],\r\n    // [\"height\", \"icon_size\", \"slider\", \":hover\"],\r\n\r\n    \"& svg\",\r\n    [\"background-color\", \"icon_color_background\", \"color\", \":hover\"],\r\n    [\"width\", \"icon_size\", \"slider\", \":hover\"],\r\n    [\"height\", \"icon_size\", \"slider\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"& img\",\r\n    [\"width\", \"icon_size\", \"slider\", \":hover\"],\r\n    [\"icon_size\", \"slider\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"& path\",\r\n    [\"fill\", \"icon_color\", \"color\", \":hover\"],\r\n    [\"stroke\", \"icon_color_stroke\", \"color\", \":hover\"],\r\n    \"}\",\r\n    \"}\",\r\n    \"}\",\r\n  \"&.state-disabled\",\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"position_opacity\", '.state-disabled');\r\n\r\n      if (value && value.size) {\r\n        return `opacity: ${value.size};`\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    [\"background-color\", \"background_color\", \"color\", \".state-disabled\"],\r\n    [\"\", \"gradient\", \"gradient\", \".state-disabled\"],\r\n    [\"border-style\", \"border_type\", \"\", \".state-disabled\"],\r\n    [\"border-width\", \"border_width\", \"dimensions\", \".state-disabled\"],\r\n    [\"border-color\", \"border_color\", \"color\", \".state-disabled\"],\r\n    [\"border-radius\", \"border_radius\", \"dimensions\", \".state-disabled\"],\r\n    [\"\", \"style_background_shadow\", \"shadow\", \".state-disabled\"],\r\n    [\"color\", \"font_color\", \"color\", \".state-disabled\"],\r\n    [\"\", \"background_image\", \"media\", \".state-disabled\"],\r\n\r\n    \"& .altrp-btn-icon\",\r\n    // [\"width\", \"icon_size\", \"slider\", \":hover\"],\r\n    // [\"height\", \"icon_size\", \"slider\", \":hover\"],\r\n\r\n    \"& svg\",\r\n    [\"background-color\", \"icon_color_background\", \"color\", \".state-disabled\"],\r\n    [\"width\", \"icon_size\", \"slider\", \".state-disabled\"],\r\n    [\"height\", \"icon_size\", \"slider\", \".state-disabled\"],\r\n    \"}\",\r\n\r\n    \"& img\",\r\n    [\"width\", \"icon_size\", \"slider\", \".state-disabled\"],\r\n    [\"icon_size\", \"slider\", \".state-disabled\"],\r\n    \"}\",\r\n\r\n    \"& path\",\r\n    [\"fill\", \"icon_color\", \"color\", \".state-disabled\"],\r\n    [\"stroke\", \"icon_color_stroke\", \"color\", \".state-disabled\"],\r\n    \"}\",\r\n    \"}\",\r\n    \"}\",\r\n\r\n    \"& .altrp-btn-icon\",\r\n    [\"padding\", \"icon_padding\", \"dimensions\"],\r\n    // [\"width\", \"icon_size\", \"slider\"],\r\n    // [\"height\", \"icon_size\", \"slider\"],\r\n\r\n    \"& svg\",\r\n    [\"background-color\", \"icon_color_background\", \"color\"],\r\n    [\"width\", \"icon_size\", \"slider\"],\r\n    [\"height\", \"icon_size\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"& img\",\r\n    [\"width\", \"icon_size\", \"slider\"],\r\n    [\"icon_size\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"& path\",\r\n    [\"fill\", \"icon_color\", \"color\"],\r\n    [\"stroke\", \"icon_color_stroke\", \"color\"],\r\n    \"}\",\r\n    \"}\",\r\n\r\n    \"}\",\r\n\r\n    \"altrp-background-image\",\r\n    [\"background-position\", \"background_position\"],\r\n    [\"background-attachment\", \"background_attachment\"],\r\n    [\"background-repeat\", \"background_repeat\"],\r\n    [\"background-size\", \"background_image_width\", \"slider\"],\r\n    [\"background-size\", \"background_size\"],\r\n    \"}\",\r\n  ]\r\n}\r\n\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function ButtonComponent(settings) {\r\n\r\n  const styles = [\r\n\r\n    ...btnStyles(settings)\r\n  ];\r\n\r\n  let stylesInString = '';\r\n\r\n  stylesInString += `& .altrp-btn.active {`;\r\n\r\n  const backgroundColorActive = getResponsiveSetting(settings, 'background_color', '.active');\r\n  if (backgroundColorActive) {\r\n    stylesInString += colorPropertyStyled(backgroundColorActive, 'background-color');\r\n  }\r\n\r\n  const gradientActive = getResponsiveSetting(settings, \"gradient\", '.active');\r\n\r\n  if (gradientActive) {\r\n    stylesInString += gradientStyled(gradientActive);\r\n  }\r\n\r\n  const backgroundImageActive = getResponsiveSetting(settings, \"background_image\", '.active');\r\n\r\n  if (backgroundImageActive) {\r\n    stylesInString += backgroundImageControllerToStyles(backgroundImageActive);\r\n  }\r\n\r\n  const borderTypeActive = getResponsiveSetting(settings, \"border_type\", '.active');\r\n\r\n  if (borderTypeActive) {\r\n    stylesInString += simplePropertyStyled(borderTypeActive, \"border-style\");\r\n  }\r\n\r\n  const borderWidthActive = getResponsiveSetting(settings, \"border_width\", '.active');\r\n\r\n  if (borderWidthActive) {\r\n    stylesInString += borderWidthStyled(borderWidthActive);\r\n  }\r\n\r\n  const borderColorActive = getResponsiveSetting(settings, \"border_color\", '.active');\r\n\r\n  if (borderColorActive) {\r\n    stylesInString += colorPropertyStyled(borderColorActive, \"border-color\");\r\n  }\r\n\r\n  const borderRadiusActive = getResponsiveSetting(settings, \"border_radius\", '.active');\r\n\r\n  if (borderRadiusActive) {\r\n    stylesInString += sizeStyled(borderRadiusActive, \"border-radius\");\r\n  }\r\n\r\n  const boxShadowActive = getResponsiveSetting(settings, 'style_background_shadow', '.active');\r\n\r\n  if (boxShadowActive) {\r\n    stylesInString += shadowControllerToStyles(boxShadowActive);\r\n  }\r\n\r\n  const typographicActive = getResponsiveSetting(settings, \"font_typographic\", '.active');\r\n\r\n  if (typographicActive) {\r\n    stylesInString += typographicControllerToStyles(typographicActive);\r\n  }\r\n\r\n  const colorActive = getResponsiveSetting(settings, 'font_color', '.active');\r\n\r\n  if (colorActive) {\r\n    stylesInString += colorPropertyStyled(colorActive, 'color');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn.active svg {`;\r\n\r\n  const backgroundColorSvgActive = getResponsiveSetting(settings, 'icon_color_background', '.active');\r\n\r\n  if (backgroundColorSvgActive) {\r\n    stylesInString += colorPropertyStyled(backgroundColorSvgActive, 'background-color');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn.active path {`;\r\n\r\n  const fillColorSvgActive = getResponsiveSetting(settings, 'icon_color', '.active');\r\n\r\n  if (fillColorSvgActive) {\r\n    stylesInString += colorPropertyStyled(fillColorSvgActive, 'fill');\r\n  }\r\n\r\n  const strokeColorSvgActive = getResponsiveSetting(settings, 'icon_color_stroke', '.active');\r\n\r\n  if (strokeColorSvgActive) {\r\n    stylesInString += colorPropertyStyled(strokeColorSvgActive, 'stroke');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn svg {`;\r\n\r\n  const backgroundColorSvg = getResponsiveSetting(settings, 'icon_color_background');\r\n\r\n  if (backgroundColorSvg) {\r\n    stylesInString += colorPropertyStyled(backgroundColorSvg, 'background-color');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn:hover svg {`;\r\n\r\n  const backgroundColorSvgHover = getResponsiveSetting(settings, 'icon_color_background', ':hover');\r\n\r\n  if (backgroundColorSvgHover) {\r\n    stylesInString += colorPropertyStyled(backgroundColorSvgHover, 'background-color');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn path {`;\r\n\r\n  const fillColorSvg = getResponsiveSetting(settings, 'icon_color');\r\n\r\n  if (fillColorSvg) {\r\n    stylesInString += colorPropertyStyled(fillColorSvg, 'fill');\r\n  }\r\n\r\n  const strokeColorSvg = getResponsiveSetting(settings, 'icon_color_stroke');\r\n\r\n  if (strokeColorSvg) {\r\n    stylesInString += colorPropertyStyled(strokeColorSvg, 'stroke');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn:hover path {`;\r\n\r\n  const fillColorSvgHover = getResponsiveSetting(settings, 'icon_color', ':hover');\r\n\r\n  if (fillColorSvgHover) {\r\n    stylesInString += colorPropertyStyled(fillColorSvgHover, 'fill');\r\n  }\r\n\r\n  const strokeColorSvgHover = getResponsiveSetting(settings, 'icon_color_stroke', ':hover');\r\n\r\n  if (strokeColorSvgHover) {\r\n    stylesInString += colorPropertyStyled(strokeColorSvgHover, 'stroke');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn .altrp-btn-icon-right svg, & .altrp-btn .altrp-btn-icon-right img {`;\r\n\r\n  const paddingIconRightBtn = getResponsiveSetting(settings, 'icon_padding_right');\r\n\r\n  if (paddingIconRightBtn) {\r\n    stylesInString += dimensionsControllerToStyles(paddingIconRightBtn);\r\n  }\r\n\r\n  const iconRightSizeBtn = getResponsiveSetting(settings, 'icon_size_right');\r\n\r\n  if (iconRightSizeBtn) {\r\n    stylesInString += iconSizeStyled(iconRightSizeBtn);\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn .altrp-btn-icon-left svg, & .altrp-btn .altrp-btn-icon-left img {`;\r\n\r\n  const paddingIconLeftBtn = getResponsiveSetting(settings, 'icon_padding_left');\r\n\r\n  if (paddingIconLeftBtn) {\r\n    stylesInString += dimensionsControllerToStyles(paddingIconLeftBtn);\r\n  }\r\n\r\n  const iconLeftSizeBtn = getResponsiveSetting(settings, 'icon_size_left');\r\n\r\n  if (iconLeftSizeBtn) {\r\n    stylesInString += iconSizeStyled(iconLeftSizeBtn);\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn .altrp-btn-icon-top svg, & .altrp-btn .altrp-btn-icon-top img {`;\r\n\r\n  const paddingIconTopBtn = getResponsiveSetting(settings, 'icon_padding_top');\r\n\r\n  if (paddingIconTopBtn) {\r\n    stylesInString += dimensionsControllerToStyles(paddingIconTopBtn);\r\n  }\r\n\r\n  const iconTopSizeBtn = getResponsiveSetting(settings, 'icon_size_top');\r\n\r\n  if (iconTopSizeBtn) {\r\n    stylesInString += iconSizeStyled(iconTopSizeBtn);\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn .altrp-btn-icon-bottom svg, & .altrp-btn .altrp-btn-icon-bottom img {`;\r\n\r\n  const paddingIconBottomBtn = getResponsiveSetting(settings, 'icon_padding_bottom');\r\n\r\n  if (paddingIconBottomBtn) {\r\n    stylesInString += dimensionsControllerToStyles(paddingIconBottomBtn);\r\n  }\r\n\r\n  const iconBottomSizeBtn = getResponsiveSetting(settings, 'icon_size_bottom');\r\n\r\n  if (iconBottomSizeBtn) {\r\n    stylesInString += iconSizeStyled(iconBottomSizeBtn);\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += styledString(styles, settings);\r\n\r\n  return stylesInString;\r\n}\r\n","import {sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\n(window.globalDefaults = window.globalDefaults || []).push(`\r\n  .altrp-carousel-slide-img {\r\n    background: no-repeat 50%;\r\n    -webkit-background-size: cover;\r\n    cursor: grab;\r\n    background-size: cover;\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n    border-style: solid;\r\n    border-width: 0;\r\n    position: relative;\r\n  }\r\n\r\n  .altrp-carousel-slide {\r\n      overflow: hidden;\r\n      height: 220px;\r\n      position: relative;\r\n  }\r\n\r\n  .slick-list {\r\n    height: 100%;\r\n  }\r\n\r\n  .altrp-carousel-arrow svg {\r\n    width: 50px;\r\n    height: 50px;\r\n  }\r\n\r\n  .slick-slide, .altrp-carousel-dots {\r\n    padding: 0 15px;\r\n  }\r\n\r\n  .altrp-carousel-paging {\r\n    width: 10px;\r\n    height: 10px;\r\n    background-color: #a4a4a4;\r\n  }\r\n\r\n  .altrp-carousel-slide-overlay {\r\n    background-color: rgb(255, 255, 255);\r\n  }\r\n\r\n  .altrp-carousel-arrow {\r\n      cursor: pointer;\r\n      position: relative;\r\n      z-index: 999;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n  }\r\n\r\n  .altrp-carousel-arrow-next {\r\n      transform: rotate(180deg);\r\n  }\r\n\r\n  .altrp-carousel {\r\n      position: relative;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      height: 100%;\r\n      width: 100%;\r\n  }\r\n\r\n  .altrp-carousel-paging {\r\n      border-radius: 10vh;\r\n      background-color: #a4a4a4;\r\n      padding-right: 1px;\r\n  }\r\n\r\n  .altrp-carousel-container {\r\n      width: 100%;\r\n  }\r\n\r\n  .altrp-carousel-dots .slick-active .altrp-carousel-paging {\r\n      background-color: #136aed;\r\n  }\r\n\r\n  .altrp-carousel-dots-bottom-left {\r\n      text-align: left !important;\r\n  }\r\n\r\n  .altrp-carousel-dots-bottom-right {\r\n      text-align: right !important;\r\n  }\r\n\r\n  .altrp-carousel-dots-top-left {\r\n      text-align: left !important;\r\n  }\r\n\r\n  .altrp-carousel-dots-top {\r\n      text-align: center !important;\r\n      bottom: auto !important;\r\n  }\r\n\r\n  .altrp-carousel-dots-top-right {\r\n      text-align: right !important;\r\n  }\r\n\r\n  .altrp-carousel-dots {\r\n      position: relative;\r\n      list-style: none;\r\n      padding: 0;\r\n      text-align: center;\r\n      margin: 0;\r\n      bottom: 0;\r\n  }\r\n\r\n  .altrp-carousel-dots li {\r\n      position: relative;\r\n      display: inline-block;\r\n      margin-left: 5px;\r\n      cursor: pointer;\r\n  }\r\n\r\n  .altrp-carousel-paging:first-child {\r\n      margin-left: 0;\r\n  }\r\n\r\n  .altrp-carousel-container-no-arrow {\r\n      width: 100%;\r\n  }\r\n\r\n  .altrp-carousel-arrow-top-left {\r\n      top: 0;\r\n      left: 0;\r\n      margin-top: 10px;\r\n      margin-left: 10px;\r\n  }\r\n\r\n  .altrp-carousel-arrows-container {\r\n      position: absolute;\r\n      display: flex;\r\n      font-size: 25px;\r\n      flex-direction: row;\r\n      z-index: 999;\r\n  }\r\n\r\n  .altrp-carousel-arrow-top {\r\n      top: 0;\r\n  }\r\n\r\n  .altrp-carousel-arrows-container .altrp-carousel-arrow-prev {\r\n      display: flex;\r\n      margin-right: 2em;\r\n  }\r\n\r\n  .altrp-carousel-arrows-container .altrp-carousel-arrow-next {\r\n      display: flex;\r\n      margin-left: 2em;\r\n  }\r\n\r\n  .altrp-carousel-arrow-top-right {\r\n      top: 0;\r\n      right: 0;\r\n      margin-right: 10px;\r\n  }\r\n\r\n  .altrp-carousel-arrow-bottom-left {\r\n      bottom: 0;\r\n      left: 0;\r\n      margin-left: 10px;\r\n  }\r\n\r\n  .altrp-carousel-arrow-bottom {\r\n      bottom: 0;\r\n\r\n  }\r\n\r\n  .altrp-carousel-arrow-bottom-right {\r\n      bottom: 0;\r\n      right: 0;\r\n      margin-right: 10px;\r\n  }\r\n\r\n  .altrp-carousel-slides {\r\n      width: 100%;\r\n      display: flex;\r\n  }\r\n\r\n  .altrp-carousel-slides-dots-top {\r\n      flex-direction: column-reverse;\r\n  }\r\n\r\n  .altrp-carousel-slides-dots-top .altrp-carousel-dots {\r\n      margin-bottom: 15px;\r\n  }\r\n\r\n  .altrp-carousel-slides-dots-bottom {\r\n      flex-direction: column;\r\n  }\r\n\r\n  .altrp-carousel-slides-dots-bottom .altrp-carousel-dots {\r\n      margin-bottom: -15px;\r\n  }\r\n\r\n  .altrp-carousel-slide-overlay {\r\n      width: calc(100% - 40px);\r\n      margin: 20px;\r\n      top: 0;\r\n      opacity: 0;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      perspective: 20px;\r\n      height: calc(100% - 40px);\r\n      padding: 10px;\r\n      cursor: grab;\r\n      background-color: #ffffff;\r\n      z-index: 4;\r\n      position: absolute;\r\n      transition: 0.5s;\r\n  }\r\n\r\n  .altrp-carousel-slide:hover .altrp-carousel-slide-overlay {\r\n      opacity: 1;\r\n  }\r\n\r\n`);\r\n\r\nexport default function CarouselComponent(settings) {\r\n  const styles = [\r\n    \"altrp-carousel-slide\",\r\n\r\n    [\"height\", \"height_slides_content\", \"slider\"],\r\n    [\"background-color\", \"background_slides_style\", \"color\"],\r\n    [\"padding\", \"padding_slides_style\", \"dimensions\"],\r\n    [\"border-radius\", \"border_radius_slides_style\", \"dimensions\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-slide:hover\",\r\n\r\n    [\"background-color\", \"background_slides_style\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border_radius_slides_style\", \"dimensions\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"slick-list\",\r\n\r\n    [\"width\", \"width_slides_content\", \"slider\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-slide-img\",\r\n\r\n    [\"background-size\", \"image_fit_additional_content\"],\r\n\r\n    \"}\",\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"space_between_slides_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `\r\n        & .slick-slide { padding: 0 ${slider}; }\r\n        & .altrp-carousel-dots { padding 0 ${slider}; }\r\n        `\r\n      }\r\n    },\r\n\r\n    \"altrp-carousel-arrow\",\r\n\r\n    [\"padding\", \"padding_arrows_navigation_style\", \"dimensions\"],\r\n    [\"border-radius\", \"border_radius_arrows_navigation_style\", \"dimensions\"],\r\n    [\"background-color\", \"arrows_background_navigation_style\", \"color\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"arrows_size_navigation_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `svg {height: ${slider}; width: ${slider};}`\r\n      }\r\n    },\r\n\r\n    \"& svg path\",\r\n\r\n    [\"stroke\", \"arrows_color_navigation_style\", \"color\"],\r\n\r\n    \"}\",\r\n\r\n    \"}\",\r\n\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"horizontal_offset_arrows_navigation_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `\r\n        & .altrp-carousel-arrow-prev { left: ${slider}; }\r\n        & .altrp-carousel-arrow-next { right: ${slider}; }\r\n        `\r\n      }\r\n    },\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"vertical_no_center_offset_arrows_navigation_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `\r\n        & .altrp-carousel-arrow { top:${slider}; }\r\n        `\r\n      } else {\r\n        return \"\"\r\n      }\r\n    },\r\n\r\n    \"altrp-carousel-arrow:hover\",\r\n\r\n    [\"background-color\", \"arrows_background_navigation_style\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border_radius_arrows_navigation_style\", \"dimensions\", \":hover\"],\r\n\r\n    \"& svg path\",\r\n\r\n    [\"stroke\", \"arrows_color_navigation_style\", \"color\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"arrows_size_navigation_style\", \":hover\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `& svg { height: ${slider}; width: ${slider}; }`\r\n      } else {\r\n        return \"\"\r\n      }\r\n    },\r\n\r\n    \"}\",\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"dots_size_navigation_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `\r\n        & .altrp-carousel-paging { width: ${slider}; height: ${slider}; }\r\n        `\r\n      } else {\r\n        return \"\"\r\n      }\r\n      // & .altrp-carousel-dots li { margin-left: calc(${slider} * 0.1); }\r\n    },\r\n\r\n    \"altrp-carousel-paging\",\r\n\r\n    [\"background-color\", \"background_color_dots_navigation_style\", \"color\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-paging:hover\",\r\n\r\n    [\"background-color\", \"background_color_dots_navigation_style\", \"color\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-dots .slick-active .altrp-carousel-paging\",\r\n\r\n    [\"background-color\", \"background_color_active_dots_navigation_style\", \"color\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-dots .slick-active .altrp-carousel-paging:hover\",\r\n\r\n    [\"background-color\", \"background_color_active_dots_navigation_style\", \"color\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-dots\",\r\n\r\n    [\"left\", \"horizontal_offset_dots_navigation_style\", \"slider\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"vertical_no_center_offset_dots_navigation_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `\r\n      transform: translateY(${slider})\r\n      `\r\n      }\r\n    },\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-slide-overlay\",\r\n\r\n    [\"background-color\", \"background_color_overlay\", \"color\"],\r\n\r\n\r\n    \"& .altrp-carousel-slide-overlay-text\",\r\n\r\n    [\"color\", \"font_color_overlay\", \"color\"],\r\n    [\"\", \"typographic_overlay\", \"typographic\"],\r\n\r\n    \"}\",\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-slide-overlay:hover\",\r\n\r\n    [\"background-color\", \"background_color_overlay\", \"color\", \":hover\"],\r\n\r\n\r\n    \"& .altrp-carousel-slide-overlay-text\",\r\n    [\"color\", \"font_color_overlay\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"}\"\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","const { getResponsiveSetting } = window.altrpHelpers;\r\nimport {\r\n  dimensionsControllerToStyles,\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  sizeStyled,\r\n  gradientStyled,\r\n  shadowStyled,\r\n  backgroundImageControllerToStyles,\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nconst ColumnComponent = (settings) => {\r\n  let styles = \"\";\r\n\r\n  let flexWrap, flexDirection, align, justifyContent, overflow, backgroundColor, gradient, zIndex, borderType, borderWidth, borderColor, borderRadius, boxShadow;\r\n  let backgroundColorH, gradientH, borderTypeH, borderWidthH, borderColorH, borderRadiusH, boxShadowH;\r\n  let marginBottom, marginBottomH, backgroundImage, backgroundPosition, backgroundAttachment, backgroundRepeat, backgroundSizeInUnits, backgroundSize;\r\n  let backgroundImageH, backgroundPositionH, backgroundAttachmentH, backgroundRepeatH, backgroundSizeInUnitsH, backgroundSizeH, margin, marginH, padding, paddingH, width;\r\n\r\n  styles += \"& > div.altrp-column.altrp-column-priority {\";\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, \"style_position_padding\");\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    width = getResponsiveSetting(settings, \"layout_column_width\");\r\n  }\r\n\r\n  // if (layout_column_width) {\r\n  //   if (Number(layout_column_width)) {\r\n  //     styles += `width:${layout_column_width}%;`;\r\n  //   } else {\r\n  //     styles += `width:${layout_column_width};`;\r\n  //   }\r\n  // }\r\n\r\n  //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    margin = getResponsiveSetting(settings, 'style_position_margin');\r\n  }\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, 'margin');\r\n  }\r\n\r\n  //Получаем значения flex-wrap из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    flexWrap = getResponsiveSetting(settings, 'layout_flex_wrap_content');\r\n  }\r\n\r\n  if (flexWrap) {\r\n    styles += simplePropertyStyled(flexWrap, 'flex-wrap');\r\n  }\r\n\r\n  //Получаем значения flex-direction из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    flexDirection = getResponsiveSetting(settings, 'layout_column_direction');\r\n  }\r\n\r\n  if (flexDirection) {\r\n    styles += simplePropertyStyled(flexDirection, 'flex-direction');\r\n  }\r\n\r\n  //Получаем значения align-content и align-items из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    align = getResponsiveSetting(settings, 'layout_type');\r\n  }\r\n\r\n  if (align) {\r\n    styles += simplePropertyStyled(align, 'align-content');\r\n    styles += simplePropertyStyled(align, 'align-items');\r\n  }\r\n\r\n  //Получаем значения justify-content из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    justifyContent = getResponsiveSetting(settings, 'layout_justify_content');\r\n  }\r\n\r\n  if (justifyContent) {\r\n    styles += simplePropertyStyled(justifyContent, 'justify-content');\r\n  }\r\n\r\n  //Получаем значения overflow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    overflow = getResponsiveSetting(settings, 'layout_overflow');\r\n  }\r\n\r\n  if (overflow) {\r\n    styles += simplePropertyStyled(overflow, 'overflow',);\r\n  }\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'column_style_background_color');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n  // console.log(settings);\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradient = getResponsiveSetting(settings, 'gradient');\r\n  }\r\n\r\n  if (gradient) {\r\n    styles += gradientStyled(gradient);\r\n  }\r\n\r\n  //Получаем значения z-index из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    zIndex = getResponsiveSetting(settings, 'position_z_index');\r\n  }\r\n\r\n  if (zIndex) {\r\n    styles += simplePropertyStyled(zIndex, 'z-index');\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'column_style_border_type');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'column_style_border_width');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'column_style_border_color');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'column_style_border_radius');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadow = getResponsiveSetting(settings, 'column_style_box_shadow');\r\n  }\r\n\r\n  if (boxShadow) {\r\n    styles += shadowStyled(boxShadow);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  //hover\r\n\r\n  styles += \"& > div.altrp-column.altrp-column-priority:hover {\";\r\n\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColorH = getResponsiveSetting(settings, 'column_style_background_color', ':hover');\r\n  }\r\n\r\n  if (backgroundColorH) {\r\n    styles += colorPropertyStyled(backgroundColorH, 'background-color');\r\n  }\r\n\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradientH = getResponsiveSetting(settings, 'gradient', ':hover');\r\n  }\r\n\r\n  if (gradientH) {\r\n    styles += gradientStyled(gradientH);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderTypeH = getResponsiveSetting(settings, 'column_style_border_type', ':hover');\r\n  }\r\n\r\n  if (borderTypeH) {\r\n    styles += simplePropertyStyled(borderTypeH, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidthH = getResponsiveSetting(settings, 'column_style_border_width', ':hover');\r\n  }\r\n\r\n  if (borderWidthH) {\r\n    styles += borderWidthStyled(borderWidthH);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColorH = getResponsiveSetting(settings, 'column_style_border_color', ':hover');\r\n  }\r\n\r\n  if (borderColorH) {\r\n    styles += colorPropertyStyled(borderColorH, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadiusH = getResponsiveSetting(settings, 'column_style_border_radius', ':hover');\r\n  }\r\n\r\n  if (borderRadiusH) {\r\n    styles += sizeStyled(borderRadiusH, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadowH = getResponsiveSetting(settings, 'column_style_box_shadow', ':hover');\r\n  }\r\n\r\n  if (boxShadowH) {\r\n    styles += shadowStyled(boxShadowH);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += \"& > .altrp-element:not(:last-child) {\";\r\n\r\n  if (settings !== undefined) {\r\n    marginBottom = getResponsiveSetting(settings, 'layout_widgets-space');\r\n  }\r\n\r\n  if (marginBottom) {\r\n    styles += `margin-bottom: ${marginBottom}px; `;\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  //hover\r\n\r\n  styles += \"& > .altrp-element:not(:last-child):hover {\";\r\n\r\n  if (settings !== undefined) {\r\n    marginBottomH = getResponsiveSetting(settings, 'layout_widgets-space', ':hover');\r\n  }\r\n\r\n  if (marginBottomH) {\r\n    styles += `margin-bottom: ${marginBottomH}px; `;\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += \"& > .altrp-column.altrp-background-image {\";\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImage = getResponsiveSetting(settings, 'background_image');\r\n  }\r\n\r\n  if (backgroundImage) {\r\n    styles += backgroundImageControllerToStyles(backgroundImage);\r\n  }\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPosition = getResponsiveSetting(settings, 'background_position');\r\n  }\r\n\r\n  if (backgroundPosition) {\r\n    styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachment = getResponsiveSetting(settings, 'background_attachment');\r\n  }\r\n\r\n  if (backgroundAttachment) {\r\n    styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeat = getResponsiveSetting(settings, 'background_repeat');\r\n  }\r\n\r\n  if (backgroundRepeat) {\r\n    styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnits = getResponsiveSetting(settings, 'background_image_width');\r\n  }\r\n\r\n  if (backgroundSizeInUnits) {\r\n    styles += sizeStyled(backgroundSizeInUnits, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSize = getResponsiveSetting(settings, 'background_size');\r\n  }\r\n\r\n  if (backgroundSize) {\r\n    styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  //hover\r\n\r\n  styles += \"& > div.altrp-column.altrp-background-image:hover {\";\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPositionH = getResponsiveSetting(settings, 'background_position', ':hover');\r\n  }\r\n\r\n  if (backgroundPositionH) {\r\n    styles += simplePropertyStyled(backgroundPositionH, 'background-position');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachmentH = getResponsiveSetting(settings, 'background_attachment', ':hover');\r\n  }\r\n\r\n  if (backgroundAttachmentH) {\r\n    styles += simplePropertyStyled(backgroundAttachmentH, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeatH = getResponsiveSetting(settings, 'background_repeat', ':hover');\r\n  }\r\n\r\n  if (backgroundRepeatH) {\r\n    styles += simplePropertyStyled(backgroundRepeatH, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnitsH = getResponsiveSetting(settings, 'background_image_width', ':hover');\r\n  }\r\n\r\n  if (backgroundSizeInUnitsH) {\r\n    styles += sizeStyled(backgroundSizeInUnitsH, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeH = getResponsiveSetting(settings, 'background_size', ':hover');\r\n  }\r\n\r\n  if (backgroundSizeH) {\r\n    styles += simplePropertyStyled(backgroundSizeH, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImageH = getResponsiveSetting(settings, 'background_image', ':hover');\r\n  }\r\n\r\n  if (backgroundImageH) {\r\n    styles += backgroundImageControllerToStyles(backgroundImageH);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  //<editor-fold description=active>\r\n  styles += \"& > div.altrp-column.altrp-column-priority.active {\";\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPositionH = getResponsiveSetting(settings, 'background_position', '.active');\r\n  }\r\n\r\n  if (backgroundPositionH) {\r\n    styles += simplePropertyStyled(backgroundPositionH, 'background-position');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachmentH = getResponsiveSetting(settings, 'background_attachment', '.active');\r\n  }\r\n\r\n  if (backgroundAttachmentH) {\r\n    styles += simplePropertyStyled(backgroundAttachmentH, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeatH = getResponsiveSetting(settings, 'background_repeat', '.active');\r\n  }\r\n\r\n  if (backgroundRepeatH) {\r\n    styles += simplePropertyStyled(backgroundRepeatH, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnitsH = getResponsiveSetting(settings, 'background_image_width', '.active');\r\n  }\r\n\r\n  if (backgroundSizeInUnitsH) {\r\n    styles += sizeStyled(backgroundSizeInUnitsH, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeH = getResponsiveSetting(settings, 'background_size', '.active');\r\n  }\r\n\r\n  if (backgroundSizeH) {\r\n    styles += simplePropertyStyled(backgroundSizeH, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImageH = getResponsiveSetting(settings, 'background_image', '.active');\r\n  }\r\n\r\n  if (backgroundImageH) {\r\n    styles += backgroundImageControllerToStyles(backgroundImageH);\r\n  }\r\n  styles += \"} \";\r\n\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColorH = getResponsiveSetting(settings, 'column_style_background_color', '.active');\r\n  }\r\n\r\n  if (backgroundColorH) {\r\n    styles += colorPropertyStyled(backgroundColorH, 'background-color');\r\n  }\r\n\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradientH = getResponsiveSetting(settings, 'gradient', '.active');\r\n  }\r\n\r\n  if (gradientH) {\r\n    styles += gradientStyled(gradientH);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderTypeH = getResponsiveSetting(settings, 'column_style_border_type', '.active');\r\n  }\r\n\r\n  if (borderTypeH) {\r\n    styles += simplePropertyStyled(borderTypeH, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidthH = getResponsiveSetting(settings, 'column_style_border_width', '.active');\r\n  }\r\n\r\n  if (borderWidthH) {\r\n    styles += borderWidthStyled(borderWidthH);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColorH = getResponsiveSetting(settings, 'column_style_border_color', '.active');\r\n  }\r\n\r\n  if (borderColorH) {\r\n    styles += colorPropertyStyled(borderColorH, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadiusH = getResponsiveSetting(settings, 'column_style_border_radius', '.active');\r\n  }\r\n\r\n  if (borderRadiusH) {\r\n    styles += sizeStyled(borderRadiusH, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadowH = getResponsiveSetting(settings, 'column_style_box_shadow', '.active');\r\n  }\r\n\r\n  if (boxShadowH) {\r\n    styles += shadowStyled(boxShadowH);\r\n  }\r\n\r\n  //</editor-fold>\r\n  return styles;\r\n};\r\n\r\nexport default ColumnComponent\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport function dashboardStyles(settings){\r\n\r\n    const style_font_typographic =() => {\r\n        const value = getResponsiveSetting(settings, \"style_font_typographic\");\r\n    \r\n        if(value) {\r\n          if(value.family) {\r\n            if(_.isString(value.family)) {\r\n              return `font-family: \"${value.family}\" sans-serif !important;`;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    \r\n    return [\r\n        \"altrp-dashboard__card--background\",\r\n          [\"background-color\", \"style_background_color\", \"color\", \"\", true],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--settings-tooltip-background\",\r\n          [\"background-color\", \"style_settings_tooltip_background_color\", \"color\", \"\", true],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--settings-tooltip-icon-background\",\r\n          [\"background-color\", \"style_settings_tooltip_icon_background_color\", \"color\", \"\", true],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--border-color\",\r\n          [\"border-color\", \"style_border_color\", \"color\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--border-style\",\r\n          [\"border-style\", \"style_border_style\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--border\",\r\n          [\"border-width\", \"style_border_width\", \"slider\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--border-radius\",\r\n          [\"border-radius\", \"style_border_radius\", \"slider\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--font\",\r\n          [\"border-style\", \"border_type_card\"],\r\n          [\"border-width\", \"border_width_card\", \"dimensions\"],\r\n          [\"border-color\", \"altrp-dashboard__card--font\", \"color\"],\r\n          [\"border-radius\", \"border_radius_card\", \"dimensions\"],\r\n          [\"\", \"style_background_shadow\", \"shadow\"],\r\n          style_font_typographic(),\r\n          \"& text\",\r\n            style_font_typographic(),\r\n          \"}\",\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--font-color\",\r\n          [\"color\", \"style_font_color\", \"color\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--font-size\",\r\n          [\"font-size\", \"style_font_size\", \"slider\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--font-weight\",\r\n          [\"font-weight\", \"style_font_weight\", \"slider\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__tooltip--label-background\",\r\n          [\"margin\", \"style_margin_tooltip\", \"dimensions\"],\r\n          [\"background-color\", \"style_background_color_tooltip\", \"color\", \"\", true],\r\n          [\"\", \"style_background_tooltip_shadow\", \"shadow\"],\r\n          [\"border-style\", \"border_type_tooltip\"],\r\n          [\"border-width\", \"border_width_tooltip\", \"dimensions\"],\r\n          [\"border-color\", \"border_color_tooltip\", \"color\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__tooltip--font\",\r\n          [\"padding\", \"style_padding_tooltip\", \"dimensions\"],\r\n          [\"\", \"style_font_tooltip\", \"typographic\"],\r\n          [\"color\", \"style_font_color_tooltip\", \"color\"],\r\n        \"}\",\r\n      ];\r\n}\r\n\r\nexport default function DashboardComponent(settings){\r\n    const styles=[\r\n        ...dashboardStyles(settings)\r\n    ];\r\n\r\n    return styledString(styles,settings);\r\n}","import { styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function DatePickerComponent(settings, elementId) {\r\n  const styles = [\r\n    `! div.altrp-date-picker${elementId}`,\r\n      [\"padding\", \"picker_padding\", \"dimensions\"],\r\n      [\"background-color\", \"picker_background\", \"color\"],\r\n      [\"border-style\", \"picker_border_type\"],\r\n      [\"border-width\", \"picker_border_width\", \"dimensions\"],\r\n      [\"border-color\", \"picker_border_color\", \"color\"],\r\n      [\"border-radius\", \"picker_border_radius\", \"dimensions\"],\r\n      [\"\", \"picker_shadow\", \"shadow\"],\r\n      [\"\", \"picker_typographic\", \"typographic\"],\r\n      \"bp3-datepicker-month-select select\",\r\n        [\"\", \"picker_month_typographic\", \"typographic\"],\r\n        [\"color\", \"picker_month_color\", \"color\"],\r\n      \"}\",\r\n      \"bp3-datepicker-year-select select\",\r\n        [\"\", \"picker_year_typographic\", \"typographic\"],\r\n        [\"color\", \"picker_year_color\", \"color\"],\r\n      \"}\",\r\n      \"bp3-icon > svg:not([fill])\",\r\n        [\"fill\", \"picker_icons_color\", \"color\"],\r\n      \"}\",\r\n      \"DayPicker-Weekday\",\r\n        [\"\", \"date_weekday_typographic\", \"typographic\"],\r\n        [\"color\", \"date_weekday_color\", \"color\"],\r\n      \"}\",\r\n      \"DayPicker-Day.DayPicker-Day.DayPicker-Day\",\r\n        [\"\", \"date_selected_typographic\", \"typographic\"],\r\n        [\"background-color\", \"date_background_color\", \"color\"],\r\n        [\"color\", \"date_font_color\", \"color\"],\r\n        [\"border-radius\", \"date_radius\", \"dimensions\"],\r\n      \"}\",\r\n      \"DayPicker-Day.DayPicker-Day.DayPicker-Day:hover\",\r\n        [\"background-color\", \"date_background_color\", \"color\", \":hover\"],\r\n        [\"color\", \"date_font_color\", \"color\", \":hover\"],\r\n        [\"border-radius\", \"date_radius\", \"dimensions\", \":hover\"],\r\n      \"}\",\r\n      \"& div.DayPicker-Day--selected.DayPicker-Day--selected.DayPicker-Day--selected\",\r\n        [\"color\", \"date_selected_font_color\", \"color\"],\r\n        [\"background-color\", \"date_selected_background_color\", \"color\"],\r\n      \"}\",\r\n      \"& div.DayPicker-Day--selected.DayPicker-Day--selected.DayPicker-Day--selected:hover\",\r\n        [\"color\", \"date_selected_font_color\", \"color\", \":hover\"],\r\n        [\"background-color\", \"date_selected_background_color\", \"color\", \":hover\"],\r\n      \"}\",\r\n      \"DayPicker-Day--outside.DayPicker-Day--outside\",\r\n        [\"color\", \"date_outside_font_color\", \"color\"],\r\n        [\"background-color\", \"date_outside_background_color\", \"color\"],\r\n      \"}\",\r\n      \"DayPicker-Day--outside:hover\",\r\n        [\"color\", \"date_outside_font_color\", \"color\", \":hover\"],\r\n       [\"background-color\", \"date_outside_background_color\", \"color\", \":hover\"],\r\n      \"}\",\r\n    \"}\",\r\n\r\n    `! div.altrp-date-picker-popover-${elementId}`,\r\n      [\"\", \"picker_shadow\", \"shadow\"],\r\n      [\"border-radius\", \"picker_border_radius\", \"dimensions\"],\r\n\r\n      \"bp3-popover-arrow-fill\",\r\n        [\"fill\", \"picker_background\", \"color\"],\r\n      \"}\",\r\n\r\n      \"bp3-popover-content\",\r\n        [\"border-radius\", \"picker_border_radius\", \"dimensions\"],\r\n      \"}\",\r\n    \"}\"\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport default function DiagramComponent(settings) {\r\n  const styles = [\r\n    \"altrp-dashboard__tooltip--margin\",\r\n      [\"margin\", \"style_margin_tooltip\", \"dimensions\"],\r\n      [\"padding\", \"style_padding_tooltip\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--width\",\r\n      [\"padding-top\", \"style_width_tooltip\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--font\",\r\n      [\"\", \"style_font_tooltip\", \"typographic\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--font-color\",\r\n      [\"color\", \"style_font_color_tooltip\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--label-background\",\r\n      [\"background-color\", \"style_background_color_tooltip\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--label-background-shadow\",\r\n      [\"background-color\", \"style_background_tooltip_shadow\", \"shadow\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--border-type\",\r\n      [\"border-style\", \"border_type_tooltip\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--border-width\",\r\n      [\"border-width\", \"border_width_tooltip\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--border-color\",\r\n      [\"border-color\", \"border_color_tooltip\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-diagram\",\r\n      [\"width\", \"width\", \"slider\"],\r\n      [\"height\", \"height\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-btn\",\r\n      [\"margin\", \"margin\", \"dimensions\"],\r\n    \"}\",\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function DividerComponent(settings) {\r\n  const styles = [\r\n    \"altrp-divider-separator\",\r\n\r\n    [\"width\", \"divider_width\", \"slider\"],\r\n\r\n    \"}\",\r\n\r\n    \"&\",\r\n\r\n    [\"align-items\", \"divider_alignment\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-divider\",\r\n\r\n    [\"margin\", \"position_margin\", \"dimensions\"],\r\n    [\"z-index\", \"position_z_index\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"divider_style_gap\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return ` padding-top: ${slider}; padding-bottom: ${slider}; `\r\n      }\r\n    },\r\n\r\n    \"}\",\r\n\r\n    \"altrp-divider-label\",\r\n\r\n    [\"color\", \"text_style_color\", \"color\"],\r\n    [\"\", \"text_style_typographic\", \"typographic\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-divider .altrp-divider-separator\",\r\n    [\"border-color\", \"divider_style_color\", \"color\"],\r\n    \"}\",\r\n    \"altrp-divider.active\",\r\n\r\n    [\"margin\", \"position_margin\", \"dimensions\", \".active\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"divider_style_gap\", \".active\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return ` padding-top: ${slider}; padding-bottom: ${slider}; `\r\n      }\r\n    },\r\n\r\n    \"& .altrp-divider-label\",\r\n\r\n    [\"color\", \"text_style_color\", \"color\", \".active\"],\r\n\r\n    \"}\",\r\n\r\n    \"}\",\r\n    \"altrp-divider.active .altrp-divider-separator\",\r\n    [\"border-color\", \"divider_style_color\", \"color\", \".active\"],\r\n    \"}\",\r\n\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import {sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {btnStyles} from \"./ButtonComponent\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\nexport default function DropbarWidgetComponent(settings) {\r\n\r\n  const styles = [\r\n    ...btnStyles(settings)\r\n  ];\r\n\r\n  return styledString(styles, settings) + \"& .altrp-btn-wrapper{display:flex;flex-direction:column;}\";\r\n}\r\n","import { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\nimport {\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  simplePropertyStyled,\r\n  colorPropertyStyled,\r\n  borderWidthStyled,\r\n  shadowControllerToStyles,\r\n  sizeStyled\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * Стили для класса .altrp-input-wrapper\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst inputWrapperStyle = settings => {\r\n  let styles = `&& .altrp-input-wrapper {`;\r\n  let width;\r\n  //width begin\r\n  settings && (width = getResponsiveSetting(settings, \"field_width\"));\r\n  width && (styles += sizeStyled(width, \"width\"));\r\n  //width end\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst containerStyle = settings => {\r\n  let styles = `&& .altrp-field-container {`;\r\n  let margin;\r\n\r\n  //margin begin\r\n  settings && (margin = getResponsiveSetting(settings, \"position_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n  //margin end\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyle = settings => {\r\n  let styles = `&& .altrp-field {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    input_position,\r\n    textarea_resize,\r\n    justify_options,\r\n    image_select_item_width,\r\n    image_select_item_height,\r\n    image_select_image_fit,\r\n    image_select_image_position,\r\n    cross_size\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"position_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n    (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n    (borderRadius = getResponsiveSetting(\r\n      settings,\r\n      \"global_filter_input_border_radius\"\r\n    ));\r\n  borderRadius &&\r\n    (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n    (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option{\";\r\n\r\n  input_position && (styles += `flex-direction:${input_position};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select{\";\r\n\r\n  justify_options && (styles += `justify-content:${justify_options};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select>.altrp-field{\";\r\n\r\n  image_select_item_width &&\r\n    (styles += `width:${image_select_item_width.size}${image_select_item_width.unit};`);\r\n\r\n  image_select_item_height &&\r\n    (styles += `height:${image_select_item_height.size}${image_select_item_height.unit};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select img{\";\r\n  image_select_image_fit && (styles += `object-fit:${image_select_image_fit};`);\r\n  image_select_image_position &&\r\n    (styles += `object-position:${image_select_image_position};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field-select2__control\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2ControlStyle = settings => {\r\n  let styles = `&& .altrp-field-select2__control {`;\r\n  let padding,\r\n    color,\r\n    backgroundColor,\r\n    borderType,\r\n    borderColor,\r\n    borderWidth,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"position_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n    (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n    (borderRadius = getResponsiveSetting(\r\n      settings,\r\n      \"global_filter_input_border_radius\"\r\n    ));\r\n  borderRadius &&\r\n    (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n    (styles += `text-align:${placeholder_and_value_alignment_position_section}`);\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-image-select__label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst imageSelectLabel = settings => {\r\n  let styles = `&& .altrp-image-select__label {`;\r\n  let color, typographic;\r\n\r\n  const { placeholder_and_value_alignment_position_section } = settings;\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n    (styles += `text-align:${placeholder_and_value_alignment_position_section}`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__single-value\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2SingleValueStyle = settings => {\r\n  let styles = `&& .altrp-field-select2__single-value {`;\r\n  let typographic, color;\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelContainerStyle = settings => {\r\n  let styles = `&& .altrp-field-label-container {`;\r\n  let backgroundColor, padding, width;\r\n  const {\r\n    label_position_top,\r\n    label_position_left,\r\n    label_icon_position\r\n  } = settings;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"label_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"label_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (width = getResponsiveSetting(settings, \"label_width\"));\r\n  width && (styles += `${sizeStyled(width, \"width\")};flex-shrink: 0;`);\r\n\r\n  label_position_top && (styles += `top:${label_position_top};`);\r\n  label_position_left && (styles += `left:${label_position_left};`);\r\n  label_icon_position && (styles += `flex-direction:${label_icon_position};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabel = settings => {\r\n  let styles = `&& .altrp-field-label {`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"label_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"label_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-label-icon\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst labelIconStyle = settings => {\r\n  let styles = `&& .altrp-label-icon {`;\r\n  let padding, backgroundColor, iconSize;\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"icon_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (iconSize = getResponsiveSetting(settings, \"icon_size\"));\r\n  iconSize &&\r\n    (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for path\r\n  styles += `&& .altrp-label-icon path{`;\r\n\r\n  settings && (backgroundColor = getResponsiveSetting(settings, \"icon_color\"));\r\n  backgroundColor && (styles += colorPropertyStyled(backgroundColor, \"fill\"));\r\n\r\n  styles += \"}\";\r\n  //for svg\r\n  styles += `&& .altrp-label-icon svg{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(settings, \"icon_color_background\"));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background\"));\r\n  iconSize &&\r\n    (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for img\r\n  styles += `&& .altrp-label-icon img{`;\r\n\r\n  iconSize &&\r\n    (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для классов\r\n * altrp-field::placeholder\r\n * altrp-field-select2__placeholder\r\n * altrp-field-file__placeholder\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst placeholderStyle = settings => {\r\n  let styles = `&& .altrp-field::placeholder{`;\r\n  let color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderColor,\r\n    borderWidth,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"placeholder_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-select2__placeholder{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-file__placeholder{`;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n    (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n    (borderRadius = getResponsiveSetting(\r\n      settings,\r\n      \"global_filter_input_border_radius\"\r\n    ));\r\n  borderRadius &&\r\n    (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"placeholder_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label--required::after\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelRequired = settings => {\r\n  let styles = `&& .altrp-field-label--required::after{`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"required_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"required_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__option\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2Option = (settings, id) => {\r\n  let styles = `.${id}.altrp-field-select2__option{`;\r\n  let backgroundColor;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"option_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(\r\n      backgroundColor,\r\n      \"background-color\",\r\n      \"!important\"\r\n    ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-focused{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"option_focused_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(\r\n      backgroundColor,\r\n      \"background-color\",\r\n      \"!important\"\r\n    ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-selected{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"option_selected_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(\r\n      backgroundColor,\r\n      \"background-color\",\r\n      \"!important\"\r\n    ));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса mask-mismatch-message\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst maskMismatchMessage = (settings, id) => {\r\n  let styles = `&& .mask-mismatch-message{`;\r\n  let margin, padding, color, typographic;\r\n\r\n  settings &&\r\n    (margin = getResponsiveSetting(settings, \"mismatch_message_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n\r\n  settings &&\r\n    (padding = getResponsiveSetting(settings, \"mismatch_message_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(margin, \"padding\"));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"mismatch_message_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"mismatch_message_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n//Точка входа\r\nfunction FormComponent(settings) {\r\n  let styles = \"\";\r\n  const { background_section_opacity } = settings;\r\n  //for all element\r\n  background_section_opacity &&\r\n    (styles += `opacity:${background_section_opacity.size};`);\r\n  //altrp-input-wrapper\r\n  const inputWrapperStyles = inputWrapperStyle(settings);\r\n  inputWrapperStyles && (styles += inputWrapperStyles);\r\n  //altrp-field-container\r\n  const containerStyles = containerStyle(settings);\r\n  containerStyles && (styles += containerStyles);\r\n  //altrp-field\r\n  const fieldStyles = fieldStyle(settings);\r\n  fieldStyles && (styles += fieldStyles);\r\n  //altrp-field-select2__control\r\n  const filedSelect2ControllerStyles = fieldSelect2ControlStyle(settings);\r\n  filedSelect2ControllerStyles && (styles += filedSelect2ControllerStyles);\r\n  //altrp-image-select__label\r\n  const imageSelectLabelStyles = imageSelectLabel(settings);\r\n  imageSelectLabelStyles && (styles += imageSelectLabelStyles);\r\n  //altrp-field-select2__single-value\r\n  const fieldSelect2SingleValueStyles = fieldSelect2SingleValueStyle(settings);\r\n  fieldSelect2SingleValueStyles && (styles += fieldSelect2SingleValueStyles);\r\n  //altrp-field-select2__single-value\r\n  const fieldLabelContainerStyles = fieldLabelContainerStyle(settings);\r\n  fieldLabelContainerStyles && (styles += fieldLabelContainerStyles);\r\n  //altrp-field-label\r\n  const fieldLabelStyles = fieldLabel(settings);\r\n  fieldLabelStyles && (styles += fieldLabelStyles);\r\n  //altrp-label-icon\r\n  const labelIconStyles = labelIconStyle(settings);\r\n  labelIconStyles && (styles += labelIconStyles);\r\n  //altrp-field::placeholder altrp-field-select2__placeholder altrp-field-file__placeholder\r\n  const placeholderStyles = placeholderStyle(settings);\r\n  placeholderStyles && (styles += placeholderStyles);\r\n  //altrp-field-label--required::after\r\n  const fieldLabelRequiredStyles = fieldLabelRequired(settings);\r\n  fieldLabelRequiredStyles && (styles += fieldLabelRequiredStyles);\r\n  //mask-mismatch-message\r\n  const maskMismatchMessageStyles = maskMismatchMessage(settings);\r\n  maskMismatchMessageStyles && (styles += maskMismatchMessageStyles);\r\n  //finish\r\n  return styles;\r\n}\r\nexport default {\r\n  FormComponent: FormComponent,\r\n  select2Options: fieldSelect2Option\r\n};\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function GalleryComponent(settings) {\r\n  const styles = [\r\n    \"altrp-gallery-img\",\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"aspect_ratio_grid_settings\");\r\n      let aspectRatio = \"100%\";\r\n\r\n      switch (value) {\r\n        case \"3to2\":\r\n          aspectRatio = \"66.6667%\";\r\n          break\r\n        case \"4to3\":\r\n          aspectRatio = \"75%\";\r\n          break\r\n        case \"9to16\":\r\n          aspectRatio = \"177.778%\";\r\n          break\r\n        case \"16to9\":\r\n          aspectRatio = \"56.25%\";\r\n          break\r\n        case \"21to9\":\r\n          aspectRatio = \"42.8571%\";\r\n          break\r\n      }\r\n\r\n      return `padding-bottom: ${aspectRatio}`\r\n    },\r\n\r\n    \"}\",\r\n\r\n    \"altrp-gallery-img-container\",\r\n\r\n    [\"border-style\", \"border_type\"],\r\n    [\"border-width\", \"border_width\", \"dimensions\"],\r\n    [\"border-color\", \"border_color\", \"color\"],\r\n    [\"border-radius\", \"border_radius\", \"dimensions\"],\r\n\r\n    \"}\",\r\n\r\n    \".altrp-gallery-img-container:hover .altrp-gallery-img-container\",\r\n\r\n    [\"border-style\", \"border_type\", \":hover\"],\r\n    [\"border-width\", \"border_width\", \"dimensions\", \":hover\"],\r\n    [\"border-color\", \"border_color\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border_radius\", \"dimensions\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-gallery-overlay-bg\",\r\n\r\n    [\"background-color\", \"overlay_background_color\", \"color\"],\r\n    [\"\", \"overlay_background_gradient\", \"gradient\"],\r\n    [\"mix-blend-mode\", \"blend_mode\"],\r\n\r\n    \"}\",\r\n\r\n    \".altrp-gallery-img-container:hover .altrp-gallery-overlay-bg\",\r\n\r\n    [\"background-color\", \"overlay_background_color\", \"color\", \":hover\"],\r\n    [\"\", \"overlay_background_gradient\", \"gradient\", \":hover\"],\r\n    [\"mix-blend-mode\", \"blend_mode\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-gallery-overlay\",\r\n\r\n    [\"align-items\", \"overlay_content_alignment\"],\r\n    [\"justify-content\", \"overlay_content_vertical\"],\r\n    [\"padding\", \"overlay_content_padding\", \"dimensions\"],\r\n\r\n    \"}\",\r\n\r\n    \".altrp-gallery-img-container:hover .altrp-gallery-overlay\",\r\n\r\n    [\"align-items\", \"overlay_content_alignment\", \":hover\"],\r\n    [\"justify-content\", \"overlay_content_vertical\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-gallery-overlay-title\",\r\n\r\n    [\"color\", \"overlay_title_color\", \"color\"],\r\n    [\"\", \"overlay_title_typographic\", \"typographic\"],\r\n    [\"margin-bottom\", \"overlay_title_spacing\", \"slider\"],\r\n\r\n    \"}\",\r\n\r\n    \".altrp-gallery-img-container:hover .altrp-gallery-overlay-title\",\r\n\r\n    [\"color\", \"overlay_title_color\", \"color\", \":hover\"],\r\n    [\"\", \"overlay_title_typographic\", \"typographic\", \":hover\"],\r\n    [\"margin-bottom\", \"overlay_title_spacing\", \"slider\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-gallery-overlay-description\",\r\n\r\n    [\"color\", \"overlay_description_color\", \"color\"],\r\n    [\"\", \"overlay_description_typographic\", \"typographic\"],\r\n\r\n    \"}\",\r\n\r\n    \".altrp-gallery-img-container:hover .altrp-gallery-overlay-description\",\r\n\r\n    [\"color\", \"overlay_description_color\", \"color\", \":hover\"],\r\n    [\"\", \"overlay_description_typographic\", \"typographic\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-gallery-grid\",\r\n\r\n    [\"grid-gap\", \"spacing_grid_settings\", \"slider\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"columns_grid_settings\");\r\n      const def = defaultStyled(value);\r\n\r\n      if(def) {\r\n        return `grid-template-columns: repeat(${def}, 1fr);`\r\n      }\r\n    },\r\n\r\n    \"}\"\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\nimport {\r\n  dimensionsControllerToStyles,\r\n  gradientStyled,\r\n  filtersControllerToStyles,\r\n  simplePropertyStyled,\r\n  colorPropertyStyled,\r\n  sizeStyled,\r\n  opacityStyled,\r\n  borderWidthStyled,\r\n  backgroundImageControllerToStyles,\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n\r\nconst ImageLightboxComponent = (settings,id)=>{\r\n  let styles = '';\r\n\r\n  let objectFit, height, width, margin, padding, zIndex, opacity, borderType, filters;\r\n  let borderWidth, borderColor, borderRadius, transitionDuration, animationDuration, backgroundColor, backgroundColorHover, gradient;\r\n  let justifyContent;\r\n  let backgroundImage, backgroundPosition, backgroundAttachment, backgroundRepeat,backgroundSizeInUnit, backgroundSize;\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-image {`;\r\n\r\n  //Получаем значения object-fit из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    objectFit = getResponsiveSetting(settings, 'image_fit_size');\r\n  }\r\n\r\n  if (objectFit) {\r\n    styles += simplePropertyStyled(objectFit, 'object-fit');\r\n  }\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_color');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradient = getResponsiveSetting(settings, 'gradient');\r\n  }\r\n\r\n  if (gradient) {\r\n    styles += gradientStyled(gradient);\r\n  }\r\n\r\n  //Получаем значения filters из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    filters = getResponsiveSetting(settings, 'image_style_text_shadow');\r\n  }\r\n\r\n  if (filters) {\r\n    styles += filtersControllerToStyles(filters);\r\n  }\r\n\r\n  //Получаем значения height из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    height = getResponsiveSetting(settings, 'height_size');\r\n  }\r\n\r\n  if (height) {\r\n    if(height.size !== \"0\") {\r\n      styles += sizeStyled(height, 'height');\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  //Получаем значения width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    width = getResponsiveSetting(settings, 'width_size');\r\n  }\r\n\r\n  if (width) {\r\n    styles += sizeStyled(width, 'width');\r\n  }\r\n\r\n  //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n  //Свойство margin было убрано из Контроллера у виджета Image. Перенес сюда на всякий случай, так как были активные rules в Image.js\r\n\r\n  if (settings !== undefined) {\r\n    margin = getResponsiveSetting(settings, 'position_margin');\r\n  }\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, 'margin');\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'position_padding');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения z-index из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    zIndex = getResponsiveSetting(settings, 'position_z_index');\r\n  }\r\n\r\n  if (zIndex) {\r\n    styles += simplePropertyStyled(zIndex, 'z-index');\r\n  }\r\n\r\n  //Получаем значения opacity из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    opacity = getResponsiveSetting(settings, 'opacity_overlay');\r\n  }\r\n\r\n  if (opacity) {\r\n    styles += opacityStyled(opacity);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения transition-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    transitionDuration = getResponsiveSetting(settings, 'creative_hover_controller');\r\n  }\r\n\r\n  if (transitionDuration) {\r\n    styles += sizeStyled(transitionDuration, 'transition-duration');\r\n  }\r\n\r\n  //Получаем значения animation-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    animationDuration = getResponsiveSetting(settings, 'creative_hover_controller');\r\n  }\r\n\r\n  if (animationDuration) {\r\n    styles += sizeStyled(animationDuration, 'animation-duration');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-image:hover {`;\r\n\r\n  //Получаем значения object-fit из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    objectFit = getResponsiveSetting(settings, 'image_fit_size', ':hover');\r\n  }\r\n\r\n  if (objectFit) {\r\n    styles += simplePropertyStyled(objectFit, 'object-fit');\r\n  }\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_color', ':hover');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradient = getResponsiveSetting(settings, 'gradient', ':hover');\r\n  }\r\n\r\n  if (gradient) {\r\n    styles += gradientStyled(gradient);\r\n  }\r\n\r\n  //Получаем значения filters из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    filters = getResponsiveSetting(settings, 'image_style_text_shadow', ':hover');\r\n  }\r\n\r\n  if (filters) {\r\n    styles += filtersControllerToStyles(filters);\r\n  }\r\n\r\n  //Получаем значения height из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    height = getResponsiveSetting(settings, 'height_size', ':hover');\r\n  }\r\n\r\n  if (height) {\r\n    if(height.size !== \"0\") {\r\n      styles += sizeStyled(height, 'height');\r\n    }\r\n  }\r\n\r\n  //Получаем значения width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    width = getResponsiveSetting(settings, 'width_size', ':hover');\r\n  }\r\n\r\n  if (width) {\r\n    styles += sizeStyled(width, 'width');\r\n  }\r\n\r\n  //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n  //Свойство margin было убрано из Контроллера у виджета Image. Перенес сюда на всякий случай, так как были активные rules в Image.js\r\n\r\n  if (settings !== undefined) {\r\n    margin = getResponsiveSetting(settings, 'position_margin', ':hover');\r\n  }\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, 'margin');\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'position_padding', ':hover');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения z-index из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    zIndex = getResponsiveSetting(settings, 'position_z_index', ':hover');\r\n  }\r\n\r\n  if (zIndex) {\r\n    styles += simplePropertyStyled(zIndex, 'z-index');\r\n  }\r\n\r\n  //Получаем значения opacity из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    opacity = getResponsiveSetting(settings, 'opacity_overlay', ':hover');\r\n  }\r\n\r\n  if (opacity) {\r\n    styles += opacityStyled(opacity);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type', ':hover');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width', ':hover');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color', ':hover');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius', ':hover');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения transition-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    transitionDuration = getResponsiveSetting(settings, 'creative_hover_controller', ':hover');\r\n  }\r\n\r\n  if (transitionDuration) {\r\n    styles += sizeStyled(transitionDuration, 'transition-duration');\r\n  }\r\n\r\n  //Получаем значения animation-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    animationDuration = getResponsiveSetting(settings, 'creative_hover_controller', ':hover');\r\n  }\r\n\r\n  if (animationDuration) {\r\n    styles += sizeStyled(animationDuration, 'animation-duration');\r\n  }\r\n\r\n  styles+=\"} \";\r\n\r\n  styles+=`${parentClass} .altrp-image-container {`;\r\n\r\n  //Получаем значения justify-content из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    justifyContent = getResponsiveSetting(settings, 'image_style_alignment');\r\n  }\r\n\r\n  if (justifyContent) {\r\n    styles += simplePropertyStyled(justifyContent, 'justify-content');\r\n  }\r\n\r\n  styles+=\"} \";\r\n\r\n  styles+=`${parentClass} .altrp-image-container:hover {`;\r\n\r\n  //Получаем значения justify-content из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    justifyContent = getResponsiveSetting(settings, 'image_style_alignment', ':hover');\r\n  }\r\n\r\n  if (justifyContent) {\r\n    styles += simplePropertyStyled(justifyContent, 'justify-content');\r\n  }\r\n\r\n  styles+=\"} \";\r\n\r\n  styles+=`${parentClass} .altrp-background-image {`;\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImage = getResponsiveSetting(settings, 'background_image');\r\n  }\r\n\r\n  if (backgroundImage) {\r\n    styles += backgroundImageControllerToStyles(backgroundImage);\r\n  }\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPosition = getResponsiveSetting(settings, 'background_position');\r\n  }\r\n\r\n  if (backgroundPosition) {\r\n    styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachment = getResponsiveSetting(settings, 'background_attachment');\r\n  }\r\n\r\n  if (backgroundAttachment) {\r\n    styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeat = getResponsiveSetting(settings, 'background_repeat');\r\n  }\r\n\r\n  if (backgroundRepeat) {\r\n    styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в конкретных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnit = getResponsiveSetting(settings, 'background_image_width');\r\n  }\r\n\r\n  if (backgroundSizeInUnit) {\r\n    styles += sizeStyled(backgroundSizeInUnit, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSize = getResponsiveSetting(settings, 'background_size');\r\n  }\r\n\r\n  if (backgroundSize) {\r\n    styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n  }\r\n\r\n  styles+=\"} \";\r\n\r\n  styles+=`${parentClass} .altrp-background-image:hover {`;\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImage = getResponsiveSetting(settings, 'background_image', ':hover');\r\n  }\r\n\r\n  if (backgroundImage) {\r\n    styles += backgroundImageControllerToStyles(backgroundImage);\r\n  }\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPosition = getResponsiveSetting(settings, 'background_position', ':hover');\r\n  }\r\n\r\n  if (backgroundPosition) {\r\n    styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachment = getResponsiveSetting(settings, 'background_attachment', ':hover');\r\n  }\r\n\r\n  if (backgroundAttachment) {\r\n    styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeat = getResponsiveSetting(settings, 'background_repeat', ':hover');\r\n  }\r\n\r\n  if (backgroundRepeat) {\r\n    styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в конкретных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnit = getResponsiveSetting(settings, 'background_image_width', ':hover');\r\n  }\r\n\r\n  if (backgroundSizeInUnit) {\r\n    styles += sizeStyled(backgroundSizeInUnit, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSize = getResponsiveSetting(settings, 'background_size', ':hover');\r\n  }\r\n\r\n  if (backgroundSize) {\r\n    styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n  }\r\n\r\n  styles+=\"} \";\r\n\r\n  let aspect_ratio_size;\r\n\r\n  if (settings !== undefined) {\r\n    aspect_ratio_size = getResponsiveSetting(settings, 'aspect_ratio_size');\r\n    if(Number(aspect_ratio_size) !== 0) {\r\n      styles+= 'padding:0;';\r\n    }\r\n    else{\r\n      padding = getResponsiveSetting(settings, 'position_padding');\r\n      styles +=dimensionsControllerToStyles(padding);\r\n    }\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nexport default ImageLightboxComponent;\r\n","import { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\nimport {\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  simplePropertyStyled,\r\n  colorPropertyStyled,\r\n  borderWidthStyled,\r\n  shadowControllerToStyles,\r\n  sizeStyled, sliderStyled, defaultStyled, colorStyled\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * Стили для класса .altrp-input-wrapper\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst inputWrapperStyle = settings => {\r\n  let styles = `&& .altrp-input-wrapper {`;\r\n  let width;\r\n  //width begin\r\n  settings && (width = getResponsiveSetting(settings, \"field_width\"));\r\n  width && (styles += sizeStyled(width, \"width\"));\r\n  //width end\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst containerStyle = settings => {\r\n  let styles = `&& .altrp-field-container {`;\r\n  let margin;\r\n\r\n  //margin begin\r\n  settings && (margin = getResponsiveSetting(settings, \"position_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n  //margin end\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyle = settings => {\r\n  let styles = `&& .altrp-field, && .altrp-field-checkbox .bp3-control-indicator {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow,\r\n    size\r\n  ;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    input_position,\r\n    textarea_resize,\r\n    justify_options,\r\n    image_select_item_width,\r\n    image_select_item_height,\r\n    image_select_image_fit,\r\n    image_select_image_position,\r\n    cross_size\r\n  } = settings;\r\n\r\n  settings && (size = getResponsiveSetting(settings, \"field_size\"));\r\n  size && (styles += `height:${sliderStyled(size)};width:${sliderStyled(size)};`);\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  // settings &&\r\n  // (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  // typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"position_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  // settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  // color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field, && .altrp-field-checkbox .bp3-control-indicator:before {`;\r\n\r\n\r\n  // settings &&\r\n  // (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  // typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  size && (styles += `height:${sliderStyled(size)};width:${sliderStyled(size)};`);\r\n\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  // settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  // color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  // settings &&\r\n  // (borderRadius = getResponsiveSetting(\r\n  //   settings,\r\n  //   \"global_filter_input_border_radius\"\r\n  // ));\r\n  // borderRadius &&\r\n  // (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-radio-group {`;\r\n\r\n  let fieldAlignment;\r\n\r\n  settings && (fieldAlignment = getResponsiveSetting(settings, \"field_alignment\"));\r\n  fieldAlignment && (styles += `justify-content: ${defaultStyled(fieldAlignment)};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option:hover span.bp3-control-indicator.bp3-control-indicator {\";\r\n\r\n  let backgroundColorHover;\r\n\r\n  settings && (backgroundColorHover = getResponsiveSetting(settings, \"background_style_background_color\", \":hover\"));\r\n\r\n  backgroundColorHover && (styles += colorStyled(backgroundColorHover, \"background-color\"));\r\n\r\n  let boxShadowHover;\r\n\r\n  settings && (boxShadowHover = getResponsiveSetting(settings, \"box_shadow\", \":hover\"));\r\n  boxShadowHover && (styles += shadowControllerToStyles(boxShadowHover));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option label.altrp-field-option__label {\";\r\n\r\n  let fontTypographic;\r\n\r\n  settings &&\r\n  (fontTypographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  fontTypographic && (styles += typographicControllerToStyles(fontTypographic));\r\n\r\n  let fontColor;\r\n\r\n  settings && (fontColor = getResponsiveSetting(settings, \"field_font_color\"));\r\n  fontColor && (styles += colorPropertyStyled(fontColor, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option:hover label.altrp-field-option__label {\";\r\n\r\n  let fontTypographicHover;\r\n\r\n  settings &&\r\n  (fontTypographicHover = getResponsiveSetting(settings, \"field_font_typographic\", \":hover\"));\r\n  fontTypographicHover && (styles += typographicControllerToStyles(fontTypographicHover));\r\n\r\n  let fontColorHover;\r\n\r\n  settings && (fontColorHover = getResponsiveSetting(settings, \"field_font_color\", \":hover\"));\r\n  fontColorHover && (styles += colorPropertyStyled(fontColorHover, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option.active label.altrp-field-option__label {\";\r\n\r\n  let fontTypographicActive;\r\n\r\n  settings &&\r\n  (fontTypographicActive = getResponsiveSetting(settings, \"field_font_typographic\", \".active\"));\r\n  fontTypographicActive && (styles += typographicControllerToStyles(fontTypographicActive));\r\n\r\n  let fontColorActive;\r\n\r\n  settings && (fontColorActive = getResponsiveSetting(settings, \"field_font_color\", \".active\"));\r\n  fontColorActive && (styles += colorPropertyStyled(fontColorActive, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option.active span.bp3-control-indicator.bp3-control-indicator   {\";\r\n\r\n  let backgroundColorActive;\r\n\r\n  settings && (backgroundColorActive = getResponsiveSetting(settings, \"background_style_background_color\", \".active\"));\r\n\r\n  backgroundColorActive && (styles += colorStyled(backgroundColorActive, \"background-color\"));\r\n\r\n  let boxShadowActive;\r\n\r\n  settings && (boxShadowActive = getResponsiveSetting(settings, \"box_shadow\", \".active\"));\r\n  boxShadowActive && (styles += shadowControllerToStyles(boxShadowActive));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option{\";\r\n\r\n  input_position && (styles += `flex-direction:${input_position};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select{\";\r\n\r\n  justify_options && (styles += `justify-content:${justify_options};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select>.altrp-field{\";\r\n\r\n  image_select_item_width &&\r\n  (styles += `width:${image_select_item_width.size}${image_select_item_width.unit};`);\r\n\r\n  image_select_item_height &&\r\n  (styles += `height:${image_select_item_height.size}${image_select_item_height.unit};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select img{\";\r\n  image_select_image_fit && (styles += `object-fit:${image_select_image_fit};`);\r\n  image_select_image_position &&\r\n  (styles += `object-position:${image_select_image_position};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field-option:hover\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyleHover = settings => {\r\n  let styles = `&& .altrp-field, && .altrp-field-option:hover .altrp-field-checkbox .bp3-control-indicator {`;\r\n  let backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow\r\n  ;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    textarea_resize,\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \":hover\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \":hover\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \":hover\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \":hover\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius\",\r\n    \":hover\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \":hover\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  return styles\r\n};\r\n\r\nconst fieldStyleActive = settings => {\r\n  let styles = `&& .altrp-field, && .altrp-field-option.active .altrp-field-checkbox .bp3-control-indicator {`;\r\n  let backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow\r\n  ;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    textarea_resize,\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \".active\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \".active\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \".active\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \".active\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius\",\r\n    \".active\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \".active\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  return styles\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field:hover\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyleFocus = settings => {\r\n  let styles = `&& .altrp-field:focus, && .bp3-input:focus {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \":focus\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\", \":focus\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \":focus\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \":focus\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \":focus\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"global_filter_input_border_radius\",\r\n    \":focus\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \":focus\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\", \":focus\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n\r\n/**\r\n * Стили для класса altrp-image-select__label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst imageSelectLabel = settings => {\r\n  let styles = `&& .altrp-image-select__label {`;\r\n  let color, typographic;\r\n\r\n  const { placeholder_and_value_alignment_position_section } = settings;\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section}`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__single-value\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2SingleValueStyle = settings => {\r\n  let styles = `&& .altrp-field-select2__single-value {`;\r\n  let typographic, color;\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelContainerStyle = settings => {\r\n  let styles = `&& .altrp-field-label-container {`;\r\n  let backgroundColor, padding, width;\r\n  const {\r\n    label_position_top,\r\n    label_position_left,\r\n    label_icon_position\r\n  } = settings;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"label_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"label_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (width = getResponsiveSetting(settings, \"label_width\"));\r\n  width && (styles += `${sizeStyled(width, \"width\")};flex-shrink: 0;`);\r\n\r\n  label_position_top && (styles += `top:${label_position_top};`);\r\n  label_position_left && (styles += `left:${label_position_left};`);\r\n  label_icon_position && (styles += `flex-direction:${label_icon_position};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabel = settings => {\r\n  let styles = `&& .altrp-field-label {`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"label_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"label_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-label-icon\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst labelIconStyle = settings => {\r\n  let styles = `&& .altrp-label-icon {`;\r\n  let padding, backgroundColor, iconSize;\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"icon_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (iconSize = getResponsiveSetting(settings, \"icon_size\"));\r\n  iconSize &&\r\n  (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for path\r\n  styles += `&& .altrp-label-icon path{`;\r\n\r\n  settings && (backgroundColor = getResponsiveSetting(settings, \"icon_color\"));\r\n  backgroundColor && (styles += colorPropertyStyled(backgroundColor, \"fill\"));\r\n\r\n  styles += \"}\";\r\n  //for svg\r\n  styles += `&& .altrp-label-icon svg{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(settings, \"icon_color_background\"));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background\"));\r\n  iconSize &&\r\n  (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for img\r\n  styles += `&& .altrp-label-icon img{`;\r\n\r\n  iconSize &&\r\n  (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для классов\r\n * altrp-field::placeholder\r\n * altrp-field-select2__placeholder\r\n * altrp-field-file__placeholder\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst placeholderStyle = settings => {\r\n  let styles = `&& .altrp-field, && .bp3-input::placeholder{`;\r\n  let color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderColor,\r\n    borderWidth,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"placeholder_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-select2__placeholder{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-file__placeholder{`;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"global_filter_input_border_radius\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"placeholder_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label--required::after\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelRequired = settings => {\r\n  let styles = `&& .altrp-field-label--required::after{`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"required_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"required_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__option\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2Option = (settings, id) => {\r\n  let styles = `.${id}.altrp-field-select2__option{`;\r\n  let backgroundColor;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"option_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(\r\n    backgroundColor,\r\n    \"background-color\",\r\n    \"!important\"\r\n  ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-focused{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"option_focused_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(\r\n    backgroundColor,\r\n    \"background-color\",\r\n    \"!important\"\r\n  ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-selected{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"option_selected_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(\r\n    backgroundColor,\r\n    \"background-color\",\r\n    \"!important\"\r\n  ));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса mask-mismatch-message\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst maskMismatchMessage = (settings, id) => {\r\n  let styles = `&& .mask-mismatch-message{`;\r\n  let margin, padding, color, typographic;\r\n\r\n  settings &&\r\n  (margin = getResponsiveSetting(settings, \"mismatch_message_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n\r\n  settings &&\r\n  (padding = getResponsiveSetting(settings, \"mismatch_message_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(margin, \"padding\"));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"mismatch_message_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"mismatch_message_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n//Точка входа\r\nfunction InputCheckboxComponent(settings) {\r\n\r\n  let styles = \"\";\r\n  const { background_section_opacity } = settings;\r\n  //for all element\r\n  background_section_opacity &&\r\n  (styles += `opacity:${background_section_opacity.size};`);\r\n  //altrp-input-wrapper\r\n  const inputWrapperStyles = inputWrapperStyle(settings);\r\n  inputWrapperStyles && (styles += inputWrapperStyles);\r\n  //altrp-field-container\r\n  const containerStyles = containerStyle(settings);\r\n  containerStyles && (styles += containerStyles);\r\n  //altrp-field\r\n  const fieldStyles = fieldStyle(settings);\r\n  fieldStyles && (styles += fieldStyles);\r\n  //altrp-field:hover\r\n  const fieldStylesHover = fieldStyleHover(settings);\r\n  fieldStylesHover && (styles += fieldStylesHover);\r\n  //altrp-field.active\r\n  const fieldStylesActive = fieldStyleActive(settings);\r\n  fieldStylesActive && (styles += fieldStylesActive);\r\n  //altrp-field:focus\r\n  const fieldStylesFocus = fieldStyleFocus(settings);\r\n  fieldStylesFocus && (styles += fieldStylesFocus);\r\n  //altrp-image-select__label\r\n  const imageSelectLabelStyles = imageSelectLabel(settings);\r\n  imageSelectLabelStyles && (styles += imageSelectLabelStyles);\r\n  //altrp-field-select2__single-value\r\n  const fieldSelect2SingleValueStyles = fieldSelect2SingleValueStyle(settings);\r\n  fieldSelect2SingleValueStyles && (styles += fieldSelect2SingleValueStyles);\r\n  //altrp-field-select2__single-value\r\n  const fieldLabelContainerStyles = fieldLabelContainerStyle(settings);\r\n  fieldLabelContainerStyles && (styles += fieldLabelContainerStyles);\r\n  //altrp-field-label\r\n  const fieldLabelStyles = fieldLabel(settings);\r\n  fieldLabelStyles && (styles += fieldLabelStyles);\r\n  //altrp-label-icon\r\n  const labelIconStyles = labelIconStyle(settings);\r\n  labelIconStyles && (styles += labelIconStyles);\r\n  //altrp-field::placeholder altrp-field-select2__placeholder altrp-field-file__placeholder\r\n  const placeholderStyles = placeholderStyle(settings);\r\n  placeholderStyles && (styles += placeholderStyles);\r\n  //altrp-field-label--required::after\r\n  const fieldLabelRequiredStyles = fieldLabelRequired(settings);\r\n  fieldLabelRequiredStyles && (styles += fieldLabelRequiredStyles);\r\n  //mask-mismatch-message\r\n  const maskMismatchMessageStyles = maskMismatchMessage(settings);\r\n  maskMismatchMessageStyles && (styles += maskMismatchMessageStyles);\r\n  //finish\r\n  return styles;\r\n}\r\nexport default InputCheckboxComponent\r\n","import { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\nimport {\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  simplePropertyStyled,\r\n  colorPropertyStyled,\r\n  borderWidthStyled,\r\n  shadowControllerToStyles,\r\n  sizeStyled\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * Стили для класса .altrp-input-wrapper\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst inputWrapperStyle = settings => {\r\n  let styles = `&& .altrp-input-wrapper {`;\r\n  let width;\r\n  //width begin\r\n  settings && (width = getResponsiveSetting(settings, \"field_width\"));\r\n  width && (styles += sizeStyled(width, \"width\"));\r\n  //width end\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst containerStyle = settings => {\r\n  let styles = `&& .altrp-field-container {`;\r\n  let margin;\r\n\r\n  //margin begin\r\n  settings && (margin = getResponsiveSetting(settings, \"position_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n  //margin end\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyle = settings => {\r\n  let styles = `& .altrp-field, & .bp3-input {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    input_position,\r\n    textarea_resize,\r\n    justify_options,\r\n    image_select_item_width,\r\n    image_select_item_height,\r\n    image_select_image_fit,\r\n    image_select_image_position,\r\n    cross_size\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"position_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n    (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n    (borderRadius = getResponsiveSetting(\r\n      settings,\r\n      \"global_filter_input_border_radius\"\r\n    ));\r\n  borderRadius &&\r\n    (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n    (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option{\";\r\n\r\n  input_position && (styles += `flex-direction:${input_position};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select{\";\r\n\r\n  justify_options && (styles += `justify-content:${justify_options};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select>.altrp-field{\";\r\n\r\n  image_select_item_width &&\r\n    (styles += `width:${image_select_item_width.size}${image_select_item_width.unit};`);\r\n\r\n  image_select_item_height &&\r\n    (styles += `height:${image_select_item_height.size}${image_select_item_height.unit};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select img{\";\r\n  image_select_image_fit && (styles += `object-fit:${image_select_image_fit};`);\r\n  image_select_image_position &&\r\n    (styles += `object-position:${image_select_image_position};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n/**\r\n* Стили для класса altrp-field:hover\r\n* @param {Object} settings style settings of element\r\n* @returns {String} CSS style string\r\n*/\r\nconst fieldStyleHover = settings => {\r\n  let styles = `&& .altrp-field:hover, && .bp3-input:hover {`;\r\n  let color,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \":hover\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\", \":hover\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \":hover\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \":hover\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \":hover\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"global_filter_input_border_radius\",\r\n    \":hover\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \":hover\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\", \":hover\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field:hover\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyleFocus = settings => {\r\n  let styles = `&& .altrp-field:focus, && .bp3-input:focus {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \":focus\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\", \":focus\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \":focus\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \":focus\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \":focus\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"global_filter_input_border_radius\",\r\n    \":focus\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \":focus\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\", \":focus\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n\r\n/**\r\n * Стили для класса altrp-image-select__label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst imageSelectLabel = settings => {\r\n  let styles = `&& .altrp-image-select__label {`;\r\n  let color, typographic;\r\n\r\n  const { placeholder_and_value_alignment_position_section } = settings;\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n    (styles += `text-align:${placeholder_and_value_alignment_position_section}`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__single-value\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2SingleValueStyle = settings => {\r\n  let styles = `&& .altrp-field-select2__single-value {`;\r\n  let typographic, color;\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabel = settings => {\r\n  let styles = `&& .altrp-field-label {`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"label_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"label_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `& .altrp-field-label-container {`;\r\n  let backgroundColor, padding, width;\r\n  const {\r\n    label_position_top,\r\n    label_position_left,\r\n    label_icon_position\r\n  } = settings;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"label_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"label_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (width = getResponsiveSetting(settings, \"label_width\"));\r\n  width && (styles += `${sizeStyled(width, \"width\")};flex-shrink: 0;`);\r\n\r\n  label_position_top && (styles += `top:${label_position_top};`);\r\n  label_position_left && (styles += `left:${label_position_left};`);\r\n  label_icon_position && (styles += `flex-direction:${label_icon_position};`);\r\n\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-label-icon\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst labelIconStyle = settings => {\r\n  let styles = `&& .altrp-label-icon {`;\r\n  let padding, backgroundColor, iconSize;\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"icon_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (iconSize = getResponsiveSetting(settings, \"icon_size\"));\r\n  iconSize &&\r\n    (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for path\r\n  styles += `&& .altrp-label-icon path{`;\r\n\r\n  settings && (backgroundColor = getResponsiveSetting(settings, \"icon_color\"));\r\n  backgroundColor && (styles += colorPropertyStyled(backgroundColor, \"fill\"));\r\n\r\n  styles += \"}\";\r\n  //for svg\r\n  styles += `&& .altrp-label-icon svg{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(settings, \"icon_color_background\"));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background\"));\r\n  iconSize &&\r\n    (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for img\r\n  styles += `&& .altrp-label-icon img{`;\r\n\r\n  iconSize &&\r\n    (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для классов\r\n * altrp-field::placeholder\r\n * altrp-field-select2__placeholder\r\n * altrp-field-file__placeholder\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst placeholderStyle = settings => {\r\n  let styles = `&& .altrp-field, && .bp3-input::placeholder{`;\r\n  let color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderColor,\r\n    borderWidth,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"placeholder_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-select2__placeholder{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-file__placeholder{`;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n    (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n    (borderRadius = getResponsiveSetting(\r\n      settings,\r\n      \"global_filter_input_border_radius\"\r\n    ));\r\n  borderRadius &&\r\n    (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"placeholder_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label--required::after\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelRequired = settings => {\r\n  let styles = `&& .altrp-field-label--required::after{`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"required_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"required_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__option\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2Option = (settings, id) => {\r\n  let styles = `.${id}.altrp-field-select2__option{`;\r\n  let backgroundColor;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"option_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(\r\n      backgroundColor,\r\n      \"background-color\",\r\n      \"!important\"\r\n    ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-focused{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"option_focused_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(\r\n      backgroundColor,\r\n      \"background-color\",\r\n      \"!important\"\r\n    ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-selected{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"option_selected_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(\r\n      backgroundColor,\r\n      \"background-color\",\r\n      \"!important\"\r\n    ));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса mask-mismatch-message\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst maskMismatchMessage = (settings, id) => {\r\n  let styles = `&& .mask-mismatch-message{`;\r\n  let margin, padding, color, typographic;\r\n\r\n  settings &&\r\n    (margin = getResponsiveSetting(settings, \"mismatch_message_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n\r\n  settings &&\r\n    (padding = getResponsiveSetting(settings, \"mismatch_message_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(margin, \"padding\"));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"mismatch_message_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"mismatch_message_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n//Точка входа\r\nfunction InputDateComponent(settings, elementId, prefix) {\r\n\r\n  let styles = \"\";\r\n  const { background_section_opacity } = settings;\r\n  //for all element\r\n  styles += `.${prefix}${elementId} {`\r\n  background_section_opacity &&\r\n    (styles += `opacity:${background_section_opacity.size};`);\r\n  //altrp-input-wrapper\r\n  styles += `}`;\r\n  styles += `.${prefix}${elementId} {`\r\n  const inputWrapperStyles = inputWrapperStyle(settings);\r\n  inputWrapperStyles && (styles += inputWrapperStyles);\r\n  styles += `}`;\r\n  //altrp-field-container\r\n  styles += `.${prefix}${elementId} {`\r\n  const containerStyles = containerStyle(settings);\r\n  containerStyles && (styles += containerStyles);\r\n  styles += `}`;\r\n  //altrp-field\r\n  styles += `.${prefix}${elementId} {`\r\n  const fieldStyles = fieldStyle(settings);\r\n  fieldStyles && (styles += fieldStyles);\r\n  styles += `}`;\r\n  //altrp-field:hover\r\n  styles += `.${prefix}${elementId} {`\r\n  const fieldStylesHover = fieldStyleHover(settings);\r\n  fieldStylesHover && (styles += fieldStylesHover);\r\n  styles += `}`;\r\n  //altrp-field:focus\r\n  styles += `.${prefix}${elementId} {`\r\n  const fieldStylesFocus = fieldStyleFocus(settings);\r\n  fieldStylesFocus && (styles += fieldStylesFocus);\r\n  styles += `}`;\r\n  //altrp-image-select__label\r\n  styles += `.${prefix}${elementId} {`\r\n  const imageSelectLabelStyles = imageSelectLabel(settings);\r\n  imageSelectLabelStyles && (styles += imageSelectLabelStyles);\r\n  styles += `}`;\r\n  //altrp-field-select2__single-value\r\n  styles += `.${prefix}${elementId} {`\r\n  const fieldSelect2SingleValueStyles = fieldSelect2SingleValueStyle(settings);\r\n  fieldSelect2SingleValueStyles && (styles += fieldSelect2SingleValueStyles);\r\n  styles += `}`;\r\n  //altrp-field-label\r\n  styles += `.${prefix}${elementId} {`\r\n  const fieldLabelStyles = fieldLabel(settings);\r\n  fieldLabelStyles && (styles += fieldLabelStyles);\r\n  styles += `}`;\r\n  //altrp-label-icon\r\n  styles += `.${prefix}${elementId} {`\r\n  const labelIconStyles = labelIconStyle(settings);\r\n  labelIconStyles && (styles += labelIconStyles);\r\n  styles += `}`;\r\n  //altrp-field::placeholder altrp-field-select2__placeholder altrp-field-file__placeholder\r\n  styles += `.${prefix}${elementId} {`\r\n  const placeholderStyles = placeholderStyle(settings);\r\n  placeholderStyles && (styles += placeholderStyles);\r\n  styles += `}`;\r\n  //altrp-field-label--required::after\r\n  styles += `.${prefix}${elementId} {`\r\n  const fieldLabelRequiredStyles = fieldLabelRequired(settings);\r\n  fieldLabelRequiredStyles && (styles += fieldLabelRequiredStyles);\r\n  styles += `}`;\r\n  //mask-mismatch-message\r\n  styles += `.${prefix}${elementId} {`\r\n  const maskMismatchMessageStyles = maskMismatchMessage(settings);\r\n  maskMismatchMessageStyles && (styles += maskMismatchMessageStyles);\r\n  styles += `}`;\r\n  //finish\r\n  return styles;\r\n}\r\nexport default InputDateComponent\r\n","import { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\nimport {\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  simplePropertyStyled,\r\n  colorPropertyStyled,\r\n  borderWidthStyled,\r\n  shadowControllerToStyles,\r\n  sizeStyled, sliderStyled, defaultStyled, colorStyled, colorStyledSecond, styledString\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * Стили для класса .altrp-input-wrapper\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst inputWrapperStyle = settings => {\r\n  let styles = `&& .altrp-input-wrapper {`;\r\n  let width;\r\n  //width begin\r\n  settings && (width = getResponsiveSetting(settings, \"field_width\"));\r\n  width && (styles += sizeStyled(width, \"width\"));\r\n  //width end\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst containerStyle = settings => {\r\n  let styles = `&& .altrp-field-container {`;\r\n  let margin, aligment;\r\n\r\n  //margin begin\r\n  settings && (margin = getResponsiveSetting(settings, \"position_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n  //margin end\r\n\r\n  settings && (aligment = getResponsiveSetting(settings, \"alignment_radio\"));\r\n  aligment && (styles += `align-items: ${defaultStyled(aligment)};`);\r\n  //margin end\r\n\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyle = settings => {\r\n  let styles = `.altrp-field-container .bp3-control-indicator.bp3-control-indicator.bp3-control-indicator {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow,\r\n    size\r\n  ;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    input_position,\r\n    textarea_resize,\r\n    justify_options,\r\n    image_select_item_width,\r\n    image_select_item_height,\r\n    image_select_image_fit,\r\n    image_select_image_position,\r\n    cross_size\r\n  } = settings;\r\n\r\n  settings && (size = getResponsiveSetting(settings, \"field_size\"));\r\n  size && (styles += `height:${sliderStyled(size)};width:${sliderStyled(size)};`);\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  // settings &&\r\n  // (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  // typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  // settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  // color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-radio .bp3-control-indicator:before {\";\r\n\r\n  size && (styles += `height:${sliderStyled(size)};width:${sliderStyled(size)};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-radio {\";\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"position_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  styles += \"}\";\r\n\r\n\r\n  styles += \"&& .altrp-field-radio {\";\r\n\r\n  let fontTypographic;\r\n\r\n  settings &&\r\n  (fontTypographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  fontTypographic && (styles += typographicControllerToStyles(fontTypographic));\r\n\r\n  let fontColor;\r\n\r\n  settings && (fontColor = getResponsiveSetting(settings, \"field_font_color\"));\r\n  fontColor && (styles += colorPropertyStyled(fontColor, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-radio:hover {\";\r\n\r\n  let fontTypographicHover;\r\n\r\n  settings &&\r\n  (fontTypographicHover = getResponsiveSetting(settings, \"field_font_typographic\", \":hover\"));\r\n  fontTypographicHover && (styles += typographicControllerToStyles(fontTypographicHover));\r\n\r\n  let fontColorHover;\r\n\r\n  settings && (fontColorHover = getResponsiveSetting(settings, \"field_font_color\", \":hover\"));\r\n  fontColorHover && (styles += colorPropertyStyled(fontColorHover, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-radio.active {\";\r\n\r\n  let fontTypographicActive;\r\n\r\n  settings &&\r\n  (fontTypographicActive = getResponsiveSetting(settings, \"field_font_typographic\", \".active\"));\r\n  fontTypographicActive && (styles += typographicControllerToStyles(fontTypographicActive));\r\n\r\n  let fontColorActive;\r\n\r\n  settings && (fontColorActive = getResponsiveSetting(settings, \"field_font_color\", \".active\"));\r\n  fontColorActive && (styles += colorPropertyStyled(fontColorActive, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-radio.bp3-control.bp3-radio input:checked ~ .bp3-control-indicator::before {\";\r\n\r\n  let dotColor;\r\n\r\n  settings && (dotColor = getResponsiveSetting(settings, \"background_style_dot\"));\r\n\r\n  let dotSize;\r\n\r\n  settings && (dotSize = getResponsiveSetting(settings, \"size_style_dot\"));\r\n\r\n  if(dotSize || dotColor) {\r\n\r\n    if(!dotSize) {\r\n      dotSize = {\r\n        size: 28,\r\n        unit: \"%\"\r\n      }\r\n    }\r\n\r\n    if(!dotColor) {\r\n      dotColor = {\r\n        color: \"rgba(255, 255, 255, 1)\",\r\n        colorPickedHex: \"#ffffff\",\r\n        colorRGB: {r: 255, g: 255, b: 255, a: 1}\r\n      }\r\n    }\r\n\r\n    styles += `background-image: radial-gradient(${colorStyledSecond(dotColor)}, ${colorStyledSecond(dotColor)} ${sliderStyled(dotSize)}, rgba(0, 0, 0, 0) calc(${sliderStyled(dotSize)} + 6%));`\r\n  }\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-subgroup {`;\r\n\r\n  let fieldAlignment;\r\n\r\n  settings && (fieldAlignment = getResponsiveSetting(settings, \"alignment\"));\r\n  fieldAlignment && (styles += `justify-content: ${defaultStyled(fieldAlignment)};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option{\";\r\n\r\n  input_position && (styles += `flex-direction:${input_position};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select{\";\r\n\r\n  justify_options && (styles += `justify-content:${justify_options};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select>.altrp-field{\";\r\n\r\n  image_select_item_width &&\r\n  (styles += `width:${image_select_item_width.size}${image_select_item_width.unit};`);\r\n\r\n  image_select_item_height &&\r\n  (styles += `height:${image_select_item_height.size}${image_select_item_height.unit};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select img{\";\r\n  image_select_image_fit && (styles += `object-fit:${image_select_image_fit};`);\r\n  image_select_image_position &&\r\n  (styles += `object-position:${image_select_image_position};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field:hover\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyleHover = settings => {\r\n  let styles = `.altrp-field-container .altrp-field-radio:hover .bp3-control-indicator.bp3-control-indicator.bp3-control-indicator {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow,\r\n    size\r\n  ;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    input_position,\r\n    textarea_resize,\r\n    justify_options,\r\n    image_select_item_width,\r\n    image_select_item_height,\r\n    image_select_image_fit,\r\n    image_select_image_position,\r\n    cross_size\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \":hover\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  // settings &&\r\n  // (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  // typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  // settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  // color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \":hover\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \":hover\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \":hover\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius\",\r\n    \":hover\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \":hover\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-radio.bp3-control.bp3-radio:hover input:checked ~ .bp3-control-indicator.bp3-control-indicator::before {\";\r\n\r\n  let dotColor;\r\n\r\n  settings && (dotColor = getResponsiveSetting(settings, \"background_style_dot\", \":hover\"));\r\n\r\n  let dotSize;\r\n\r\n  settings && (dotSize = getResponsiveSetting(settings, \"size_style_dot\", \":hover\"));\r\n\r\n  if(dotSize || dotColor) {\r\n\r\n    if(!dotSize) {\r\n      dotSize = {\r\n        size: 28,\r\n        unit: \"%\"\r\n      }\r\n    }\r\n\r\n    if(!dotColor) {\r\n      dotColor = {\r\n        color: \"rgba(255, 255, 255, 1)\",\r\n        colorPickedHex: \"#ffffff\",\r\n        colorRGB: {r: 255, g: 255, b: 255, a: 1}\r\n      }\r\n    }\r\n\r\n    styles += `background-image: radial-gradient(${colorStyledSecond(dotColor)}, ${colorStyledSecond(dotColor)} ${sliderStyled(dotSize)}, rgba(0, 0, 0, 0) calc(${sliderStyled(dotSize)} + 6%));`\r\n  }\r\n\r\n  styles += \"}\";\r\n\r\n  return styles\r\n};\r\n\r\nconst fieldStyleActive = settings => {\r\n  let styles = `.altrp-field-container .altrp-field-radio.active .bp3-control-indicator.bp3-control-indicator.bp3-control-indicator {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow,\r\n    size\r\n  ;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    input_position,\r\n    textarea_resize,\r\n    justify_options,\r\n    image_select_item_width,\r\n    image_select_item_height,\r\n    image_select_image_fit,\r\n    image_select_image_position,\r\n    cross_size\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \".active\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  // settings &&\r\n  // (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  // typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  // settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  // color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \".active\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \".active\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \".active\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius\",\r\n    \".active\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \".active\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  return styles\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field:hover\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyleFocus = settings => {\r\n  let styles = `&& .altrp-field:focus, && .bp3-input:focus {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \":focus\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\", \":focus\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \":focus\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \":focus\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \":focus\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"global_filter_input_border_radius\",\r\n    \":focus\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \":focus\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\", \":focus\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n\r\n/**\r\n * Стили для класса altrp-image-select__label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst imageSelectLabel = settings => {\r\n  let styles = `&& .altrp-image-select__label {`;\r\n  let color, typographic;\r\n\r\n  const { placeholder_and_value_alignment_position_section } = settings;\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section}`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__single-value\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2SingleValueStyle = settings => {\r\n  let styles = `&& .altrp-field-select2__single-value {`;\r\n  let typographic, color;\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelContainerStyle = settings => {\r\n  let styles = `&& .altrp-field-label-container {`;\r\n  let backgroundColor, padding, width;\r\n  const {\r\n    label_position_top,\r\n    label_position_left,\r\n    label_icon_position\r\n  } = settings;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"label_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"label_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (width = getResponsiveSetting(settings, \"label_width\"));\r\n  width && (styles += `${sizeStyled(width, \"width\")};flex-shrink: 0;`);\r\n\r\n  label_position_top && (styles += `top:${label_position_top};`);\r\n  label_position_left && (styles += `left:${label_position_left};`);\r\n  label_icon_position && (styles += `flex-direction:${label_icon_position};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabel = settings => {\r\n  let styles = `&& .altrp-field-label {`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"label_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"label_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-label-icon\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst labelIconStyle = settings => {\r\n  let styles = `&& .altrp-label-icon {`;\r\n  let padding, backgroundColor, iconSize;\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"icon_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (iconSize = getResponsiveSetting(settings, \"icon_size\"));\r\n  iconSize &&\r\n  (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for path\r\n  styles += `&& .altrp-label-icon path{`;\r\n\r\n  settings && (backgroundColor = getResponsiveSetting(settings, \"icon_color\"));\r\n  backgroundColor && (styles += colorPropertyStyled(backgroundColor, \"fill\"));\r\n\r\n  styles += \"}\";\r\n  //for svg\r\n  styles += `&& .altrp-label-icon svg{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(settings, \"icon_color_background\"));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background\"));\r\n  iconSize &&\r\n  (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for img\r\n  styles += `&& .altrp-label-icon img{`;\r\n\r\n  iconSize &&\r\n  (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для классов\r\n * altrp-field::placeholder\r\n * altrp-field-select2__placeholder\r\n * altrp-field-file__placeholder\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst placeholderStyle = settings => {\r\n  let styles = `&& .altrp-field, && .bp3-input::placeholder{`;\r\n  let color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderColor,\r\n    borderWidth,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"placeholder_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-select2__placeholder{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-file__placeholder{`;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"global_filter_input_border_radius\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"placeholder_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label--required::after\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelRequired = settings => {\r\n  let styles = `&& .altrp-field-label--required::after{`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"required_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"required_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__option\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2Option = (settings, id) => {\r\n  let styles = `.${id}.altrp-field-select2__option{`;\r\n  let backgroundColor;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"option_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(\r\n    backgroundColor,\r\n    \"background-color\",\r\n    \"!important\"\r\n  ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-focused{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"option_focused_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(\r\n    backgroundColor,\r\n    \"background-color\",\r\n    \"!important\"\r\n  ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-selected{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"option_selected_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(\r\n    backgroundColor,\r\n    \"background-color\",\r\n    \"!important\"\r\n  ));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса mask-mismatch-message\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst maskMismatchMessage = (settings, id) => {\r\n  let styles = `&& .mask-mismatch-message{`;\r\n  let margin, padding, color, typographic;\r\n\r\n  settings &&\r\n  (margin = getResponsiveSetting(settings, \"mismatch_message_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n\r\n  settings &&\r\n  (padding = getResponsiveSetting(settings, \"mismatch_message_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(margin, \"padding\"));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"mismatch_message_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"mismatch_message_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n//Точка входа\r\nfunction InputCheckboxComponent(settings, elementId, prefix) {\r\n\r\n  let styles = \"\";\r\n\r\n  styles += `.${prefix}${elementId} {`;\r\n  const { background_section_opacity } = settings;\r\n  //for all element\r\n  background_section_opacity &&\r\n  (styles += `opacity:${background_section_opacity.size};`);\r\n  styles += `}`;\r\n  //altrp-input-wrapper\r\n  styles += `.${prefix}${elementId} {`;\r\n  const inputWrapperStyles = inputWrapperStyle(settings);\r\n  inputWrapperStyles && (styles += inputWrapperStyles);\r\n  styles += `}`;\r\n  //altrp-field-container\r\n  styles += `.${prefix}${elementId} {`;\r\n  const containerStyles = containerStyle(settings);\r\n  containerStyles && (styles += containerStyles);\r\n  styles += `}`;\r\n  //altrp-field-radio\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldStyles = fieldStyle(settings);\r\n  fieldStyles && (styles += fieldStyles);\r\n  styles += `}`;\r\n  //altrp-field-radio:hover\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldStylesHover = fieldStyleHover(settings);\r\n  fieldStylesHover && (styles += fieldStylesHover);\r\n  styles += `}`;\r\n  //altrp-field-radio.active\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldStylesActive = fieldStyleActive(settings);\r\n  fieldStylesActive && (styles += fieldStylesActive);\r\n  styles += `}`;\r\n\r\n  //altrp-field:focus\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldStylesFocus = fieldStyleFocus(settings);\r\n  fieldStylesFocus && (styles += fieldStylesFocus);\r\n  styles += `}`;\r\n  //altrp-image-select__label\r\n  styles += `.${prefix}${elementId} {`;\r\n  const imageSelectLabelStyles = imageSelectLabel(settings);\r\n  imageSelectLabelStyles && (styles += imageSelectLabelStyles);\r\n  styles += `}`;\r\n  //altrp-field-select2__single-value\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldSelect2SingleValueStyles = fieldSelect2SingleValueStyle(settings);\r\n  fieldSelect2SingleValueStyles && (styles += fieldSelect2SingleValueStyles);\r\n  styles += `}`;\r\n  //altrp-field-select2__single-value\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldLabelContainerStyles = fieldLabelContainerStyle(settings);\r\n  fieldLabelContainerStyles && (styles += fieldLabelContainerStyles);\r\n  styles += `}`;\r\n  //altrp-field-label\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldLabelStyles = fieldLabel(settings);\r\n  fieldLabelStyles && (styles += fieldLabelStyles);\r\n  styles += `}`;\r\n  //altrp-label-icon\r\n  styles += `.${prefix}${elementId} {`;\r\n  const labelIconStyles = labelIconStyle(settings);\r\n  labelIconStyles && (styles += labelIconStyles);\r\n  styles += `}`;\r\n  //altrp-field::placeholder altrp-field-select2__placeholder altrp-field-file__placeholder\r\n  styles += `.${prefix}${elementId} {`;\r\n  const placeholderStyles = placeholderStyle(settings);\r\n  placeholderStyles && (styles += placeholderStyles);\r\n  styles += `}`;\r\n  //altrp-field-label--required::after\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldLabelRequiredStyles = fieldLabelRequired(settings);\r\n  fieldLabelRequiredStyles && (styles += fieldLabelRequiredStyles);\r\n  styles += `}`;\r\n  //mask-mismatch-message\r\n  styles += `.${prefix}${elementId} {`;\r\n  const maskMismatchMessageStyles = maskMismatchMessage(settings);\r\n  maskMismatchMessageStyles && (styles += maskMismatchMessageStyles);\r\n  styles += `}`;\r\n  //finish\r\n  return styles;\r\n}\r\nexport default InputCheckboxComponent\r\n","\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nexport default function InputRangeSliderComponent(settings) {\r\n  const styles = [\r\n    \"bp3-slider-axis .bp3-slider-label\",\r\n      [\"\", \"label_typographic\", \"typographic\"],\r\n      [\"color\", \"label_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-axis .bp3-slider-label:hover\",\r\n      [\"\", \"label_typographic\", \"typographic\", \":hover\"],\r\n      [\"color\", \"label_color\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle span.bp3-slider-label\",\r\n      [\"\", \"current_label_typographic\", \"typographic\"],\r\n      [\"color\", \"current_label_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle:hover span.bp3-slider-label\",\r\n      [\"\", \"current_label_typographic\", \"typographic\", \":hover\"],\r\n      [\"color\", \"current_label_color\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n\r\n    \"bp3-slider-handle\",\r\n      [\"height\", \"handle_size\", \"slider\"],\r\n      [\"width\", \"handle_size\", \"slider\"],\r\n      [\"border-radius\", \"handle_radius\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"altrp-field-slider-horizontal .altrp-field-slider\",\r\n      [\"width\", \"width\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-field-slider-vertical .altrp-field-slider\",\r\n      [\"height\", \"length\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-progress, & .bp3-slider-track\",\r\n      [\"height\", \"height\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-field-slider-vertical .bp3-slider-progress.bp3-slider-progress, & .altrp-field-slider-vertical .bp3-slider-track.bp3-slider-track\",\r\n      [\"width\", \"thickness\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-field-slider-horizontal .bp3-slider-label\",\r\n      () => {\r\n        let height = getResponsiveSetting(settings, \"height\", \"\", { size: 6, unit: \"px\" })\r\n\r\n        height = sliderStyled(height)\r\n\r\n        return `transform: translate(-50%, calc(14px + ${height}));`\r\n      },\r\n    \"}\",\r\n\r\n    \"altrp-field-slider-vertical .bp3-slider-label.bp3-slider-label.bp3-slider-label\",\r\n      () => {\r\n        let thickness = getResponsiveSetting(settings, \"thickness\", \"\", { size: 6, unit: \"px\" })\r\n\r\n        thickness = sliderStyled(thickness)\r\n\r\n        return `transform: translate(calc(14px + ${thickness}), 50%);`\r\n      },\r\n    \"}\",\r\n\r\n    \"altrp-field-slider\",\r\n      () => {\r\n        let height = getResponsiveSetting(settings, \"height\", \"\", { size: 6, unit: \"px\" })\r\n\r\n        height = sliderStyled(height)\r\n\r\n        return `height: calc(35px + ${height});`\r\n      },\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle .bp3-slider-label, & .bp3-slider-handle.bp3-active .bp3-slider-label\",\r\n      [\"background-color\", \"tooltip_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle, & .bp3-slider-handle.bp3-active\",\r\n      [\"background-color\", \"handle_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle:hover, & .bp3-slider-handle:hover.bp3-active\",\r\n      [\"background-color\", \"handle_color\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle:active, & .bp3-slider-handle:active.bp3-active \",\r\n    [\"background-color\", \"handle_color\", \"color\", \".active\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-progress.bp3-intent-primary\",\r\n      [\"background-color\", \"filled_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-progress\",\r\n      [\"background-color\", \"blank_color\", \"color\"],\r\n    \"}\",\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nexport default function InputSliderComponent(settings) {\r\n  const styles = [\r\n    \"bp3-slider-axis .bp3-slider-label\",\r\n      [\"\", \"label_typographic\", \"typographic\"],\r\n      [\"color\", \"label_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-axis .bp3-slider-label:hover\",\r\n      [\"\", \"label_typographic\", \"typographic\", \":hover\"],\r\n      [\"color\", \"label_color\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle span.bp3-slider-label\",\r\n      [\"\", \"current_label_typographic\", \"typographic\"],\r\n      [\"color\", \"current_label_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle:hover span.bp3-slider-label\",\r\n      [\"\", \"current_label_typographic\", \"typographic\", \":hover\"],\r\n      [\"color\", \"current_label_color\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n\r\n    \"bp3-slider-handle\",\r\n      [\"height\", \"handle_size\", \"slider\"],\r\n      [\"width\", \"handle_size\", \"slider\"],\r\n      [\"border-radius\", \"handle_radius\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"altrp-field-slider-horizontal .altrp-field-slider\",\r\n      [\"width\", \"width\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-field-slider-vertical .altrp-field-slider\",\r\n      [\"height\", \"length\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-progress, & .bp3-slider-track\",\r\n      [\"height\", \"height\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-field-slider-vertical .bp3-slider-progress.bp3-slider-progress, & .altrp-field-slider-vertical .bp3-slider-track.bp3-slider-track\",\r\n      [\"width\", \"thickness\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-field-slider-horizontal .bp3-slider-label\",\r\n      () => {\r\n        let height = getResponsiveSetting(settings, \"height\", \"\", { size: 6, unit: \"px\" })\r\n\r\n        height = sliderStyled(height)\r\n\r\n        return `transform: translate(-50%, calc(14px + ${height}));`\r\n      },\r\n    \"}\",\r\n\r\n    \"altrp-field-slider-vertical .bp3-slider-label.bp3-slider-label.bp3-slider-label\",\r\n      () => {\r\n        let thickness = getResponsiveSetting(settings, \"thickness\", \"\", { size: 6, unit: \"px\" })\r\n\r\n        thickness = sliderStyled(thickness)\r\n\r\n        return `transform: translate(calc(14px + ${thickness}), 50%);`\r\n      },\r\n    \"}\",\r\n\r\n    \"altrp-field-slider\",\r\n      () => {\r\n        let height = getResponsiveSetting(settings, \"height\", \"\", { size: 6, unit: \"px\" })\r\n\r\n        height = sliderStyled(height)\r\n\r\n        return `height: calc(35px + ${height});`\r\n      },\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle .bp3-slider-label, & .bp3-slider-handle.bp3-active .bp3-slider-label\",\r\n      [\"background-color\", \"tooltip_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle, & .bp3-slider-handle.bp3-active\",\r\n      [\"background-color\", \"handle_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle:hover, & .bp3-slider-handle:hover.bp3-active\",\r\n      [\"background-color\", \"handle_color\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-handle:active, & .bp3-slider-handle:active.bp3-active \",\r\n    [\"background-color\", \"handle_color\", \"color\", \".active\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-progress.bp3-intent-primary\",\r\n      [\"background-color\", \"filled_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"bp3-slider-progress\",\r\n      [\"background-color\", \"blank_color\", \"color\"],\r\n    \"}\",\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport default function ListComponent(settings) {\r\n  const styles = [\r\n    \"altrp-list\",\r\n    [\"margin\", \"position_margin\", \"dimensions\"],\r\n    [\"padding\", \"position_padding\", \"dimensions\"],\r\n\r\n    [\"z-index\", \"position_z_index\"],\r\n    \"}\",\r\n\r\n    \"altrp-list:hover\",\r\n    [\"margin\", \"position_margin\", \"dimensions\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-ul-inline, & .altrp-list-ul-default .altrp-list-li\",\r\n    [\"justify-content\", \"alignment_list_style\"],\r\n    \"}\",\r\n\r\n    \"& div.altrp-list-li-divider-default\",\r\n    [\"border-top-style\", \"divider_style_list_style\"],\r\n    [\"border-top-width\", \"divider_weight_list_style\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-li-divider-inline\",\r\n    [\"border-right-style\", \"divider_style_list_style\"],\r\n    [\"border-right-width\", \"divider_weight_list_style\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"& div.altrp-list-li-divider\",\r\n    [\"border-color\", \"divider_color_list_style\", \"color\"],\r\n    [\"width\", \"divider_width_list_style\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-icon, & .altrp-list-icon svg\",\r\n    [\"width\", \"size_icon_style\", \"slider\"],\r\n    [\"height\", \"size_icon_style\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-icon path\",\r\n    [\"fill\", \"fill_icon_style\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-icon\",\r\n    [\"background-color\", \"background_icon_style\", \"color\"],\r\n    [\"padding\", \"padding_icon_style\", \"dimensions\"],\r\n    [\"border-radius\", \"border-radius_icon_style\", \"dimensions\"],\r\n    [\"border-style\", \"border-type_icon_style\"],\r\n    [\"border-width\", \"border-width_icon_style\", \"dimensions\"],\r\n    [\"border-color\", \"border_color_icon_style\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-label\",\r\n    [\"margin-left\", \"indent_text_style\", \"slider\"],\r\n    [\"color\", \"color_text_style\", \"color\"],\r\n    [\"background-color\", \"background_color_text_style\", \"color\"],\r\n    [\"padding\", \"padding_text_style\", \"dimensions\"],\r\n    [\"border-radius\", \"border-radius_text_style\", \"dimensions\"],\r\n    [\"border-style\", \"border-type_text_style\"],\r\n    [\"border-width\", \"border-width_text_style\", \"dimensions\"],\r\n    [\"border-color\", \"border_color_text_style\", \"color\"],\r\n    [\"\", \"typographic_text_style\", \"typographic\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-li:hover\",\r\n    \"altrp-list-icon, & .altrp-list-icon svg\",\r\n    [\"width\", \"size_icon_style\", \"slider\", \":hover\"],\r\n    [\"height\", \"size_icon_style\", \"slider\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-icon:hover path\",\r\n    [\"fill\", \"fill_icon_style\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-icon:hover\",\r\n    [\"background-color\", \"background_icon_style\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border-radius_icon_style\", \"dimensions\", \":hover\"],\r\n    [\"border-style\", \"border-type_icon_style\", \"\", \":hover\"],\r\n    [\"border-width\", \"border-width_icon_style\", \"dimensions\", \":hover\"],\r\n    [\"border-color\", \"border_color_icon_style\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-label:hover\",\r\n    [\"margin-left\", \"indent_text_style\", \"slider\", \":hover\"],\r\n    [\"color\", \"color_text_style\", \"color\", \":hover\"],\r\n    [\"background-color\", \"background_color_text_style\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border-radius_text_style\", \"dimensions\", \":hover\"],\r\n    [\"border-style\", \"border-type_text_style\", \"\", \":hover\"],\r\n    [\"border-width\", \"border-width_text_style\", \"dimensions\", \":hover\"],\r\n    [\"border-color\", \"border_color_text_style\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-li-link:hover\",\r\n    [\"text-decoration\", \"link_decoration_text_style\", \"\", \":hover\"],\r\n    \"}\",\r\n    \"}\",\r\n\r\n    \"altrp-list-li-link\",\r\n    [\"text-decoration\", \"link_decoration_text_style\"],\r\n    \"}\"\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport default function MapComponent(settings) {\r\n  const styles = [\r\n    \"altrp-image\",\r\n    [\"height\", \"style_height\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-btn\",\r\n    [\"margin\", \"style_margin\", \"dimensions\"],\r\n    \"}\"\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n};\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport default function MapConstructorComponent(settings) {\r\n  const styles = [\r\n    \"altrp-image\",\r\n    [\"height\", \"style_height\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-btn\",\r\n    [\"margin\", \"style_margin\", \"dimensions\"],\r\n    \"}\"\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n\r\n","const { getResponsiveSetting } = window.altrpHelpers;\r\nimport {\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  dimensionsControllerToStyles,\r\n  sizeStyled,\r\n  shadowControllerToStyles,\r\n  gradientStyled,\r\n  backgroundImageControllerToStyles, sliderStyled, styledString,\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nfunction altrpSection(settings) {\r\n  let styles = '';\r\n\r\n  let backgroundColor, flexWrap, verticalAlign, gorizontalAlign, flexDirection, minHeight, overflow, borderStyle, borderWidth, borderColor, borderRadius, boxShadow;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'section_style_background_color');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background');\r\n  }\r\n\r\n  //Получаем значения flex-wrap из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    flexWrap = getResponsiveSetting(settings, 'layout_flex_wrap_content');\r\n  }\r\n\r\n  if (flexWrap) {\r\n    styles += simplePropertyStyled(flexWrap, 'flex-wrap');\r\n  }\r\n\r\n  //Получаем значения vertical-align из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    verticalAlign = getResponsiveSetting(settings, 'layout_column_position');\r\n  }\r\n\r\n  if (verticalAlign) {\r\n    styles += simplePropertyStyled(verticalAlign, 'align-content');\r\n    styles += simplePropertyStyled(verticalAlign, 'align-items');\r\n  }\r\n\r\n  //Получаем значения gorizontal-align из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gorizontalAlign = getResponsiveSetting(settings, 'layout_justify_content');\r\n  }\r\n\r\n  if (gorizontalAlign) {\r\n    styles += simplePropertyStyled(gorizontalAlign, 'justify-content');\r\n  }\r\n\r\n  //Получаем значения flex-direction из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    flexDirection = getResponsiveSetting(settings, 'layout_column_direction');\r\n  }\r\n\r\n  if (flexDirection) {\r\n    styles += simplePropertyStyled(flexDirection, 'flex-direction');\r\n  }\r\n\r\n  //Получаем значения min-height из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    minHeight = getResponsiveSetting(settings, 'label_style_min_height');\r\n  }\r\n\r\n  if (minHeight) {\r\n    styles += sizeStyled(minHeight, 'min-height');\r\n  }\r\n\r\n  //Получаем значения overflow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    overflow = getResponsiveSetting(settings, 'layout_overflow');\r\n  }\r\n\r\n  if (overflow) {\r\n    styles += simplePropertyStyled(overflow, 'overflow');\r\n  }\r\n\r\n  //Получаем значения border-style из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderStyle = getResponsiveSetting(settings, 'section_style_border_type');\r\n  }\r\n\r\n  if (borderStyle) {\r\n    styles += simplePropertyStyled(borderStyle, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'section_style_border_width');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'section_style_border_color');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'section_style_border_radius');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadow = getResponsiveSetting(settings, 'section_style_box_shadow');\r\n  }\r\n\r\n  if (boxShadow) {\r\n    styles += shadowControllerToStyles(boxShadow);\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionHover(settings,state=':hover') {\r\n  let styles = '';\r\n\r\n  let backgroundColor, borderStyle, borderWidth, borderColor, borderRadius, boxShadow;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'section_style_background_color', state);\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background');\r\n  }\r\n\r\n  //Получаем значения border-style из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderStyle = getResponsiveSetting(settings, 'section_style_border_type', state);\r\n  }\r\n\r\n  if (borderStyle) {\r\n    styles += simplePropertyStyled(borderStyle, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'section_style_border_width', state);\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'section_style_border_color', state);\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'section_style_border_radius', state);\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadow = getResponsiveSetting(settings, 'section_style_box_shadow', state);\r\n  }\r\n\r\n  if (boxShadow) {\r\n    styles += shadowControllerToStyles(boxShadow);\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionColumn(settings) {\r\n  let styles = '';\r\n\r\n  let padding;\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'layout_columns_gap');\r\n  }\r\n\r\n  if (padding && padding !== 'none') {\r\n    styles += `padding: ${padding}px; `;\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionColumnHover(settings) {\r\n  let styles = '';\r\n\r\n  let padding;\r\n\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionSecond(settings) {\r\n  let styles = '';\r\n\r\n  let gradient, positionTop, positionRight, positionLeft, positionBottom, zIndex;\r\n\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradient = getResponsiveSetting(settings, 'gradient');\r\n  }\r\n\r\n  if (gradient) {\r\n    styles += gradientStyled(gradient);\r\n  }\r\n\r\n  //Получаем значения position-top из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionTop = getResponsiveSetting(settings, 'position_top');\r\n  }\r\n\r\n  if (positionTop) {\r\n    styles += simplePropertyStyled(positionTop, 'top');\r\n  }\r\n\r\n  //Получаем значения position-right из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionRight = getResponsiveSetting(settings, 'position_right');\r\n  }\r\n\r\n  if (positionRight) {\r\n    styles += simplePropertyStyled(positionRight, 'right');\r\n  }\r\n\r\n  //Получаем значения position-left из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionLeft = getResponsiveSetting(settings, 'position_left');\r\n  }\r\n\r\n  if (positionLeft) {\r\n    styles += simplePropertyStyled(positionLeft, 'left');\r\n  }\r\n\r\n  //Получаем значения position-bottom из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionBottom = getResponsiveSetting(settings, 'position_bottom');\r\n  }\r\n\r\n  if (positionBottom) {\r\n    styles += simplePropertyStyled(positionBottom, 'bottom');\r\n  }\r\n\r\n  //Получаем значения z-index из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    zIndex = getResponsiveSetting(settings, 'position_style_z_index');\r\n  }\r\n\r\n  if (zIndex) {\r\n    styles += simplePropertyStyled(zIndex, 'z-index');\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionSecondHover(settings) {\r\n  let styles = '';\r\n\r\n  let gradient, positionTop, positionRight, positionLeft, positionBottom;\r\n\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradient = getResponsiveSetting(settings, 'gradient', ':hover');\r\n  }\r\n\r\n  if (gradient) {\r\n    styles += gradientStyled(gradient);\r\n  }\r\n\r\n  //Получаем значения position-top из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionTop = getResponsiveSetting(settings, 'position_top', ':hover');\r\n  }\r\n\r\n  if (positionTop) {\r\n    styles += simplePropertyStyled(positionTop, 'top');\r\n  }\r\n\r\n  //Получаем значения position-right из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionRight = getResponsiveSetting(settings, 'position_right', ':hover');\r\n  }\r\n\r\n  if (positionRight) {\r\n    styles += simplePropertyStyled(positionRight, 'right');\r\n  }\r\n\r\n  //Получаем значения position-left из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionLeft = getResponsiveSetting(settings, 'position_left', ':hover');\r\n  }\r\n\r\n  if (positionLeft) {\r\n    styles += simplePropertyStyled(positionLeft, 'left');\r\n  }\r\n\r\n  //Получаем значения position-bottom из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionBottom = getResponsiveSetting(settings, 'position_bottom', ':hover');\r\n  }\r\n\r\n  if (positionBottom) {\r\n    styles += simplePropertyStyled(positionBottom, 'bottom');\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpBackgroundImage(settings) {\r\n  let styles = '';\r\n\r\n  let backgroundSize, backgroundRepeat, backgroundSizeInUnit, backgroundAttachment, backgroundPosition, backgroundImage;\r\n\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImage = getResponsiveSetting(settings, 'background_image');\r\n  }\r\n\r\n  if (backgroundImage) {\r\n    styles += backgroundImageControllerToStyles(backgroundImage);\r\n  }\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSize = getResponsiveSetting(settings, 'background_size');\r\n  }\r\n\r\n  if (backgroundSize) {\r\n    styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeat = getResponsiveSetting(settings, 'background_repeat');\r\n  }\r\n\r\n  if (backgroundRepeat) {\r\n    styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnit = getResponsiveSetting(settings, 'background_image_width');\r\n  }\r\n\r\n  if (backgroundSizeInUnit) {\r\n    styles += sizeStyled(backgroundSizeInUnit, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachment = getResponsiveSetting(settings, 'background_attachment');\r\n  }\r\n\r\n  if (backgroundAttachment) {\r\n    styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPosition = getResponsiveSetting(settings, 'background_position');\r\n  }\r\n\r\n  if (backgroundPosition) {\r\n    styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpBackgroundImageHover(settings) {\r\n  let styles = '';\r\n\r\n  let backgroundSize, backgroundRepeat, backgroundSizeInUnit, backgroundAttachment, backgroundPosition, backgroundImage;\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSize = getResponsiveSetting(settings, 'background_size', ':hover');\r\n  }\r\n\r\n  if (backgroundSize) {\r\n    styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeat = getResponsiveSetting(settings, 'background_repeat', ':hover');\r\n  }\r\n\r\n  if (backgroundRepeat) {\r\n    styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnit = getResponsiveSetting(settings, 'background_image_width', ':hover');\r\n  }\r\n\r\n  if (backgroundSizeInUnit) {\r\n    styles += sizeStyled(backgroundSizeInUnit, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachment = getResponsiveSetting(settings, 'background_attachment', ':hover');\r\n  }\r\n\r\n  if (backgroundAttachment) {\r\n    styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPosition = getResponsiveSetting(settings, 'background_position', ':hover');\r\n  }\r\n\r\n  if (backgroundPosition) {\r\n    styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n  }\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImage = getResponsiveSetting(settings, 'background_image', ':hover');\r\n  }\r\n\r\n  if (backgroundImage) {\r\n    styles += backgroundImageControllerToStyles(backgroundImage);\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionBoxed(settings) {\r\n  let styles = '';\r\n\r\n  let width;\r\n\r\n  //Получаем значения width в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    width = getResponsiveSetting(settings, 'layout_content_width');\r\n  }\r\n\r\n  if (width) {\r\n    width = sliderStyled(width);\r\n    styles += `width: ${width};`;\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionBoxedHover(settings) {\r\n  let styles = '';\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionSectionBoxed(settings) {\r\n  let styles = '';\r\n\r\n  let padding;\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'layout_content_width');\r\n  }\r\n  let width = '100vw';\r\n  if(window?.page_areas?.length > 4){//todo:weak place\r\n    width = '100%';\r\n  }\r\n  if (padding) {\r\n    if(padding.size) {\r\n      styles += `padding-left:calc((${width} - ${padding.size + padding.unit}) / 2);padding-right:calc((${width} - ${padding.size + padding.unit}) / 2);width:${width};`;\r\n    }\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionFull(settings) {\r\n  let styles = '';\r\n\r\n  let margin, padding;\r\n\r\n  //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    margin = getResponsiveSetting(settings, 'position_style_position_margin');\r\n  }\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, 'margin');\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'position_style_position_padding');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += ` > .altrp-section{${dimensionsControllerToStyles(padding, 'padding')}}`;\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionFullHover(settings) {\r\n  let styles = '';\r\n\r\n  // let margin;\r\n  //\r\n  // //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n  //\r\n  // if (settings !== undefined) {\r\n  //   margin = getResponsiveSetting(settings, 'position_style_position_margin', ':hover');\r\n  // }\r\n  //\r\n  // if (margin) {\r\n  //   styles += dimensionsControllerToStyles(margin, 'margin');\r\n  // }\r\n\r\n  return styles;\r\n}\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function SectionWidgetComponent(settings, childrenLength) {\r\n\r\n  // console.log(`& > .altrp-section > .altrp-element_column{width:${100/childrenLength}%;}`);\r\n  return `\r\n\r\n  & > .altrp-section > .altrp-element_column{width:${100/childrenLength}%;}\r\n\r\n  & > div.altrp-section,\r\n  & > div.altrp-section-full-fill {\r\n    ${altrpSection(settings)}\r\n  }\r\n\r\n  & > div.altrp-section:hover,\r\n  & > div.altrp-section-full-fill:hover {\r\n    ${altrpSectionHover(settings)}\r\n  }\r\n  & > div.altrp-section.active,\r\n  & > div.altrp-section-full-fill.active {\r\n    ${altrpSectionHover(settings,'.active')}\r\n    ${(()=>{\r\n      const  styles = [\r\n        ['margin', 'position_style_position_margin', 'dimensions', '.active'],\r\n        ['padding', 'position_style_position_padding', 'dimensions', '.active'],\r\n      ];\r\n      return styledString(styles, settings);\r\n    })()\r\n  }\r\n  }\r\n  & > div.altrp-section div.altrp-column {\r\n    ${altrpSectionColumn(settings)}\r\n  }\r\n\r\n  & > div.altrp-section:hover div.altrp-column:hover {\r\n    ${altrpSectionColumnHover(settings)}\r\n  }\r\n\r\n  & > div.altrp-section {\r\n    ${altrpSectionSecond(settings)}\r\n  }\r\n\r\n  & > div.altrp-section:hover {\r\n    ${altrpSectionSecondHover(settings)}\r\n  }\r\n\r\n  & > div.altrp-section.altrp-background-image {\r\n    ${altrpBackgroundImage(settings)}\r\n  }\r\n\r\n  & > div.altrp-section.altrp-background-image:hover {\r\n    ${altrpBackgroundImageHover(settings)}\r\n  }\r\n\r\n  & > div.altrp-section_boxed,\r\n  & > div.altrp-section_section_boxed {\r\n    ${altrpSectionBoxed(settings)}\r\n  }\r\n\r\n  & > div.altrp-section_boxed:hover,\r\n  & > div.altrp-section_section_boxed:hover {\r\n    ${altrpSectionBoxedHover(settings)}\r\n  }\r\n\r\n  & > div.altrp-section_section-boxed {\r\n    ${altrpSectionSectionBoxed(settings)}\r\n  }\r\n\r\n  &,\r\n  & > div.altrp-section-full-fill {\r\n    ${altrpSectionFull(settings)}\r\n  }\r\n\r\n  &:hover,\r\n  & > div.altrp-section-full-fill:hover {\r\n    ${altrpSectionFullHover(settings)}\r\n  }\r\n\r\n`\r\n}\r\n","\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nexport default function TabsSwitcherComponent(settings) {\r\n  const styles = [\r\n    \"& div.altrp-tabs-switcher_switch-wrapper span.bp3-control-indicator.bp3-control-indicator.bp3-control-indicator\",\r\n      [\"background\", \"box_around_color_one\", \"color\"],\r\n      [\"border-radius\", \"box_border_radius\", \"slider\"],\r\n      () => {\r\n        const value = getResponsiveSetting(settings, \"size\");\r\n        const slider = sliderStyled(value);\r\n\r\n        if(slider) {\r\n          return `\r\n            height: ${slider};\r\n            width: calc(${slider} * 2);\r\n\r\n            &:before {\r\n              height: calc(${slider} - 4px);\r\n              width: calc(${slider} - 4px);\r\n            }\r\n          `\r\n        } else {\r\n          return \"\"\r\n        }\r\n      },\r\n    \"}\",\r\n\r\n    \"& div.altrp-tabs-switcher_switch-wrapper span.bp3-control-indicator.bp3-control-indicator.bp3-control-indicator::before\",\r\n      [\"border-radius\", \"switch_border_radius\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"& div.altrp-tabs-switcher_switch-wrapper .altrp-tabs-switcher_switch:hover span.bp3-control-indicator.bp3-control-indicator.bp3-control-indicator::before\",\r\n    [\"border-radius\", \"switch_border_radius\", \"slider\", \":hover\"],\r\n    \"}\",\r\n\r\n\r\n    \"altrp-tabs-switcher_switch-wrapper span.bp3-control-indicator.bp3-control-indicator::before\",\r\n      [\"background\", \"switch_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_switch-wrapper .altrp-tabs-switcher_switch:hover span.bp3-control-indicator.bp3-control-indicator::before\",\r\n    [\"background\", \"switch_color\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_switch-wrapper .altrp-tabs-switcher_switch:hover span.bp3-control-indicator.bp3-control-indicator\",\r\n      [\"background\", \"box_around_color_one\", \"color\", \":hover\"],\r\n      [\"border-radius\", \"box_border_radius\", \"slider\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_switch-wrapper .altrp-tabs-switcher_switch:hover input:checked ~ span.bp3-control-indicator.bp3-control-indicator\",\r\n      [\"background\", \"box_around_color_two\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"& div.altrp-tabs-switcher_switch-wrapper input:checked ~ span.bp3-control-indicator.bp3-control-indicator.bp3-control-indicator\",\r\n      [\"background\", \"box_around_color_two\", \"color\"],\r\n      () => {\r\n        const value = getResponsiveSetting(settings, \"size\");\r\n        const slider = sliderStyled(value);\r\n\r\n        if(slider) {\r\n          return `\r\n            &:before {\r\n              left: calc(100% - ${slider});\r\n            }\r\n          `\r\n        } else {\r\n          return \"\"\r\n        }\r\n      },\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_label-one\",\r\n      [\"margin-right\", \"spacing\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_label-two\",\r\n      [\"margin-left\", \"spacing\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_wrapper\",\r\n      [\"margin-bottom\", \"margin_bottom\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_label-one\",\r\n      [\"\", \"typographic_title_one\", \"typographic\"],\r\n      [\"color\", \"color_title_one\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_label-one:hover\",\r\n      [\"\", \"typographic_title_one\", \"typographic\", \":hover\"],\r\n      [\"color\", \"color_title_one\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_label-two\",\r\n    [\"\", \"typographic_title_two\", \"typographic\"],\r\n    [\"color\", \"color_title_two\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_label-two:hover\",\r\n    [\"\", \"typographic_title_two\", \"typographic\", \":hover\"],\r\n    [\"color\", \"color_title_two\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n\r\n    \"altrp-tabs-switcher_content-one\",\r\n    [\"\", \"typographic_section_one\", \"typographic\"],\r\n    [\"color\", \"color_section_one\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_content-one:hover\",\r\n    [\"\", \"typographic_section_one\", \"typographic\", \":hover\"],\r\n    [\"color\", \"color_section_one\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_content-two\",\r\n    [\"\", \"typographic_section_two\", \"typographic\"],\r\n    [\"color\", \"color_section_two\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_content-two:hover\",\r\n    [\"\", \"typographic_section_two\", \"typographic\", \":hover\"],\r\n    [\"color\", \"color_section_two\", \"color\", \":hover\"],\r\n    \"}\",\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport default function VideoComponent(settings) {\r\n  const styles = [\r\n    \"altrp-video\",\r\n    [\"width\", \"video_width\", \"slider\"],\r\n    [\"height\", \"video_height\", \"slider\"],\r\n    \"}\"\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import {styledString} from \"../../helpers/styles\";\r\nconst {getResponsiveSetting} = window.altrpHelpers;\r\n\r\n/**\r\n *\r\n * @param {{}} settings\r\n * @param {string} elementId\r\n */\r\nexport default function getInputFileStyles(settings, elementId) {\r\n  let styles = [\r\n    ()=>{\r\n      let styles ='&&{';\r\n      const alignment = getResponsiveSetting(settings, 'alignment')\r\n      if(alignment ){\r\n        // styles += `flex-direction:row;\r\n        // .bp3-file-input{flex-grow:0}`\r\n        switch(alignment){\r\n          case 'stretch':{\r\n            styles += `.bp3-file-input{align-self:${alignment};width:100%}`\r\n          }\r\n          break\r\n          default:{\r\n            styles += `.bp3-file-input{align-self:${alignment}}`\r\n          }break\r\n        }\r\n      }\r\n      styles += '}';\r\n      if(getResponsiveSetting(settings, 'preview')){\r\n        styles += `&  .bp3-file-upload-input{display:none!important}\r\n\r\n        `\r\n      }\r\n      return styles\r\n    },\r\n    //<editor-fold description=text>\r\n    '.bp3-file-input.bp3-file-input',\r\n    ['width', 'width', 'slider'],\r\n    ['height', 'height', 'slider'],\r\n    '}',\r\n    '.bp3-file-upload-input',\r\n    ['height', 'height', 'slider'],\r\n    ['padding', 'padding', 'dimensions'],\r\n    ['', 'typographic', 'typographic'],\r\n    ['color', 'color', 'color'],\r\n    ['background-color', 'background', 'color'],\r\n    ['box-shadow', 'box_shadow', 'shadow'],\r\n    ['border-radius', 'radius', 'dimensions'],\r\n    '}',\r\n    '.bp3-file-input_preview',\r\n    ['color', 'color', 'color'],\r\n    ['background-color', 'background', 'color'],\r\n    '}',\r\n    '.bp3-file-input .bp3-file-upload-input-custom-text::after',\r\n    ['width', 'b_width', 'slider'],\r\n    ['height', 'b_height', 'slider'],\r\n    ['margin', 'b_margin', 'dimensions'],\r\n    ['padding', 'b_padding', 'dimensions'],\r\n    ['background-image', 'b_background', 'gradient'],\r\n    ['', 'b_typographic', 'typographic'],\r\n    ['color', 'b_color', 'color'],\r\n    ['box-shadow', 'b_box_shadow', 'shadow'],\r\n    '}',\r\n    /**\r\n     * hover\r\n     */\r\n    '.bp3-file-upload-input:hover',\r\n    ['', 'typographic', 'typographic', ':hover'],\r\n    ['color', 'color', 'color', ':hover'],\r\n    ['background-color', 'background', 'color', ':hover'],\r\n    ['box-shadow', 'box_shadow', 'shadow', ':hover'],\r\n    '}',\r\n    '.bp3-file-upload-input.bp3-file-upload-input-custom-text:hover::after',\r\n    ['background-image', 'b_background', 'gradient', ':hover'],\r\n    ['', 'b_typographic', 'typographic', ':hover'],\r\n    ['color', 'b_color', 'color', ':hover'],\r\n    ['box-shadow', 'b_box_shadow', 'shadow', ':hover'],\r\n    '}',\r\n    '.bp3-file-input_preview:hover',\r\n    ['color', 'color', 'color', ':hover'],\r\n    ['background-color', 'background', 'color', ':hover'],\r\n    '}',\r\n    /**\r\n     * active\r\n     */\r\n    '.bp3-file-input_preview:active',\r\n    ['color', 'color', 'color', '.active'],\r\n    ['background-color', 'background', 'color', '.active'],\r\n    '}',\r\n    '& input:active + .bp3-file-upload-input',\r\n    ['', 'typographic', 'typographic', '.active'],\r\n    ['color', 'color', 'color', '.active'],\r\n    ['background-color', 'background', 'color', '.active'],\r\n    ['box-shadow', 'box_shadow', 'shadow', ':hover'],\r\n    '}',\r\n    '& input:active + .bp3-file-upload-input.bp3-file-upload-input-custom-text::after',\r\n    ['background-image', 'b_background', 'gradient', '.active'],\r\n    ['', 'b_typographic', 'typographic', '.active'],\r\n    ['color', 'b_color', 'color', '.active'],\r\n    ['box-shadow', 'b_box_shadow', 'shadow', '.active'],\r\n    '}',\r\n    //</editor-fold>\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n\r\n","import {styledString} from '../../helpers/styles';\r\nconst {getResponsiveSetting} = window.altrpHelpers;\r\n\r\n/**\r\n *\r\n * @param {{}} settings\r\n * @param {string} elementId\r\n */\r\nexport default function getInputGalleryStyles(settings, elementId) {\r\n  let styles = [\r\n    ()=>{\r\n      let styles ='&{';\r\n      let columns = getResponsiveSetting(settings, 'columns')\r\n      if(! columns){\r\n        columns = 6\r\n      }\r\n      styles += '.input-gallery-wrapper{grid-template-columns:'\r\n      let width = 100 / columns + '%';\r\n      let v_gap = getResponsiveSetting(settings, 'v_gap')\r\n      if(v_gap && v_gap.size && columns > 1){\r\n        width = `calc(${width} - ${(v_gap.size * (columns - 1)) / columns  + (v_gap.unit || 'px')})`\r\n      }\r\n      styles += `repeat(${columns}, ${width});`\r\n      const alignment = getResponsiveSetting(settings, 'alignment');\r\n\r\n      styles +='}'\r\n      styles +='}'\r\n      return styles\r\n    },\r\n\r\n    '.input-gallery-wrapper',\r\n    ['column-gap', 'v_gap', 'slider'],\r\n    ['row-gap', 'h_gap', 'slider'],\r\n    '}',\r\n    //<editor-fold description=items>\r\n    '.input-gallery__item.input-gallery__item',\r\n    ['height', 'height', 'slider'],\r\n    ['background-color', 'background', 'color'],\r\n    ['background-image', 'gradient', 'gradient'],\r\n    ['box-shadow', 'box_shadow', 'shadow'],\r\n    ['border-radius', 'radius', 'dimensions'],\r\n    ['border-style', 'b_style', '',],\r\n    ['border-width', 'b_width', 'dimensions',],\r\n    ['border-color', 'b_color', 'color',],\r\n    '}',\r\n    /**\r\n     * hover\r\n     */\r\n\r\n    '.input-gallery__item.input-gallery__item:hover',\r\n    ['background-color', 'background', 'color', ':hover'],\r\n    ['background-image', 'gradient', 'gradient', ':hover'],\r\n    ['box-shadow', 'box_shadow', 'shadow', ':hover'],\r\n    ['border-radius', 'radius', 'dimensions', ':hover'],\r\n    ['border-style', 'b_style', '', ':hover'],\r\n    ['border-width', 'b_width', 'dimensions', ':hover'],\r\n    ['border-color', 'b_color', 'color', ':hover'],\r\n    '}',\r\n    /**\r\n     * active\r\n     */\r\n\r\n    //</editor-fold>\r\n    //<editor-fold description=delete>\r\n\r\n    '.input-gallery__delete.input-gallery__delete',\r\n    ['height', 'delete_s', 'slider'],\r\n    ['width', 'delete_s', 'slider'],\r\n    ['top', 'delete_o', 'slider'],\r\n    ['right', 'delete_o', 'slider'],\r\n\r\n    '}',\r\n    //</editor-fold>\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n\r\n","import {gradientStyled, styledString} from \"../../helpers/styles\";\r\nconst {getResponsiveSetting} = window.altrpHelpers;\r\n\r\n/**\r\n *\r\n * @param {{}} settings\r\n * @param {string} elementId\r\n */\r\nexport default function getInputSelectStyles(settings, elementId) {\r\n  let styles = [\r\n    //<editor-fold description=\"стили лэйбла\">\r\n    '.altrp-field-label-container',\r\n    ['background-color', 'label_background_color', 'color'],\r\n    ['padding', 'label_padding', 'dimensions'],\r\n    ['color', 'label_style_font_color', 'color'],\r\n    ['top', 'label_position_top', 'slider'],\r\n    ['left', 'label_position_left', 'slider'],\r\n    ['width', 'label_width', 'slider'],\r\n    '}',\r\n    '.altrp-field-label',\r\n    ['', 'label_style_font_typographic', 'typographic'],\r\n    '}',\r\n    '.altrp-label-icon',\r\n    ['padding', 'icon_padding', 'dimensions'],\r\n    // ['width', 'icon_size', 'slider'],\r\n    // ['height', 'icon_size', 'slider'],\r\n    '}',\r\n\r\n    '.altrp-label-icon svg',\r\n    ['width', 'icon_size', 'slider'],\r\n    ['height', 'icon_size', 'slider'],\r\n    ['background-color', 'icon_color_background', 'color'],\r\n    ['fill', 'icon_color', 'color'],\r\n    ['stroke', 'icon_color', 'color'],\r\n    '}',\r\n    '.altrp-label-icon svg path',\r\n    ['fill', 'icon_color', 'color'],\r\n    ['stroke', 'icon_color', 'color'],\r\n    '}',\r\n    '.altrp-label-icon img',\r\n    ['width', 'icon_size', 'slider'],\r\n    ['height', 'icon_size', 'slider'],\r\n    ['background-color', 'icon_color_background', 'color'],\r\n    '}',\r\n    //</editor-fold>\r\n    '.altrp-field-label--required::after',\r\n    ['', 'required_style_font_typographic', 'typographic'],\r\n    ['color', 'required_style_font_color', 'color'],\r\n    '}',\r\n    '.mask-mismatch-message',\r\n    ['margin', 'mismatch_message_margin', 'dimensions'],\r\n    ['padding', 'mismatch_message_padding', 'dimensions'],\r\n    ['color', 'mismatch_message_font_color', 'color'],\r\n    ['', 'mismatch_message_typographic', 'typographic'],\r\n    '}',\r\n    //<editor-fold description=\"стили иконок\">\r\n    '.bp3-icon_text-widget.bp3-icon_text-widget.bp3-icon_text-widget',\r\n    ['margin', 'input_icons_margin', 'dimensions'],\r\n    ['padding', 'input_icons_padding', 'dimensions'],\r\n    ['border-radius', 'input_icons_radius', 'dimensions'],\r\n    '}',\r\n    '.bp3-icon_text-widget',\r\n    ['background-color', 'input_icons_background', 'color', ],\r\n    '}',\r\n    '.bp3-icon_text-widget:hover',\r\n    ['background-color', 'input_icons_background', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-icon_text-widget:active',\r\n    ['background-color', 'input_icons_background', 'color', '.active'],\r\n    '}',\r\n    '.bp3-icon_text-widget svg',\r\n    ['width', 'input_icons_size', 'slider'],\r\n    ['height', 'input_icons_size', 'slider'],\r\n    '}',\r\n    '.bp3-icon_text-widget svg,& .bp3-icon_text-widget path',\r\n    ['fill', 'input_icons_fill', 'color'],\r\n    ['stroke', 'input_icons_stroke', 'color'],\r\n    '}',\r\n    '.bp3-icon_text-widget:hover svg,& .bp3-icon_text-widget:hover path',\r\n    ['fill', 'input_icons_fill', 'color', ':hover'],\r\n    ['stroke', 'input_icons_stroke', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-icon_text-widget:active svg,& .bp3-icon_text-widget:active path',\r\n    ['fill', 'input_icons_fill', 'color', '.active'],\r\n    ['stroke', 'input_icons_stroke', 'color', '.active'],\r\n    '}',\r\n    '.bp3-icon_text-widget img',\r\n    ['width', 'input_icons_size', 'slider'],\r\n    ['height', 'input_icons_size', 'slider'],\r\n    '}',\r\n    //</editor-fold>\r\n    //<editor-fold description=\"стили кнопки\">\r\n    ()=>{\r\n      const alignment = getResponsiveSetting(settings, 'alignment')\r\n      switch (alignment){\r\n        case 'flex-start':{\r\n          return '& .bp3-popover-target.bp3-popover-target{flex-grow:0}'\r\n        }\r\n        case 'flex-end':{\r\n          return '& .bp3-popover-target.bp3-popover-target{flex-grow:0}& .bp3-popover-wrapper{justify-content:flex-end;}'\r\n        }\r\n        case 'center':{\r\n          return '& .bp3-popover-target.bp3-popover-target{flex-grow:0}& .bp3-popover-wrapper{justify-content:center;}'\r\n        }\r\n      }\r\n    },\r\n    '.bp3-popover-target',\r\n    ['width', 'field_width', 'slider'],\r\n    ['margin', 'position_margin', 'dimensions'],\r\n    '}',\r\n    '.bp3-button.bp3-button',\r\n    ['height', 'field_height', 'slider'],\r\n    ['text-align', 'placeholder_and_value_alignment_position_section', ],\r\n    ['padding', 'position_padding', 'dimensions'],\r\n    ['', 'field_font_typographic', 'typographic'],\r\n    ['color', 'field_font_color', 'color'],\r\n    ['opacity', 'background_section_opacity', 'slider'],\r\n    ['border-style', 'border_type',],\r\n    ['border-width', 'border_width', 'dimensions'],\r\n    ['border-color', 'border_color', 'color'],\r\n    ['border-radius', 'border_radius', 'dimensions'],\r\n    ['', 'box_shadow', 'shadow'],\r\n    '}',\r\n    ()=>{\r\n      let styles = '.bp3-button.bp3-button{';\r\n      let button_gradient = getResponsiveSetting(settings, 'button_gradient')\r\n      if(button_gradient){\r\n        styles += gradientStyled(button_gradient)\r\n      }\r\n      styles += '}'\r\n      styles += '.bp3-button:hover{'\r\n      button_gradient = getResponsiveSetting(settings, 'button_gradient', ':hover')\r\n      if(button_gradient){\r\n        styles += gradientStyled(button_gradient)\r\n      }\r\n      styles += '}'\r\n      styles += '.bp3-button.bp3-button:active{'\r\n      button_gradient = getResponsiveSetting(settings, 'button_gradient', '.active')\r\n      if(button_gradient){\r\n        styles += gradientStyled(button_gradient)\r\n      }\r\n      styles += '}'\r\n      return styles;\r\n    },\r\n    '.bp3-button.bp3-button:hover',\r\n    ['', 'field_font_typographic', 'typographic', ':hover'],\r\n    ['color', 'field_font_color', 'color', ':hover'],\r\n    ['border-color', 'border_color', 'color',':hover'],\r\n    ['border-radius', 'border_radius', 'dimensions',':hover'],\r\n    '.bp3-icon svg',\r\n    ['height', 'i_size', 'slider',':hover'],\r\n    ['width', 'i_size', 'slider',':hover'],\r\n    ['margin', 'i_margin', 'dimensions',':hover'],\r\n    '}',\r\n    '.bp3-icon path',\r\n    ['fill', 'i_color', 'color',':hover'],\r\n    '}',\r\n    '.bp3-icon img',\r\n    ['height', 'i_size', 'slider',':hover'],\r\n    ['width', 'i_size', 'slider',':hover'],\r\n    ['margin', 'i_margin', 'dimensions',':hover'],\r\n    '}',\r\n    ['', 'box_shadow', 'shadow',':hover'],\r\n    '}',\r\n    '.bp3-button.bp3-button:active',\r\n    ['', 'field_font_typographic', 'typographic', '.active'],\r\n    ['color', 'field_font_color', 'color', '.active'],\r\n    ['border-color', 'border_color', 'color','.active'],\r\n    ['border-radius', 'border_radius', 'dimensions','.active'],\r\n    ['', 'box_shadow', 'shadow','.active'],\r\n\r\n    '.bp3-icon svg',\r\n    ['height', 'i_size', 'slider','.active'],\r\n    ['width', 'i_size', 'slider','.active'],\r\n    ['margin', 'i_margin', 'dimensions','.active'],\r\n    '}',\r\n    '.bp3-icon path',\r\n    ['fill', 'i_color', 'color','.active'],\r\n    '}',\r\n    '.bp3-icon img',\r\n    ['height', 'i_size', 'slider','.active'],\r\n    ['width', 'i_size', 'slider','.active'],\r\n    ['margin', 'i_margin', 'dimensions','.active'],\r\n    '}',\r\n    '}',\r\n    // '.bp3-input.bp3-input.bp3-input.bp3-input::placeholder',\r\n    // ['', 'placeholder_style_font_typographic', 'typographic'],\r\n    // ['color', 'placeholder_style_font_color', 'color'],\r\n    // '}',\r\n    // '.bp3-input.bp3-input.bp3-input.bp3-input:hover::placeholder',\r\n    // ['', 'placeholder_style_font_typographic', 'typographic',':hover'],\r\n    // ['color', 'placeholder_style_font_color', 'color', ':hover'],\r\n    // '}',\r\n    // '.bp3-input.bp3-input.bp3-input.bp3-input:focus::placeholder',\r\n    // ['', 'placeholder_style_font_typographic', 'typographic',':focus'],\r\n    // ['color', 'placeholder_style_font_color', 'color', ':focus'],\r\n    // '}',\r\n    //</editor-fold>\r\n    //<editor-fold description=\"стили иконок\">\r\n    '.bp3-icon svg',\r\n    ['height', 'i_size', 'slider'],\r\n    ['width', 'i_size', 'slider'],\r\n    ['margin', 'i_margin', 'dimensions'],\r\n    '}',\r\n    '.bp3-icon path',\r\n    ['fill', 'i_color', 'color'],\r\n    '}',\r\n    '.bp3-icon img',\r\n    ['height', 'i_size', 'slider'],\r\n    ['width', 'i_size', 'slider'],\r\n    ['margin', 'i_margin', 'dimensions'],\r\n    '}',\r\n    //</editor-fold>\r\n\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n\r\nexport function getInputSelectPopoverStyles(settings, elementId){\r\n  let styles = [\r\n  //<editor-fold description=\"стили поповера\">\r\n    `.altrp-portal${elementId}`,\r\n    '.bp3-menu-item',\r\n    ['background-color', 'background_style_background_color', 'color'],\r\n    ['color', 'items_font_color', 'color'],\r\n    ['', 'field_font_typographic', 'typographic',],\r\n    '}',\r\n    '.bp3-menu-item:hover',\r\n    ['color', 'items_font_color', 'color', ':hover'],\r\n    ['background-color', 'background_style_background_color', 'color',':hover'],\r\n    ['', 'field_font_typographic', 'typographic', ':hover'],\r\n    '}',\r\n    '.bp3-menu-item.bp3-active.bp3-active',\r\n    ['color', 'items_font_color', 'color', '.active'],\r\n    ['background-color', 'background_style_background_color', 'color','.active'],\r\n    ['', 'field_font_typographic', 'typographic', '.active'],\r\n    '}',\r\n    '.bp3-input',\r\n    ['', 'field_font_typographic', 'typographic'],\r\n    ['height', 'si_size', 'slider'],\r\n    ['padding', 'si_padding', 'dimensions'],\r\n    ['color', 'si_color', 'color'],\r\n    ['background-color', 'si_bg_color', 'color'],\r\n    '}',\r\n    '.bp3-input:hover',\r\n    ['color', 'si_color', 'color', ':hover'],\r\n    ['background-color', 'si_bg_color', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-input:focus',\r\n    ['color', 'si_color', 'color', ':focus'],\r\n    ['background-color', 'si_bg_color', 'color', ':focus'],\r\n    '}',\r\n    '.bp3-input-group .bp3-icon svg',\r\n      ['height', 'sii_size', 'slider'],\r\n      ['width', 'sii_size', 'slider'],\r\n      ['margin', 'sii_margin', 'dimensions'],\r\n    '}',\r\n    '.bp3-input-group .bp3-icon path',\r\n      ['fill', 'sii_color', 'color'],\r\n    '}',\r\n    '.bp3-icon-add svg',\r\n\r\n    ['height', 'a_size', 'slider'],\r\n    ['width', 'a_size', 'slider'],\r\n    ['margin', 'a_margin', 'dimensions'],\r\n    '}',\r\n    '.bp3-icon-add path',\r\n    ['fill', 'a_color', 'color'],\r\n    '}',\r\n    '.bp3-menu-item:hover .bp3-icon-add path',\r\n    ['fill', 'a_color', 'color', ':hover'],\r\n    '}',\r\n    '}',\r\n  //</editor-fold>\r\n  ];\r\n  return styledString(styles, settings)\r\n\r\n}\r\n","import {styledString} from \"../../helpers/styles\";\r\n\r\n/**\r\n *\r\n * @param {{}} settings\r\n * @param {string} elementId\r\n */\r\nexport default function getInputTextCommonStyles(settings, elementId) {\r\n  let styles = [\r\n    //<editor-fold description=\"стили лэйбла\">\r\n    '.altrp-field-label',\r\n    ['background-color', 'label_background_color', 'color'],\r\n    ['padding', 'label_padding', 'dimensions'],\r\n    ['color', 'label_style_font_color', 'color'],\r\n    ['', 'label_style_font_typographic', 'typographic'],\r\n    ['top', 'label_position_top', 'slider'],\r\n    ['left', 'label_position_left', 'slider'],\r\n    '}',\r\n    '.altrp-field-label-container',\r\n    ['width', 'label_width', 'slider'],\r\n    '}',\r\n    '.altrp-label-icon',\r\n    ['padding', 'icon_padding', 'dimensions'],\r\n    ['width', 'icon_size', 'slider'],\r\n    ['height', 'icon_size', 'slider'],\r\n    '}',\r\n\r\n    '.altrp-label-icon svg',\r\n    ['width', 'icon_size', 'slider'],\r\n    ['height', 'icon_size', 'slider'],\r\n    ['background-color', 'icon_color_background', 'color'],\r\n    ['fill', 'icon_color', 'color'],\r\n    ['stroke', 'icon_color', 'color'],\r\n    '}',\r\n    '.altrp-label-icon svg path',\r\n    ['fill', 'icon_color', 'color'],\r\n    ['stroke', 'icon_color', 'color'],\r\n    '}',\r\n    '.altrp-label-icon img',\r\n    ['width', 'icon_size', 'slider'],\r\n    ['height', 'icon_size', 'slider'],\r\n    ['background-color', 'icon_color_background', 'color'],\r\n    '}',\r\n    //</editor-fold>\r\n    //<editor-fold description=\"стили инпута\">\r\n    '.bp3-input-group',\r\n    ['width', 'field_width', 'slider'],\r\n    ['padding', 'position_margin', 'dimensions'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input',\r\n    ['height', 'field_height', 'slider'],\r\n    ['text-align', 'placeholder_and_value_alignment_position_section', ],\r\n    ['padding', 'position_padding', 'dimensions'],\r\n    ['', 'field_font_typographic', 'typographic'],\r\n    ['color', 'field_font_color', 'color'],\r\n    ['background-color', 'background_style_background_color', 'color'],\r\n    ['opacity', 'background_section_opacity', 'slider'],\r\n    ['border-style', 'border_type',],\r\n    ['border-width', 'border_width', 'dimensions'],\r\n    ['border-color', 'border_color', 'color'],\r\n    ['border-radius', 'border_radius', 'dimensions'],\r\n    ['', 'box_shadow', 'shadow'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input:hover',\r\n    ['', 'field_font_typographic', 'typographic', ':hover'],\r\n    ['color', 'field_font_color', 'color', ':hover'],\r\n    ['background-color', 'background_style_background_color', 'color',':hover'],\r\n    ['border-color', 'border_color', 'color',':hover'],\r\n    ['border-radius', 'border_radius', 'dimensions',':hover'],\r\n    ['', 'box_shadow', 'shadow',':hover'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input:focus',\r\n    ['', 'field_font_typographic', 'typographic', ':focus'],\r\n    ['color', 'field_font_color', 'color', ':focus'],\r\n    ['background-color', 'background_style_background_color', 'color',':focus'],\r\n    ['border-color', 'border_color', 'color',':focus'],\r\n    ['border-radius', 'border_radius', 'dimensions',':focus'],\r\n    ['', 'box_shadow', 'shadow',':focus'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input::placeholder',\r\n    ['', 'placeholder_style_font_typographic', 'typographic'],\r\n    ['color', 'placeholder_style_font_color', 'color'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input:hover::placeholder',\r\n    ['', 'placeholder_style_font_typographic', 'typographic',':hover'],\r\n    ['color', 'placeholder_style_font_color', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input:focus::placeholder',\r\n    ['', 'placeholder_style_font_typographic', 'typographic',':focus'],\r\n    ['color', 'placeholder_style_font_color', 'color', ':focus'],\r\n    '}',\r\n    //</editor-fold>\r\n    '.altrp-field-label--required::after',\r\n    ['', 'required_style_font_typographic', 'typographic'],\r\n    ['color', 'required_style_font_color', 'color'],\r\n    '}',\r\n    '.mask-mismatch-message',\r\n    ['margin', 'mismatch_message_margin', 'dimensions'],\r\n    ['padding', 'mismatch_message_padding', 'dimensions'],\r\n    ['color', 'mismatch_message_font_color', 'color'],\r\n    ['', 'mismatch_message_typographic', 'typographic'],\r\n    '}',\r\n    '.bp3-icon_text-widget.bp3-icon_text-widget.bp3-icon_text-widget',\r\n    ['margin', 'input_icons_margin', 'dimensions'],\r\n    ['padding', 'input_icons_padding', 'dimensions'],\r\n    ['border-radius', 'input_icons_radius', 'dimensions'],\r\n    '}',\r\n    '.bp3-icon_text-widget',\r\n    ['background-color', 'input_icons_background', 'color', ],\r\n    '}',\r\n    '.bp3-icon_text-widget:hover',\r\n    ['background-color', 'input_icons_background', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-icon_text-widget:active',\r\n    ['background-color', 'input_icons_background', 'color', '.active'],\r\n    '}',\r\n    '.bp3-icon_text-widget svg',\r\n    ['width', 'input_icons_size', 'slider'],\r\n    ['height', 'input_icons_size', 'slider'],\r\n    '}',\r\n    '.bp3-icon_text-widget svg,& .bp3-icon_text-widget path',\r\n    ['fill', 'input_icons_fill', 'color'],\r\n    ['stroke', 'input_icons_stroke', 'color'],\r\n    '}',\r\n    '.bp3-icon_text-widget:hover svg,& .bp3-icon_text-widget:hover path',\r\n    ['fill', 'input_icons_fill', 'color', ':hover'],\r\n    ['stroke', 'input_icons_stroke', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-icon_text-widget:active svg,& .bp3-icon_text-widget:active path',\r\n    ['fill', 'input_icons_fill', 'color', '.active'],\r\n    ['stroke', 'input_icons_stroke', 'color', '.active'],\r\n    '}',\r\n    '.bp3-icon_text-widget img',\r\n    ['width', 'input_icons_size', 'slider'],\r\n    ['height', 'input_icons_size', 'slider'],\r\n    '}',\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n","import {getResponsiveSetting} from \"../../helpers\";\r\nimport { typographicControllerToStyles, colorPropertyStyled } from \"../../helpers/styles\";\r\n\r\nconst getBreadcrumbsStyles =(settings,id)=>{\r\n    const parentClass = `.altrp-element${id}`;\r\n\r\n  let styles = '';\r\n\r\n  styles = `${parentClass} .bp3-icon svg{\r\n    width:${getResponsiveSetting(settings, 'icon_width') || '20px'};\r\n    height:${getResponsiveSetting(settings, 'icon_height') || '20px'};`\r\n\r\n  const colorIcon = getResponsiveSetting(settings, 'icon_color');\r\n\r\n  if (colorIcon) {\r\n    styles += colorPropertyStyled(colorIcon, 'color');\r\n  }\r\n\r\n    styles += `} `;\r\n\r\n    styles += `${parentClass} .bp3-icon{`;\r\n    let icon_ml = getResponsiveSetting(settings, 'icon_ml');\r\n    if(icon_ml){\r\n      styles += `margin-left:${icon_ml};`;\r\n    }\r\n    let icon_mr = getResponsiveSetting(settings, 'icon_mr');\r\n    if(icon_mr){\r\n        styles += `margin-right:${icon_mr};`;\r\n    }\r\n    styles += `} `;\r\n\r\n    styles += `${parentClass} .altrp-menu-item__icon {display:flex;}`;\r\n    let height = getResponsiveSetting(settings, 'height');\r\n    if(height){\r\n        styles += `${parentClass} .bp3-breadcrumbs{height:${height};}`;\r\n    }\r\n    styles += `${parentClass} .bp3-breadcrumbs > li::after{`;\r\n    const delimiter = getResponsiveSetting(settings, 'delimiter');\r\n    if(delimiter && delimiter.url){\r\n        styles += `background:url(${delimiter.url}) no-repeat center;`\r\n        styles += `background-size:contain;`\r\n    }\r\n    const delimiter_width = getResponsiveSetting(settings, 'delimiter_width');\r\n    if(delimiter_width){\r\n        styles += `width:${delimiter_width};`\r\n    }\r\n    const delimiter_height = getResponsiveSetting(settings, 'delimiter_height');\r\n    if(delimiter_height){\r\n        styles += `height:${delimiter_height};`\r\n    }\r\n    const delimiter_ml = getResponsiveSetting(settings, 'delimiter_ml');\r\n    if(delimiter_ml){\r\n        styles += `margin-left:${delimiter_ml};`\r\n    }\r\n    const delimiter_mr = getResponsiveSetting(settings, 'delimiter_mr');\r\n    if(delimiter_mr){\r\n        styles += `margin-right:${delimiter_mr};`\r\n    }\r\n\r\n    styles += `} `;\r\n    styles += `${parentClass} .bp3-breadcrumb:not(.bp3-breadcrumb-current){`;\r\n\r\n    let color = getResponsiveSetting(settings, 'color');\r\n\r\n    if(color && color.color){\r\n        styles += `color:${color.color};`;\r\n        styles += `svg, path {fill: ${color.color};`;\r\n    }\r\n    let font = getResponsiveSetting(settings, 'font');\r\n    if(font){\r\n        styles += typographicControllerToStyles(font);\r\n    }\r\n    styles += `} `;\r\n\r\n    styles += `${parentClass} .bp3-breadcrumb:not(.bp3-breadcrumb-current):hover{`;\r\n\r\n    color = getResponsiveSetting(settings, 'color', ':hover');\r\n\r\n    if(color && color.color){\r\n        styles += `color:${color.color};`;\r\n        styles += `svg, path {fill: ${color.color};`;\r\n    }\r\n    font = getResponsiveSetting(settings, 'font', ':hover');\r\n\r\n    if(font){\r\n        styles += typographicControllerToStyles(font);\r\n    }\r\n    styles += `}`;\r\n\r\n  styles += `${parentClass} .bp3-breadcrumb.bp3-breadcrumb-current{`;\r\n\r\n    let current_color = getResponsiveSetting(settings, 'current_color');\r\n\r\n    if(current_color && current_color.color){\r\n        styles += `color:${current_color.color};`;\r\n        styles += `svg, path {fill: ${current_color.color};}`;\r\n    }\r\n\r\n    let current_font = getResponsiveSetting(settings, 'current_font');\r\n\r\n    if(current_font){\r\n        styles += typographicControllerToStyles(current_font);\r\n    }\r\n\r\n    styles += `} `;\r\n\r\n    return styles;\r\n}\r\n\r\nexport default getBreadcrumbsStyles;\r\n","import {\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  sizeStyled,\r\n  textShadowControllerToStyles,\r\n  opacityStyled,\r\n  gradientStyled,\r\n  backgroundImageControllerToStyles,\r\n  translateStyled\r\n} from \"../../helpers/styles\";\r\nimport { getResponsiveSetting } from \"../../helpers\";\r\n\r\n/**\r\n * Преобразует объект стилей, который задается в виджете Heading в строку css для вставки в GlobalStyles\r\n * @param {{}} settings\r\n * @param {string} id\r\n * @return {string}\r\n */\r\n\r\nexport function getHeadingTypeAnimatingStyles(settings, id) {\r\n  let styles = \"\";\r\n\r\n  if (settings === undefined) {\r\n    return styles;\r\n  }\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-heading-sub:hover {`;\r\n\r\n  const justifyContentHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"sub_heading_settings_alignment\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (justifyContentHeaddingSubHover) {\r\n    styles += simplePropertyStyled(\r\n      justifyContentHeaddingSubHover,\r\n      \"justify-content\"\r\n    );\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  //hover\r\n  styles += `${parentClass} .altrp-icon-header:hover {`;\r\n\r\n  const marginBottomForHorizontalHover = getResponsiveSetting(\r\n    settings,\r\n    \"horizontal_offset_advanced_heading_content\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomForHorizontalHover) {\r\n    styles += sizeStyled(marginBottomForHorizontalHover, \"margin-bottom\");\r\n  }\r\n\r\n  const marginBottomForVerticalHover = getResponsiveSetting(\r\n    settings,\r\n    \"vertical_offset_advanced_heading_content\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomForVerticalHover) {\r\n    styles += sizeStyled(marginBottomForVerticalHover, \"margin-bottom\");\r\n  }\r\n\r\n  const marginBottomForRotateHover = getResponsiveSetting(\r\n    settings,\r\n    \"rotate_offset_advanced_heading_content\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomForRotateHover) {\r\n    styles += sizeStyled(marginBottomForRotateHover, \"margin-bottom\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading {`;\r\n\r\n  //fix display with <strong> and <b> tags\r\n  styles += \"display:block;\";\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-animating-text {`;\r\n\r\n  const typographicAnimating = getResponsiveSetting(\r\n    settings,\r\n    \"animated_text_headline_animating_style\"\r\n  );\r\n\r\n  if (typographicAnimating) {\r\n    styles += typographicControllerToStyles(typographicAnimating);\r\n  }\r\n\r\n  const colorAnimating = getResponsiveSetting(\r\n    settings,\r\n    \"animated_text_color_headline_animating_style\"\r\n  );\r\n\r\n  if (colorAnimating) {\r\n    styles += colorPropertyStyled(colorAnimating, \"color\");\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-animating-text:hover {`;\r\n\r\n  const typographicAnimatingHover = getResponsiveSetting(\r\n    settings,\r\n    \"animated_text_headline_animating_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (typographicAnimatingHover) {\r\n    styles += typographicControllerToStyles(typographicAnimatingHover);\r\n  }\r\n\r\n  const colorAnimatingHover = getResponsiveSetting(\r\n    settings,\r\n    \"animated_text_color_headline_animating_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (colorAnimatingHover) {\r\n    styles += colorPropertyStyled(colorAnimatingHover, \"color\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-no-animating-text {`;\r\n\r\n  const typographicNoAnimating = getResponsiveSetting(\r\n    settings,\r\n    \"text_headline_animating_style\"\r\n  );\r\n\r\n  if (typographicNoAnimating) {\r\n    styles += typographicControllerToStyles(typographicNoAnimating);\r\n  }\r\n\r\n  const colorNoAnimating = getResponsiveSetting(\r\n    settings,\r\n    \"text_color_headline_animating_style\"\r\n  );\r\n\r\n  if (colorNoAnimating) {\r\n    styles += colorPropertyStyled(colorNoAnimating, \"color\");\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-heading-no-animating-text:hover {`;\r\n\r\n  const typographicNoAnimatingHover = getResponsiveSetting(\r\n    settings,\r\n    \"text_headline_animating_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (typographicNoAnimatingHover) {\r\n    styles += typographicControllerToStyles(typographicNoAnimatingHover);\r\n  }\r\n\r\n  const colorNoAnimatingHover = getResponsiveSetting(\r\n    settings,\r\n    \"text_color_headline_animating_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (colorNoAnimatingHover) {\r\n    styles += colorPropertyStyled(colorNoAnimatingHover, \"color\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-animating-highlighted-svg svg path {`;\r\n\r\n  const strokeWidthAnimatingSvg = getResponsiveSetting(\r\n    settings,\r\n    \"width_shape_animating\"\r\n  );\r\n\r\n  if (strokeWidthAnimatingSvg) {\r\n    styles += sizeStyled(strokeWidthAnimatingSvg, \"stroke-width\");\r\n  }\r\n\r\n  const colorAnimatingSvg = getResponsiveSetting(\r\n    settings,\r\n    \"color_shape_animating\"\r\n  );\r\n\r\n  if (colorAnimatingSvg) {\r\n    styles += colorPropertyStyled(colorAnimatingSvg, \"stroke\");\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-animating-highlighted-svg:hover svg path {`;\r\n\r\n  const strokeWidthAnimatingSvgHover = getResponsiveSetting(\r\n    settings,\r\n    \"width_shape_animating\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (strokeWidthAnimatingSvgHover) {\r\n    styles += sizeStyled(strokeWidthAnimatingSvgHover, \"stroke-width\");\r\n  }\r\n\r\n  const colorAnimatingSvgHover = getResponsiveSetting(\r\n    settings,\r\n    \"color_shape_animating\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (colorAnimatingSvgHover) {\r\n    styles += colorPropertyStyled(colorAnimatingSvgHover, \"stroke\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  return styles;\r\n}\r\n","import {\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  sizeStyled,\r\n  textShadowControllerToStyles,\r\n  opacityStyled,\r\n  gradientStyled,\r\n  backgroundImageControllerToStyles,\r\n  translateStyled\r\n} from \"../../helpers/styles\";\r\nimport { getResponsiveSetting } from \"../../helpers\";\r\n\r\n/**\r\n * Преобразует объект стилей, который задается в виджете Heading в строку css для вставки в GlobalStyles\r\n * @param {{}} settings\r\n * @param {string} id\r\n * @return {string}\r\n */\r\n\r\nexport function getHeadingTypeHeadingStyles(settings, id) {\r\n  let styles = \"\";\r\n\r\n  if (settings === undefined) {\r\n    return styles;\r\n  }\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper {`;\r\n\r\n  const justifyContent = getResponsiveSetting(\r\n    settings,\r\n    \"heading_settings_alignment\"\r\n  );\r\n  if (justifyContent) {\r\n\r\n    styles += simplePropertyStyled(justifyContent, \"justify-content\");\r\n    switch (justifyContent){\r\n      case 'stretch':{\r\n        styles += `& .altrp-heading{text-align:justify}`\r\n      }break\r\n      case 'center':{\r\n        styles += `& .altrp-heading{text-align:center}`\r\n      }break\r\n      case 'flex-start':{\r\n        styles += `& .altrp-heading{text-align:left}`\r\n      }break\r\n      case 'flex-end':{\r\n        styles += `& .altrp-heading{text-align:right}`\r\n      }break\r\n    }\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-sub {`;\r\n\r\n  const justifyContentHeaddingSub = getResponsiveSetting(\r\n    settings,\r\n    \"sub_heading_settings_alignment\"\r\n  );\r\n\r\n  if (justifyContentHeaddingSub) {\r\n    styles += simplePropertyStyled(\r\n      justifyContentHeaddingSub,\r\n      \"justify-content\"\r\n    );\r\n  }\r\n\r\n  const textShadowHeaddingSub = getResponsiveSetting(\r\n    settings,\r\n    \"text_shadow_sub_heading\"\r\n  );\r\n\r\n  if (textShadowHeaddingSub) {\r\n    styles += textShadowControllerToStyles(textShadowHeaddingSub);\r\n  }\r\n\r\n  const typographicHeaddingSub = getResponsiveSetting(\r\n    settings,\r\n    \"typographic_sub_heading\"\r\n  );\r\n\r\n  if (typographicHeaddingSub) {\r\n    styles += typographicControllerToStyles(typographicHeaddingSub);\r\n  }\r\n\r\n  const paddingHeaddingSub = getResponsiveSetting(\r\n    settings,\r\n    \"padding_sub_heading\"\r\n  );\r\n\r\n  if (paddingHeaddingSub) {\r\n    styles += dimensionsControllerToStyles(paddingHeaddingSub);\r\n  }\r\n\r\n  const colorHeaddingSub = getResponsiveSetting(settings, \"color_sub_heading\");\r\n\r\n  if (colorHeaddingSub) {\r\n    styles += colorPropertyStyled(colorHeaddingSub, \"color\");\r\n  }\r\n\r\n  const backgroundColorHeaddingSub = getResponsiveSetting(\r\n    settings,\r\n    \"bg_sub_heading\"\r\n  );\r\n\r\n  if (backgroundColorHeaddingSub) {\r\n    styles += colorPropertyStyled(\r\n      backgroundColorHeaddingSub,\r\n      \"background-color\"\r\n    );\r\n  }\r\n\r\n  const widthHeadingSub = getResponsiveSetting(settings, \"width_sub_heading\");\r\n\r\n  if (widthHeadingSub) {\r\n    styles += sizeStyled(widthHeadingSub, \"width\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-sub:hover {`;\r\n\r\n  const justifyContentHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"sub_heading_settings_alignment\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (justifyContentHeaddingSubHover) {\r\n    styles += simplePropertyStyled(\r\n      justifyContentHeaddingSubHover,\r\n      \"justify-content\"\r\n    );\r\n  }\r\n\r\n  const textShadowHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"text_shadow_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (textShadowHeaddingSubHover) {\r\n    styles += textShadowControllerToStyles(textShadowHeaddingSubHover);\r\n  }\r\n\r\n  const typographicHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"typographic_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (typographicHeaddingSubHover) {\r\n    styles += typographicControllerToStyles(typographicHeaddingSubHover);\r\n  }\r\n\r\n  const paddingHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"padding_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (paddingHeaddingSubHover) {\r\n    styles += dimensionsControllerToStyles(paddingHeaddingSubHover);\r\n  }\r\n\r\n  const colorHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"color_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (colorHeaddingSubHover) {\r\n    styles += colorPropertyStyled(colorHeaddingSubHover, \"color\");\r\n  }\r\n\r\n  const backgroundColorHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"bg_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundColorHeaddingSubHover) {\r\n    styles += colorPropertyStyled(\r\n      backgroundColorHeaddingSubHover,\r\n      \"background-color\"\r\n    );\r\n  }\r\n\r\n  const widthHeadingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"width_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (widthHeadingSubHover) {\r\n    styles += sizeStyled(widthHeadingSubHover, \"width\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-bottom .altrp-heading-sub {`;\r\n\r\n  const marginTop = getResponsiveSetting(settings, \"spacing_sub_heading\");\r\n\r\n  if (marginTop) {\r\n    styles += sizeStyled(marginTop, \"margin-top\");\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-bottom .altrp-heading-sub:hover {`;\r\n\r\n  const marginTopHover = getResponsiveSetting(\r\n    settings,\r\n    \"spacing_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginTopHover) {\r\n    styles += sizeStyled(marginTopHover, \"margin-top\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-top .altrp-heading-sub {`;\r\n\r\n  const marginBottom = getResponsiveSetting(settings, \"spacing_sub_heading\");\r\n\r\n  if (marginBottom) {\r\n    styles += sizeStyled(marginBottom, \"margin-bottom\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-top .altrp-heading-sub:hover {`;\r\n\r\n  const marginBottomHover = getResponsiveSetting(\r\n    settings,\r\n    \"spacing_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomHover) {\r\n    styles += sizeStyled(marginBottomHover, \"margin-bottom\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-left .altrp-heading-sub {`;\r\n\r\n  const marginRight = getResponsiveSetting(settings, \"spacing_sub_heading\");\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, \"margin-right\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-left .altrp-heading-sub:hover {`;\r\n\r\n  const marginRightHover = getResponsiveSetting(\r\n    settings,\r\n    \"spacing_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginRightHover) {\r\n    styles += sizeStyled(marginRightHover, \"margin-right\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-right .altrp-heading-sub {`;\r\n\r\n  const marginLeft = getResponsiveSetting(settings, \"spacing_sub_heading\");\r\n\r\n  if (marginLeft) {\r\n    styles += sizeStyled(marginLeft, \"margin-left\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-right .altrp-heading-sub:hover {`;\r\n\r\n  const marginLeftHover = getResponsiveSetting(\r\n    settings,\r\n    \"spacing_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginLeftHover) {\r\n    styles += sizeStyled(marginLeftHover, \"margin-left\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-advanced-wrapper {`;\r\n\r\n  const textAlignAdvancedWrapper = getResponsiveSetting(\r\n    settings,\r\n    \"alignment_advanced_heading_content\"\r\n  );\r\n\r\n  if (textAlignAdvancedWrapper) {\r\n    styles += simplePropertyStyled(textAlignAdvancedWrapper, \"text-align\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-advanced {`;\r\n\r\n  const backgroundColorHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"background_color_advanced_heading_style\"\r\n  );\r\n\r\n  if (backgroundColorHeadingAdvanced) {\r\n    styles += colorPropertyStyled(\r\n      backgroundColorHeadingAdvanced,\r\n      \"background-color\"\r\n    );\r\n  }\r\n\r\n  const colorHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"color_advanced_heading_style\"\r\n  );\r\n\r\n  if (colorHeadingAdvanced) {\r\n    styles += colorPropertyStyled(colorHeadingAdvanced, \"color\");\r\n  }\r\n\r\n  const paddingHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"padding_advanced_heading_style\"\r\n  );\r\n\r\n  if (paddingHeadingAdvanced) {\r\n    styles += dimensionsControllerToStyles(paddingHeadingAdvanced);\r\n  }\r\n\r\n  const typographicHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"typography_advanced_heading_style\"\r\n  );\r\n\r\n  if (typographicHeadingAdvanced) {\r\n    styles += typographicControllerToStyles(typographicHeadingAdvanced);\r\n  }\r\n\r\n  const textShadowHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"text_shadow_advanced_heading_style\"\r\n  );\r\n\r\n  if (textShadowHeadingAdvanced) {\r\n    styles += textShadowControllerToStyles(textShadowHeadingAdvanced);\r\n  }\r\n\r\n  const borderTypeHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"border_type_advanced_heading_style\"\r\n  );\r\n\r\n  if (borderTypeHeadingAdvanced) {\r\n    styles += simplePropertyStyled(borderTypeHeadingAdvanced, \"border-style\");\r\n  }\r\n\r\n  const borderWidthHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"border_width_advanced_heading_style\"\r\n  );\r\n\r\n  if (borderWidthHeadingAdvanced) {\r\n    styles += borderWidthStyled(borderWidthHeadingAdvanced);\r\n  }\r\n\r\n  const borderColorHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"border_color_advanced_heading_style\"\r\n  );\r\n\r\n  if (borderColorHeadingAdvanced) {\r\n    styles += colorPropertyStyled(borderColorHeadingAdvanced, \"border-color\");\r\n  }\r\n\r\n  const borderRadiusHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius_advanced_heading_style\"\r\n  );\r\n\r\n  if (borderRadiusHeadingAdvanced) {\r\n    styles += dimensionsControllerToStyles(\r\n      borderRadiusHeadingAdvanced,\r\n      \"border-radius\"\r\n    );\r\n  }\r\n\r\n  const opacityHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"opacity_advanced_heading_style\"\r\n  );\r\n\r\n  if (opacityHeadingAdvanced) {\r\n    styles += opacityStyled(opacityHeadingAdvanced);\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-heading-advanced:hover {`;\r\n\r\n  const backgroundColorHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_color_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundColorHeadingAdvancedHover) {\r\n    styles += colorPropertyStyled(\r\n      backgroundColorHeadingAdvancedHover,\r\n      \"background-color\"\r\n    );\r\n  }\r\n\r\n  const colorHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"color_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (colorHeadingAdvancedHover) {\r\n    styles += colorPropertyStyled(colorHeadingAdvancedHover, \"color\");\r\n  }\r\n\r\n  const paddingHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"padding_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (paddingHeadingAdvancedHover) {\r\n    styles += dimensionsControllerToStyles(paddingHeadingAdvancedHover);\r\n  }\r\n\r\n  const typographicHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"typography_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (typographicHeadingAdvancedHover) {\r\n    styles += typographicControllerToStyles(typographicHeadingAdvancedHover);\r\n  }\r\n\r\n  const textShadowHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"text_shadow_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (textShadowHeadingAdvancedHover) {\r\n    styles += textShadowControllerToStyles(textShadowHeadingAdvancedHover);\r\n  }\r\n\r\n  const borderTypeHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"border_type_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderTypeHeadingAdvancedHover) {\r\n    styles += simplePropertyStyled(\r\n      borderTypeHeadingAdvancedHover,\r\n      \"border-style\"\r\n    );\r\n  }\r\n\r\n  const borderWidthHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"border_width_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderWidthHeadingAdvancedHover) {\r\n    styles += borderWidthStyled(borderWidthHeadingAdvancedHover);\r\n  }\r\n\r\n  const borderColorHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"border_color_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderColorHeadingAdvancedHover) {\r\n    styles += colorPropertyStyled(\r\n      borderColorHeadingAdvancedHover,\r\n      \"border-color\"\r\n    );\r\n  }\r\n\r\n  const borderRadiusHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderRadiusHeadingAdvancedHover) {\r\n    styles += dimensionsControllerToStyles(\r\n      borderRadiusHeadingAdvancedHover,\r\n      \"border-radius\"\r\n    );\r\n  }\r\n\r\n  const opacityHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"opacity_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (opacityHeadingAdvancedHover) {\r\n    styles += opacityStyled(opacityHeadingAdvancedHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-icon-header {`;\r\n\r\n  const marginBottomForHorizontal = getResponsiveSetting(\r\n    settings,\r\n    \"horizontal_offset_advanced_heading_content\"\r\n  );\r\n\r\n  if (marginBottomForHorizontal) {\r\n    styles += sizeStyled(marginBottomForHorizontal, \"margin-bottom\");\r\n  }\r\n\r\n  const marginBottomForVertical = getResponsiveSetting(\r\n    settings,\r\n    \"vertical_offset_advanced_heading_content\"\r\n  );\r\n\r\n  if (marginBottomForVertical) {\r\n    styles += sizeStyled(marginBottomForVertical, \"margin-bottom\");\r\n  }\r\n\r\n  const marginBottomForRotate = getResponsiveSetting(\r\n    settings,\r\n    \"rotate_offset_advanced_heading_content\"\r\n  );\r\n\r\n  if (marginBottomForRotate) {\r\n    styles += sizeStyled(marginBottomForRotate, \"margin-bottom\");\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-icon-header:hover {`;\r\n\r\n  const marginBottomForHorizontalHover = getResponsiveSetting(\r\n    settings,\r\n    \"horizontal_offset_advanced_heading_content\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomForHorizontalHover) {\r\n    styles += sizeStyled(marginBottomForHorizontalHover, \"margin-bottom\");\r\n  }\r\n\r\n  const marginBottomForVerticalHover = getResponsiveSetting(\r\n    settings,\r\n    \"vertical_offset_advanced_heading_content\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomForVerticalHover) {\r\n    styles += sizeStyled(marginBottomForVerticalHover, \"margin-bottom\");\r\n  }\r\n\r\n  const marginBottomForRotateHover = getResponsiveSetting(\r\n    settings,\r\n    \"rotate_offset_advanced_heading_content\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomForRotateHover) {\r\n    styles += sizeStyled(marginBottomForRotateHover, \"margin-bottom\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading, ${parentClass} .altrp-heading a {`;\r\n\r\n  const color = getResponsiveSetting(settings, \"heading_style_color\");\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, \"color\");\r\n  }\r\n\r\n  const typographic = getResponsiveSetting(\r\n    settings,\r\n    \"heading_style_typographic\"\r\n  );\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  const textShadow = getResponsiveSetting(\r\n    settings,\r\n    \"heading_style_text_shadow\"\r\n  );\r\n\r\n  if (textShadow) {\r\n    styles += textShadowControllerToStyles(textShadow);\r\n  }\r\n\r\n  const margin = getResponsiveSetting(settings, \"style_position_margin\");\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, \"margin\");\r\n  }\r\n\r\n  const padding = getResponsiveSetting(settings, \"style_position_padding\");\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  const zIndex = getResponsiveSetting(settings, \"position_z_index\");\r\n\r\n  if (zIndex) {\r\n    styles += simplePropertyStyled(zIndex, \"z-index\");\r\n  }\r\n\r\n  const backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"style_background_color\"\r\n  );\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, \"background-color\");\r\n  }\r\n\r\n  const opacity = getResponsiveSetting(settings, \"style_background_opacity\");\r\n\r\n  if (opacity) {\r\n    styles += opacityStyled(opacity);\r\n  }\r\n\r\n  const gradient = getResponsiveSetting(settings, \"gradient\");\r\n\r\n  if (gradient) {\r\n    styles += gradientStyled(gradient);\r\n  }\r\n\r\n  const transform = getResponsiveSetting(settings, \"transform_style\");\r\n\r\n  if (transform) {\r\n    styles += translateStyled(transform);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading, ${parentClass} .altrp-heading a:hover {`;\r\n\r\n  const colorLinkHover = getResponsiveSetting(settings, \"heading_style_color\", \":hover\");\r\n\r\n  if (colorLinkHover) {\r\n    styles += colorPropertyStyled(colorLinkHover, \"color\");\r\n    styles += \"text-decoration: none; \";\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading {`;\r\n\r\n  const borderType = getResponsiveSetting(settings, \"style_border_type\");\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, \"border-style\");\r\n  }\r\n\r\n  const borderWidth = getResponsiveSetting(settings, \"style_border_width\");\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  const borderColor = getResponsiveSetting(settings, \"style_border_color\");\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, \"border-color\");\r\n  }\r\n\r\n  const borderRadius = getResponsiveSetting(settings, \"style_border_radius\");\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, \"border-radius\");\r\n  }\r\n  //fix display with <strong> and <b> tags\r\n  styles += \"display:block;\";\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-heading:hover {`;\r\n\r\n  const colorHover = getResponsiveSetting(\r\n    settings,\r\n    \"heading_style_color\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (colorHover) {\r\n    styles += colorPropertyStyled(colorHover, \"color\");\r\n  }\r\n\r\n  const typographicHover = getResponsiveSetting(\r\n    settings,\r\n    \"heading_style_typographic\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (typographicHover) {\r\n    styles += typographicControllerToStyles(typographicHover);\r\n  }\r\n\r\n  const textShadowHover = getResponsiveSetting(\r\n    settings,\r\n    \"heading_style_text_shadow\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (textShadowHover) {\r\n    styles += textShadowControllerToStyles(textShadowHover);\r\n  }\r\n\r\n  const marginHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_position_margin\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginHover) {\r\n    styles += dimensionsControllerToStyles(marginHover, \"margin\");\r\n  }\r\n\r\n  const paddingHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_position_padding\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (paddingHover) {\r\n    styles += dimensionsControllerToStyles(paddingHover);\r\n  }\r\n\r\n  const zIndexHover = getResponsiveSetting(\r\n    settings,\r\n    \"position_z_index\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (zIndexHover) {\r\n    styles += simplePropertyStyled(zIndexHover, \"z-index\");\r\n  }\r\n\r\n  const backgroundColorHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_background_color\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundColorHover) {\r\n    styles += colorPropertyStyled(backgroundColorHover, \"background-color\");\r\n  }\r\n\r\n  const opacityHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_background_opacity\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (opacityHover) {\r\n    styles += opacityStyled(opacityHover);\r\n  }\r\n\r\n  const gradientHover = getResponsiveSetting(settings, \"gradient\", \":hover\");\r\n\r\n  if (gradientHover) {\r\n    styles += gradientStyled(gradientHover);\r\n  }\r\n\r\n  const borderTypeHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_border_type\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderTypeHover) {\r\n    styles += simplePropertyStyled(borderTypeHover, \"border-style\");\r\n  }\r\n\r\n  const borderWidthHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_border_width\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderWidthHover) {\r\n    styles += borderWidthStyled(borderWidthHover);\r\n  }\r\n\r\n  const borderColorHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_border_color\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderColorHover) {\r\n    styles += colorPropertyStyled(borderColorHover, \"border-color\");\r\n  }\r\n\r\n  const borderRadiusHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_border_radius\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderRadiusHover) {\r\n    styles += sizeStyled(borderRadiusHover, \"border-radius\");\r\n  }\r\n\r\n  const transformHover = getResponsiveSetting(\r\n    settings,\r\n    \"transform_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (transformHover) {\r\n    styles += translateStyled(transformHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading.altrp-background-image {`;\r\n\r\n  const backgroundImage = getResponsiveSetting(settings, \"background_image\");\r\n\r\n  if (backgroundImage) {\r\n    styles += backgroundImageControllerToStyles(backgroundImage);\r\n  }\r\n\r\n  const backgroundPosition = getResponsiveSetting(\r\n    settings,\r\n    \"background_position\"\r\n  );\r\n\r\n  if (backgroundPosition) {\r\n    styles += simplePropertyStyled(backgroundPosition, \"background-position\");\r\n  }\r\n\r\n  const backgroundAttachment = getResponsiveSetting(\r\n    settings,\r\n    \"background_attachment\"\r\n  );\r\n\r\n  if (backgroundAttachment) {\r\n    styles += simplePropertyStyled(\r\n      backgroundAttachment,\r\n      \"background-attachment\"\r\n    );\r\n  }\r\n\r\n  const backgroundRepeat = getResponsiveSetting(settings, \"background_repeat\");\r\n\r\n  if (backgroundRepeat) {\r\n    styles += simplePropertyStyled(backgroundRepeat, \"background-repeat\");\r\n  }\r\n\r\n  const backgroundSizeInUnits = getResponsiveSetting(\r\n    settings,\r\n    \"background_image_width\"\r\n  );\r\n\r\n  if (backgroundSizeInUnits) {\r\n    styles += sizeStyled(backgroundSizeInUnits, \"background-size\");\r\n  }\r\n\r\n  const backgroundSize = getResponsiveSetting(settings, \"background_size\");\r\n\r\n  if (backgroundSize) {\r\n    styles += simplePropertyStyled(backgroundSize, \"background-size\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading.altrp-background-image:hover {`;\r\n\r\n  const backgroundImageHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_image\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundImageHover) {\r\n    styles += backgroundImageControllerToStyles(backgroundImageHover);\r\n  }\r\n\r\n  const backgroundPositionHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_position\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundPositionHover) {\r\n    styles += simplePropertyStyled(\r\n      backgroundPositionHover,\r\n      \"background-position\"\r\n    );\r\n  }\r\n\r\n  const backgroundAttachmentHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_attachment\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundAttachmentHover) {\r\n    styles += simplePropertyStyled(\r\n      backgroundAttachmentHover,\r\n      \"background-attachment\"\r\n    );\r\n  }\r\n\r\n  const backgroundRepeatHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_repeat\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundRepeatHover) {\r\n    styles += simplePropertyStyled(backgroundRepeatHover, \"background-repeat\");\r\n  }\r\n\r\n  const backgroundSizeInUnitsHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_image_width\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundSizeInUnitsHover) {\r\n    styles += sizeStyled(backgroundSizeInUnitsHover, \"background-size\");\r\n  }\r\n\r\n  const backgroundSizeHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_size\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundSizeHover) {\r\n    styles += simplePropertyStyled(backgroundSizeHover, \"background-size\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  return styles;\r\n}\r\n","import { getResponsiveSetting } from '../../helpers';\r\nimport {\r\n    dimensionsControllerToStyles,\r\n    gradientStyled,\r\n    filtersControllerToStyles,\r\n    simplePropertyStyled,\r\n    colorPropertyStyled,\r\n    sizeStyled,\r\n    opacityStyled,\r\n    borderWidthStyled,\r\n    backgroundImageControllerToStyles,\r\n  } from \"../../helpers/styles\";\r\n\r\n\r\nconst getImageStyles = (settings,id)=>{\r\n    let styles = '';\r\n\r\n    let objectFit, height, width, margin, padding, zIndex, opacity, borderType, filters;\r\n    let borderWidth, borderColor, borderRadius, transitionDuration, animationDuration, backgroundColor, backgroundColorHover, gradient;\r\n    let justifyContent;\r\n    let backgroundImage, backgroundPosition, backgroundAttachment, backgroundRepeat,backgroundSizeInUnit, backgroundSize;\r\n\r\n    const parentClass = `.altrp-element${id}`;\r\n\r\n    styles += `${parentClass} .altrp-image {`;\r\n\r\n     //Получаем значения object-fit из контроллера, обрабатываем и добавляем в styles\r\n\r\n     if (settings !== undefined) {\r\n        objectFit = getResponsiveSetting(settings, 'image_fit_size');\r\n      }\r\n\r\n      if (objectFit) {\r\n        styles += simplePropertyStyled(objectFit, 'object-fit');\r\n      }\r\n\r\n      //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundColor = getResponsiveSetting(settings, 'background_color');\r\n      }\r\n\r\n      if (backgroundColor) {\r\n        styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n      }\r\n\r\n      //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        gradient = getResponsiveSetting(settings, 'gradient');\r\n      }\r\n\r\n      if (gradient) {\r\n        styles += gradientStyled(gradient);\r\n      }\r\n\r\n      //Получаем значения filters из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        filters = getResponsiveSetting(settings, 'image_style_text_shadow');\r\n      }\r\n\r\n      if (filters) {\r\n        styles += filtersControllerToStyles(filters);\r\n      }\r\n\r\n      //Получаем значения height из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        height = getResponsiveSetting(settings, 'height_size');\r\n      }\r\n\r\n      if (height) {\r\n        if(height.size !== \"0\") {\r\n          styles += sizeStyled(height, 'height');\r\n        } else {\r\n\r\n        }\r\n      }\r\n\r\n      //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n      //Свойство margin было убрано из Контроллера у виджета Image. Перенес сюда на всякий случай, так как были активные rules в Image.js\r\n\r\n      if (settings !== undefined) {\r\n        margin = getResponsiveSetting(settings, 'position_margin');\r\n      }\r\n\r\n      if (margin) {\r\n        styles += dimensionsControllerToStyles(margin, 'margin');\r\n      }\r\n\r\n      //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        padding = getResponsiveSetting(settings, 'position_padding');\r\n      }\r\n\r\n      if (padding) {\r\n        styles += dimensionsControllerToStyles(padding);\r\n      }\r\n\r\n      //Получаем значения z-index из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        zIndex = getResponsiveSetting(settings, 'position_z_index');\r\n      }\r\n\r\n      if (zIndex) {\r\n        styles += simplePropertyStyled(zIndex, 'z-index');\r\n      }\r\n\r\n      //Получаем значения opacity из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        opacity = getResponsiveSetting(settings, 'opacity_overlay');\r\n      }\r\n\r\n      if (opacity) {\r\n        styles += opacityStyled(opacity);\r\n      }\r\n\r\n      //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderType = getResponsiveSetting(settings, 'border_type');\r\n      }\r\n\r\n      if (borderType) {\r\n        styles += simplePropertyStyled(borderType, 'border-style');\r\n      }\r\n\r\n      //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderWidth = getResponsiveSetting(settings, 'border_width');\r\n      }\r\n\r\n      if (borderWidth) {\r\n        styles += borderWidthStyled(borderWidth);\r\n      }\r\n\r\n      //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderColor = getResponsiveSetting(settings, 'border_color');\r\n      }\r\n\r\n      if (borderColor) {\r\n        styles += colorPropertyStyled(borderColor, 'border-color');\r\n      }\r\n\r\n      //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderRadius = getResponsiveSetting(settings, 'border_radius');\r\n      }\r\n\r\n      if (borderRadius) {\r\n        styles += sizeStyled(borderRadius, 'border-radius');\r\n      }\r\n\r\n      //Получаем значения transition-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        transitionDuration = getResponsiveSetting(settings, 'creative_hover_controller');\r\n      }\r\n\r\n      if (transitionDuration) {\r\n        styles += sizeStyled(transitionDuration, 'transition-duration');\r\n      }\r\n\r\n      //Получаем значения animation-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        animationDuration = getResponsiveSetting(settings, 'creative_hover_controller');\r\n      }\r\n\r\n      if (animationDuration) {\r\n        styles += sizeStyled(animationDuration, 'animation-duration');\r\n      }\r\n\r\n      styles += `} `;\r\n\r\n      styles += `${parentClass} .altrp-image:hover {`;\r\n\r\n      //Получаем значения object-fit из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        objectFit = getResponsiveSetting(settings, 'image_fit_size', ':hover');\r\n      }\r\n\r\n      if (objectFit) {\r\n        styles += simplePropertyStyled(objectFit, 'object-fit');\r\n      }\r\n\r\n      //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundColor = getResponsiveSetting(settings, 'background_color', ':hover');\r\n      }\r\n\r\n      if (backgroundColor) {\r\n        styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n      }\r\n\r\n      //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        gradient = getResponsiveSetting(settings, 'gradient', ':hover');\r\n      }\r\n\r\n      if (gradient) {\r\n        styles += gradientStyled(gradient);\r\n      }\r\n\r\n      //Получаем значения filters из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        filters = getResponsiveSetting(settings, 'image_style_text_shadow', ':hover');\r\n      }\r\n\r\n      if (filters) {\r\n        styles += filtersControllerToStyles(filters);\r\n      }\r\n\r\n      //Получаем значения height из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        height = getResponsiveSetting(settings, 'height_size', ':hover');\r\n      }\r\n\r\n      if (height) {\r\n        if(height.size !== \"0\") {\r\n          styles += sizeStyled(height, 'height');\r\n        }\r\n      }\r\n\r\n      //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n      //Свойство margin было убрано из Контроллера у виджета Image. Перенес сюда на всякий случай, так как были активные rules в Image.js\r\n\r\n      if (settings !== undefined) {\r\n        margin = getResponsiveSetting(settings, 'position_margin', ':hover');\r\n      }\r\n\r\n      if (margin) {\r\n        styles += dimensionsControllerToStyles(margin, 'margin');\r\n      }\r\n\r\n      //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        padding = getResponsiveSetting(settings, 'position_padding', ':hover');\r\n      }\r\n\r\n      if (padding) {\r\n        styles += dimensionsControllerToStyles(padding);\r\n      }\r\n\r\n      //Получаем значения z-index из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        zIndex = getResponsiveSetting(settings, 'position_z_index', ':hover');\r\n      }\r\n\r\n      if (zIndex) {\r\n        styles += simplePropertyStyled(zIndex, 'z-index');\r\n      }\r\n\r\n      //Получаем значения opacity из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        opacity = getResponsiveSetting(settings, 'opacity_overlay', ':hover');\r\n      }\r\n\r\n      if (opacity) {\r\n        styles += opacityStyled(opacity);\r\n      }\r\n\r\n      //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderType = getResponsiveSetting(settings, 'border_type', ':hover');\r\n      }\r\n\r\n      if (borderType) {\r\n        styles += simplePropertyStyled(borderType, 'border-style');\r\n      }\r\n\r\n      //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderWidth = getResponsiveSetting(settings, 'border_width', ':hover');\r\n      }\r\n\r\n      if (borderWidth) {\r\n        styles += borderWidthStyled(borderWidth);\r\n      }\r\n\r\n      //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderColor = getResponsiveSetting(settings, 'border_color', ':hover');\r\n      }\r\n\r\n      if (borderColor) {\r\n        styles += colorPropertyStyled(borderColor, 'border-color');\r\n      }\r\n\r\n      //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderRadius = getResponsiveSetting(settings, 'border_radius', ':hover');\r\n      }\r\n\r\n      if (borderRadius) {\r\n        styles += sizeStyled(borderRadius, 'border-radius');\r\n      }\r\n\r\n      //Получаем значения transition-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        transitionDuration = getResponsiveSetting(settings, 'creative_hover_controller', ':hover');\r\n      }\r\n\r\n      if (transitionDuration) {\r\n        styles += sizeStyled(transitionDuration, 'transition-duration');\r\n      }\r\n\r\n      //Получаем значения animation-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        animationDuration = getResponsiveSetting(settings, 'creative_hover_controller', ':hover');\r\n      }\r\n\r\n      if (animationDuration) {\r\n        styles += sizeStyled(animationDuration, 'animation-duration');\r\n      }\r\n\r\n      styles+=\"} \";\r\n\r\n      styles+=`${parentClass} .altrp-image-container,${parentClass} .altrp-image-container a {`;\r\n\r\n      //Получаем значения justify-content из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        justifyContent = getResponsiveSetting(settings, 'image_style_alignment');\r\n      }\r\n\r\n      if (justifyContent) {\r\n        styles += 'display:flex;'\r\n        styles += simplePropertyStyled(justifyContent, 'justify-content');\r\n      }\r\n\r\n      styles+=\"} \";\r\n\r\n\r\n      styles+=`${parentClass} .altrp-background-image {`;\r\n\r\n      //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundImage = getResponsiveSetting(settings, 'background_image');\r\n      }\r\n\r\n      if (backgroundImage) {\r\n        styles += backgroundImageControllerToStyles(backgroundImage);\r\n      }\r\n\r\n      //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundPosition = getResponsiveSetting(settings, 'background_position');\r\n      }\r\n\r\n      if (backgroundPosition) {\r\n        styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n      }\r\n\r\n      //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundAttachment = getResponsiveSetting(settings, 'background_attachment');\r\n      }\r\n\r\n      if (backgroundAttachment) {\r\n        styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n      }\r\n\r\n      //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundRepeat = getResponsiveSetting(settings, 'background_repeat');\r\n      }\r\n\r\n      if (backgroundRepeat) {\r\n        styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n      }\r\n\r\n      //Получаем значения background-size в конкретных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundSizeInUnit = getResponsiveSetting(settings, 'background_image_width');\r\n      }\r\n\r\n      if (backgroundSizeInUnit) {\r\n        styles += sizeStyled(backgroundSizeInUnit, 'background-size');\r\n      }\r\n\r\n      //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundSize = getResponsiveSetting(settings, 'background_size');\r\n      }\r\n\r\n      if (backgroundSize) {\r\n        styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n      }\r\n\r\n      styles+=\"} \";\r\n\r\n      styles+=`${parentClass} .altrp-background-image:hover {`;\r\n\r\n      //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundImage = getResponsiveSetting(settings, 'background_image', ':hover');\r\n      }\r\n\r\n      if (backgroundImage) {\r\n        styles += backgroundImageControllerToStyles(backgroundImage);\r\n      }\r\n\r\n      //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundPosition = getResponsiveSetting(settings, 'background_position', ':hover');\r\n      }\r\n\r\n      if (backgroundPosition) {\r\n        styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n      }\r\n\r\n      //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundAttachment = getResponsiveSetting(settings, 'background_attachment', ':hover');\r\n      }\r\n\r\n      if (backgroundAttachment) {\r\n        styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n      }\r\n\r\n      //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundRepeat = getResponsiveSetting(settings, 'background_repeat', ':hover');\r\n      }\r\n\r\n      if (backgroundRepeat) {\r\n        styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n      }\r\n\r\n      //Получаем значения background-size в конкретных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundSizeInUnit = getResponsiveSetting(settings, 'background_image_width', ':hover');\r\n      }\r\n\r\n      if (backgroundSizeInUnit) {\r\n        styles += sizeStyled(backgroundSizeInUnit, 'background-size');\r\n      }\r\n\r\n      //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundSize = getResponsiveSetting(settings, 'background_size', ':hover');\r\n      }\r\n\r\n      if (backgroundSize) {\r\n        styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n      }\r\n\r\n      styles+=\"} \";\r\n\r\n      let aspect_ratio_size;\r\n\r\n      if (settings !== undefined) {\r\n        aspect_ratio_size = getResponsiveSetting(settings, 'aspect_ratio_size');\r\n        if(Number(aspect_ratio_size) !== 0) {\r\n            styles+= 'padding:0;';\r\n        }\r\n        else{\r\n            padding = getResponsiveSetting(settings, 'position_padding');\r\n            styles +=dimensionsControllerToStyles(padding);\r\n        }\r\n      }\r\n\r\n      return styles;\r\n}\r\n\r\nexport default getImageStyles;\r\n","import { getResponsiveSetting } from '../../helpers';\r\nimport {dimensionsControllerToStyles} from \"../../helpers/styles\";\r\n\r\nconst getMenuStyles = (settings,id)=>{\r\n\r\n    const parentClass = `.altrp-element${id}`;\r\n\r\n    let styles = `${parentClass} .altrp-menu{`;\r\n\r\n    if (getResponsiveSetting(settings, 'type') === 'horizontal') {\r\n      styles += 'display: flex;';\r\n      styles += '.bp3-submenu{flex-grow:1}';\r\n      styles += '.bp3-icon-caret-right{transform: rotate(90deg);}';\r\n    }\r\n\r\n    styles += '} ';\r\n    /**\r\n     * Стили поповера\r\n     * @type {string}\r\n     */\r\n    let renderButton = getResponsiveSetting(settings, 'button');\r\n    if (renderButton) {\r\n      styles += `${parentClass} .altrp-popover{display:flex;`;\r\n      let alignment = getResponsiveSetting(settings, 'alignment')\r\n      styles += `justify-content:${alignment};`;\r\n      if (alignment === 'stretch') {\r\n        styles += `${parentClass} .altrp-menu-toggle{flex-grow:1;}`;\r\n      }\r\n      styles += '} ';\r\n    }\r\n    /**\r\n     * Стили кнопки\r\n     * @type {string}\r\n     */\r\n    if (renderButton) {\r\n      styles += `${parentClass} .altrp-menu-toggle{`;\r\n      let buttonBg = getResponsiveSetting(settings, 'button_bg')\r\n      if (buttonBg && buttonBg.color) {\r\n        styles += `background-color:${buttonBg.color};background-image:none;`;\r\n      }\r\n      let buttonColor = getResponsiveSetting(settings, 'button_color')\r\n      if (buttonColor && buttonColor.color) {\r\n        styles += `svg, path{fill:${buttonColor.color};}`;\r\n      }\r\n      let buttonPadding = getResponsiveSetting(settings, 'button_padding')\r\n      if (buttonPadding) {\r\n        styles += dimensionsControllerToStyles(buttonPadding);\r\n      }\r\n      let border = getResponsiveSetting(settings, 'border');\r\n      if(border){\r\n        styles += `border-style:${border};`;\r\n        styles += dimensionsControllerToStyles(getResponsiveSetting(settings, 'border_width'), 'border-width');\r\n        let borderColor = getResponsiveSetting(settings, 'border_color')\r\n        if(borderColor && borderColor.color){\r\n          styles += `border-color:${borderColor.color};`;\r\n        }\r\n      }\r\n      let borderRadius = getResponsiveSetting(settings, 'button_radius');\r\n      if(borderRadius){\r\n        styles += dimensionsControllerToStyles(borderRadius, 'border-radius');\r\n      }\r\n      styles += '} ';\r\n\r\n      styles += `${parentClass} .altrp-menu-toggle:hover{`;\r\n      buttonBg = getResponsiveSetting(settings, 'button_bg', ':hover')\r\n      if (buttonBg && buttonBg.color) {\r\n        styles += `background-color:${buttonBg.color};background-image:none;`;\r\n      }\r\n      buttonColor = getResponsiveSetting(settings, 'button_color', ':hover')\r\n      if (buttonColor && buttonColor.color) {\r\n        styles += `svg, path{fill:${buttonColor.color};}`;\r\n      }\r\n      border = getResponsiveSetting(settings, 'border', ':hover');\r\n      if(border){\r\n        styles += `border-style:${border};`;\r\n        styles += dimensionsControllerToStyles(getResponsiveSetting(settings, 'border_width', ':hover'), 'border-width');\r\n        let borderColor = getResponsiveSetting(settings, 'border_color', ':hover')\r\n        if(borderColor && borderColor.color){\r\n          styles += `border-color:${borderColor.color};`;\r\n        }\r\n      }\r\n      borderRadius = getResponsiveSetting(settings, 'button_radius', ':hover');\r\n      if(borderRadius){\r\n        styles += dimensionsControllerToStyles(borderRadius, 'border-radius');\r\n      }\r\n      styles += '}';\r\n    }\r\n\r\n    return styles;\r\n}\r\n\r\nexport default getMenuStyles;","import {\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  sizeStyled,\r\n  heightCalcStyled,\r\n  transformRotateStyled,\r\n  iconSizeStyled,\r\n  shadowControllerToStyles,\r\n} from '../../helpers/styles';\r\nimport { getResponsiveSetting } from '../../helpers';\r\n\r\n/**\r\n * Преобразует объект стилей, который задается в виджете Cards в строку css для вставки в GlobalStyles\r\n * @param {{}} settings \r\n * @param {string} id \r\n * @return {string}\r\n */\r\n\r\nexport function getPostsStyles(settings, id) {\r\n  let styles = '';\r\n\r\n  if (settings === undefined) {\r\n    return styles;\r\n  }\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous {`;\r\n\r\n  const flexDirectionPaginPrev = getResponsiveSetting(settings, 'prev_icon_position');\r\n\r\n  if (flexDirectionPaginPrev && flexDirectionPaginPrev !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionPaginPrev, 'flex-direction');\r\n  }\r\n\r\n  const marginPaginPrev = getResponsiveSetting(settings, 'posts_prev_margin');\r\n\r\n  if (marginPaginPrev) {\r\n    styles += dimensionsControllerToStyles(marginPaginPrev, 'margin');\r\n  }\r\n\r\n  const paddingPaginPrev = getResponsiveSetting(settings, 'posts_prev_padding');\r\n\r\n  if (paddingPaginPrev) {\r\n    styles += dimensionsControllerToStyles(paddingPaginPrev);\r\n  }\r\n\r\n  const colorPaginPrev = getResponsiveSetting(settings, 'posts_prev_color');\r\n\r\n  if (colorPaginPrev) {\r\n    styles += colorPropertyStyled(colorPaginPrev, 'color');\r\n  }\r\n\r\n  const typographicPaginPrev = getResponsiveSetting(settings, 'posts_prev_typographic');\r\n\r\n  if (typographicPaginPrev) {\r\n    styles += typographicControllerToStyles(typographicPaginPrev);\r\n  }\r\n\r\n  const borderTypePaginPrev = getResponsiveSetting(settings, 'posts_prev_border_type');\r\n\r\n  if (borderTypePaginPrev) {\r\n    styles += simplePropertyStyled(borderTypePaginPrev, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginPrev = getResponsiveSetting(settings, 'posts_prev_border_width');\r\n\r\n  if (borderWidthPaginPrev) {\r\n    styles += borderWidthStyled(borderWidthPaginPrev);\r\n  }\r\n\r\n  const borderColorPaginPrev = getResponsiveSetting(settings, 'posts_prev_border_color');\r\n\r\n  if (borderColorPaginPrev) {\r\n    styles += colorPropertyStyled(borderColorPaginPrev, 'border-color');\r\n  }\r\n\r\n  const borderRadiusPaginPrev = getResponsiveSetting(settings, 'border_prev_radius');\r\n\r\n  if (borderRadiusPaginPrev) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginPrev, 'border-radius');\r\n  }\r\n\r\n  const boxShadowPaginPrev = getResponsiveSetting(settings, 'style_prev_background_shadow');\r\n\r\n  if (boxShadowPaginPrev) {\r\n    styles += shadowControllerToStyles(boxShadowPaginPrev);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover {`;\r\n\r\n  const flexDirectionPaginPrevHover = getResponsiveSetting(settings, 'prev_icon_position', ':hover');\r\n\r\n  if (flexDirectionPaginPrevHover && flexDirectionPaginPrevHover !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionPaginPrevHover, 'flex-direction');\r\n  }\r\n\r\n  const marginPaginPrevHover = getResponsiveSetting(settings, 'posts_prev_margin', ':hover');\r\n\r\n  if (marginPaginPrevHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginPrevHover, 'margin');\r\n  }\r\n\r\n  const paddingPaginPrevHover = getResponsiveSetting(settings, 'posts_prev_padding', ':hover');\r\n\r\n  if (paddingPaginPrevHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginPrevHover);\r\n  }\r\n\r\n  const colorPaginPrevHover = getResponsiveSetting(settings, 'posts_prev_color', ':hover');\r\n\r\n  if (colorPaginPrevHover) {\r\n    styles += colorPropertyStyled(colorPaginPrevHover, 'color');\r\n  }\r\n\r\n  const typographicPaginPrevHover = getResponsiveSetting(settings, 'posts_prev_typographic', ':hover');\r\n\r\n  if (typographicPaginPrevHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPrevHover);\r\n  }\r\n\r\n  const borderTypePaginPrevHover = getResponsiveSetting(settings, 'posts_prev_border_type', ':hover');\r\n\r\n  if (borderTypePaginPrevHover) {\r\n    styles += simplePropertyStyled(borderTypePaginPrevHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginPrevHover = getResponsiveSetting(settings, 'posts_prev_border_width', ':hover');\r\n\r\n  if (borderWidthPaginPrevHover) {\r\n    styles += borderWidthStyled(borderWidthPaginPrevHover);\r\n  }\r\n\r\n  const borderColorPaginPrevHover = getResponsiveSetting(settings, 'posts_prev_border_color', ':hover');\r\n\r\n  if (borderColorPaginPrevHover) {\r\n    styles += colorPropertyStyled(borderColorPaginPrevHover, 'border-color');\r\n  }\r\n\r\n  const borderRadiusPaginPrevHover = getResponsiveSetting(settings, 'border_prev_radius', ':hover');\r\n\r\n  if (borderRadiusPaginPrevHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginPrevHover, 'border-radius');\r\n  }\r\n\r\n  const boxShadowPaginPrevHover = getResponsiveSetting(settings, 'style_prev_background_shadow', ':hover');\r\n\r\n  if (boxShadowPaginPrevHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginPrevHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous svg, ${parentClass} .altrp-pagination__previous img {`;\r\n\r\n  const marginPaginPrevSvgImg = getResponsiveSetting(settings, 'prev_icon_padding');\r\n\r\n  if (marginPaginPrevSvgImg) {\r\n    styles += dimensionsControllerToStyles(marginPaginPrevSvgImg, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover svg, ${parentClass} .altrp-pagination__previous:hover img {`;\r\n\r\n  const marginPaginPrevSvgImgHover = getResponsiveSetting(settings, 'prev_icon_padding', ':hover');\r\n\r\n  if (marginPaginPrevSvgImgHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginPrevSvgImgHover, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous svg {`;\r\n\r\n  const sizePaginPrevSvg = getResponsiveSetting(settings, 'prev_icon_size');\r\n\r\n  if (sizePaginPrevSvg) {\r\n    styles += iconSizeStyled(sizePaginPrevSvg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover svg {`;\r\n\r\n  const sizePaginPrevSvgHover = getResponsiveSetting(settings, 'prev_icon_size', ':hover');\r\n\r\n  if (sizePaginPrevSvgHover) {\r\n    styles += iconSizeStyled(sizePaginPrevSvgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous img {`;\r\n\r\n  const heightPaginPrevImg = getResponsiveSetting(settings, 'prev_icon_size');\r\n\r\n  if (heightPaginPrevImg) {\r\n    styles += sizeStyled(heightPaginPrevImg, 'height');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover img {`;\r\n\r\n  const heightPaginPrevImgHover = getResponsiveSetting(settings, 'prev_icon_size', ':hover');\r\n\r\n  if (heightPaginPrevImgHover) {\r\n    styles += sizeStyled(heightPaginPrevImgHover, 'height');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous path {`;\r\n\r\n  const fillPaginPrevPath = getResponsiveSetting(settings, 'prev_icon_color');\r\n\r\n  if (fillPaginPrevPath) {\r\n    styles += colorPropertyStyled(fillPaginPrevPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover path {`;\r\n\r\n  const fillPaginPrevPathHover = getResponsiveSetting(settings, 'prev_icon_color', ':hover');\r\n\r\n  if (fillPaginPrevPathHover) {\r\n    styles += colorPropertyStyled(fillPaginPrevPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next {`;\r\n\r\n  const flexDirectionPaginNext = getResponsiveSetting(settings, 'next_icon_position');\r\n\r\n  if (flexDirectionPaginNext && flexDirectionPaginNext !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionPaginNext, 'flex-direction');\r\n  }\r\n\r\n  const marginPaginNext = getResponsiveSetting(settings, 'posts_next_margin');\r\n\r\n  if (marginPaginNext) {\r\n    styles += dimensionsControllerToStyles(marginPaginNext, 'margin');\r\n  }\r\n\r\n  const paddingPaginNext = getResponsiveSetting(settings, 'posts_next_padding');\r\n\r\n  if (paddingPaginNext) {\r\n    styles += dimensionsControllerToStyles(paddingPaginNext);\r\n  }\r\n\r\n  const colorPaginNext = getResponsiveSetting(settings, 'posts_next_color');\r\n\r\n  if (colorPaginNext) {\r\n    styles += colorPropertyStyled(colorPaginNext, 'color');\r\n  }\r\n\r\n  const typographicPaginNext = getResponsiveSetting(settings, 'posts_next_typographic');\r\n\r\n  if (typographicPaginNext) {\r\n    styles += typographicControllerToStyles(typographicPaginNext);\r\n  }\r\n\r\n  const borderTypePaginNext = getResponsiveSetting(settings, 'posts_next_border_type');\r\n\r\n  if (borderTypePaginNext) {\r\n    styles += simplePropertyStyled(borderTypePaginNext, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginNext = getResponsiveSetting(settings, 'posts_next_border_width');\r\n\r\n  if (borderWidthPaginNext) {\r\n    styles += borderWidthStyled(borderWidthPaginNext);\r\n  }\r\n\r\n  const borderColorPaginNext = getResponsiveSetting(settings, 'posts_next_border_color');\r\n\r\n  if (borderColorPaginNext) {\r\n    styles += colorPropertyStyled(borderColorPaginNext, 'border-color');\r\n  }\r\n\r\n  const borderRadiusPaginNext = getResponsiveSetting(settings, 'border_next_radius');\r\n\r\n  if (borderRadiusPaginNext) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginNext, 'border-radius');\r\n  }\r\n\r\n  const boxShadowPaginNext = getResponsiveSetting(settings, 'style_next_background_shadow');\r\n\r\n  if (boxShadowPaginNext) {\r\n    styles += shadowControllerToStyles(boxShadowPaginNext);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover {`;\r\n\r\n  const flexDirectionPaginNextHover = getResponsiveSetting(settings, 'next_icon_position', ':hover');\r\n\r\n  if (flexDirectionPaginNextHover && flexDirectionPaginNextHover !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionPaginNextHover, 'flex-direction');\r\n  }\r\n\r\n  const marginPaginNextHover = getResponsiveSetting(settings, 'posts_next_margin', ':hover');\r\n\r\n  if (marginPaginNextHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginNextHover, 'margin');\r\n  }\r\n\r\n  const paddingPaginNextHover = getResponsiveSetting(settings, 'posts_next_padding', ':hover');\r\n\r\n  if (paddingPaginNextHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginNextHover);\r\n  }\r\n\r\n  const colorPaginNextHover = getResponsiveSetting(settings, 'posts_next_color', ':hover');\r\n\r\n  if (colorPaginNextHover) {\r\n    styles += colorPropertyStyled(colorPaginNextHover, 'color');\r\n  }\r\n\r\n  const typographicPaginNextHover = getResponsiveSetting(settings, 'posts_next_typographic', ':hover');\r\n\r\n  if (typographicPaginNextHover) {\r\n    styles += typographicControllerToStyles(typographicPaginNextHover);\r\n  }\r\n\r\n  const borderTypePaginNextHover = getResponsiveSetting(settings, 'posts_next_border_type', ':hover');\r\n\r\n  if (borderTypePaginNextHover) {\r\n    styles += simplePropertyStyled(borderTypePaginNextHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginNextHover = getResponsiveSetting(settings, 'posts_next_border_width', ':hover');\r\n\r\n  if (borderWidthPaginNextHover) {\r\n    styles += borderWidthStyled(borderWidthPaginNextHover);\r\n  }\r\n\r\n  const borderColorPaginNextHover = getResponsiveSetting(settings, 'posts_next_border_color', ':hover');\r\n\r\n  if (borderColorPaginNextHover) {\r\n    styles += colorPropertyStyled(borderColorPaginNextHover, 'border-color');\r\n  }\r\n\r\n  const borderRadiusPaginNextHover = getResponsiveSetting(settings, 'border_next_radius', ':hover');\r\n\r\n  if (borderRadiusPaginNextHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginNextHover, 'border-radius');\r\n  }\r\n\r\n  const boxShadowPaginNextHover = getResponsiveSetting(settings, 'style_next_background_shadow', ':hover');\r\n\r\n  if (boxShadowPaginNextHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginNextHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next svg, ${parentClass} .altrp-pagination__next img {`;\r\n\r\n  const marginPaginNextSvgImg = getResponsiveSetting(settings, 'next_icon_margin');\r\n\r\n  if (marginPaginNextSvgImg) {\r\n    styles += dimensionsControllerToStyles(marginPaginNextSvgImg, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover svg, ${parentClass} .altrp-pagination__next:hover img {`;\r\n\r\n  const marginPaginNextSvgImgHover = getResponsiveSetting(settings, 'next_icon_margin', ':hover');\r\n\r\n  if (marginPaginNextSvgImgHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginNextSvgImgHover, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next svg {`;\r\n\r\n  const sizePaginNextSvg = getResponsiveSetting(settings, 'next_icon_size');\r\n\r\n  if (sizePaginNextSvg) {\r\n    styles += iconSizeStyled(sizePaginNextSvg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover svg {`;\r\n\r\n  const sizePaginNextSvgHover = getResponsiveSetting(settings, 'next_icon_size', ':hover');\r\n\r\n  if (sizePaginNextSvgHover) {\r\n    styles += iconSizeStyled(sizePaginNextSvgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next img {`;\r\n\r\n  const heightPaginNextImg = getResponsiveSetting(settings, 'next_icon_size');\r\n\r\n  if (heightPaginNextImg) {\r\n    styles += sizeStyled(heightPaginNextImg, 'height');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover img {`;\r\n\r\n  const heightPaginNextImgHover = getResponsiveSetting(settings, 'next_icon_size', ':hover');\r\n\r\n  if (heightPaginNextImgHover) {\r\n    styles += sizeStyled(heightPaginNextImgHover, 'height');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next path {`;\r\n\r\n  const fillPaginNextPath = getResponsiveSetting(settings, 'next_icon_color');\r\n\r\n  if (fillPaginNextPath) {\r\n    styles += colorPropertyStyled(fillPaginNextPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover path {`;\r\n\r\n  const fillPaginNextPathHover = getResponsiveSetting(settings, 'next_icon_color', ':hover');\r\n\r\n  if (fillPaginNextPathHover) {\r\n    styles += colorPropertyStyled(fillPaginNextPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__count {`;\r\n\r\n  const marginPaginCount = getResponsiveSetting(settings, 'count_buttons_margin');\r\n\r\n  if (marginPaginCount) {\r\n    styles += dimensionsControllerToStyles(marginPaginCount, 'margin');\r\n  }\r\n\r\n  const backgroundColorPaginCount = getResponsiveSetting(settings, 'table_style_pagination_count_background_color');\r\n\r\n  if (backgroundColorPaginCount) {\r\n    styles += colorPropertyStyled(backgroundColorPaginCount, 'background-color');\r\n  }\r\n\r\n  const paddingPaginCount = getResponsiveSetting(settings, 'table_style_pagination_padding_count');\r\n\r\n  if (paddingPaginCount) {\r\n    styles += dimensionsControllerToStyles(paddingPaginCount);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__count:hover {`;\r\n\r\n  const marginPaginCountHover = getResponsiveSetting(settings, 'count_buttons_margin', ':hover');\r\n\r\n  if (marginPaginCountHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginCountHover, 'margin');\r\n  }\r\n\r\n  const backgroundColorPaginCountHover = getResponsiveSetting(settings, 'table_style_pagination_count_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginCountHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginCountHover, 'background-color');\r\n  }\r\n\r\n  const paddingPaginCountHover = getResponsiveSetting(settings, 'table_style_pagination_padding_count', ':hover');\r\n\r\n  if (paddingPaginCountHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginCountHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__count, ${parentClass} .altrp-pagination-pages__item {`;\r\n\r\n  const colorPaginCountPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_text_color');\r\n\r\n  if (colorPaginCountPagesItem) {\r\n    styles += colorPropertyStyled(colorPaginCountPagesItem, 'color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__count:hover, ${parentClass} .altrp-pagination-pages__item:hover {`;\r\n\r\n  const colorPaginCountPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_text_color', ':hover');\r\n\r\n  if (colorPaginCountPagesItemHover) {\r\n    styles += colorPropertyStyled(colorPaginCountPagesItemHover, 'color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination-pages__item {`;\r\n\r\n  const marginPaginPagesItem = getResponsiveSetting(settings, 'count_button_item_margin');\r\n\r\n  if (marginPaginPagesItem) {\r\n    styles += dimensionsControllerToStyles(marginPaginPagesItem, 'margin');\r\n  }\r\n\r\n  const backgroundColorPaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_background_color');\r\n\r\n  if (backgroundColorPaginPagesItem) {\r\n    styles += colorPropertyStyled(backgroundColorPaginPagesItem, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_type');\r\n\r\n  if (borderTypePaginPagesItem) {\r\n    styles += simplePropertyStyled(borderTypePaginPagesItem, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_width');\r\n\r\n  if (borderWidthPaginPagesItem) {\r\n    styles += borderWidthStyled(borderWidthPaginPagesItem);\r\n  }\r\n\r\n  const borderRadiusPaginPagesItem = getResponsiveSetting(settings, 'table_style_count_item_border_radius');\r\n\r\n  if (borderRadiusPaginPagesItem) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginPagesItem, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_color');\r\n\r\n  if (borderColorPaginPagesItem) {\r\n    styles += colorPropertyStyled(borderColorPaginPagesItem, 'border-color', '!important');\r\n  }\r\n\r\n  const boxShadowPaginPagesItem = getResponsiveSetting(settings, 'pagination_count_item_shadow');\r\n\r\n  if (boxShadowPaginPagesItem) {\r\n    styles += shadowControllerToStyles(boxShadowPaginPagesItem);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination-pages__item:hover {`;\r\n\r\n  const marginPaginPagesItemHover = getResponsiveSetting(settings, 'count_button_item_margin', ':hover');\r\n\r\n  if (marginPaginPagesItemHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginPagesItemHover, 'margin');\r\n  }\r\n\r\n  const backgroundColorPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginPagesItemHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginPagesItemHover, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_type', ':hover');\r\n\r\n  if (borderTypePaginPagesItemHover) {\r\n    styles += simplePropertyStyled(borderTypePaginPagesItemHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_width', ':hover');\r\n\r\n  if (borderWidthPaginPagesItemHover) {\r\n    styles += borderWidthStyled(borderWidthPaginPagesItemHover);\r\n  }\r\n\r\n  const borderRadiusPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_count_item_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginPagesItemHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginPagesItemHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_color', ':hover');\r\n\r\n  if (borderColorPaginPagesItemHover) {\r\n    styles += colorPropertyStyled(borderColorPaginPagesItemHover, 'border-color', '!important');\r\n  }\r\n\r\n  const boxShadowPaginPagesItemHover = getResponsiveSetting(settings, 'pagination_count_item_shadow', ':hover');\r\n\r\n  if (boxShadowPaginPagesItemHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginPagesItemHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .active.altrp-pagination-pages__item {`;\r\n\r\n  const colorActivePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_active_count_text_color');\r\n\r\n  if (colorActivePaginPagesItem) {\r\n    styles += colorPropertyStyled(colorActivePaginPagesItem, 'color');\r\n  }\r\n\r\n  const backgroundColorActivePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_background_color');\r\n\r\n  if (backgroundColorActivePaginPagesItem) {\r\n    styles += colorPropertyStyled(backgroundColorActivePaginPagesItem, 'background');\r\n  }\r\n\r\n  const borderColorActivePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_border_color');\r\n\r\n  if (borderColorActivePaginPagesItem) {\r\n    styles += colorPropertyStyled(borderColorActivePaginPagesItem, 'border-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .active.altrp-pagination-pages__item:hover {`;\r\n\r\n  const colorActivePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_active_count_text_color', ':hover');\r\n\r\n  if (colorActivePaginPagesItemHover) {\r\n    styles += colorPropertyStyled(colorActivePaginPagesItemHover, 'color');\r\n  }\r\n\r\n  const backgroundColorActivePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_background_color', ':hover');\r\n\r\n  if (backgroundColorActivePaginPagesItemHover) {\r\n    styles += colorPropertyStyled(backgroundColorActivePaginPagesItemHover, 'background');\r\n  }\r\n\r\n  const borderColorActivePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_border_color', ':hover');\r\n\r\n  if (borderColorActivePaginPagesItemHover) {\r\n    styles += colorPropertyStyled(borderColorActivePaginPagesItemHover, 'border-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination-pages__item {`;\r\n\r\n  const typographicPaginPaginPagesItem = getResponsiveSetting(settings, 'table_style_item_count_pagination_typographic');\r\n\r\n  if (typographicPaginPaginPagesItem) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginPagesItem);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination-pages__item:hover {`;\r\n\r\n  const typographicPaginPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_item_count_pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginPaginPagesItemHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginPagesItemHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__ellipsis {`;\r\n\r\n  const marginPaginEllipsis = getResponsiveSetting(settings, 'ellipsis_margin');\r\n\r\n  if (marginPaginEllipsis) {\r\n    styles += dimensionsControllerToStyles(marginPaginEllipsis, 'margin');\r\n  }\r\n\r\n  const colorPaginEllipsis = getResponsiveSetting(settings, 'ellipsis_color');\r\n\r\n  if (colorPaginEllipsis) {\r\n    styles += colorPropertyStyled(colorPaginEllipsis, 'color');\r\n  }\r\n\r\n  const typographicPaginEllipsis = getResponsiveSetting(settings, 'ellipsis_typographic');\r\n\r\n  if (typographicPaginEllipsis) {\r\n    styles += typographicControllerToStyles(typographicPaginEllipsis);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__ellipsis:hover {`;\r\n\r\n  const marginPaginEllipsisHover = getResponsiveSetting(settings, 'ellipsis_margin', ':hover');\r\n\r\n  if (marginPaginEllipsisHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginEllipsisHover, 'margin');\r\n  }\r\n\r\n  const colorPaginEllipsisHover = getResponsiveSetting(settings, 'ellipsis_color', ':hover');\r\n\r\n  if (colorPaginEllipsisHover) {\r\n    styles += colorPropertyStyled(colorPaginEllipsisHover, 'color');\r\n  }\r\n\r\n  const typographicPaginEllipsisHover = getResponsiveSetting(settings, 'ellipsis_typographic', ':hover');\r\n\r\n  if (typographicPaginEllipsisHover) {\r\n    styles += typographicControllerToStyles(typographicPaginEllipsisHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__goto-page {`;\r\n\r\n  const marginPaginGotoPage = getResponsiveSetting(settings, 'goto-page_margin');\r\n\r\n  if (marginPaginGotoPage) {\r\n    styles += dimensionsControllerToStyles(marginPaginGotoPage, 'margin');\r\n  }\r\n\r\n  const paddingPaginGotoPage = getResponsiveSetting(settings, 'page_input_padding');\r\n\r\n  if (paddingPaginGotoPage) {\r\n    styles += dimensionsControllerToStyles(paddingPaginGotoPage);\r\n  }\r\n\r\n  const colorPaginGotoPage = getResponsiveSetting(settings, 'page_input_text_color');\r\n\r\n  if (colorPaginGotoPage) {\r\n    styles += colorPropertyStyled(colorPaginGotoPage, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginGotoPage = getResponsiveSetting(settings, 'page_input_background_color');\r\n\r\n  if (backgroundColorPaginGotoPage) {\r\n    styles += colorPropertyStyled(backgroundColorPaginGotoPage, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginGotoPage = getResponsiveSetting(settings, 'page_input_border_type');\r\n\r\n  if (borderTypePaginGotoPage) {\r\n    styles += simplePropertyStyled(borderTypePaginGotoPage, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginGotoPage = getResponsiveSetting(settings, 'page_input_border_width');\r\n\r\n  if (borderWidthPaginGotoPage) {\r\n    styles += borderWidthStyled(borderWidthPaginGotoPage);\r\n  }\r\n\r\n  const borderColorPaginGotoPage = getResponsiveSetting(settings, 'page_input_border_color');\r\n\r\n  if (borderColorPaginGotoPage) {\r\n    styles += colorPropertyStyled(borderColorPaginGotoPage, 'border-color');\r\n  }\r\n\r\n  const borderRadiusPaginGotoPage = getResponsiveSetting(settings, 'page_input_border_radius');\r\n\r\n  if (borderRadiusPaginGotoPage) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginGotoPage, 'border-radius');\r\n  }\r\n\r\n  const boxShadowPaginGotoPage = getResponsiveSetting(settings, 'page_input_shadow');\r\n\r\n  if (boxShadowPaginGotoPage) {\r\n    styles += shadowControllerToStyles(boxShadowPaginGotoPage);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__goto-page:hover {`;\r\n\r\n  const marginPaginGotoPageHover = getResponsiveSetting(settings, 'goto-page_margin', ':hover');\r\n\r\n  if (marginPaginGotoPageHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginGotoPageHover, 'margin');\r\n  }\r\n\r\n  const paddingPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_padding', ':hover');\r\n\r\n  if (paddingPaginGotoPageHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginGotoPageHover);\r\n  }\r\n\r\n  const colorPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_text_color', ':hover');\r\n\r\n  if (colorPaginGotoPageHover) {\r\n    styles += colorPropertyStyled(colorPaginGotoPageHover, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginGotoPageHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginGotoPageHover, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginGotoPageHover = getResponsiveSetting(settings, 'page_input_border_type', ':hover');\r\n\r\n  if (borderTypePaginGotoPageHover) {\r\n    styles += simplePropertyStyled(borderTypePaginGotoPageHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_border_width', ':hover');\r\n\r\n  if (borderWidthPaginGotoPageHover) {\r\n    styles += borderWidthStyled(borderWidthPaginGotoPageHover);\r\n  }\r\n\r\n  const borderColorPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_border_color', ':hover');\r\n\r\n  if (borderColorPaginGotoPageHover) {\r\n    styles += colorPropertyStyled(borderColorPaginGotoPageHover, 'border-color');\r\n  }\r\n\r\n  const borderRadiusPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginGotoPageHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginGotoPageHover, 'border-radius');\r\n  }\r\n\r\n  const boxShadowPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_shadow', ':hover');\r\n\r\n  if (boxShadowPaginGotoPageHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginGotoPageHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-posts {`;\r\n\r\n  const paddingPosts = getResponsiveSetting(settings, 'position_padding');\r\n\r\n  if (paddingPosts) {\r\n    styles += dimensionsControllerToStyles(paddingPosts);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-posts:hover {`;\r\n\r\n  const paddingPostsHover = getResponsiveSetting(settings, 'position_padding', ':hover');\r\n\r\n  if (paddingPostsHover) {\r\n    styles += dimensionsControllerToStyles(paddingPostsHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} > .altrp-pagination-pages {`;\r\n\r\n  const paddingPaginPages = getResponsiveSetting(settings, 'posts_pagination_padding');\r\n\r\n  if (paddingPaginPages) {\r\n    styles += dimensionsControllerToStyles(paddingPaginPages);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} > .altrp-pagination-pages:hover {`;\r\n\r\n  const paddingPaginPagesHover = getResponsiveSetting(settings, 'posts_pagination_padding', ':hover');\r\n\r\n  if (paddingPaginPagesHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginPagesHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__goto-page {`;\r\n\r\n  const typographicPaginPaginGotoPages = getResponsiveSetting(settings, '.altrp-pagination .altrp-pagination__goto-page');\r\n\r\n  if (typographicPaginPaginGotoPages) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginGotoPages);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__goto-page:hover {`;\r\n\r\n  const typographicPaginPaginGotoPagesHover = getResponsiveSetting(settings, '.altrp-pagination .altrp-pagination__goto-page', ':hover');\r\n\r\n  if (typographicPaginPaginGotoPagesHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginGotoPagesHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next, ${parentClass} .altrp-pagination-pages__item, ${parentClass} .altrp-pagination__count, ${parentClass} .altrp-pagination__previous {`;\r\n\r\n  const typographicPaginPaginPagesItemCountPrev = getResponsiveSetting(settings, 'table_style_pagination_typographic');\r\n\r\n  if (typographicPaginPaginPagesItemCountPrev) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginPagesItemCountPrev);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover, ${parentClass} .altrp-pagination-pages__item:hover, ${parentClass} .altrp-pagination__count:hover, ${parentClass} .altrp-pagination__previous:hover {`;\r\n\r\n  const typographicPaginPaginPagesItemCountPrevHover = getResponsiveSetting(settings, 'table_style_pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginPaginPagesItemCountPrevHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginPagesItemCountPrevHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size {`;\r\n\r\n  const marginPaginSelectSize = getResponsiveSetting(settings, 'pagination_select_margin');\r\n\r\n  if (marginPaginSelectSize) {\r\n    styles += dimensionsControllerToStyles(marginPaginSelectSize, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size:hover {`;\r\n\r\n  const marginPaginSelectSizeHover = getResponsiveSetting(settings, 'pagination_select_margin', ':hover');\r\n\r\n  if (marginPaginSelectSizeHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginSelectSizeHover, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size .altrp-field-select2__control {`;\r\n\r\n  const paddingPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_padding');\r\n\r\n  if (paddingPaginSelectSizeControl) {\r\n    styles += dimensionsControllerToStyles(paddingPaginSelectSizeControl);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size .altrp-field-select2__control:hover {`;\r\n\r\n  const paddingPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_padding', ':hover');\r\n\r\n  if (paddingPaginSelectSizeControlHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginSelectSizeControlHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__select-size {`;\r\n\r\n  const typographicPaginPaginSelectSize = getResponsiveSetting(settings, 'table_style_pagination_select__pagination_typographic');\r\n\r\n  if (typographicPaginPaginSelectSize) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginSelectSize);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__select-size:hover {`;\r\n\r\n  const typographicPaginPaginSelectSizeHover = getResponsiveSetting(settings, 'table_style_pagination_select__pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginPaginSelectSizeHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginSelectSizeHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size .altrp-field-select2__control {`;\r\n\r\n  const borderTypePaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_border_type');\r\n\r\n  if (borderTypePaginSelect2Control) {\r\n    styles += simplePropertyStyled(borderTypePaginSelect2Control, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_border_width');\r\n\r\n  if (borderWidthPaginSelect2Control) {\r\n    styles += borderWidthStyled(borderWidthPaginSelect2Control);\r\n  }\r\n\r\n  const borderRadiusPaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_border_radius');\r\n\r\n  if (borderRadiusPaginSelect2Control) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginSelect2Control, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_border_color');\r\n\r\n  if (borderColorPaginSelect2Control) {\r\n    styles += colorPropertyStyled(borderColorPaginSelect2Control, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_shadow');\r\n\r\n  if (boxShadowPaginSelect2Control) {\r\n    styles += shadowControllerToStyles(boxShadowPaginSelect2Control);\r\n  }\r\n\r\n  const colorPaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_text_color');\r\n\r\n  if (colorPaginSelect2Control) {\r\n    styles += colorPropertyStyled(colorPaginSelect2Control, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_background_color');\r\n\r\n  if (backgroundColorPaginSelect2Control) {\r\n    styles += colorPropertyStyled(backgroundColorPaginSelect2Control, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size .altrp-field-select2__control:hover {`;\r\n\r\n  const borderTypePaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_border_type', ':hover');\r\n\r\n  if (borderTypePaginSelect2ControlHover) {\r\n    styles += simplePropertyStyled(borderTypePaginSelect2ControlHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_border_width', ':hover');\r\n\r\n  if (borderWidthPaginSelect2ControlHover) {\r\n    styles += borderWidthStyled(borderWidthPaginSelect2ControlHover);\r\n  }\r\n\r\n  const borderRadiusPaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginSelect2ControlHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginSelect2ControlHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_border_color', ':hover');\r\n\r\n  if (borderColorPaginSelect2ControlHover) {\r\n    styles += colorPropertyStyled(borderColorPaginSelect2ControlHover, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_shadow', ':hover');\r\n\r\n  if (boxShadowPaginSelect2ControlHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginSelect2ControlHover);\r\n  }\r\n\r\n  const colorPaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_text_color', ':hover');\r\n\r\n  if (colorPaginSelect2ControlHover) {\r\n    styles += colorPropertyStyled(colorPaginSelect2ControlHover, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginSelect2ControlHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginSelect2ControlHover, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  return styles;\r\n}","import {\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  filtersControllerToStyles,\r\n  marginTopLeftStyled,\r\n  iconSizeStyled,\r\n  sizeStyled,\r\n  shadowControllerToStyles,\r\n} from '../../helpers/styles';\r\nimport { getResponsiveSetting } from '../../helpers';\r\n\r\n/**\r\n * Преобразует объект стилей, который задается в виджете Table в строку css для вставки в GlobalStyles\r\n * @param {{}} settings\r\n * @param {string} id\r\n * @return {string}\r\n */\r\n\r\nexport function getTableStyles(settings, id) {\r\n  let styles = '';\r\n\r\n  if (settings === undefined) {\r\n    return styles;\r\n  }\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-table {`;\r\n\r\n  const borderType = getResponsiveSetting(settings, 'table_style_table_border_type');\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style', '!important');\r\n  }\r\n\r\n  const borderWidth = getResponsiveSetting(settings, 'table_style_table_border_width');\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth, '!important');\r\n  }\r\n\r\n  const borderColor = getResponsiveSetting(settings, 'table_style_table_border_color');\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color', '!important');\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-table:hover {`;\r\n\r\n  const borderTypeHover = getResponsiveSetting(settings, 'table_style_table_border_type', ':hover');\r\n\r\n  if (borderTypeHover) {\r\n    styles += simplePropertyStyled(borderTypeHover, 'border-style', '!important');\r\n  }\r\n\r\n  const borderWidthHover = getResponsiveSetting(settings, 'table_style_table_border_width', ':hover');\r\n\r\n  if (borderWidthHover) {\r\n    styles += borderWidthStyled(borderWidthHover, '!important');\r\n  }\r\n\r\n  const borderColorHover = getResponsiveSetting(settings, 'table_style_table_border_color', ':hover');\r\n\r\n  if (borderColorHover) {\r\n    styles += colorPropertyStyled(borderColorHover, 'border-color', '!important');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next {`;\r\n\r\n  const flexDirection = getResponsiveSetting(settings, 'next_icon_position');\r\n\r\n  if (flexDirection && flexDirection !== 'default') {\r\n    styles += simplePropertyStyled(flexDirection, 'flex-direction');\r\n  }\r\n\r\n  const margin = getResponsiveSetting(settings, 'next_page_button_margin');\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover {`;\r\n\r\n  const flexDirectionHover = getResponsiveSetting(settings, 'next_icon_position', ':hover');\r\n\r\n  if (flexDirectionHover && flexDirectionHover !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionHover, 'flex-direction');\r\n  }\r\n\r\n  const marginHover = getResponsiveSetting(settings, 'next_page_button_margin', ':hover');\r\n\r\n  if (marginHover) {\r\n    styles += dimensionsControllerToStyles(marginHover, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next svg {`;\r\n\r\n  const marginPaginationSvg = getResponsiveSetting(settings, 'next_icon_margin');\r\n\r\n  if (marginPaginationSvg) {\r\n    styles += dimensionsControllerToStyles(marginPaginationSvg, 'margin');\r\n  }\r\n\r\n  const iconSize = getResponsiveSetting(settings, 'next_icon_size');\r\n\r\n  if (iconSize) {\r\n    styles += iconSizeStyled(iconSize);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover svg {`;\r\n\r\n  const marginPaginationSvgHover = getResponsiveSetting(settings, 'next_icon_margin', ':hover');\r\n\r\n  if (marginPaginationSvgHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginationSvgHover, 'margin');\r\n  }\r\n\r\n  const iconSizeHover = getResponsiveSetting(settings, 'next_icon_size', ':hover');\r\n\r\n  if (iconSizeHover) {\r\n    styles += iconSizeStyled(iconSizeHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next img {`;\r\n\r\n  const iconSizeNextImg = getResponsiveSetting(settings, 'next_icon_size');\r\n\r\n  if (iconSizeNextImg) {\r\n    styles += sizeStyled(iconSizeNextImg, 'width');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover img {`;\r\n\r\n  const iconSizeNextImgHover = getResponsiveSetting(settings, 'next_icon_size', ':hover');\r\n\r\n  if (iconSizeNextImgHover) {\r\n    styles += sizeStyled(iconSizeNextImgHover, 'width');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next path {`;\r\n\r\n  const iconFillNextPath = getResponsiveSetting(settings, 'next_icon_color');\r\n\r\n  if (iconFillNextPath) {\r\n    styles += colorPropertyStyled(iconFillNextPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover path {`;\r\n\r\n  const iconFillNextPathHover = getResponsiveSetting(settings, 'next_icon_color', ':hover');\r\n\r\n  if (iconFillNextPathHover) {\r\n    styles += colorPropertyStyled(iconFillNextPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous {`;\r\n\r\n  const flexDirectionPaginationPrev = getResponsiveSetting(settings, 'prev_icon_position');\r\n\r\n  if (flexDirectionPaginationPrev && flexDirectionPaginationPrev !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionPaginationPrev, 'flex-direction');\r\n  }\r\n\r\n  const marginPaginationPrev = getResponsiveSetting(settings, 'prev_page_button_margin');\r\n\r\n  if (marginPaginationPrev) {\r\n    styles += dimensionsControllerToStyles(marginPaginationPrev, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover {`;\r\n\r\n  const flexDirectionPaginationPrevHover = getResponsiveSetting(settings, 'prev_icon_position', ':hover');\r\n\r\n  if (flexDirectionPaginationPrevHover && flexDirectionPaginationPrevHover !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionPaginationPrevHover, 'flex-direction');\r\n  }\r\n\r\n  const marginPaginationPrevHover = getResponsiveSetting(settings, 'prev_page_button_margin', ':hover');\r\n\r\n  if (marginPaginationPrevHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginationPrevHover, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous svg {`;\r\n\r\n  const marginPrevSvg = getResponsiveSetting(settings, 'prev_icon_padding');\r\n\r\n  if (marginPrevSvg) {\r\n    styles += dimensionsControllerToStyles(marginPrevSvg, 'margin');\r\n  }\r\n\r\n  const iconSizePrevSvg = getResponsiveSetting(settings, 'prev_icon_size');\r\n\r\n  if (iconSizePrevSvg) {\r\n    styles += iconSizeStyled(iconSizePrevSvg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover svg {`;\r\n\r\n  const marginPrevSvgHover = getResponsiveSetting(settings, 'prev_icon_padding', ':hover');\r\n\r\n  if (marginPrevSvgHover) {\r\n    styles += dimensionsControllerToStyles(marginPrevSvgHover, 'margin');\r\n  }\r\n\r\n  const iconSizePrevSvgHover = getResponsiveSetting(settings, 'prev_icon_size', ':hover');\r\n\r\n  if (iconSizePrevSvgHover) {\r\n    styles += iconSizeStyled(iconSizePrevSvgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous img {`;\r\n\r\n  const iconSizePrevImg = getResponsiveSetting(settings, 'prev_icon_size');\r\n\r\n  if (iconSizePrevImg) {\r\n    styles += sizeStyled(iconSizePrevImg, 'width');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover img {`;\r\n\r\n  const iconSizePrevImgHover = getResponsiveSetting(settings, 'prev_icon_size', ':hover');\r\n\r\n  if (iconSizePrevImgHover) {\r\n    styles += sizeStyled(iconSizePrevImgHover, 'width');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous path {`;\r\n\r\n  const iconFillPrevPath = getResponsiveSetting(settings, 'prev_icon_color');\r\n\r\n  if (iconFillPrevPath) {\r\n    styles += colorPropertyStyled(iconFillPrevPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover path {`;\r\n\r\n  const iconFillPrevPathHover = getResponsiveSetting(settings, 'prev_icon_color', ':hover');\r\n\r\n  if (iconFillPrevPathHover) {\r\n    styles += colorPropertyStyled(iconFillPrevPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .replace-text {`;\r\n\r\n  const colorReplaceText = getResponsiveSetting(settings, 'replace_text_color');\r\n\r\n  if (colorReplaceText) {\r\n    styles += colorPropertyStyled(colorReplaceText, 'color');\r\n  }\r\n\r\n  const typographicReplaceText = getResponsiveSetting(settings, 'replace_text_typographic');\r\n\r\n  if (typographicReplaceText) {\r\n    styles += typographicControllerToStyles(typographicReplaceText);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .replace-text:hover {`;\r\n\r\n  const colorReplaceTextHover = getResponsiveSetting(settings, 'replace_text_color', ':hover');\r\n\r\n  if (colorReplaceTextHover) {\r\n    styles += colorPropertyStyled(colorReplaceTextHover, 'color');\r\n  }\r\n\r\n  const typographicReplaceTextHover = getResponsiveSetting(settings, 'replace_text_typographic', ':hover');\r\n\r\n  if (typographicReplaceTextHover) {\r\n    styles += typographicControllerToStyles(typographicReplaceTextHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .replace-picture {`;\r\n\r\n  const widthPictureReplacePicture = getResponsiveSetting(settings, 'replace_image_width');\r\n\r\n  if (widthPictureReplacePicture) {\r\n    styles += sizeStyled(widthPictureReplacePicture, 'width');\r\n  }\r\n\r\n  const heightReplacePicture = getResponsiveSetting(settings, 'replace_image_height');\r\n\r\n  if (heightReplacePicture) {\r\n    styles += sizeStyled(heightReplacePicture, 'height');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th .grouped-column {`;\r\n\r\n  const paddingGroupedColumn = getResponsiveSetting(settings, 'grouped_column_icon_padding');\r\n\r\n  if (paddingGroupedColumn) {\r\n    styles += dimensionsControllerToStyles(paddingGroupedColumn);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover .grouped-column {`;\r\n\r\n  const paddingGroupedColumnHover = getResponsiveSetting(settings, 'grouped_column_icon_padding', ':hover');\r\n\r\n  if (paddingGroupedColumnHover) {\r\n    styles += dimensionsControllerToStyles(paddingGroupedColumnHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th path {`;\r\n\r\n  const iconFillTableThPath = getResponsiveSetting(settings, 'grouped_column_icon_color');\r\n\r\n  if (iconFillTableThPath) {\r\n    styles += colorPropertyStyled(iconFillTableThPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover path {`;\r\n\r\n  const iconFillTableThPathHover = getResponsiveSetting(settings, 'grouped_column_icon_color', ':hover');\r\n\r\n  if (iconFillTableThPathHover) {\r\n    styles += colorPropertyStyled(iconFillTableThPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th .grouped-column, ${parentClass} .altrp-table-th svg, ${parentClass} .altrp-table-th img {`;\r\n\r\n  const iconSizeGroupedColumnSvgImg = getResponsiveSetting(settings, 'grouped_column_icon_size');\r\n\r\n  if (iconSizeGroupedColumnSvgImg) {\r\n    styles += iconSizeStyled(iconSizeGroupedColumnSvgImg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover .grouped-column, ${parentClass} .altrp-table-th:hover svg, ${parentClass} .altrp-table-th:hover img {`;\r\n\r\n  const iconSizeGroupedColumnSvgImgHover = getResponsiveSetting(settings, 'grouped_column_icon_size', ':hover');\r\n\r\n  if (iconSizeGroupedColumnSvgImgHover) {\r\n    styles += iconSizeStyled(iconSizeGroupedColumnSvgImgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th .not-grouped-column {`;\r\n\r\n  const paddingNotGroupedColumn = getResponsiveSetting(settings, 'not_grouped_column_icon_padding');\r\n\r\n  if (paddingNotGroupedColumn) {\r\n    styles += dimensionsControllerToStyles(paddingNotGroupedColumn);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover .not-grouped-column {`;\r\n\r\n  const paddingNotGroupedColumnHover = getResponsiveSetting(settings, 'not_grouped_column_icon_padding', ':hover');\r\n\r\n  if (paddingNotGroupedColumnHover) {\r\n    styles += dimensionsControllerToStyles(paddingNotGroupedColumnHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th .not-grouped-column path {`;\r\n\r\n  const iconFillNotGroupedColumnPath = getResponsiveSetting(settings, 'not_grouped_column_icon_color');\r\n\r\n  if (iconFillNotGroupedColumnPath) {\r\n    styles += colorPropertyStyled(iconFillNotGroupedColumnPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover .not-grouped-column path {`;\r\n\r\n  const iconFillNotGroupedColumnPathHover = getResponsiveSetting(settings, 'not_grouped_column_icon_color', ':hover');\r\n\r\n  if (iconFillNotGroupedColumnPathHover) {\r\n    styles += colorPropertyStyled(iconFillNotGroupedColumnPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th .not-grouped-column, ${parentClass} .altrp-table-th .not-grouped-column svg, ${parentClass} .altrp-table-th .not-grouped-column img {`;\r\n\r\n  const iconSizeNotGroupedColumnSvgImg = getResponsiveSetting(settings, 'not_grouped_column_icon_size');\r\n\r\n  if (iconSizeNotGroupedColumnSvgImg) {\r\n    styles += iconSizeStyled(iconSizeNotGroupedColumnSvgImg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover .not-grouped-column, ${parentClass} .altrp-table-th:hover .not-grouped-column svg, ${parentClass} .altrp-table-th:hover .not-grouped-column img {`;\r\n\r\n  const iconSizeNotGroupedColumnSvgImgHover = getResponsiveSetting(settings, 'not_grouped_column_icon_size', ':hover');\r\n\r\n  if (iconSizeNotGroupedColumnSvgImgHover) {\r\n    styles += iconSizeStyled(iconSizeNotGroupedColumnSvgImgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .expanded-row {`;\r\n\r\n  const paddingExpandedRow = getResponsiveSetting(settings, 'expanded_row_icon_padding');\r\n\r\n  if (paddingExpandedRow) {\r\n    styles += dimensionsControllerToStyles(paddingExpandedRow);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .expanded-row:hover {`;\r\n\r\n  const paddingExpandedRowHover = getResponsiveSetting(settings, 'expanded_row_icon_padding', ':hover');\r\n\r\n  if (paddingExpandedRowHover) {\r\n    styles += dimensionsControllerToStyles(paddingExpandedRowHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .expanded-row path {`;\r\n\r\n  const iconFillExpandedRowPath = getResponsiveSetting(settings, 'expanded_row_icon_color');\r\n\r\n  if (iconFillExpandedRowPath) {\r\n    styles += colorPropertyStyled(iconFillExpandedRowPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .expanded-row:hover path {`;\r\n\r\n  const iconFillExpandedRowPathHover = getResponsiveSetting(settings, 'expanded_row_icon_color', ':hover');\r\n\r\n  if (iconFillExpandedRowPathHover) {\r\n    styles += colorPropertyStyled(iconFillExpandedRowPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .expanded-row, ${parentClass} .expanded-row svg, ${parentClass}  .expanded-row img {`;\r\n\r\n  const iconSizeExpandedRowSvgImg = getResponsiveSetting(settings, 'expanded_row_icon_size');\r\n\r\n  if (iconSizeExpandedRowSvgImg) {\r\n    styles += iconSizeStyled(iconSizeExpandedRowSvgImg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .expanded-row:hover, ${parentClass} .expanded-row svg:hover, ${parentClass}  .expanded-row img:hover {`;\r\n\r\n  const iconSizeExpandedRowSvgImgHover = getResponsiveSetting(settings, 'expanded_row_icon_size', ':hover');\r\n\r\n  if (iconSizeExpandedRowSvgImgHover) {\r\n    styles += iconSizeStyled(iconSizeExpandedRowSvgImgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .not-expanded-row {`;\r\n\r\n  const paddingNotExpandedRow = getResponsiveSetting(settings, 'not_expanded_row_icon_padding');\r\n\r\n  if (paddingNotExpandedRow) {\r\n    styles += dimensionsControllerToStyles(paddingNotExpandedRow);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .not-expanded-row:hover {`;\r\n\r\n  const paddingNotExpandedRowHover = getResponsiveSetting(settings, 'not_expanded_row_icon_padding', ':hover');\r\n\r\n  if (paddingNotExpandedRowHover) {\r\n    styles += dimensionsControllerToStyles(paddingNotExpandedRowHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .not-expanded-row path {`;\r\n\r\n  const iconFillNotExpandedRowPath = getResponsiveSetting(settings, 'not_expanded_row_icon_color');\r\n\r\n  if (iconFillNotExpandedRowPath) {\r\n    styles += colorPropertyStyled(iconFillNotExpandedRowPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .not-expanded-row:hover path {`;\r\n\r\n  const iconFillNotExpandedRowPathHover = getResponsiveSetting(settings, 'not_expanded_row_icon_color', ':hover');\r\n\r\n  if (iconFillNotExpandedRowPathHover) {\r\n    styles += colorPropertyStyled(iconFillNotExpandedRowPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .not-expanded-row, ${parentClass} .not-expanded-row svg, ${parentClass} .not-expanded-row img {`;\r\n\r\n  const iconSizeNotExpandedRowSvgImg = getResponsiveSetting(settings, 'not_expanded_row_icon_size');\r\n\r\n  if (iconSizeNotExpandedRowSvgImg) {\r\n    styles += iconSizeStyled(iconSizeNotExpandedRowSvgImg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .not-expanded-row:hover, ${parentClass} .not-expanded-row svg:hover, ${parentClass} .not-expanded-row img:hover {`;\r\n\r\n  const iconSizeNotExpandedRowSvgImgHover = getResponsiveSetting(settings, 'not_expanded_row_icon_size', ':hover');\r\n\r\n  if (iconSizeNotExpandedRowSvgImgHover) {\r\n    styles += iconSizeStyled(iconSizeNotExpandedRowSvgImgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-tbody--striped tr:nth-child(2n), ${parentClass} .altrp-table-tbody--striped .altrp-table-tr:nth-child(2n) {`;\r\n\r\n  const colorThNthChild = getResponsiveSetting(settings, 'table_style_table_stripe_color');\r\n\r\n  if (colorThNthChild) {\r\n    styles += colorPropertyStyled(colorThNthChild, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-tbody--striped tr:nth-child(2n):hover, ${parentClass} .altrp-table-tbody--striped .altrp-table-tr:nth-child(2n):hover {`;\r\n\r\n  const colorThNthChildHover = getResponsiveSetting(settings, 'table_style_table_stripe_color');\r\n\r\n  if (colorThNthChildHover) {\r\n    styles += colorPropertyStyled(colorThNthChildHover, 'background-color', ':hover');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-field, ${parentClass} .altrp-table__filter-select>.altrp-field-select2__control, ${parentClass} .altrp-label_slider>.altrp-btn {`;\r\n\r\n  const colorFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_style_table_text_color');\r\n\r\n  if (colorFieldSelect2ControlBtn) {\r\n    styles += colorPropertyStyled(colorFieldSelect2ControlBtn, 'color', '!important');\r\n  }\r\n\r\n  const backgroundColorFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_style_table_background_color');\r\n\r\n  if (backgroundColorFieldSelect2ControlBtn) {\r\n    styles += colorPropertyStyled(backgroundColorFieldSelect2ControlBtn, 'background-color', '!important');\r\n  }\r\n\r\n  const inputPaddingFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_padding');\r\n\r\n  if (inputPaddingFieldSelect2ControlBtn) {\r\n    styles += dimensionsControllerToStyles(inputPaddingFieldSelect2ControlBtn);\r\n  }\r\n\r\n  const typographicFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_style_typographic');\r\n\r\n  if (typographicFieldSelect2ControlBtn) {\r\n    styles += typographicControllerToStyles(typographicFieldSelect2ControlBtn);\r\n  }\r\n\r\n  const borderTypeFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_style_table_border_type');\r\n\r\n  if (borderTypeFieldSelect2ControlBtn) {\r\n    styles += simplePropertyStyled(borderTypeFieldSelect2ControlBtn, 'border-style', '!important');\r\n  }\r\n\r\n  const borderWidthFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_style_table_border_width');\r\n\r\n  if (borderWidthFieldSelect2ControlBtn) {\r\n    styles += borderWidthStyled(borderWidthFieldSelect2ControlBtn, '!important');\r\n  }\r\n\r\n  const borderColorFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_style_table_border_color');\r\n\r\n  if (borderColorFieldSelect2ControlBtn) {\r\n    styles += colorPropertyStyled(borderColorFieldSelect2ControlBtn, 'border-color', '!important');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-field:hover, ${parentClass} .altrp-table__filter-select:hover>.altrp-field-select2__control, ${parentClass} .altrp-label_slider>.altrp-btn {`;\r\n\r\n  const colorFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_style_table_text_color', ':hover');\r\n\r\n  if (colorFieldSelect2ControlBtnHover) {\r\n    styles += colorPropertyStyled(colorFieldSelect2ControlBtnHover, 'color', '!important');\r\n  }\r\n\r\n  const backgroundColorFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_style_table_background_color', ':hover');\r\n\r\n  if (backgroundColorFieldSelect2ControlBtnHover) {\r\n    styles += colorPropertyStyled(backgroundColorFieldSelect2ControlBtnHover, 'background-color', '!important');\r\n  }\r\n\r\n  const inputPaddingFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_padding', ':hover');\r\n\r\n  if (inputPaddingFieldSelect2ControlBtnHover) {\r\n    styles += dimensionsControllerToStyles(inputPaddingFieldSelect2ControlBtnHover);\r\n  }\r\n\r\n  const typographicFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_style_typographic', ':hover');\r\n\r\n  if (typographicFieldSelect2ControlBtnHover) {\r\n    styles += typographicControllerToStyles(typographicFieldSelect2ControlBtnHover);\r\n  }\r\n\r\n  const borderTypeFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_style_table_border_type', ':hover');\r\n\r\n  if (borderTypeFieldSelect2ControlBtnHover) {\r\n    styles += simplePropertyStyled(borderTypeFieldSelect2ControlBtnHover, 'border-style', '!important');\r\n  }\r\n\r\n  const borderWidthFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_style_table_border_width', ':hover');\r\n\r\n  if (borderWidthFieldSelect2ControlBtnHover) {\r\n    styles += borderWidthStyled(borderWidthFieldSelect2ControlBtnHover, '!important');\r\n  }\r\n\r\n  const borderColorFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_style_table_border_color', ':hover');\r\n\r\n  if (borderColorFieldSelect2ControlBtnHover) {\r\n    styles += colorPropertyStyled(borderColorFieldSelect2ControlBtnHover, 'border-color', '!important');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-label {`;\r\n\r\n  const labelPaddingLabel = getResponsiveSetting(settings, 'label_padding');\r\n\r\n  if (labelPaddingLabel) {\r\n    styles += dimensionsControllerToStyles(labelPaddingLabel);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-label:hover {`;\r\n\r\n  const labelPaddingLabelHover = getResponsiveSetting(settings, 'label_padding', ':hover');\r\n\r\n  if (labelPaddingLabelHover) {\r\n    styles += dimensionsControllerToStyles(labelPaddingLabelHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th {`;\r\n\r\n  const textAlignTableTh = getResponsiveSetting(settings, 'table_table_header_alignment');\r\n\r\n  if (textAlignTableTh) {\r\n    styles += simplePropertyStyled(textAlignTableTh, 'text-align');\r\n  }\r\n\r\n  const typographicTableTh = getResponsiveSetting(settings, 'table_style_header_font');\r\n\r\n  if (typographicTableTh) {\r\n    styles += typographicControllerToStyles(typographicTableTh);\r\n  }\r\n\r\n  const colorTableTh = getResponsiveSetting(settings, 'table_style_header_text_color');\r\n\r\n  if (colorTableTh) {\r\n    styles += colorPropertyStyled(colorTableTh, 'color');\r\n  }\r\n\r\n  const paddingTableTh = getResponsiveSetting(settings, 'table_style_header_padding');\r\n\r\n  if (paddingTableTh) {\r\n    styles += dimensionsControllerToStyles(paddingTableTh);\r\n  }\r\n\r\n  const borderTypeTableTh = getResponsiveSetting(settings, 'table_style_header_border_type');\r\n\r\n  if (borderTypeTableTh) {\r\n    styles += simplePropertyStyled(borderTypeTableTh, 'border-style');\r\n  }\r\n\r\n  const borderColorTableTh = getResponsiveSetting(settings, 'table_style_header_border_color');\r\n\r\n  if (borderColorTableTh) {\r\n    styles += colorPropertyStyled(borderColorTableTh, 'border-color');\r\n  }\r\n\r\n  const borderWidthTableTh = getResponsiveSetting(settings, 'table_style_header_border_width');\r\n\r\n  if (borderWidthTableTh) {\r\n    styles += borderWidthStyled(borderWidthTableTh);\r\n  }\r\n\r\n  const backgroundColorTableTh = getResponsiveSetting(settings, 'table_style_header_background');\r\n\r\n  if (backgroundColorTableTh) {\r\n    styles += `background-color: ${backgroundColorTableTh.color}: `;\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover {`;\r\n\r\n  const textAlignTableThHover = getResponsiveSetting(settings, 'table_table_header_alignment', ':hover');\r\n\r\n  if (textAlignTableThHover) {\r\n    styles += simplePropertyStyled(textAlignTableThHover, 'text-align');\r\n  }\r\n\r\n  const typographicTableThHover = getResponsiveSetting(settings, 'table_style_header_font', ':hover');\r\n\r\n  if (typographicTableThHover) {\r\n    styles += typographicControllerToStyles(typographicTableThHover);\r\n  }\r\n\r\n  const colorTableThHover = getResponsiveSetting(settings, 'table_style_header_text_color', ':hover');\r\n\r\n  if (colorTableThHover) {\r\n    styles += colorPropertyStyled(colorTableThHover, 'color');\r\n  }\r\n\r\n  const paddingTableThHover = getResponsiveSetting(settings, 'table_style_header_padding', ':hover');\r\n\r\n  if (paddingTableThHover) {\r\n    styles += dimensionsControllerToStyles(paddingTableThHover);\r\n  }\r\n\r\n  const borderTypeTableThHover = getResponsiveSetting(settings, 'table_style_header_border_type', ':hover');\r\n\r\n  if (borderTypeTableThHover) {\r\n    styles += simplePropertyStyled(borderTypeTableThHover, 'border-style');\r\n  }\r\n\r\n  const borderColorTableThHover = getResponsiveSetting(settings, 'table_style_header_border_color', ':hover');\r\n\r\n  if (borderColorTableThHover) {\r\n    styles += colorPropertyStyled(borderColorTableThHover, 'border-color');\r\n  }\r\n\r\n  const borderWidthTableThHover = getResponsiveSetting(settings, 'table_style_header_border_width', ':hover');\r\n\r\n  if (borderWidthTableThHover) {\r\n    styles += borderWidthStyled(borderWidthTableThHover);\r\n  }\r\n\r\n  const backgroundColorTableThHover = getResponsiveSetting(settings, 'table_style_header_background', ':hover');\r\n\r\n  if (backgroundColorTableThHover) {\r\n    styles += colorPropertyStyled(backgroundColorTableThHover, 'background');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-head {`;\r\n\r\n  const backgroundColorTableHead = getResponsiveSetting(settings, 'table_style_header_background');\r\n\r\n  if (backgroundColorTableHead) {\r\n    styles += `background-color: ${backgroundColorTableHead.color}; `;\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-head:hover {`;\r\n\r\n  const backgroundColorTableHeadHover = getResponsiveSetting(settings, 'table_style_header_background', ':hover');\r\n\r\n  if (backgroundColorTableHeadHover) {\r\n    styles += colorPropertyStyled(backgroundColorTableHeadHover, 'background');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-th:not(:first-child) {`;\r\n\r\n  const borderWidthTableThNotFirstChild = getResponsiveSetting(settings, 'table_style_header_border_width');\r\n\r\n  if (borderWidthTableThNotFirstChild) {\r\n    styles += marginTopLeftStyled(borderWidthTableThNotFirstChild, 'top'); //здесь вернется строка вида: \"margin-top: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-th:not(:first-child):hover {`;\r\n\r\n  const borderWidthTableThNotFirstChildHover = getResponsiveSetting(settings, 'table_style_header_border_width', ':hover');\r\n\r\n  if (borderWidthTableThNotFirstChildHover) {\r\n    styles += marginTopLeftStyled(borderWidthTableThNotFirstChildHover, 'top'); //здесь вернется строка вида: \"margin-top: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-tr:not(:first-child) .altrp-table-th {`;\r\n\r\n  const borderWidthTableTrNotFirstChild = getResponsiveSetting(settings, 'table_style_header_border_width');\r\n\r\n  if (borderWidthTableTrNotFirstChild) {\r\n    styles += marginTopLeftStyled(borderWidthTableTrNotFirstChild, 'left'); //здесь вернется строка вида: \"margin-left: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-tr:not(:first-child) .altrp-table-th:hover {`;\r\n\r\n  const borderWidthTableTrNotFirstChildHover = getResponsiveSetting(settings, 'table_style_header_border_width', ':hover');\r\n\r\n  if (borderWidthTableTrNotFirstChildHover) {\r\n    styles += marginTopLeftStyled(borderWidthTableTrNotFirstChildHover, 'left'); //здесь вернется строка вида: \"margin-left: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} div:not(.altrp-element) .altrp-table-th {`;\r\n\r\n  const verticalAlignDivNotAltrpElement = getResponsiveSetting(settings, 'header_cell_vertical_alignment');\r\n\r\n  if (verticalAlignDivNotAltrpElement) {\r\n    styles += simplePropertyStyled(verticalAlignDivNotAltrpElement, 'vertical-align');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} div:not(.altrp-element) .altrp-table-th:hover {`;\r\n\r\n  const verticalAlignDivNotAltrpElementHover = getResponsiveSetting(settings, 'header_cell_vertical_alignment', ':hover');\r\n\r\n  if (verticalAlignDivNotAltrpElementHover) {\r\n    styles += simplePropertyStyled(verticalAlignDivNotAltrpElementHover, 'vertical-align');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td {`;\r\n\r\n  const textAlignTableTd = getResponsiveSetting(settings, 'table_table_body_alignment');\r\n\r\n  if (textAlignTableTd) {\r\n    styles += simplePropertyStyled(textAlignTableTd, 'text-align');\r\n  }\r\n\r\n  const paddingTableTd = getResponsiveSetting(settings, 'table_style_body_cell_padding');\r\n\r\n  if (paddingTableTd) {\r\n    styles += dimensionsControllerToStyles(paddingTableTd);\r\n  }\r\n\r\n  const borderTypeTableTd = getResponsiveSetting(settings, 'table_style_body_border_type');\r\n\r\n  if (borderTypeTableTd) {\r\n    styles += simplePropertyStyled(borderTypeTableTd, 'border-style');\r\n  }\r\n\r\n  const borderColorTableTd = getResponsiveSetting(settings, 'table_style_body_border_color_');\r\n\r\n  if (borderColorTableTd) {\r\n    styles += colorPropertyStyled(borderColorTableTd, 'border-color');\r\n  }\r\n\r\n  const colorTableTd = getResponsiveSetting(settings, 'table_style_body_border_text_color');\r\n\r\n  if (colorTableTd) {\r\n    styles += colorPropertyStyled(colorTableTd, 'color');\r\n  }\r\n\r\n  const typographicTableTd = getResponsiveSetting(settings, 'table_style_body_font');\r\n\r\n  if (typographicTableTd) {\r\n    styles += typographicControllerToStyles(typographicTableTd);\r\n  }\r\n\r\n  const borderWidthTableTd = getResponsiveSetting(settings, 'table_style_body_border_width');\r\n\r\n  if (borderWidthTableTd) {\r\n    styles += borderWidthStyled(borderWidthTableTd);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td:hover {`;\r\n\r\n  const textAlignTableTdHover = getResponsiveSetting(settings, 'table_table_body_alignment', ':hover');\r\n\r\n  if (textAlignTableTdHover) {\r\n    styles += simplePropertyStyled(textAlignTableTdHover, 'text-align');\r\n  }\r\n\r\n  const paddingTableTdHover = getResponsiveSetting(settings, 'table_style_body_cell_padding', ':hover');\r\n\r\n  if (paddingTableTdHover) {\r\n    styles += dimensionsControllerToStyles(paddingTableTdHover);\r\n  }\r\n\r\n  const borderTypeTableTdHover = getResponsiveSetting(settings, 'table_style_body_border_type', ':hover');\r\n\r\n  if (borderTypeTableTdHover) {\r\n    styles += simplePropertyStyled(borderTypeTableTdHover, 'border-style');\r\n  }\r\n\r\n  const borderColorTableTdHover = getResponsiveSetting(settings, 'table_style_body_border_color_', ':hover');\r\n\r\n  if (borderColorTableTdHover) {\r\n    styles += colorPropertyStyled(borderColorTableTdHover, 'border-color');\r\n  }\r\n\r\n  const colorTableTdHover = getResponsiveSetting(settings, 'table_style_body_border_text_color', ':hover');\r\n\r\n  if (colorTableTdHover) {\r\n    styles += colorPropertyStyled(colorTableTdHover, 'color');\r\n  }\r\n\r\n  const typographicTableTdHover = getResponsiveSetting(settings, 'table_style_body_font', ':hover');\r\n\r\n  if (typographicTableTdHover) {\r\n    styles += typographicControllerToStyles(typographicTableTdHover);\r\n  }\r\n\r\n  const borderWidthTableTdHover = getResponsiveSetting(settings, 'table_style_body_border_width', ':hover');\r\n\r\n  if (borderWidthTableTdHover) {\r\n    styles += borderWidthStyled(borderWidthTableTdHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td a {`;\r\n\r\n  const colorTableTdA = getResponsiveSetting(settings, 'table_link_color');\r\n\r\n  if (colorTableTdA) {\r\n    styles += colorPropertyStyled(colorTableTdA, 'color');\r\n  }\r\n\r\n  const typographicTableTdA = getResponsiveSetting(settings, 'table_link_font');\r\n\r\n  if (typographicTableTdA) {\r\n    styles += typographicControllerToStyles(typographicTableTdA);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td a:hover {`;\r\n\r\n  const colorTableTdAHover = getResponsiveSetting(settings, 'table_link_color', ':hover');\r\n\r\n  if (colorTableTdAHover) {\r\n    styles += colorPropertyStyled(colorTableTdAHover, 'color');\r\n  }\r\n\r\n  const typographicTableTdAHover = getResponsiveSetting(settings, 'table_link_font', ':hover');\r\n\r\n  if (typographicTableTdAHover) {\r\n    styles += typographicControllerToStyles(typographicTableTdAHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-tbody {`;\r\n\r\n  const backgroundColorTbodyBackground = getResponsiveSetting(settings, 'table_style_body_border_background');\r\n\r\n  if (backgroundColorTbodyBackground) {\r\n    styles += colorPropertyStyled(backgroundColorTbodyBackground, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-tbody:hover {`;\r\n\r\n  const backgroundColorTbodyBackgroundHover = getResponsiveSetting(settings, 'table_style_body_border_background', ':hover');\r\n\r\n  if (backgroundColorTbodyBackgroundHover) {\r\n    styles += colorPropertyStyled(backgroundColorTbodyBackgroundHover, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-td:not(:first-child) {`;\r\n\r\n  const borderWidthTransposeTableTdNot = getResponsiveSetting(settings, 'table_style_body_border_width');\r\n\r\n  if (borderWidthTransposeTableTdNot) {\r\n    styles += marginTopLeftStyled(borderWidthTransposeTableTdNot, 'top'); //здесь вернется строка вида: \"margin-top: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-td:not(:first-child):hover {`;\r\n\r\n  const borderWidthTransposeTableTdNotHover = getResponsiveSetting(settings, 'table_style_body_border_width', ':hover');\r\n\r\n  if (borderWidthTransposeTableTdNotHover) {\r\n    styles += marginTopLeftStyled(borderWidthTransposeTableTdNotHover, 'top'); //здесь вернется строка вида: \"margin-top: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-tr:not(:first-child) .altrp-table-td {`;\r\n\r\n  const borderWidthTransposeTableTdNotTd = getResponsiveSetting(settings, 'table_style_body_border_width');\r\n\r\n  if (borderWidthTransposeTableTdNotTd) {\r\n    styles += marginTopLeftStyled(borderWidthTransposeTableTdNotTd, 'left'); //здесь вернется строка вида: \"margin-left: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-tr:not(:first-child) .altrp-table-td:hover {`;\r\n\r\n  const borderWidthTransposeTableTdNotTdHover = getResponsiveSetting(settings, 'table_style_body_border_width', ':hover');\r\n\r\n  if (borderWidthTransposeTableTdNotTdHover) {\r\n    styles += marginTopLeftStyled(borderWidthTransposeTableTdNotTdHover, 'left'); //здесь вернется строка вида: \"margin-left: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td__grouping {`;\r\n\r\n  const colorTdGrouping = getResponsiveSetting(settings, 'table_style_group_border_text_color');\r\n\r\n  if (colorTdGrouping) {\r\n    styles += colorPropertyStyled(colorTdGrouping, 'color');\r\n  }\r\n\r\n  const typographicTdGrouping = getResponsiveSetting(settings, 'table_style_group_font');\r\n\r\n  if (typographicTdGrouping) {\r\n    styles += typographicControllerToStyles(typographicTdGrouping);\r\n  }\r\n\r\n  const paddingTdGrouping = getResponsiveSetting(settings, 'table_style_group_cell_padding');\r\n\r\n  if (paddingTdGrouping) {\r\n    styles += dimensionsControllerToStyles(paddingTdGrouping);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td__grouping:hover {`;\r\n\r\n  const colorTdGroupingHover = getResponsiveSetting(settings, 'table_style_group_border_text_color', ':hover');\r\n\r\n  if (colorTdGroupingHover) {\r\n    styles += colorPropertyStyled(colorTdGroupingHover, 'color');\r\n  }\r\n\r\n  const typographicTdGroupingHover = getResponsiveSetting(settings, 'table_style_group_font', ':hover');\r\n\r\n  if (typographicTdGroupingHover) {\r\n    styles += typographicControllerToStyles(typographicTdGroupingHover);\r\n  }\r\n\r\n  const paddingTdGroupingHover = getResponsiveSetting(settings, 'table_style_group_cell_padding', ':hover');\r\n\r\n  if (paddingTdGroupingHover) {\r\n    styles += dimensionsControllerToStyles(paddingTdGroupingHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-tbody .altrp-table-td__grouping {`;\r\n\r\n  const backgroundColorTbodyTdGrouping = getResponsiveSetting(settings, 'table_style_group_border_background');\r\n\r\n  if (backgroundColorTbodyTdGrouping) {\r\n    styles += colorPropertyStyled(backgroundColorTbodyTdGrouping, 'background-color');\r\n  }\r\n\r\n  const textAlignTbodyTdGrouping = getResponsiveSetting(settings, 'table_style_group_cell_alignment');\r\n\r\n  if (textAlignTbodyTdGrouping) {\r\n    styles += simplePropertyStyled(textAlignTbodyTdGrouping, 'text-align');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-tbody .altrp-table-td__grouping:hover {`;\r\n\r\n  const backgroundColorTbodyTdGroupingHover = getResponsiveSetting(settings, 'table_style_group_border_background', ':hover');\r\n\r\n  if (backgroundColorTbodyTdGroupingHover) {\r\n    styles += colorPropertyStyled(backgroundColorTbodyTdGroupingHover, 'background-color');\r\n  }\r\n\r\n  const textAlignTbodyTdGroupingHover = getResponsiveSetting(settings, 'table_style_group_cell_alignment', ':hover');\r\n\r\n  if (textAlignTbodyTdGroupingHover) {\r\n    styles += simplePropertyStyled(textAlignTbodyTdGroupingHover, 'text-align');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} div:not(.altrp-element) .altrp-table-td {`;\r\n\r\n  const verticalAlignDivNotAltrpElTd = getResponsiveSetting(settings, 'cell_vertical_alignment');\r\n\r\n  if (verticalAlignDivNotAltrpElTd) {\r\n    styles += simplePropertyStyled(verticalAlignDivNotAltrpElTd, 'vertical-align');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} div:not(.altrp-element) .altrp-table-td:hover {`;\r\n\r\n  const verticalAlignDivNotAltrpElTdHover = getResponsiveSetting(settings, 'cell_vertical_alignment', ':hover');\r\n\r\n  if (verticalAlignDivNotAltrpElTdHover) {\r\n    styles += simplePropertyStyled(verticalAlignDivNotAltrpElTdHover, 'vertical-align');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td__grouping .altrp-table__collapse-icon svg {`;\r\n\r\n  const iconSizeTdGroupingIconSvg = getResponsiveSetting(settings, 'table_style_group_icon_size');\r\n\r\n  if (iconSizeTdGroupingIconSvg) {\r\n    styles += iconSizeStyled(iconSizeTdGroupingIconSvg);\r\n  }\r\n\r\n  const iconLeftSpaceTdGroupingIconSvg = getResponsiveSetting(settings, 'table_style_group_icon_left_space');\r\n\r\n  if (iconLeftSpaceTdGroupingIconSvg) {\r\n    styles += sizeStyled(iconLeftSpaceTdGroupingIconSvg, 'margin-left');\r\n  }\r\n\r\n  const iconRightSpaceTdGroupingIconSvg = getResponsiveSetting(settings, 'table_style_group_icon_right_space');\r\n\r\n  if (iconRightSpaceTdGroupingIconSvg) {\r\n    styles += sizeStyled(iconRightSpaceTdGroupingIconSvg, 'margin-right');\r\n  }\r\n\r\n  const iconTopTranslateTdGroupingIconSvg = getResponsiveSetting(settings, 'table_style_group_icon_top');\r\n\r\n  if (iconTopTranslateTdGroupingIconSvg) {\r\n    styles += sizeStyled(iconTopTranslateTdGroupingIconSvg, 'top');\r\n  }\r\n\r\n  const iconLeftTranslateTdGroupingIconSvg = getResponsiveSetting(settings, 'table_style_group_icon_left');\r\n\r\n  if (iconLeftTranslateTdGroupingIconSvg) {\r\n    styles += sizeStyled(iconLeftTranslateTdGroupingIconSvg, 'left');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td__grouping:hover .altrp-table__collapse-icon svg {`;\r\n\r\n  const iconSizeTdGroupingIconSvgHover = getResponsiveSetting(settings, 'table_style_group_icon_size', ':hover');\r\n\r\n  if (iconSizeTdGroupingIconSvgHover) {\r\n    styles += iconSizeStyled(iconSizeTdGroupingIconSvgHover);\r\n  }\r\n\r\n  const iconLeftSpaceTdGroupingIconSvgHover = getResponsiveSetting(settings, 'table_style_group_icon_left_space', ':hover');\r\n\r\n  if (iconLeftSpaceTdGroupingIconSvgHover) {\r\n    styles += sizeStyled(iconLeftSpaceTdGroupingIconSvgHover, 'margin-left');\r\n  }\r\n\r\n  const iconRightSpaceTdGroupingIconSvgHover = getResponsiveSetting(settings, 'table_style_group_icon_right_space', ':hover');\r\n\r\n  if (iconRightSpaceTdGroupingIconSvgHover) {\r\n    styles += sizeStyled(iconRightSpaceTdGroupingIconSvgHover, 'margin-right');\r\n  }\r\n\r\n  const iconTopTranslateTdGroupingIconSvgHover = getResponsiveSetting(settings, 'table_style_group_icon_top', ':hover');\r\n\r\n  if (iconTopTranslateTdGroupingIconSvgHover) {\r\n    styles += sizeStyled(iconTopTranslateTdGroupingIconSvgHover, 'top');\r\n  }\r\n\r\n  const iconLeftTranslateTdGroupingIconSvgHover = getResponsiveSetting(settings, 'table_style_group_icon_left', ':hover');\r\n\r\n  if (iconLeftTranslateTdGroupingIconSvgHover) {\r\n    styles += sizeStyled(iconLeftTranslateTdGroupingIconSvgHover, 'left');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td__grouping .altrp-table__collapse-icon svg, ${parentClass} .altrp-table-td__grouping .altrp-table__collapse-icon path {`;\r\n\r\n  const iconFillTdGroupingIconSvgPath = getResponsiveSetting(settings, 'table_style_group_icon_color');\r\n\r\n  if (iconFillTdGroupingIconSvgPath) {\r\n    styles += colorPropertyStyled(iconFillTdGroupingIconSvgPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td__grouping:hover .altrp-table__collapse-icon svg, ${parentClass} .altrp-table-td__grouping:hover .altrp-table__collapse-icon path {`;\r\n\r\n  const iconFillTdGroupingIconSvgPathHover = getResponsiveSetting(settings, 'table_style_group_icon_color', ':hover');\r\n\r\n  if (iconFillTdGroupingIconSvgPathHover) {\r\n    styles += colorPropertyStyled(iconFillTdGroupingIconSvgPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-foot .altrp-table-td {`;\r\n\r\n  const paddingTableFootTd = getResponsiveSetting(settings, 'table_style_footer_cell_padding');\r\n\r\n  if (paddingTableFootTd) {\r\n    styles += dimensionsControllerToStyles(paddingTableFootTd);\r\n  }\r\n\r\n  const textAlignTableFootTd = getResponsiveSetting(settings, 'table_style_footer_cell_alignment');\r\n\r\n  if (textAlignTableFootTd) {\r\n    styles += simplePropertyStyled(textAlignTableFootTd, 'text-align');\r\n  }\r\n\r\n  const backgroundColorTableFootTd = getResponsiveSetting(settings, 'table_style_footer_border_background');\r\n\r\n  if (backgroundColorTableFootTd) {\r\n    styles += colorPropertyStyled(backgroundColorTableFootTd, 'background-color');\r\n  }\r\n\r\n  const colorTableFootTd = getResponsiveSetting(settings, 'table_style_footer_border_text_color');\r\n\r\n  if (colorTableFootTd) {\r\n    styles += colorPropertyStyled(colorTableFootTd, 'color');\r\n  }\r\n\r\n  const typographicTableFootTd = getResponsiveSetting(settings, 'table_style_footer_font');\r\n\r\n  if (typographicTableFootTd) {\r\n    styles += typographicControllerToStyles(typographicTableFootTd);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-foot .altrp-table-td:hover {`;\r\n\r\n  const paddingTableFootTdHover = getResponsiveSetting(settings, 'table_style_footer_cell_padding', ':hover');\r\n\r\n  if (paddingTableFootTdHover) {\r\n    styles += dimensionsControllerToStyles(paddingTableFootTdHover);\r\n  }\r\n\r\n  const textAlignTableFootTdHover = getResponsiveSetting(settings, 'table_style_footer_cell_alignment', ':hover');\r\n\r\n  if (textAlignTableFootTdHover) {\r\n    styles += simplePropertyStyled(textAlignTableFootTdHover, 'text-align');\r\n  }\r\n\r\n  const backgroundColorTableFootTdHover = getResponsiveSetting(settings, 'table_style_footer_border_background', ':hover');\r\n\r\n  if (backgroundColorTableFootTdHover) {\r\n    styles += colorPropertyStyled(backgroundColorTableFootTdHover, 'background-color');\r\n  }\r\n\r\n  const colorTableFootTdHover = getResponsiveSetting(settings, 'table_style_footer_border_text_color', ':hover');\r\n\r\n  if (colorTableFootTdHover) {\r\n    styles += colorPropertyStyled(colorTableFootTdHover, 'color');\r\n  }\r\n\r\n  const typographicTableFootTdHover = getResponsiveSetting(settings, 'table_style_footer_font', ':hover');\r\n\r\n  if (typographicTableFootTdHover) {\r\n    styles += typographicControllerToStyles(typographicTableFootTdHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-global-filter label {`;\r\n\r\n  const paddingGlobalFilterLabel = getResponsiveSetting(settings, 'global_filter_label_padding');\r\n\r\n  if (paddingGlobalFilterLabel) {\r\n    styles += dimensionsControllerToStyles(paddingGlobalFilterLabel);\r\n  }\r\n\r\n  const colorGlobalFilterLabel = getResponsiveSetting(settings, 'global_filter_label_color');\r\n\r\n  if (colorGlobalFilterLabel) {\r\n    styles += colorPropertyStyled(colorGlobalFilterLabel, 'color');\r\n  }\r\n\r\n  const typographicGlobalFilterLabel = getResponsiveSetting(settings, 'global_filter_label_typographic');\r\n\r\n  if (typographicGlobalFilterLabel) {\r\n    styles += typographicControllerToStyles(typographicGlobalFilterLabel);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-global-filter label:hover {`;\r\n\r\n  const paddingGlobalFilterLabelHover = getResponsiveSetting(settings, 'global_filter_label_padding', ':hover');\r\n\r\n  if (paddingGlobalFilterLabelHover) {\r\n    styles += dimensionsControllerToStyles(paddingGlobalFilterLabelHover);\r\n  }\r\n\r\n  const colorGlobalFilterLabelHover = getResponsiveSetting(settings, 'global_filter_label_color', ':hover');\r\n\r\n  if (colorGlobalFilterLabelHover) {\r\n    styles += colorPropertyStyled(colorGlobalFilterLabelHover, 'color');\r\n  }\r\n\r\n  const typographicGlobalFilterLabelHover = getResponsiveSetting(settings, 'global_filter_label_typographic', ':hover');\r\n\r\n  if (typographicGlobalFilterLabelHover) {\r\n    styles += typographicControllerToStyles(typographicGlobalFilterLabelHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-global-filter input {`;\r\n\r\n  const paddingGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_padding');\r\n\r\n  if (paddingGlobalFilterInput) {\r\n    styles += dimensionsControllerToStyles(paddingGlobalFilterInput);\r\n  }\r\n\r\n  const widthGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_width');\r\n\r\n  if (widthGlobalFilterInput) {\r\n    styles += sizeStyled(widthGlobalFilterInput, 'width');\r\n  }\r\n\r\n  const marginLeftGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_margin_left');\r\n\r\n  if (marginLeftGlobalFilterInput) {\r\n    styles += sizeStyled(marginLeftGlobalFilterInput, 'margin-left');\r\n  }\r\n\r\n  const colorGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_color');\r\n\r\n  if (colorGlobalFilterInput) {\r\n    styles += colorPropertyStyled(colorGlobalFilterInput, 'color');\r\n  }\r\n\r\n  const backgroundColorGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_background_color');\r\n\r\n  if (backgroundColorGlobalFilterInput) {\r\n    styles += colorPropertyStyled(backgroundColorGlobalFilterInput, 'background');\r\n  }\r\n\r\n  const typographicGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_typographic');\r\n\r\n  if (typographicGlobalFilterInput) {\r\n    styles += typographicControllerToStyles(typographicGlobalFilterInput);\r\n  }\r\n\r\n  const borderTypeGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_border_type');\r\n\r\n  if (borderTypeGlobalFilterInput) {\r\n    styles += simplePropertyStyled(borderTypeGlobalFilterInput, 'border-style');\r\n  }\r\n\r\n  const borderWidthGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_border_width');\r\n\r\n  if (borderWidthGlobalFilterInput) {\r\n    styles += borderWidthStyled(borderWidthGlobalFilterInput);\r\n  }\r\n\r\n  const borderRadiusGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_border_radius');\r\n\r\n  if (borderRadiusGlobalFilterInput) {\r\n    styles += dimensionsControllerToStyles(borderRadiusGlobalFilterInput, 'border-radius');\r\n  }\r\n\r\n  const borderColorGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_border_color');\r\n\r\n  if (borderColorGlobalFilterInput) {\r\n    styles += colorPropertyStyled(borderColorGlobalFilterInput, 'border-color');\r\n  }\r\n\r\n  const boxShadowGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_shadow');\r\n\r\n  if (boxShadowGlobalFilterInput) {\r\n    styles += shadowControllerToStyles(boxShadowGlobalFilterInput);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-global-filter input:hover {`;\r\n\r\n  const paddingGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_padding', ':hover');\r\n\r\n  if (paddingGlobalFilterInputHover) {\r\n    styles += dimensionsControllerToStyles(paddingGlobalFilterInputHover);\r\n  }\r\n\r\n  const widthGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_width', ':hover');\r\n\r\n  if (widthGlobalFilterInputHover) {\r\n    styles += sizeStyled(widthGlobalFilterInputHover, 'width');\r\n  }\r\n\r\n  const marginLeftGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_margin_left', ':hover');\r\n\r\n  if (marginLeftGlobalFilterInputHover) {\r\n    styles += sizeStyled(marginLeftGlobalFilterInputHover, 'margin-left');\r\n  }\r\n\r\n  const colorGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_color', ':hover');\r\n\r\n  if (colorGlobalFilterInputHover) {\r\n    styles += colorPropertyStyled(colorGlobalFilterInputHover, 'color');\r\n  }\r\n\r\n  const backgroundColorGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_background_color', ':hover');\r\n\r\n  if (backgroundColorGlobalFilterInputHover) {\r\n    styles += colorPropertyStyled(backgroundColorGlobalFilterInputHover, 'background');\r\n  }\r\n\r\n  const typographicGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_typographic', ':hover');\r\n\r\n  if (typographicGlobalFilterInputHover) {\r\n    styles += typographicControllerToStyles(typographicGlobalFilterInputHover);\r\n  }\r\n\r\n  const borderTypeGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_border_type', ':hover');\r\n\r\n  if (borderTypeGlobalFilterInputHover) {\r\n    styles += simplePropertyStyled(borderTypeGlobalFilterInputHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_border_width', ':hover');\r\n\r\n  if (borderWidthGlobalFilterInputHover) {\r\n    styles += borderWidthStyled(borderWidthGlobalFilterInputHover);\r\n  }\r\n\r\n  const borderRadiusGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_border_radius', ':hover');\r\n\r\n  if (borderRadiusGlobalFilterInputHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusGlobalFilterInputHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_border_color', ':hover');\r\n\r\n  if (borderColorGlobalFilterInputHover) {\r\n    styles += colorPropertyStyled(borderColorGlobalFilterInputHover, 'border-color');\r\n  }\r\n\r\n  const boxShadowGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_shadow', ':hover');\r\n\r\n  if (boxShadowGlobalFilterInputHover) {\r\n    styles += shadowControllerToStyles(boxShadowGlobalFilterInputHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination {`;\r\n\r\n  const paddingPagination = getResponsiveSetting(settings, 'table_style_pagination_padding');\r\n\r\n  if (paddingPagination) {\r\n    styles += dimensionsControllerToStyles(paddingPagination);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination:hover {`;\r\n\r\n  const paddingPaginationHover = getResponsiveSetting(settings, 'table_style_pagination_padding', ':hover');\r\n\r\n  if (paddingPaginationHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__previous {`;\r\n\r\n  const typographicPaginationPrev = getResponsiveSetting(settings, 'table_style_prev_btn_pagination_typographic');\r\n\r\n  if (typographicPaginationPrev) {\r\n    styles += typographicControllerToStyles(typographicPaginationPrev);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__previous:hover {`;\r\n\r\n  const typographicPaginationPrevHover = getResponsiveSetting(settings, 'table_style_prev_btn_pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginationPrevHover) {\r\n    styles += typographicControllerToStyles(typographicPaginationPrevHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} altrp-pagination .altrp-pagination__next {`;\r\n\r\n  const typographicPaginationNext = getResponsiveSetting(settings, 'table_style_next_btn_pagination_typographic');\r\n\r\n  if (typographicPaginationNext) {\r\n    styles += typographicControllerToStyles(typographicPaginationNext);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} altrp-pagination .altrp-pagination__next:hover {`;\r\n\r\n  const typographicPaginationNextHover = getResponsiveSetting(settings, 'table_style_next_btn_pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginationNextHover) {\r\n    styles += typographicControllerToStyles(typographicPaginationNextHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination-pages__item {`;\r\n\r\n  const typographicPaginationPagesItem = getResponsiveSetting(settings, 'table_style_item_count_pagination_typographic');\r\n\r\n  if (typographicPaginationPagesItem) {\r\n    styles += typographicControllerToStyles(typographicPaginationPagesItem);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination-pages__item:hover {`;\r\n\r\n  const typographicPaginationPagesItemHover = getResponsiveSetting(settings, 'table_style_item_count_pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginationPagesItemHover) {\r\n    styles += typographicControllerToStyles(typographicPaginationPagesItemHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous, ${parentClass} .altrp-pagination__next {`;\r\n\r\n  const colorPaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_buttons_text_color');\r\n\r\n  if (colorPaginationPrevNext) {\r\n    styles += colorPropertyStyled(colorPaginationPrevNext, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_buttons_background_color');\r\n\r\n  if (backgroundColorPaginationPrevNext) {\r\n    styles += colorPropertyStyled(backgroundColorPaginationPrevNext, 'background-color');\r\n  }\r\n\r\n  const paddingPaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_padding_buttons');\r\n\r\n  if (paddingPaginationPrevNext) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationPrevNext);\r\n  }\r\n\r\n  const borderTypePaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_border_type');\r\n\r\n  if (borderTypePaginationPrevNext) {\r\n    styles += simplePropertyStyled(borderTypePaginationPrevNext, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_border_width');\r\n\r\n  if (borderWidthPaginationPrevNext) {\r\n    styles += borderWidthStyled(borderWidthPaginationPrevNext);\r\n  }\r\n\r\n  const borderRadiusPaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_border_radius');\r\n\r\n  if (borderRadiusPaginationPrevNext) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginationPrevNext, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_border_color');\r\n\r\n  if (borderColorPaginationPrevNext) {\r\n    styles += colorPropertyStyled(borderColorPaginationPrevNext, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginationPrevNext = getResponsiveSetting(settings, 'pagination_buttons_shadow');\r\n\r\n  if (boxShadowPaginationPrevNext) {\r\n    styles += shadowControllerToStyles(boxShadowPaginationPrevNext);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover, ${parentClass} .altrp-pagination__next:hover {`;\r\n\r\n  const colorPaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_buttons_text_color', ':hover');\r\n\r\n  if (colorPaginationPrevNextHover) {\r\n    styles += colorPropertyStyled(colorPaginationPrevNextHover, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_buttons_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginationPrevNextHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginationPrevNextHover, 'background-color');\r\n  }\r\n\r\n  const paddingPaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_padding_buttons', ':hover');\r\n\r\n  if (paddingPaginationPrevNextHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationPrevNextHover);\r\n  }\r\n\r\n  const borderTypePaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_border_type', ':hover');\r\n\r\n  if (borderTypePaginationPrevNextHover) {\r\n    styles += simplePropertyStyled(borderTypePaginationPrevNextHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_border_width', ':hover');\r\n\r\n  if (borderWidthPaginationPrevNextHover) {\r\n    styles += borderWidthStyled(borderWidthPaginationPrevNextHover);\r\n  }\r\n\r\n  const borderRadiusPaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginationPrevNextHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginationPrevNextHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_border_color', ':hover');\r\n\r\n  if (borderColorPaginationPrevNextHover) {\r\n    styles += colorPropertyStyled(borderColorPaginationPrevNextHover, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginationPrevNextHover = getResponsiveSetting(settings, 'pagination_buttons_shadow', ':hover');\r\n\r\n  if (boxShadowPaginationPrevNextHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginationPrevNextHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next, ${parentClass} .altrp-pagination-pages__item, ${parentClass} .altrp-pagination__count, ${parentClass} .altrp-pagination__previous, ${parentClass} .altrp-pagination__goto-page, ${parentClass} .altrp-pagination__select-size  {`;\r\n\r\n  const typographicNextItemCountPrevGotoSelect = getResponsiveSetting(settings, 'table_style_pagination_typographic');\r\n\r\n  if (typographicNextItemCountPrevGotoSelect) {\r\n    styles += typographicControllerToStyles(typographicNextItemCountPrevGotoSelect);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover, ${parentClass} .altrp-pagination-pages__item:hover, ${parentClass} .altrp-pagination__count:hover, ${parentClass} .altrp-pagination__previous:hover, ${parentClass} .altrp-pagination__goto-page:hover, ${parentClass} .altrp-pagination__select-size:hover  {`;\r\n\r\n  const typographicNextItemCountPrevGotoSelectHover = getResponsiveSetting(settings, 'table_style_pagination_typographic', ':hover');\r\n\r\n  if (typographicNextItemCountPrevGotoSelectHover) {\r\n    styles += typographicControllerToStyles(typographicNextItemCountPrevGotoSelectHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__count {`;\r\n\r\n  const marginPaginationCount = getResponsiveSetting(settings, 'count_buttons_margin');\r\n\r\n  if (marginPaginationCount) {\r\n    styles += dimensionsControllerToStyles(marginPaginationCount, 'margin');\r\n  }\r\n\r\n  const colorPaginationCount = getResponsiveSetting(settings, 'table_style_pagination_count_text_color');\r\n\r\n  if (colorPaginationCount) {\r\n    styles += colorPropertyStyled(colorPaginationCount, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginationCount = getResponsiveSetting(settings, 'table_style_pagination_count_background_color');\r\n\r\n  if (backgroundColorPaginationCount) {\r\n    styles += colorPropertyStyled(backgroundColorPaginationCount, 'background-color');\r\n  }\r\n\r\n  const paddingPaginationCount = getResponsiveSetting(settings, 'table_style_pagination_padding_count');\r\n\r\n  if (paddingPaginationCount) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationCount);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__count:hover {`;\r\n\r\n  const marginPaginationCountHover = getResponsiveSetting(settings, 'count_buttons_margin', ':hover');\r\n\r\n  if (marginPaginationCountHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginationCountHover, 'margin');\r\n  }\r\n\r\n  const colorPaginationCountHover = getResponsiveSetting(settings, 'table_style_pagination_count_text_color', ':hover');\r\n\r\n  if (colorPaginationCountHover) {\r\n    styles += colorPropertyStyled(colorPaginationCountHover, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginationCountHover = getResponsiveSetting(settings, 'table_style_pagination_count_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginationCountHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginationCountHover, 'background-color');\r\n  }\r\n\r\n  const paddingPaginationCountHover = getResponsiveSetting(settings, 'table_style_pagination_padding_count', ':hover');\r\n\r\n  if (paddingPaginationCountHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationCountHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination-pages__item {`;\r\n\r\n  const marginPaginPagesItem = getResponsiveSetting(settings, 'count_button_item_margin');\r\n\r\n  if (marginPaginPagesItem) {\r\n    styles += dimensionsControllerToStyles(marginPaginPagesItem, 'margin');\r\n  }\r\n\r\n  const backgroundColorPaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_background_color');\r\n\r\n  if (backgroundColorPaginPagesItem) {\r\n    styles += colorPropertyStyled(backgroundColorPaginPagesItem, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_type');\r\n\r\n  if (borderTypePaginPagesItem) {\r\n    styles += simplePropertyStyled(borderTypePaginPagesItem, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_width');\r\n\r\n  if (borderWidthPaginPagesItem) {\r\n    styles += borderWidthStyled(borderWidthPaginPagesItem);\r\n  }\r\n\r\n  const borderRadiusPaginPagesItem = getResponsiveSetting(settings, 'table_style_count_item_border_radius');\r\n\r\n  if (borderRadiusPaginPagesItem) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginPagesItem, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_color');\r\n\r\n  if (borderColorPaginPagesItem) {\r\n    styles += colorPropertyStyled(borderColorPaginPagesItem, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginPagesItem = getResponsiveSetting(settings, 'pagination_count_item_shadow');\r\n\r\n  if (boxShadowPaginPagesItem) {\r\n    styles += shadowControllerToStyles(boxShadowPaginPagesItem);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination-pages__item:hover {`;\r\n\r\n  const marginPaginPagesItemHover = getResponsiveSetting(settings, 'count_button_item_margin', ':hover');\r\n\r\n  if (marginPaginPagesItemHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginPagesItemHover, 'margin');\r\n  }\r\n\r\n  const backgroundColorPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginPagesItemHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginPagesItemHover, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_type', ':hover');\r\n\r\n  if (borderTypePaginPagesItemHover) {\r\n    styles += simplePropertyStyled(borderTypePaginPagesItemHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_width', ':hover');\r\n\r\n  if (borderWidthPaginPagesItemHover) {\r\n    styles += borderWidthStyled(borderWidthPaginPagesItemHover);\r\n  }\r\n\r\n  const borderRadiusPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_count_item_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginPagesItemHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginPagesItemHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_color', ':hover');\r\n\r\n  if (borderColorPaginPagesItemHover) {\r\n    styles += colorPropertyStyled(borderColorPaginPagesItemHover, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginPagesItemHover = getResponsiveSetting(settings, 'pagination_count_item_shadow', ':hover');\r\n\r\n  if (boxShadowPaginPagesItemHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginPagesItemHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .active.altrp-pagination-pages__item {`;\r\n\r\n  const colorActivePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_active_count_text_color');\r\n\r\n  if (colorActivePaginPagesItem) {\r\n    styles += colorPropertyStyled(colorActivePaginPagesItem, 'color');\r\n  }\r\n\r\n  const backgroundColorActivePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_background_color');\r\n\r\n  if (backgroundColorActivePaginPagesItem) {\r\n    styles += colorPropertyStyled(backgroundColorActivePaginPagesItem, 'background-color');\r\n  }\r\n\r\n  const borderColorActivePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_border_color');\r\n\r\n  if (borderColorActivePaginPagesItem) {\r\n    styles += colorPropertyStyled(borderColorActivePaginPagesItem, 'border-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .active.altrp-pagination-pages__item:hover {`;\r\n\r\n  const colorActivePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_active_count_text_color', ':hover');\r\n\r\n  if (colorActivePaginPagesItemHover) {\r\n    styles += colorPropertyStyled(colorActivePaginPagesItemHover, 'color');\r\n  }\r\n\r\n  const backgroundColorActivePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_background_color', ':hover');\r\n\r\n  if (backgroundColorActivePaginPagesItemHover) {\r\n    styles += colorPropertyStyled(backgroundColorActivePaginPagesItemHover, 'background-color');\r\n  }\r\n\r\n  const borderColorActivePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_border_color', ':hover');\r\n\r\n  if (borderColorActivePaginPagesItemHover) {\r\n    styles += colorPropertyStyled(borderColorActivePaginPagesItemHover, 'border-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__ellipsis {`;\r\n\r\n  const marginPaginationEllipsis = getResponsiveSetting(settings, 'ellipsis_margin');\r\n\r\n  if (marginPaginationEllipsis) {\r\n    styles += dimensionsControllerToStyles(marginPaginationEllipsis, 'margin');\r\n  }\r\n\r\n  const colorPaginationEllipsis = getResponsiveSetting(settings, 'ellipsis_color');\r\n\r\n  if (colorPaginationEllipsis) {\r\n    styles += colorPropertyStyled(colorPaginationEllipsis, 'color');\r\n  }\r\n\r\n  const typographicPaginationEllipsis = getResponsiveSetting(settings, 'ellipsis_typographic');\r\n\r\n  if (typographicPaginationEllipsis) {\r\n    styles += typographicControllerToStyles(typographicPaginationEllipsis);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__ellipsis:hover {`;\r\n\r\n  const marginPaginationEllipsisHover = getResponsiveSetting(settings, 'ellipsis_margin', ':hover');\r\n\r\n  if (marginPaginationEllipsisHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginationEllipsisHover, 'margin');\r\n  }\r\n\r\n  const colorPaginationEllipsisHover = getResponsiveSetting(settings, 'ellipsis_color', ':hover');\r\n\r\n  if (colorPaginationEllipsisHover) {\r\n    styles += colorPropertyStyled(colorPaginationEllipsisHover, 'color');\r\n  }\r\n\r\n  const typographicPaginationEllipsisHover = getResponsiveSetting(settings, 'ellipsis_typographic', ':hover');\r\n\r\n  if (typographicPaginationEllipsisHover) {\r\n    styles += typographicControllerToStyles(typographicPaginationEllipsisHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__goto-page {`;\r\n\r\n  const marginPaginationGotoPages = getResponsiveSetting(settings, 'goto-page_margin');\r\n\r\n  if (marginPaginationGotoPages) {\r\n    styles += dimensionsControllerToStyles(marginPaginationGotoPages, 'margin');\r\n  }\r\n\r\n  const paddingPaginationGotoPages = getResponsiveSetting(settings, 'page_input_padding');\r\n\r\n  if (paddingPaginationGotoPages) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationGotoPages);\r\n  }\r\n\r\n  const colorPaginationGotoPages = getResponsiveSetting(settings, 'page_input_text_color');\r\n\r\n  if (colorPaginationGotoPages) {\r\n    styles += colorPropertyStyled(colorPaginationGotoPages, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginationGotoPages = getResponsiveSetting(settings, 'page_input_background_color');\r\n\r\n  if (backgroundColorPaginationGotoPages) {\r\n    styles += colorPropertyStyled(backgroundColorPaginationGotoPages, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginationGotoPages = getResponsiveSetting(settings, 'page_input_border_type');\r\n\r\n  if (borderTypePaginationGotoPages) {\r\n    styles += simplePropertyStyled(borderTypePaginationGotoPages, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginationGotoPages = getResponsiveSetting(settings, 'page_input_border_width');\r\n\r\n  if (borderWidthPaginationGotoPages) {\r\n    styles += borderWidthStyled(borderWidthPaginationGotoPages);\r\n  }\r\n\r\n  const borderRadiusPaginationGotoPages = getResponsiveSetting(settings, 'page_input_border_radius');\r\n\r\n  if (borderRadiusPaginationGotoPages) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginationGotoPages, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginationGotoPages = getResponsiveSetting(settings, 'page_input_border_color');\r\n\r\n  if (borderColorPaginationGotoPages) {\r\n    styles += colorPropertyStyled(borderColorPaginationGotoPages, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginationGotoPages = getResponsiveSetting(settings, 'page_input_shadow');\r\n\r\n  if (boxShadowPaginationGotoPages) {\r\n    styles += shadowControllerToStyles(boxShadowPaginationGotoPages);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__goto-page:hover {`;\r\n\r\n  const marginPaginationGotoPagesHover = getResponsiveSetting(settings, 'goto-page_margin', ':hover');\r\n\r\n  if (marginPaginationGotoPagesHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginationGotoPagesHover, 'margin');\r\n  }\r\n\r\n  const paddingPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_padding', ':hover');\r\n\r\n  if (paddingPaginationGotoPagesHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationGotoPagesHover);\r\n  }\r\n\r\n  const colorPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_text_color', ':hover');\r\n\r\n  if (colorPaginationGotoPagesHover) {\r\n    styles += colorPropertyStyled(colorPaginationGotoPagesHover, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginationGotoPagesHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginationGotoPagesHover, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_border_type', ':hover');\r\n\r\n  if (borderTypePaginationGotoPagesHover) {\r\n    styles += simplePropertyStyled(borderTypePaginationGotoPagesHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_border_width', ':hover');\r\n\r\n  if (borderWidthPaginationGotoPagesHover) {\r\n    styles += borderWidthStyled(borderWidthPaginationGotoPagesHover);\r\n  }\r\n\r\n  const borderRadiusPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginationGotoPagesHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginationGotoPagesHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_border_color', ':hover');\r\n\r\n  if (borderColorPaginationGotoPagesHover) {\r\n    styles += colorPropertyStyled(borderColorPaginationGotoPagesHover, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_shadow', ':hover');\r\n\r\n  if (boxShadowPaginationGotoPagesHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginationGotoPagesHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__goto-page {`;\r\n\r\n  const typographicPaginPaginGotoPages = getResponsiveSetting(settings, 'table_style_page_input_pagination_typographic');\r\n\r\n  if (typographicPaginPaginGotoPages) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginGotoPages);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__goto-page:hover {`;\r\n\r\n  const typographicPaginPaginGotoPagesHover = getResponsiveSetting(settings, 'table_style_page_input_pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginPaginGotoPagesHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginGotoPagesHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size .altrp-field-select2__control {`;\r\n\r\n  const widthPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_width');\r\n\r\n  if (widthPaginSelectSizeControl) {\r\n    styles += sizeStyled(widthPaginSelectSizeControl, 'width');\r\n  }\r\n\r\n  const paddingPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_padding');\r\n\r\n  if (paddingPaginSelectSizeControl) {\r\n    styles += dimensionsControllerToStyles(paddingPaginSelectSizeControl);\r\n  }\r\n\r\n  const borderTypePaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_border_type');\r\n\r\n  if (borderTypePaginSelectSizeControl) {\r\n    styles += simplePropertyStyled(borderTypePaginSelectSizeControl, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_border_width');\r\n\r\n  if (borderWidthPaginSelectSizeControl) {\r\n    styles += borderWidthStyled(borderWidthPaginSelectSizeControl);\r\n  }\r\n\r\n  const borderRadiusPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_border_radius');\r\n\r\n  if (borderRadiusPaginSelectSizeControl) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginSelectSizeControl, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_border_color');\r\n\r\n  if (borderColorPaginSelectSizeControl) {\r\n    styles += colorPropertyStyled(borderColorPaginSelectSizeControl, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_shadow');\r\n\r\n  if (boxShadowPaginSelectSizeControl) {\r\n    styles += shadowControllerToStyles(boxShadowPaginSelectSizeControl);\r\n  }\r\n\r\n  const colorPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_text_color');\r\n\r\n  if (colorPaginSelectSizeControl) {\r\n    styles += colorPropertyStyled(colorPaginSelectSizeControl, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_background_color');\r\n\r\n  if (backgroundColorPaginSelectSizeControl) {\r\n    styles += colorPropertyStyled(backgroundColorPaginSelectSizeControl, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size .altrp-field-select2__control:hover {`;\r\n\r\n  const widthPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_width', ':hover');\r\n\r\n  if (widthPaginSelectSizeControlHover) {\r\n    styles += sizeStyled(widthPaginSelectSizeControlHover, 'width');\r\n  }\r\n\r\n  const paddingPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_padding', ':hover');\r\n\r\n  if (paddingPaginSelectSizeControlHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginSelectSizeControlHover);\r\n  }\r\n\r\n  const borderTypePaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_border_type', ':hover');\r\n\r\n  if (borderTypePaginSelectSizeControlHover) {\r\n    styles += simplePropertyStyled(borderTypePaginSelectSizeControlHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_border_width', ':hover');\r\n\r\n  if (borderWidthPaginSelectSizeControlHover) {\r\n    styles += borderWidthStyled(borderWidthPaginSelectSizeControlHover);\r\n  }\r\n\r\n  const borderRadiusPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginSelectSizeControlHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginSelectSizeControlHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_border_color', ':hover');\r\n\r\n  if (borderColorPaginSelectSizeControlHover) {\r\n    styles += colorPropertyStyled(borderColorPaginSelectSizeControlHover, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_shadow', ':hover');\r\n\r\n  if (boxShadowPaginSelectSizeControlHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginSelectSizeControlHover);\r\n  }\r\n\r\n  const colorPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_text_color', ':hover');\r\n\r\n  if (colorPaginSelectSizeControlHover) {\r\n    styles += colorPropertyStyled(colorPaginSelectSizeControlHover, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginSelectSizeControlHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginSelectSizeControlHover, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__select-size {`;\r\n\r\n  const typographicPaginSelectSize = getResponsiveSetting(settings, 'table_style_pagination_select__pagination_typographic');\r\n\r\n  if (typographicPaginSelectSize) {\r\n    styles += typographicControllerToStyles(typographicPaginSelectSize);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__select-size:hover {`;\r\n\r\n  const typographicPaginPaginSelectSizeHover = getResponsiveSetting(settings, 'table_style_pagination_select__pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginPaginSelectSizeHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginSelectSizeHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size {`;\r\n\r\n  const marginPaginSelectSize = getResponsiveSetting(settings, 'pagination_select_margin');\r\n\r\n  if (marginPaginSelectSize) {\r\n    styles += dimensionsControllerToStyles(marginPaginSelectSize, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size:hover {`;\r\n\r\n  const marginPaginSelectSizeHover = getResponsiveSetting(settings, 'pagination_select_margin', ':hover');\r\n\r\n  if (marginPaginSelectSizeHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginSelectSizeHover, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--checked svg {`;\r\n\r\n  const marginCheckIconSvg = getResponsiveSetting(settings, 'checked_icon_margin');\r\n\r\n  if (marginCheckIconSvg) {\r\n    styles += dimensionsControllerToStyles(marginCheckIconSvg, 'margin');\r\n  }\r\n\r\n  const sizeCheckIconSvg = getResponsiveSetting(settings, 'checked_size');\r\n\r\n  if (sizeCheckIconSvg) {\r\n    styles += iconSizeStyled(sizeCheckIconSvg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--checked svg:hover {`;\r\n\r\n  const marginCheckIconSvgHover = getResponsiveSetting(settings, 'checked_icon_margin', ':hover');\r\n\r\n  if (marginCheckIconSvgHover) {\r\n    styles += dimensionsControllerToStyles(marginCheckIconSvgHover, 'margin');\r\n  }\r\n\r\n  const sizeCheckIconSvgHover = getResponsiveSetting(settings, 'checked_size', ':hover');\r\n\r\n  if (sizeCheckIconSvgHover) {\r\n    styles += iconSizeStyled(sizeCheckIconSvgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--unchecked svg {`;\r\n\r\n  const marginUncheckIconSvg = getResponsiveSetting(settings, 'unchecked_icon_margin');\r\n\r\n  if (marginUncheckIconSvg) {\r\n    styles += dimensionsControllerToStyles(marginUncheckIconSvg, 'margin');\r\n  }\r\n\r\n  const sizeUncheckIconSvg = getResponsiveSetting(settings, 'unchecked_size');\r\n\r\n  if (sizeUncheckIconSvg) {\r\n    styles += iconSizeStyled(sizeUncheckIconSvg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--unchecked svg:hover {`;\r\n\r\n  const marginUncheckIconSvgHover = getResponsiveSetting(settings, 'unchecked_icon_margin', ':hover');\r\n\r\n  if (marginUncheckIconSvgHover) {\r\n    styles += dimensionsControllerToStyles(marginUncheckIconSvgHover, 'margin');\r\n  }\r\n\r\n  const sizeUncheckIconSvgHover = getResponsiveSetting(settings, 'unchecked_size', ':hover');\r\n\r\n  if (sizeUncheckIconSvgHover) {\r\n    styles += iconSizeStyled(sizeUncheckIconSvgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--indeterminate svg {`;\r\n\r\n  const marginCheckIconIndeterminateSvg = getResponsiveSetting(settings, 'indeterminate_icon_margin');\r\n\r\n  if (marginCheckIconIndeterminateSvg) {\r\n    styles += dimensionsControllerToStyles(marginCheckIconIndeterminateSvg, 'margin');\r\n  }\r\n\r\n  const sizeCheckIconIndeterminateSvg = getResponsiveSetting(settings, 'indeterminate_size');\r\n\r\n  if (sizeCheckIconIndeterminateSvg) {\r\n    styles += iconSizeStyled(sizeCheckIconIndeterminateSvg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--indeterminate svg:hover {`;\r\n\r\n  const marginCheckIconIndeterminateSvgHover = getResponsiveSetting(settings, 'indeterminate_icon_margin', ':hover');\r\n\r\n  if (marginCheckIconIndeterminateSvgHover) {\r\n    styles += dimensionsControllerToStyles(marginCheckIconIndeterminateSvgHover, 'margin');\r\n  }\r\n\r\n  const sizeCheckIconIndeterminateSvgHover = getResponsiveSetting(settings, 'indeterminate_size', ':hover');\r\n\r\n  if (sizeCheckIconIndeterminateSvgHover) {\r\n    styles += iconSizeStyled(sizeCheckIconIndeterminateSvgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--checked path {`;\r\n\r\n  const iconFillCheckIconCheckedPath = getResponsiveSetting(settings, 'checked_icon_color');\r\n\r\n  if (iconFillCheckIconCheckedPath) {\r\n    styles += colorPropertyStyled(iconFillCheckIconCheckedPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--checked:hover path {`;\r\n\r\n  const iconFillCheckIconCheckedPathHover = getResponsiveSetting(settings, 'checked_icon_color', ':hover');\r\n\r\n  if (iconFillCheckIconCheckedPathHover) {\r\n    styles += colorPropertyStyled(iconFillCheckIconCheckedPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--unchecked path {`;\r\n\r\n  const iconFillCheckIconUncheckedPath = getResponsiveSetting(settings, 'unchecked_icon_color');\r\n\r\n  if (iconFillCheckIconUncheckedPath) {\r\n    styles += colorPropertyStyled(iconFillCheckIconUncheckedPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--unchecked:hover path {`;\r\n\r\n  const iconFillCheckIconUncheckedPathHover = getResponsiveSetting(settings, 'unchecked_icon_color', ':hover');\r\n\r\n  if (iconFillCheckIconUncheckedPathHover) {\r\n    styles += colorPropertyStyled(iconFillCheckIconUncheckedPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--indeterminate path {`;\r\n\r\n  const iconFillCheckIconIndeterminatePath = getResponsiveSetting(settings, 'indeterminate_icon_color');\r\n\r\n  if (iconFillCheckIconIndeterminatePath) {\r\n    styles += colorPropertyStyled(iconFillCheckIconIndeterminatePath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--indeterminate:hover path {`;\r\n\r\n  const iconFillCheckIconIndeterminatePathHover = getResponsiveSetting(settings, 'indeterminate_icon_color', ':hover');\r\n\r\n  if (iconFillCheckIconIndeterminatePathHover) {\r\n    styles += colorPropertyStyled(iconFillCheckIconIndeterminatePathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table__resizer {`;\r\n\r\n  const sliderSizeTableResizer = getResponsiveSetting(settings, 'resize_slider_size');\r\n\r\n  if (sliderSizeTableResizer) {\r\n    styles += sizeStyled(sliderSizeTableResizer, 'width');\r\n  }\r\n\r\n  const backgroundColorTableResizer = getResponsiveSetting(settings, 'resize_slider_color');\r\n\r\n  if (backgroundColorTableResizer) {\r\n    styles += colorPropertyStyled(backgroundColorTableResizer, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table__resizer:hover {`;\r\n\r\n  const sliderSizeTableResizerHover = getResponsiveSetting(settings, 'resize_slider_size', ':hover');\r\n\r\n  if (sliderSizeTableResizerHover) {\r\n    styles += sizeStyled(sliderSizeTableResizerHover, 'width');\r\n  }\r\n\r\n  const backgroundColorTableResizerHover = getResponsiveSetting(settings, 'resize_slider_color', ':hover');\r\n\r\n  if (backgroundColorTableResizerHover) {\r\n    styles += colorPropertyStyled(backgroundColorTableResizerHover, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table__resizer.altrp-table__resizer_resizing {`;\r\n\r\n  const backgroundColorTableResizerResizing = getResponsiveSetting(settings, 'active_resize_slider_color');\r\n\r\n  if (backgroundColorTableResizerResizing) {\r\n    styles += colorPropertyStyled(backgroundColorTableResizerResizing, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table__resizer.altrp-table__resizer_resizing:hover {`;\r\n\r\n  const backgroundColorTableResizerResizingHover = getResponsiveSetting(settings, 'active_resize_slider_color', ':hover');\r\n\r\n  if (backgroundColorTableResizerResizingHover) {\r\n    styles += colorPropertyStyled(backgroundColorTableResizerResizingHover, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-image {`;\r\n\r\n  const filtersImage = getResponsiveSetting(settings, 'filter_style_border_shadow');\r\n\r\n  if (filtersImage) {\r\n    styles += filtersControllerToStyles(filtersImage);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-image:hover {`;\r\n\r\n  const filtersImageHover = getResponsiveSetting(settings, 'filter_style_border_shadow', ':hover');\r\n\r\n  if (filtersImageHover) {\r\n    styles += filtersControllerToStyles(filtersImageHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  return styles;\r\n}\r\n","import {getResponsiveSetting} from '../../helpers';\r\nimport {\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  sizeStyled,\r\n  shadowControllerToStyles, sliderStyled, colorStyled,\r\n} from \"../../helpers/styles\";\r\n\r\nconst getTabsStyles = (settings, id) => {\r\n  let styles = \"\";\r\n\r\n  let justifyContent, backgroundColor;\r\n  let color, boxShadow, padding, borderType, borderWidth, borderColor, borderRadius, typographic;\r\n  let fill, background, fontSize, marginBottom, marginRight, marginLeft, marginTop;\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-tabs .bp3-tab-list  {`;\r\n\r\n  //Получаем значения justify-content из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    justifyContent = getResponsiveSetting(settings, 'alignment_tabs');\r\n  }\r\n\r\n  if (justifyContent) {\r\n    styles += simplePropertyStyled(justifyContent, 'justify-content');\r\n  }\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_tab_style');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tabs .bp3-tab-list:hover {`;\r\n\r\n  //Получаем значения justify-content из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    justifyContent = getResponsiveSetting(settings, 'alignment_tabs', ':hover');\r\n  }\r\n\r\n  if (justifyContent) {\r\n    styles += simplePropertyStyled(justifyContent, 'justify-content');\r\n  }\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_tab_style', ':hover');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tabs.altrp-tabs .bp3-tab p {`;\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'background_text_color_tab_style');\r\n  }\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, 'color');\r\n  }\r\n  styles += \"}\";\r\n\r\n  styles += `${parentClass} .altrp-tabs.altrp-tabs-without-animation.altrp-tabs-horizontal .bp3-tab[aria-selected=\"true\"] {`;\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'indicator_color');\r\n  }\r\n\r\n  if (color) {\r\n    if (color) {\r\n      if (color.color) {\r\n        styles += `box-shadow: inset 0 -3px 0 ${color.color};`;\r\n      }\r\n    }\r\n  }\r\n  styles += \"}\";\r\n\r\n  styles += `${parentClass} .altrp-tabs.altrp-tabs-without-animation.altrp-tabs-vertical .bp3-tab[aria-selected=\"true\"] {`;\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'indicator_color');\r\n  }\r\n\r\n  if (color) {\r\n    if (color) {\r\n      if (color.color) {\r\n        styles += colorStyled(color, \"background-color\");\r\n      }\r\n    }\r\n  }\r\n  styles += \"}\";\r\n\r\n  styles += `${parentClass} .altrp-tabs.altrp-tabs .bp3-tab.active p {`;\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'background_text_color_tab_style', \".active\");\r\n  }\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, 'color');\r\n  }\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `${parentClass} .altrp-tabs  .bp3-tab.bp3-tab.bp3-tab {`;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_type_tab_style');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadow = getResponsiveSetting(settings, 'box_shadow_tab_style');\r\n  }\r\n\r\n  if (boxShadow) {\r\n    styles += shadowControllerToStyles(boxShadow);\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'padding_tab_style');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type_tab_style');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width_tab_style');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color_tab_style');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius_tab_style');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения typographic из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    typographic = getResponsiveSetting(settings, 'typographic_tab_style');\r\n  }\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tabs  .bp3-tab.bp3-tab.bp3-tab.active {`;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_type_tab_style', \".active\");\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadow = getResponsiveSetting(settings, 'box_shadow_tab_style', \".active\");\r\n  }\r\n\r\n  if (boxShadow) {\r\n    styles += shadowControllerToStyles(boxShadow);\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'padding_tab_style', \".active\");\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type_tab_style', \".active\");\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width_tab_style', \".active\");\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color_tab_style', \".active\");\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius_tab_style', \".active\");\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения typographic из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    typographic = getResponsiveSetting(settings, 'typographic_tab_style', \".active\");\r\n  }\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tabs.altrp-tabs  .bp3-tab:hover p {`;\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'background_text_color_tab_style', \":hover\");\r\n  }\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, 'color');\r\n  }\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `${parentClass} .altrp-tabs .bp3-tab.bp3-tab.bp3-tab:hover {`;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_type_tab_style', ':hover');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadow = getResponsiveSetting(settings, 'box_shadow_tab_style', ':hover');\r\n  }\r\n\r\n  if (boxShadow) {\r\n    styles += shadowControllerToStyles(boxShadow);\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'padding_tab_style', ':hover');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type_tab_style', ':hover');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width_tab_style', ':hover');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color_tab_style', ':hover');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius_tab_style', ':hover');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения typographic из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    typographic = getResponsiveSetting(settings, 'typographic_tab_style', ':hover');\r\n  }\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-content {`;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_content_style');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'padding_content_style');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type_content_style');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width_content_style');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color_content_style');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius_content_style');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += simplePropertyStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-content:hover {`;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_content_style', ':hover');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'padding_content_style', ':hover');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type_content_style', ':hover');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width_content_style', ':hover');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color_content_style', ':hover');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius_content_style', ':hover');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += simplePropertyStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-content div {`;\r\n\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'text_color_content_style');\r\n  }\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, 'color');\r\n  }\r\n\r\n  //Получаем значения typographic из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    typographic = getResponsiveSetting(settings, 'typographic_content_style');\r\n  }\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-content div:hover {`;\r\n\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'text_color_content_style', ':hover');\r\n  }\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, 'color');\r\n  }\r\n\r\n  //Получаем значения typographic из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    typographic = getResponsiveSetting(settings, 'typographic_content_style', ':hover');\r\n  }\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  const i_size = getResponsiveSetting(settings, 'i_size')\r\n  if(i_size){\r\n    styles += `${parentClass} .altrp-tab-btn-icon img, ${parentClass} .altrp-tab-btn-icon svg{`;\r\n\r\n    styles += `width:${sliderStyled(i_size)};height:${sliderStyled(i_size)};`\r\n\r\n    styles += \"} \";\r\n\r\n  }\r\n  styles += `${parentClass} .altrp-tab-btn-icon svg path {`;\r\n\r\n  //Получаем значения fill из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    fill = getResponsiveSetting(settings, 'color_icon_style');\r\n  }\r\n\r\n  if (fill) {\r\n    styles += colorPropertyStyled(fill, 'fill');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-btn-icon:hover svg path {`;\r\n\r\n  //Получаем значения fill из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    fill = getResponsiveSetting(settings, 'color_icon_style', ':hover');\r\n  }\r\n\r\n  if (fill) {\r\n    styles += colorPropertyStyled(fill, 'fill');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n\r\n  styles += `${parentClass} .altrp-tab-btn-column {`;\r\n\r\n  //Получаем значения margin-right в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginRight = getResponsiveSetting(settings, 'spacing_column_tabs');\r\n  }\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, 'margin-right');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-btn-column:hover {`;\r\n\r\n  //Получаем значения margin-right в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginRight = getResponsiveSetting(settings, 'spacing_column_tabs', ':hover');\r\n  }\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, 'margin-right');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-tab-btn-row {`;\r\n\r\n  //Получаем значения margin-bottom в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginBottom = getResponsiveSetting(settings, 'spacing_column_tabs');\r\n  }\r\n\r\n  if (marginBottom) {\r\n    styles += sizeStyled(marginBottom, 'margin-bottom');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-btn-row:hover {`;\r\n\r\n  //Получаем значения margin-bottom в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginBottom = getResponsiveSetting(settings, 'spacing_column_tabs', ':hover');\r\n  }\r\n\r\n  if (marginBottom) {\r\n    styles += sizeStyled(marginBottom, 'margin-bottom');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-vertical.bp3-tab-panel {`;\r\n\r\n  //Получаем значения margin-right в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginRight = getResponsiveSetting(settings, 'spacing_content_tabs');\r\n  }\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, 'margin-left');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-tab-vertical.bp3-tab {`;\r\n\r\n  //Получаем значения margin-right в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginRight = getResponsiveSetting(settings, 'spacing_column_tabs');\r\n  }\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, 'margin-bottom');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-tab-horizontal.bp3-tab-panel {`;\r\n\r\n  //Получаем значения margin-right в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginRight = getResponsiveSetting(settings, 'spacing_content_tabs');\r\n  }\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, 'margin-top');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-tab-horizontal.bp3-tab {`;\r\n\r\n  //Получаем значения margin-right в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginRight = getResponsiveSetting(settings, 'spacing_column_tabs');\r\n  }\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, 'margin-right');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .bp3-tab-indicator-wrapper {`;\r\n\r\n  styles += `} `;\r\n\r\n\r\n  styles += `${parentClass} .bp3-tab-indicator.bp3-tab-indicator.bp3-tab-indicator.bp3-tab-indicator {`;\r\n\r\n  let indicatorColor = getResponsiveSetting(settings, 'indicator_color')\r\n\r\n  if (indicatorColor && indicatorColor.color) {\r\n    styles += colorPropertyStyled(indicatorColor, \"background-color\",);\r\n  }\r\n  styles += `} `;\r\n\r\n  if (indicatorColor && indicatorColor.color) {\r\n    styles += `${parentClass} .altrp-tabs-horizontal .bp3-tab-indicator-wrapper ~ .altrp-tab-btn.active {`;\r\n    styles += `box-shadow: inset 0 -3px ${indicatorColor.color};`\r\n    styles += `} `;\r\n  }\r\n  styles += `${parentClass} .altrp-tab {`;\r\n\r\n  let contentBackgroundColor,\r\n    contentPadding,\r\n    contentBorderType,\r\n    contentBorderWidth,\r\n    contentBorderColor,\r\n    contentBorderRadius;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    contentBackgroundColor = getResponsiveSetting(settings, 'background_content_style');\r\n  }\r\n\r\n  if (contentBackgroundColor) {\r\n    styles += colorPropertyStyled(contentBackgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    contentPadding = getResponsiveSetting(settings, 'padding_content_style');\r\n  }\r\n\r\n  if (contentPadding) {\r\n    styles += dimensionsControllerToStyles(contentPadding);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    contentBorderType = getResponsiveSetting(settings, 'border_type_content_style');\r\n  }\r\n\r\n  if (contentBorderType) {\r\n    styles += simplePropertyStyled(contentBorderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    contentBorderWidth = getResponsiveSetting(settings, 'border_width_content_style');\r\n  }\r\n\r\n  if (contentBorderWidth) {\r\n    styles += borderWidthStyled(contentBorderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    contentBorderColor = getResponsiveSetting(settings, 'border_color_content_style');\r\n  }\r\n\r\n  if (contentBorderColor) {\r\n    styles += colorPropertyStyled(contentBorderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    contentBorderRadius = getResponsiveSetting(settings, 'border_radius_content_style');\r\n  }\r\n\r\n  if (contentBorderRadius) {\r\n    styles += `border-radius:${sliderStyled(contentBorderRadius)}`;\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  return styles;\r\n}\r\n\r\nexport default getTabsStyles;\r\n","import {\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  simplePropertyStyled,\r\n  colorPropertyStyled,\r\n  borderWidthStyled,\r\n  borderRadiusStyled,\r\n  columnGapStyled,\r\n  opacityStyled,\r\n} from '../../helpers/styles';\r\nimport { getResponsiveSetting } from '../../helpers';\r\n\r\n/**\r\n * Преобразует объект стилей, который задается в виджете Text в строку css для вставки в GlobalStyles\r\n * @param {{}} settings \r\n * @param {string} id \r\n * @return {string}\r\n */\r\n\r\nexport function getTextStyles(settings, id) {\r\n  let styles = '';\r\n\r\n  if (settings === undefined) {\r\n    return styles;\r\n  }\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-text {`;\r\n\r\n  const columnCount = getResponsiveSetting(settings, 'text_style_column-count');\r\n\r\n  if (columnCount) {\r\n    styles += simplePropertyStyled(columnCount, 'column-count');\r\n  }\r\n\r\n  const columnGap = getResponsiveSetting(settings, 'text_style_column-gap');\r\n\r\n  if (columnGap) {\r\n    styles += columnGapStyled(columnGap);\r\n  }\r\n\r\n  const padding = getResponsiveSetting(settings, 'text_style_position_padding');\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  const margin = getResponsiveSetting(settings, 'text_style_position_margin');\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, 'margin');\r\n  }\r\n\r\n  const zIndex = getResponsiveSetting(settings, 'text_position_z_index');\r\n\r\n  if (zIndex) {\r\n    styles += simplePropertyStyled(zIndex, 'z-index');\r\n  }\r\n\r\n  const backgroundColor = getResponsiveSetting(settings, 'text_style_background_color');\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  const opacity = getResponsiveSetting(settings, 'text_style_background_opacity');\r\n\r\n  if (opacity) {\r\n    styles += opacityStyled(opacity, 'opacity');\r\n  }\r\n\r\n  const typographic = getResponsiveSetting(settings, 'text_style_font_typographic');\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  const color = getResponsiveSetting(settings, 'text_style_font_color');\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, 'color');\r\n  }\r\n\r\n  const borderStyle = getResponsiveSetting(settings, 'text_style_border_type');\r\n\r\n  if (borderStyle) {\r\n    styles += simplePropertyStyled(borderStyle, 'border-style');\r\n  }\r\n\r\n  const borderWidth = getResponsiveSetting(settings, 'text_style_border_width');\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  const borderColor = getResponsiveSetting(settings, 'text_style_border_color');\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  const borderRadius = getResponsiveSetting(settings, 'text_style_border_radius');\r\n\r\n  if (borderRadius) {\r\n    styles += borderRadiusStyled(borderRadius);\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-text:hover {`;\r\n\r\n  const columnCountHover = getResponsiveSetting(settings, 'text_style_column-count', ':hover');\r\n\r\n  if (columnCountHover) {\r\n    styles += simplePropertyStyled(columnCountHover, 'column-count');\r\n  }\r\n\r\n  const paddingHover = getResponsiveSetting(settings, 'text_style_position_padding', ':hover');\r\n\r\n  if (paddingHover) {\r\n    styles += dimensionsControllerToStyles(paddingHover);\r\n  }\r\n\r\n  const marginHover = getResponsiveSetting(settings, 'text_style_position_margin', ':hover');\r\n\r\n  if (marginHover) {\r\n    styles += dimensionsControllerToStyles(marginHover, 'margin');\r\n  }\r\n\r\n  const zIndexHover = getResponsiveSetting(settings, 'text_position_z_index', ':hover');\r\n\r\n  if (zIndexHover) {\r\n    styles += simplePropertyStyled(zIndexHover, 'z-index');\r\n  }\r\n\r\n  const backgroundColorHover = getResponsiveSetting(settings, 'text_style_background_color', ':hover');\r\n\r\n  if (backgroundColorHover) {\r\n    styles += colorPropertyStyled(backgroundColorHover, 'background-color');\r\n  }\r\n\r\n  const opacityHover = getResponsiveSetting(settings, 'text_style_background_opacity', ':hover');\r\n\r\n  if (opacityHover) {\r\n    styles += opacityStyled(opacityHover, 'opacity');\r\n  }\r\n\r\n  const typographicHover = getResponsiveSetting(settings, 'text_style_font_typographic', ':hover');\r\n\r\n  if (typographicHover) {\r\n    styles += typographicControllerToStyles(typographicHover);\r\n  }\r\n\r\n  const colorHover = getResponsiveSetting(settings, 'text_style_font_color', ':hover');\r\n\r\n  if (colorHover) {\r\n    styles += colorPropertyStyled(colorHover, 'color');\r\n  }\r\n\r\n  const borderStyleHover = getResponsiveSetting(settings, 'text_style_border_type', ':hover');\r\n\r\n  if (borderStyleHover) {\r\n    styles += simplePropertyStyled(borderStyleHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthHover = getResponsiveSetting(settings, 'text_style_border_width', ':hover');\r\n\r\n  if (borderWidthHover) {\r\n    styles += borderWidthStyled(borderWidthHover);\r\n  }\r\n\r\n  const borderColorHover = getResponsiveSetting(settings, 'text_style_border_color', ':hover');\r\n\r\n  if (borderColorHover) {\r\n    styles += colorPropertyStyled(borderColorHover, 'border-color');\r\n  }\r\n\r\n  const borderRadiusHover = getResponsiveSetting(settings, 'text_style_border_radius', ':hover');\r\n\r\n  if (borderRadiusHover) {\r\n    styles += borderRadiusStyled(borderRadiusHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-text img {`;\r\n\r\n  styles += `max-width: 100%; `\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .ck.ck-editor__editable_inline {`;\r\n\r\n  styles += `padding: 0; `\r\n\r\n  styles += `} `;\r\n\r\n  return styles;\r\n}","const FRONT_DEFAULT_AREAS = [\r\n  'content', 'footer', 'header', 'popups',\r\n];\r\nexport default  function getRouteStyles(areas){\r\n  if(! areas || !_.isArray(areas)){\r\n    return '';\r\n  }\r\n  let styles = `\r\n.route-content {\r\n  min-height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n}`\r\n\r\n  areas = areas.filter(area=>FRONT_DEFAULT_AREAS.indexOf(area.id) === -1)\r\n  if(! areas.length){\r\n    return styles;\r\n  }\r\n  styles += `.route-content.route-content{`;\r\n\r\n  styles += 'display:grid;grid-template-rows:auto 1fr auto;'\r\n  let columnsGrid = '';\r\n  let rightSidebar = areas.find(area=>area.settings.area_type === 'sidebar'\r\n    && area.settings.sidebar_location === 'right');\r\n  let leftSidebar = areas.find(area=>area.settings.area_type === 'sidebar'\r\n    && area.settings.sidebar_location === 'left');\r\n  columnsGrid += leftSidebar ? `${leftSidebar.settings.sidebar_width}` : '0px';\r\n  columnsGrid += ` calc(100% - ${leftSidebar ? `${leftSidebar.settings.sidebar_width}` : '0px'} - ${rightSidebar ? `${rightSidebar.settings.sidebar_width}` : '0px'}) `;\r\n  columnsGrid += rightSidebar ? `${rightSidebar.settings.sidebar_width}` : '0px';\r\n\r\n  let contentRow = '';\r\n  contentRow = leftSidebar ? `left-sidebar content` : `content content`;\r\n  contentRow += rightSidebar ? ` right-sidebar` : ` content`;\r\n\r\n  styles += `grid-template-columns:${columnsGrid};grid-template-areas:\r\n    '${_.get(leftSidebar, 'settings.sidebar_type') === 'app_sidebar' ? 'left-sidebar' : 'header'} header ${_.get(rightSidebar, 'settings.sidebar_type') === 'app_sidebar' ? 'right-sidebar' : 'header'}'\r\n    '${contentRow}'\r\n    '${_.get(leftSidebar, 'settings.sidebar_type') === 'app_sidebar' ? 'left-sidebar' : 'footer'} footer ${_.get(rightSidebar, 'settings.sidebar_type') === 'app_sidebar' ? 'right-sidebar' :'footer'}';\r\n    `\r\n\r\n  styles += '}'\r\n  styles += '& .app-area_sidebar-location-left{grid-area:left-sidebar;overflow:hidden;}'\r\n  styles += '& .app-area_sidebar-location-right{grid-area:right-sidebar;overflow:hidden;}'\r\n  styles += '& .app-area_header{grid-area:header;}'\r\n  styles += '& .app-area_footer{grid-area:footer;}'\r\n  styles += '& .app-area_content{grid-area:content;}'\r\n  styles += '& .altrp-section.altrp-section--full-width,& .altrp-section.altrp-section--boxed{max-width:100%;} & .sections-wrapper{max-width: 100%;width: 100%;}'\r\n  if(rightSidebar){\r\n    styles += rightSidebar.getCustomCSS();\r\n    if(rightSidebar.getSetting('sidebar_fixed')){\r\n      styles += `& .app-area_sidebar-location-right .sections-wrapper.sections-wrapper.sections-wrapper{overflow:hidden;position:fixed;top:0;right:0;width:${rightSidebar.getSetting('sidebar_width', '0px')};}`\r\n    }\r\n  }\r\n  if(leftSidebar){\r\n    styles += leftSidebar.getCustomCSS();\r\n    if(leftSidebar.getSetting('sidebar_fixed')){\r\n      styles += `& .app-area_sidebar-location-left .sections-wrapper.sections-wrapper.sections-wrapper{overflow:hidden;position:fixed;top:0;left:0;width:${leftSidebar.getSetting('sidebar_width', '0px')};}`\r\n    }\r\n  }\r\n  styles += `.app-area > .sections-wrapper.sections-wrapper{width:100%;}`\r\n  return  styles;\r\n}\r\n"],"sourceRoot":""}