{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/classes/AltrpModel.js","webpack:///./resources/modules/editor/src/js/components/template-loader/TemplateLoader.js","webpack:///./resources/modules/editor/src/js/components/altrp-popper/AltrpPopper.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/DropbarComponent.js","webpack:///./resources/modules/editor/src/js/components/altrp-dropbar/AltrpDropbar.js","webpack:///./resources/modules/editor/src/js/components/widgets/DropbarWidget.js","webpack:///./resources/modules/front-app/src/js/helpers/react.js"],"names":["AltrpModel","data","this","cloneDeep","clone","isEmpty","name","defaultValue","get","has","value","getData","set","unset","window","TemplateLoader","props","state","templateComponent","templateLoader","default","frontElementsFabric","ElementWrapper","setState","loadTemplate","templateId","loadParsedTemplate","cloneElement","cardModel","setCardModel","React","createElement","componentClass","children","element","_","isFunction","onLoad","prevProps","prevState","className","Component","AltrpPopper","object","useRef","useState","settings","updateSettings","setUpdateSettings","getTargetRef","setGetTargetRef","prevUpdateToken","usePrevious","updateToken","body","document","editor","useMemo","isEditor","getElementById","contentWindow","placement","variantPlace","indexOf","console","log","usePopper","target","current","modifiers","options","offset","styles","attributes","forceUpdate","update","useEffect","Event","bubbles","cancelable","Object","keys","length","JSON","stringify","portal","ReactDOM","ref","style","popper","styled","div","styledString","show","undefined","bind","leaveHide","enterShow","show_delay_dropbar_options","size","hide_delay_dropbar_options","setTimeout","e","currentTarget","showDelay","snapshot","mainClass","type","type_dropbar_section","content_dropbar_section","getContent","onMouseEnter","mode_dropbar_options","onMouseLeave","onClick","position_dropbar_options","offset_dropbar_options","width","width_dropbar_options","DropbarComponent","getSettings","elemenentId","dangerouslySetInnerHTML","__html","Math","random","template_dropbar_section","getCurrentModel","globalDefaults","push","pending","component","elementDecorator","baseRender","render","unregisterWidgetActions","getId","persist","preventDefault","getResponsiveSetting","stopPropagation","actionsManager","callAllWidgetActions","getIdForAction","getForms","forEach","form","submit","getModelId","res","success","redirect_to_prev_page","redirect_after","history","back","parseURLTemplate","alert","message","error","href","replace","location","origin","pathname","elementId","getHTMLElementById","scrollToElement","mainScrollbars","toggleTrigger","includes","IDs","split","elementsToPrint","trim","getComponentByElementId","getStylesHTMLElement","stylesElement","head","printElements","buttonText","id","customClasses","background_image","buttonMedia","dropbarDelay","showIcon","url","classes","isDisabled","buttonTemplate","join","isSSR","renderAssetIcon","AltrpDropbar","isClassComponent","prototype","isReactComponent"],"mappings":"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","file":"DropbarWidget.14794a4222251edd8159.bundle.js","sourcesContent":["/**\r\n * Имеет интерфейс для доступы к свойствам data (любой вложенности)\r\n * @class AltrpModel\r\n */\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport get from 'lodash.get';\r\nimport set from 'lodash.set';\r\nimport has from 'lodash.has';\r\nimport unset from 'lodash.unset';\r\nimport isEmpty from 'lodash.isempty';\r\n// import {cloneDeep, get, set, has, unset, isString, isEmpty} from \"lodash\";\r\n\r\nclass AltrpModel {\r\n  constructor(data = {}) {\r\n    this.data = cloneDeep(data);\r\n  }\r\n\r\n  /**\r\n   * Возваращает объект данных\r\n   * @params {boolean} clone - клонировать или ссылку на данные\r\n   * @return {{}}\r\n   */\r\n  getData(clone = true) {\r\n    if(clone){\r\n      return cloneDeep(this.data);\r\n    }\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Пустой ли объект\r\n   */\r\n  isEmpty(){\r\n    return isEmpty(this.data);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  getProperty(name, defaultValue = '') {\r\n    return get(this.data, name, defaultValue);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  hasProperty(name, defaultValue = '') {\r\n    return has(this.data, name);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {{}}\r\n   */\r\n  setProperty(name, value = '') {\r\n    if(value instanceof AltrpModel){\r\n      value = value.getData(false);\r\n    }\r\n    return set(this.data, name, value);\r\n  }\r\n  /**\r\n   * Удаляет свойства name\r\n   * @params {string} name\r\n   * @return {*}\r\n   */\r\n  unsetProperty(name) {\r\n    return unset(this.data, name);\r\n  }\r\n}\r\nwindow.AltrpModel = AltrpModel;\r\nexport default AltrpModel\r\n","import AltrpModel from \"../../classes/AltrpModel\";\r\n\r\nclass TemplateLoader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      templateComponent: null,\r\n    };\r\n  }\r\n  /**\r\n   * Загрузим необходимые модули\r\n   * @return {Promise<void>}\r\n   */\r\n  async componentDidMount() {\r\n    const templateLoader = (await import(/* webpackChunkName: 'TemplateLoader' */\"../../classes/modules/TemplateLoader\")).default;\r\n    const frontElementsFabric = (await import( /* webpackChunkName: 'FrontElementsFabric' */\"../../../../../front-app/src/js/classes/FrontElementsFabric\")).default;\r\n    const ElementWrapper = (await import( /* webpackChunkName: 'ElementWrapper' */\"../../../../../front-app/src/js/components/ElementWrapper\")).default;\r\n    this.setState(state => ({...state, templateLoader, frontElementsFabric, ElementWrapper}), this.loadTemplate);\r\n  }\r\n  /**\r\n   * Загрузим шаблон\r\n   * @return {Promise<void>}\r\n   */\r\n  async loadTemplate(){\r\n    let templateComponent = null;\r\n    const {templateLoader, frontElementsFabric} = this.state;\r\n    if(this.props.templateId){\r\n      templateComponent = await templateLoader.loadParsedTemplate(this.props.templateId);\r\n      templateComponent = frontElementsFabric.cloneElement(templateComponent);\r\n      if(this.props.cardModel instanceof AltrpModel){\r\n        templateComponent.setCardModel(this.props.cardModel);\r\n      }\r\n      templateComponent = React.createElement(templateComponent.componentClass,\r\n          {...this.props,\r\n            children: templateComponent.children,\r\n            element: templateComponent,\r\n            ElementWrapper: this.state.ElementWrapper\r\n          });\r\n    }\r\n\r\n\r\n    this.setState(state => ({...state, templateComponent}), async () => {\r\n      if(_.isFunction(this.props.onLoad)) {\r\n        // await delay(50);\r\n        this.props.onLoad();\r\n      };\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Обновление компонента\r\n   * @param {{}} prevProps\r\n   * @param {{}} prevState\r\n   */\r\n  componentDidUpdate(prevProps, prevState) {\r\n\r\n    /**\r\n     * Проверим обновилось ли ИД шаблона\r\n     */\r\n    if(this.props.templateId !== prevProps.templateId){\r\n      this.loadTemplate();\r\n    }\r\n  }\r\n  render() {\r\n    return <div className=\"inner-template\">{this.state.templateComponent}</div>;\r\n  }\r\n}\r\n\r\nexport default TemplateLoader\r\n","import React, {useEffect, useRef, useState, useMemo} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {usePopper} from \"react-popper\";\r\nimport {isEditor} from \"../../../../../front-app/src/js/helpers\";\r\nimport { usePrevious } from \"../../../../../front-app/src/js/helpers/react\";\r\n\r\nexport default function AltrpPopper(props) {\r\n  const object = useRef();\r\n  const [updateSettings, setUpdateSettings] = useState(props.settings.updateSettings || {});\r\n  const [getTargetRef, setGetTargetRef] = useState(false);\r\n  const prevUpdateToken = usePrevious(props.updateToken);\r\n\r\n  let body = document.body;\r\n\r\n  if(!props.editor) {\r\n    body = useMemo(() => {\r\n      return isEditor() ?\r\n        document.getElementById(\"editorContent\").contentWindow.document.body\r\n        :\r\n        document.body\r\n    });\r\n  }\r\n\r\n  let placement = props.settings.placement;\r\n  const variantPlace = [\r\n    \"bottom-start\",\r\n    \"bottom\",\r\n    \"bottom-end\",\r\n    \"top-start\",\r\n    \"top\",\r\n    \"top-end\",\r\n    \"left-start\",\r\n    \"left\",\r\n    \"left-end\",\r\n    \"right-start\",\r\n    \"right\",\r\n    \"right-end\"\r\n  ];\r\n\r\n  if(variantPlace.indexOf(placement) === -1) {\r\n    console.log(placement)\r\n    placement = variantPlace[0]\r\n  }\r\n  const {styles, attributes, forceUpdate, update} = usePopper(props.target.current, object.current, {\r\n    placement,\r\n    modifiers: [\r\n      {\r\n        name: \"offset\",\r\n        options: {\r\n          offset: props.settings.offset\r\n        }\r\n      },\r\n    ]\r\n  });\r\n\r\n  useEffect(() => {\r\n    if(props.updateToken !== prevUpdateToken) {\r\n      forceUpdate();\r\n      const event = new Event(\"resize\", {bubbles : true, cancelable : true});\r\n      if(isEditor()) {\r\n        // altrpEditorContent.editorWindow.current.dispatchEvent(event)\r\n        update();\r\n      } else {\r\n        console.log();\r\n        // window.dispatchEvent(event)\r\n        update();\r\n      }\r\n    }\r\n\r\n    if (Object.keys(updateSettings).length !== 0) {\r\n      if (JSON.stringify(updateSettings) !== JSON.stringify(props.settings.updateSettings)) {\r\n        setUpdateSettings(props.settings.updateSettings);\r\n        forceUpdate()\r\n      }\r\n    }\r\n\r\n    if(!getTargetRef && props.target.current) {\r\n      console.log('aann')\r\n      setGetTargetRef(true)\r\n    }\r\n\r\n\r\n  }, [props.children, placement, props.target, props.updateToken]);\r\n\r\n  if(props.portal) {\r\n    return ReactDOM.createPortal((\r\n      React.cloneElement(props.children, {\r\n        ref: object,\r\n        style: styles.popper,\r\n        ...attributes.popper,\r\n      })\r\n    ),\r\n      body\r\n    )\r\n  }\r\n  return React.cloneElement(props.children, {\r\n    ref: object,\r\n    style: styles.popper,\r\n    ...attributes.popper,\r\n  })\r\n}","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n\r\n\r\nexport default styled.div`\r\n  ${({settings}) => {\r\n  const styles = [\r\n    \"&.altrp-dropbar-btn-containter\",\r\n      [\"width\", \"width_dropbar_options\", \"slider\"],\r\n\r\n      [\"padding\", \"padding_dropbar_content_style\", \"dimensions\"],\r\n      [\"background-color\", \"background_dropbar_content_style\", \"color\"],\r\n      [\"border-style\", \"border_style_dropbar_content_style\"],\r\n      [\"border-width\", \"border_width_dropbar_content_style\", \"dimensions\"],\r\n      [\"border-color\", \"border_color_dropbar_content_style\", \"color\"],\r\n      [\"border-radius\", \"border_radius_dropbar_content_style\", \"dimensions\"],\r\n      [\"box-shadow\", \"box_shadow_dropbar_content_style\", \"shadow\"],\r\n    \"}\",\r\n\r\n    \"altrp-dropbar-btn-content\",\r\n      [\"color\", \"text_color_dropbar_content_style\", \"color\"],\r\n      [\"\", \"typographic_text_dropbar_content_style\", \"typographic\"],\r\n    \"}\",\r\n\r\n    \"&:hover.altrp-dropbar-btn-containter\",\r\n      [\"background-color\", \"background_dropbar_content_style\", \"color\", \":hover\"],\r\n      [\"border-style\", \"border_style_dropbar_content_style\", \"\", \":hover\"],\r\n      [\"border-width\", \"border_width_dropbar_content_style\", \"dimensions\", \":hover\"],\r\n      [\"border-color\", \"border_color_dropbar_content_style\", \"color\", \":hover\"],\r\n      [\"border-radius\", \"border_radius_dropbar_content_style\", \"dimensions\", \":hover\"],\r\n      [\"box-shadow\", \"box_shadow_dropbar_content_style\", \"shadow\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"&:hover .altrp-dropbar-btn-content\",\r\n      [\"color\", \"text_color_dropbar_content_style\", \"color\", \":hover\"],\r\n      [\"\", \"typographic_text_dropbar_content_style\", \"typographic\", \":hover\"],\r\n    \"}\"\r\n  ];\r\n  return styledString(styles, settings)\r\n}}\r\n`\r\n","import React, {Component} from \"react\";\r\nimport AltrpPopper from \"../altrp-popper/AltrpPopper\";\r\nimport TemplateLoader from \"../template-loader/TemplateLoader\";\r\nimport DropbarComponent from \"../widgets/styled-components/DropbarComponent\";\r\n\r\nclass Dropbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      show: false,\r\n      updateToken: undefined\r\n    };\r\n\r\n    this.show = this.show.bind(this);\r\n    this.leaveHide = this.leaveHide.bind(this);\r\n    this.enterShow = this.enterShow.bind(this);\r\n\r\n    this.children = React.createRef();\r\n  };\r\n\r\n  show() {\r\n    if(this.props.settings.show_delay_dropbar_options.size || this.props.settings.hide_delay_dropbar_options.size) {\r\n      if(!this.state.show) {\r\n        setTimeout(() => {\r\n          this.setState((state) => ({ show: !state.show }));\r\n        }, this.props.settings.show_delay_dropbar_options.size);\r\n      } else {\r\n        setTimeout(() => {\r\n          this.setState((state) => ({ show: !state.show }));\r\n        }, this.props.settings.hide_delay_dropbar_options.size);\r\n      }\r\n    } else {\r\n      this.setState((state) => ({ show: !state.show }));\r\n    };\r\n  };\r\n\r\n  leaveHide() {\r\n\r\n    if(this.props.settings.hide_delay_dropbar_options.size) {\r\n      setTimeout(() => {\r\n        this.setState({ show: false });\r\n      }, this.props.settings.hide_delay_dropbar_options.size)\r\n    } else {\r\n      this.setState({ show: false });\r\n    };\r\n  };\r\n\r\n  enterShow(e) {\r\n    let current = e.currentTarget;\r\n    if(this.props.showDelay.size && !this.state.show) {\r\n      setTimeout(() => {\r\n        this.setState({ show: true });\r\n      }, this.props.showDelay.size);\r\n    } else {\r\n      this.setState((state) => ({ show: !state.show }));\r\n    };\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if(this.state.show !== prevState.show) {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const children = React.Children.only(this.props.children);\r\n\r\n    let mainClass = \"altrp-dropbar-\" +\r\n      this.props.className;\r\n    let type = this.props.settings.type_dropbar_section || \"text\";\r\n    let content_dropbar_section = this.props.getContent('content_dropbar_section');\r\n    return (\r\n      <div className={\"altrp-dropbar altrp-dropbar-\" + mainClass}>\r\n        <span className={\"altrp-dropbar-children-wrapper \" + mainClass + \"-wrapper\"}\r\n              onMouseEnter={this.props.settings.mode_dropbar_options === \"hover\" ? this.enterShow : null}\r\n              onMouseLeave={this.props.settings.mode_dropbar_options === \"hover\" ? this.leaveHide : null}\r\n        >\r\n          {\r\n            React.cloneElement(children,\r\n              {\r\n                ref: this.children,\r\n                onClick: this.props.settings.mode_dropbar_options === \"click\" ? this.show : null,\r\n                // onMouseEnter: this.props.settings.mode_dropbar_options === \"hover\" ? this.enterShow : null,\r\n                // onMouseLeave: this.props.settings.mode_dropbar_options === \"hover\" ? this.leaveHide : null\r\n              }\r\n              )\r\n          }\r\n\r\n          <AltrpPopper\r\n            target={this.children}\r\n            portal={true}\r\n            updateToken={this.state.updateToken}\r\n            settings={{\r\n              placement: this.props.settings.position_dropbar_options,\r\n              offset: [0, this.props.settings.offset_dropbar_options.size],\r\n              updateSettings: {\r\n                width: this.props.settings.width_dropbar_options\r\n              }\r\n            }}\r\n          >\r\n            <DropbarComponent settings={this.props.element.getSettings()}\r\n              className={\"altrp-dropbar-container \" +\r\n              (` ${this.props.elemenentId}-altrp-dropbar `) +\r\n              mainClass +\r\n              \"-containter\" +\r\n              (this.state.show ? \" altrp-dropbar-container-show\" : \" altrp-dropbar-container-hide\")}\r\n            >\r\n              {\r\n                type === \"text\" ? (\r\n                  React.createElement(\"div\",\r\n                    {\r\n                      className: \"altrp-dropbar-content \" + mainClass + \"-content\",\r\n                      dangerouslySetInnerHTML: {\r\n                        __html: content_dropbar_section || ''\r\n                      },\r\n                    }\r\n                  )\r\n                ) : (\r\n                  <TemplateLoader\r\n                    onLoad={() => {\r\n                      this.setState({ updateToken: Math.random() })\r\n                    }}\r\n                    templateId={this.props.settings.template_dropbar_section}\r\n                    cardModel={this.props.element.getCurrentModel()}\r\n                  />\r\n                )\r\n              }\r\n            </DropbarComponent>\r\n          </AltrpPopper>\r\n        </span>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Dropbar\r\n","import React, {Component, Suspense} from \"react\";\r\nimport {\r\n  getComponentByElementId,\r\n  getHTMLElementById,\r\n  isEditor,\r\n  isSSR,\r\n  parseURLTemplate, printElements,\r\n  renderAssetIcon, scrollToElement\r\n} from \"../../../../../front-app/src/js/helpers\";\r\nimport {Link} from \"react-router-dom\";\r\nimport AltrpDropbar from \"../altrp-dropbar/AltrpDropbar\";\r\n\r\n(window.globalDefaults = window.globalDefaults || []).push(`\r\n  .altrp-btn-wrapper_dropbar.altrp-btn-wrapper {\r\n    align-items: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    & img {\r\n      max-width: 100%;\r\n    }\r\n  }\r\n\r\n  .altrp-btn-wrapper_dropbar .altrp-btn {\r\n    width: auto;\r\n    text-decoration: none;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 6px;\r\n    flex-direction: row;\r\n    background-color: #343B4C;\r\n    color: #FFFFFF;\r\n    padding-top: 20px;\r\n    padding-right: 25px;\r\n    padding-bottom: 20px;\r\n    padding-left: 25px\r\n\r\n    &_gray {\r\n      background-color: #8E94AA;\r\n      color: #fff;\r\n    }\r\n\r\n    &__icon {\r\n      transform: scale(0.6);\r\n    }\r\n\r\n    &-icon {\r\n      display: flex;\r\n      justify-content: center;\r\n    }\r\n\r\n    & svg {\r\n      height: 25px;\r\n      width: 25px;\r\n    }\r\n  }\r\n\r\n  .altrp-dropbar {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: auto;\r\n  }\r\n\r\n  .altrp-dropbar-children-wrapper {\r\n    display: flex;\r\n    position: relative;\r\n  }\r\n\r\n  .altrp-btn-dropbar {\r\n    width: 100%;\r\n  }\r\n\r\n  .altrp-dropbar-container {\r\n    position: absolute;\r\n    color: #666;\r\n    padding: 30px;\r\n    background-color: #f1f3f5;\r\n  }\r\n\r\n  .altrp-dropbar-content {\r\n    user-select: text;\r\n  }\r\n\r\n  .altrp-dropbar-container-hide {\r\n    visibility: hidden;\r\n  }\r\n\r\n  .altrp-dropbar-variant-bottom-center .altrp-dropbar-children-wrapper {\r\n    position: static;\r\n    justify-content: center;\r\n  }\r\n\r\n  .altrp-dropbar-variant-top-center .altrp-dropbar-children-wrapper {\r\n    position: static;\r\n    justify-content: center;\r\n  }\r\n\r\n  .altrp-dropbar-variant-left-center .altrp-dropbar-children-wrapper {\r\n    align-items: center;\r\n  }\r\n\r\n  .altrp-dropbar-variant-right-center .altrp-dropbar-children-wrapper {\r\n    align-items: center;\r\n  }\r\n\r\n  .altrp-dropbar-container {\r\n    z-index: 9999;\r\n  }\r\n`);\r\n\r\n\r\nclass DropbarWidget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      settings: props.element.getSettings(),\r\n      pending: false\r\n    };\r\n    props.element.component = this;\r\n    if (window.elementDecorator) {\r\n      window.elementDecorator(this);\r\n    }\r\n    if(props.baseRender){\r\n      this.render = props.baseRender(this);\r\n    }\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Компонент удаляется со страницы\r\n   */\r\n  async _componentWillUnmount() {\r\n    const actionsManager = (\r\n      await import(\r\n        \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\r\n        )\r\n    ).default;\r\n    actionsManager.unregisterWidgetActions(this.props.element.getId());\r\n  }\r\n\r\n  /**\r\n   * Клик по кнопке\r\n   * @param e\r\n   * @return {Promise<void>}\r\n   */\r\n  async onClick(e) {\r\n    e.persist();\r\n    if (isEditor()) {\r\n      e.preventDefault();\r\n    } else if (this.props.element.getResponsiveSetting(\"actions\", null, []).length) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      const actionsManager = (\r\n        await import(\r\n          \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\r\n          )\r\n      ).default;\r\n      await actionsManager.callAllWidgetActions(\r\n        this.props.element.getIdForAction(),\r\n        'click',\r\n        this.props.element.getSettings(\"actions\", []),\r\n        this.props.element\r\n      );\r\n    }\r\n    if (this.props.element.getForms().length) {\r\n      this.setState(state => ({ ...state, pending: true }));\r\n      this.props.element.getForms().forEach(\r\n        /**\r\n         * @param {AltrpForm} form\r\n         */ async form => {\r\n          try {\r\n            let res = await form.submit(\r\n              this.getModelId(),\r\n              this.props.element.getResponsiveSetting(\"form_confirm\")\r\n            );\r\n            if (res.success) {\r\n              let {\r\n                redirect_to_prev_page,\r\n                redirect_after\r\n              } = this.state.settings;\r\n              if (redirect_to_prev_page) {\r\n                return history.back();\r\n              }\r\n              if (redirect_after) {\r\n                redirect_after = parseURLTemplate(redirect_after, res.data);\r\n                return this.props.history.push(redirect_after);\r\n              }\r\n\r\n              if (this.props.element.getResponsiveSetting(\"text_after\", null,\"\")) {\r\n                alert(this.props.element.getResponsiveSetting(\"text_after\", null, \"\"));\r\n              }\r\n            } else if (res.message) {\r\n              alert(res.message);\r\n            }\r\n            this.setState(state => ({ ...state, pending: false }));\r\n          } catch (e) {\r\n            console.error(e);\r\n            this.setState(state => ({ ...state, pending: false }));\r\n          }\r\n        }\r\n      );\r\n    }\r\n    // else      if (\r\n    //   this.props.element.getSettings(\"popup_trigger_type\") &&\r\n    //   this.props.element.getSettings(\"popup_id\")\r\n    // ) {\r\n    //   this.props.appStore.dispatch(\r\n    //     togglePopup(this.props.element.getSettings(\"popup_id\"))\r\n    //   );\r\n    //   /**\r\n    //    * Проверим надо ли по ID скроллить к элементу\r\n    //    */\r\n    // }\r\n    else if (\r\n      e.target.href &&\r\n      e.target.href\r\n        .replace(window.location.origin + window.location.pathname, \"\")\r\n        .indexOf(\"#\") === 0\r\n    ) {\r\n      let elementId = e.target.href\r\n        .replace(window.location.origin + window.location.pathname, \"\")\r\n        .replace(\"#\", \"\");\r\n      const element = getHTMLElementById(elementId);\r\n      if (element) {\r\n        e.preventDefault();\r\n        scrollToElement(mainScrollbars, element);\r\n      }\r\n    } else if (this.props.element.getResponsiveSetting(\"hide_elements_trigger\")) {\r\n      this.props.toggleTrigger(\r\n        this.props.element.getResponsiveSetting(\"hide_elements_trigger\")\r\n      );\r\n    } else if (\r\n      this.props.element\r\n        .getResponsiveSetting(\"other_action_type\", null,[])\r\n        .includes(\"print_elements\")\r\n    ) {\r\n      let IDs = this.props.element.getResponsiveSetting(\"print_elements_ids\", null,\"\");\r\n      IDs = IDs.split(\",\");\r\n      let elementsToPrint = [];\r\n      IDs.forEach(elementId => {\r\n        if (!elementId || !elementId.trim()) {\r\n          return;\r\n        }\r\n        getHTMLElementById(elementId.trim()) &&\r\n        elementsToPrint.push(getHTMLElementById(elementId));\r\n        if (getComponentByElementId(elementId.trim())?.getStylesHTMLElement) {\r\n          let stylesElement = getComponentByElementId(\r\n            elementId.trim()\r\n          ).getStylesHTMLElement();\r\n          if (stylesElement) {\r\n            elementsToPrint.push(stylesElement);\r\n          }\r\n        }\r\n      });\r\n      if (_.get(window, \"stylesModule.stylesContainer.current\")) {\r\n        elementsToPrint.push(\r\n          _.get(window, \"stylesModule.stylesContainer.current\")\r\n        );\r\n      }\r\n      elementsToPrint.push(document.head);\r\n      printElements(elementsToPrint);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const buttonText = this.props.element.getResponsiveSetting(\"button_text\", \"\", \"\");\r\n    const id = this.props.element.getResponsiveSetting(\"position_css_id\", \"\", \"\")\r\n    const customClasses = this.props.element.getResponsiveSetting(\"position_css_classes\", \"\", null);\r\n    const background_image = this.props.element.getResponsiveSetting(\r\n      \"background_image\",\r\n      null,\r\n      {}\r\n    );\r\n    const buttonMedia = this.props.element.getResponsiveSetting(\"button_icon\", \"\", {});\r\n    const dropbarDelay = this.props.element.getResponsiveSetting(\"show_delay_dropbar_options\");\r\n\r\n    const showIcon = buttonMedia.url;\r\n\r\n    if (this.state.pending) {\r\n      classes.push(\"altrp-disabled\");\r\n    }\r\n\r\n    const classes = [\"altrp-btn\", \"dropbar\"];\r\n\r\n    if(customClasses) {\r\n      classes.push(customClasses)\r\n    }\r\n\r\n    if (background_image.url) {\r\n      classes.push(\"altrp-background-image\");\r\n    }\r\n    if(this.isDisabled()){\r\n      classes.push('state-disabled');\r\n    }\r\n\r\n    const buttonTemplate = (\r\n      <button\r\n        onClick={this.onClick}\r\n        className={_.join(classes, \" \")}\r\n        id={id}\r\n      >\r\n        {buttonText}\r\n        {\r\n          showIcon ? (\r\n            ! isSSR() && <span className=\"altrp-btn-icon\">\r\n          {renderAssetIcon(buttonMedia)}{\" \"}\r\n          </span>\r\n          ) : \"\"\r\n        }\r\n      </button>\r\n    );\r\n    return <div className=\"altrp-btn-wrapper_dropbar altrp-btn-wrapper\">\r\n      <AltrpDropbar\r\n        elemenentId={this.props.element.getId()}\r\n        settings={this.props.element.getSettings()}\r\n        className=\"btn\"\r\n        element={this.props.element}\r\n        getContent={this.getContent}\r\n        showDelay={dropbarDelay}\r\n      >\r\n        {buttonTemplate}\r\n      </AltrpDropbar>\r\n    </div>\r\n  }\r\n}\r\n\r\n\r\nexport default DropbarWidget;\r\n","import {useEffect, useRef} from \"react\";\r\n\r\nexport function isClassComponent(component) {\r\n  return (\r\n      typeof component === 'function' &&\r\n      !!component.prototype.isReactComponent\r\n  )\r\n}\r\n\r\nexport function isFunctionComponent(component) {\r\n  return (\r\n      typeof component === 'function' &&\r\n      String(component).includes('return React.createElement')\r\n  )\r\n}\r\n\r\nexport function isReactComponent(component) {\r\n  return (\r\n      isClassComponent(component) ||\r\n      isFunctionComponent(component)\r\n  )\r\n}\r\n\r\nexport function isElement(element) {\r\n  return React.isValidElement(element);\r\n}\r\n\r\nexport function isDOMTypeElement(element) {\r\n  return isElement(element) && typeof element.type === 'string';\r\n}\r\n\r\nexport function isCompositeTypeElement(element) {\r\n  return isElement(element) && typeof element.type === 'function';\r\n}\r\n\r\nexport function usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n  return ref.current;\r\n}"],"sourceRoot":""}