{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/classes/AltrpModel.js","webpack:///./resources/modules/editor/src/js/classes/modules/TemplateLoader.js","webpack:///./resources/modules/editor/src/js/components/altrp-template/AltrpTemplate.js","webpack:///./resources/modules/front-app/src/js/classes/FrontElementsFabric.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/ElementWrapperComponent.js","webpack:///./resources/modules/front-app/src/js/constants/DEFAULT_REACT_ELEMENTS.js","webpack:///./resources/modules/front-app/src/js/components/ElementWrapper.js","webpack:///./resources/modules/front-app/src/js/store/elements-storage/actions.js"],"names":["AltrpModel","data","this","cloneDeep","clone","isEmpty","name","defaultValue","get","has","value","getData","set","unset","window","TemplateLoader","resource","Resource","route","templatesCache","_","__altrp_settings__","templateId","force","update","Number","hasProperty","Promise","resolve","reject","pendingCallbacks","push","statuses","template","setProperty","getProperty","isArray","forEach","callback","loadTemplate","templateData","JSON","parse","frontElementsFabric","templateLoader","AltrpTemplate","props","state","templateGUID","settings","updateTemplate","loading","setState","className","React","componentClass","element","ElementWrapper","children","Component","FrontElementsFabric","object","parent","pageId","models","FrontElement","addModelInfo","modelName","modelId","model","length","child","frontElementsManager","checkElementExists","parseData","id","lastElement","type","dynamicContentSettings","setParent","clonedElement","updateParents","c","ElementWrapperDivComponent","styled","div","styles","layout_column_width","getResponsiveSetting","_export","altrpHelpers","altrpCompare","altrpRandomId","conditionsChecker","isEditor","replaceContentWithData","setTitle","updateStore","currentModel","appStore","getState","currentUser","currentDataStorage","elementDisplay","getSettings","reactElement","elementId","getId","wrapper","elementWrapperRef","createRef","elementRef","dispatch","addElement","error","errorInfo","frontApp","onWidgetMount","isFunction","updateFonts","checkElementDisplay","stylesModule","stylesContainer","current","getElementsByClassName","prevProps","prevState","getName","title","currentTitle","altrpPage","changeCurrentPageProperty","updateToken","conditions","map","modelField","conditional_model_field","operator","conditional_other_operator","conditional_other_condition_value","getCurrentModel","formsStore","formId","logic","formConditions","display","field_id","hide_on_wide_screen","hide_on_desktop","hide_on_laptop","hide_on_tablet","hide_on_big_phone","hide_on_small_phone","isFixed","hide_on_trigger","tooltip_position","tooltip_text","classes","getType","getPrefixClasses","style","whiteSpace","toString","componentStack","width","CSSId","ContentComponent","getComponentClass","content","createElement","ref","rootElement","getChildren","match","altrpresponses","altrpPageState","altrpMeta","currentScreen","baseRender","history","getTemplateType","WrapperComponent","NavComponent","wrapperProps","DEFAULT_REACT_ELEMENTS","AltrpTooltip","position","withRouter","reactRedux","connect","forwardRef","ADD_ELEMENT","CLEAR_ELEMENTS","elementComponent","clearElements"],"mappings":"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","file":"1982.bee8472a77d463e93709.bundle.js","sourcesContent":["/**\r\n * Имеет интерфейс для доступы к свойствам data (любой вложенности)\r\n * @class AltrpModel\r\n */\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport get from 'lodash.get';\r\nimport set from 'lodash.set';\r\nimport has from 'lodash.has';\r\nimport unset from 'lodash.unset';\r\nimport isEmpty from 'lodash.isempty';\r\n// import {cloneDeep, get, set, has, unset, isString, isEmpty} from \"lodash\";\r\n\r\nclass AltrpModel {\r\n  constructor(data = {}) {\r\n    this.data = cloneDeep(data);\r\n  }\r\n\r\n  /**\r\n   * Возваращает объект данных\r\n   * @params {boolean} clone - клонировать или ссылку на данные\r\n   * @return {{}}\r\n   */\r\n  getData(clone = true) {\r\n    if(clone){\r\n      return cloneDeep(this.data);\r\n    }\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Пустой ли объект\r\n   */\r\n  isEmpty(){\r\n    return isEmpty(this.data);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  getProperty(name, defaultValue = '') {\r\n    return get(this.data, name, defaultValue);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  hasProperty(name, defaultValue = '') {\r\n    return has(this.data, name);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {{}}\r\n   */\r\n  setProperty(name, value = '') {\r\n    if(value instanceof AltrpModel){\r\n      value = value.getData(false);\r\n    }\r\n    return set(this.data, name, value);\r\n  }\r\n  /**\r\n   * Удаляет свойства name\r\n   * @params {string} name\r\n   * @return {*}\r\n   */\r\n  unsetProperty(name) {\r\n    return unset(this.data, name);\r\n  }\r\n}\r\nwindow.AltrpModel = AltrpModel;\r\nexport default AltrpModel\r\n","import Resource from \"../Resource\";\r\nimport AltrpModel from \"../AltrpModel\";\r\nimport frontElementsFabric from \"../../../../../front-app/src/js/classes/FrontElementsFabric\";\r\n\r\n/**\r\n * @class TemplateLoader\r\n */\r\nclass TemplateLoader {\r\n  /**\r\n   * Хранилище статусов получения данных, чтобы не делать много параллельных запросов\r\n   * @type {{}}\r\n   */\r\n  static statuses = {};\r\n  /**\r\n   * Хранилище обратных вызовов, чтобы не делать много параллельных запросов\r\n   * @type {{}}\r\n   */\r\n  static pendingCallbacks = {};\r\n\r\n\r\n  constructor(){\r\n    this.resource = new Resource({route: '/ajax/templates'});\r\n    this.templatesCache = new AltrpModel(_.get(window.__altrp_settings__, 'templates_data',{}));\r\n  }\r\n\r\n  /**\r\n   * Загрузить шаблон по ид\r\n   * @param {integer | string} templateId\r\n   * @param {boolean} force\r\n   * @param {*} templateId\r\n   * @return {[]}\r\n   */\r\n  async loadTemplate(templateId, force = false){\r\n\r\n    let update = force;\r\n    templateId = Number(templateId) ? Number(templateId) : templateId;\r\n\r\n    if(! update){\r\n      update = ! this.templatesCache.hasProperty(templateId);\r\n    }\r\n\r\n    if(_.get(TemplateLoader, `statuses.${templateId}`) === 'loading'){\r\n      return new Promise((resolve, reject) => {\r\n        TemplateLoader.pendingCallbacks[templateId] = TemplateLoader.pendingCallbacks[templateId] || [];\r\n        TemplateLoader.pendingCallbacks[templateId].push(resolve);\r\n      })\r\n    }\r\n\r\n    TemplateLoader.statuses[templateId] = 'loading';\r\n\r\n    try {\r\n\r\n      let template = null;\r\n\r\n      if (update) {\r\n        template = await this.resource.get(templateId);\r\n        this.templatesCache.setProperty(templateId, template);\r\n      } else {\r\n        template = this.templatesCache.getProperty(templateId);\r\n      }\r\n\r\n      if(_.isArray(TemplateLoader.pendingCallbacks[templateId])){\r\n        TemplateLoader.pendingCallbacks[templateId].forEach(callback=>{\r\n          callback(template);\r\n        });\r\n      }\r\n\r\n      TemplateLoader.statuses[templateId] = 'loaded';\r\n      TemplateLoader.pendingCallbacks[templateId] = [];\r\n      return template;\r\n\r\n    }catch(error){\r\n      if(_.isArray(TemplateLoader.pendingCallbacks[templateId])){\r\n        TemplateLoader.pendingCallbacks[templateId].forEach(callback=>{\r\n          callback(null);\r\n        });\r\n      }\r\n      TemplateLoader.statuses[templateId] = 'loaded';\r\n      TemplateLoader.pendingCallbacks[templateId] = [];\r\n      return null;\r\n    }\r\n\r\n    //return Promise.resolve(this.templatesCache.getProperty(templateId));\r\n  }\r\n\r\n  /**\r\n   * Загрузить шаблон по ид\r\n   * @param {integer | string} templateId\r\n   * @param {boolean} force\r\n   * @param {*} templateId\r\n   */\r\n  async loadParsedTemplate(templateId, force = false){\r\n\r\n    if(! templateId){\r\n      return null;\r\n    }\r\n    templateId = Number(templateId) ? Number(templateId) : templateId;\r\n\r\n    let templateData = _.get((await this.loadTemplate(templateId, force)), 'data');\r\n    templateData = JSON.parse(templateData);\r\n\r\n    return frontElementsFabric.parseData(templateData);\r\n  }\r\n\r\n}\r\n\r\n window.templateLoader =  new TemplateLoader();\r\n\r\nexport default window.templateLoader;\r\n","import React, { Component } from \"react\";\nimport templateLoader from \"../../classes/modules/TemplateLoader\";\nimport ElementWrapper from \"../../../../../front-app/src/js/components/ElementWrapper\";\nimport frontElementsFabric from \"../../../../../front-app/src/js/classes/FrontElementsFabric\";\n\nclass AltrpTemplate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      templateGUID: this.props.settings.template\n    };\n  }\n  componentDidMount() {\n    this.updateTemplate();\n  }\n  componentDidUpdate() {\n    this.updateTemplate();\n  }\n\n  /**\n   * Обновляем данные шалона\n   * @return {Promise<void>}\n   */\n  async updateTemplate() {\n    // console.log(this.props.element.getSettings('template'));\n    const templateGUID = this.props.settings.template;\n    if (\n      templateGUID !== this.state.templateGUID ||\n      !(this.state.template || this.loading)\n    ) {\n      let template;\n      if (!templateGUID) {\n        return;\n      } else {\n        this.loading = true;\n        template = await templateLoader.loadParsedTemplate(templateGUID);\n        this.loading = false;\n        this.template = null;\n      }\n      this.setState(state => ({ ...state, template, templateGUID }));\n    }\n  }\n\n  render() {\n    if (!this.props.settings.template) {\n      return null;\n    }\n    if (_.get(this.state, \"template.componentClass\")) {\n      let template =\n        this.template || frontElementsFabric.cloneElement(this.state.template);\n      this.template = template;\n      return (\n        <div className=\"altrp-posts\">\n          <div className=\"altrp-post\">\n            {React.createElement(template.componentClass, {\n              element: template,\n              ElementWrapper: ElementWrapper,\n              children: template.children\n            })}\n          </div>\n        </div>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AltrpTemplate;\n","import FrontElement from \"./FrontElement\";\r\nclass FrontElementsFabric {\r\n  /**\r\n   * парсим данные шаблона\r\n   * @param {object} object\r\n   * @param {FrontElement | null} parent\r\n   * @param {int | null} pageId\r\n   * @param {array | null} models\r\n   * @return {FrontElement}\r\n   */\r\n  parseData(object, parent, pageId, models){\r\n    let children = [];\r\n    /**\r\n     * @member {FrontElement} element\r\n     * */\r\n    let element = new FrontElement(object);\r\n    if(pageId){\r\n      element.addModelInfo({\r\n        modelName: 'page',\r\n        modelId: pageId,\r\n      });\r\n    }\r\n    if(_.isArray(models)){\r\n      for(let model of models){\r\n        element.addModelInfo({\r\n            ...model,\r\n        });\r\n      }\r\n    }\r\n    if(object.children && object.children.length ){\r\n      for(let child of object.children){\r\n        window.frontElementsManager.checkElementExists(child.name) ?\r\n            children.push( this.parseData(child, element) ) : '';\r\n      }\r\n    }\r\n    element.id = object.id;\r\n    element.lastElement = object.lastElement;\r\n    element.children = children;\r\n    element.settings = object.settings;\r\n    element.name = object.name;\r\n    element.type = object.type;\r\n    element.dynamicContentSettings = object.dynamicContentSettings;\r\n    if(parent){\r\n      element.setParent(parent);\r\n    }\r\n    element.update();\r\n    return element;\r\n  }\r\n\r\n  /**\r\n   * Правильное клонирование элемента\r\n   * @params {FrontElement} element\r\n   * @return {FrontElement | null}\r\n   */\r\n  cloneElement(element){\r\n    if(! element){\r\n      return null;\r\n    }\r\n    let clonedElement = _.cloneDeep(element);\r\n    // console.log(element.idForAction);\r\n    this.updateParents(clonedElement);\r\n    return clonedElement\r\n  }\r\n\r\n  /**\r\n   * Обновляет ссылку на родителя у элементов\r\n   * @params {FrontElement} element\r\n   */\r\n\r\n  updateParents(element){\r\n    if(_.isArray(element.children)){\r\n      element.children.forEach(c=>{\r\n        c.setParent(element);\r\n        this.updateParents(c);\r\n        // console.log(c);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nwindow.frontElementsFabric = new FrontElementsFabric();\r\nexport default window.frontElementsFabric;\r\n","\r\nimport { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nconst settingsToStyles = ({ settings }) => {\r\n   let styles = '';\r\n\r\n   styles += '&.altrp-column{';\r\n   const layout_column_width = getResponsiveSetting(settings, 'layout_column_width');\r\n   if (layout_column_width) {\r\n      if (Number(layout_column_width)) {\r\n         styles += `width:${layout_column_width}%;`;\r\n      } else {\r\n         styles += `width:${layout_column_width};`;\r\n      }\r\n   }\r\n\r\n   styles += '}';\r\n   return styles;\r\n};\r\n\r\nexport const ElementWrapperDivComponent = styled.div`${settingsToStyles}`;\r\n","const DEFAULT_REACT_ELEMENTS = [\r\n  'input',\r\n  'input-select',\r\n  'input-select2',\r\n  'input-radio',\r\n  'input-checkbox',\r\n  'input-wysiwyg',\r\n  'input-textarea',\r\n  'input-slider',\r\n  'input-image-select',\r\n  'input-accept',\r\n  'input-text',\r\n  'input-text-common',\r\n  'input-password',\r\n  'input-number',\r\n  'input-tel',\r\n  'input-email',\r\n  'input-date',\r\n  'input-hidden',\r\n  'input-file',\r\n  'input-gallery',\r\n  'breadcrumbs',\r\n  'map',\r\n  'map_builder',\r\n  'menu',\r\n  'diagram',\r\n  'input',\r\n  'nav',\r\n  'dashboards',\r\n  'tour',\r\n  'icon',\r\n  'export',\r\n  'template',\r\n  'gallery',\r\n  'dropbar',\r\n  'posts',\r\n  'table',\r\n  'tabs',\r\n  'heading-type-animating',\r\n]\r\nexport default DEFAULT_REACT_ELEMENTS\r\n","import { withRouter } from \"react-router-dom\";\r\nimport { addElement } from \"../store/elements-storage/actions\";\r\nimport AltrpTooltip from \"../../../../editor/src/js/components/altrp-tooltip/AltrpTooltip\";\r\nimport { changeCurrentPageProperty } from \"../store/current-page/actions\";\r\nimport { ElementWrapperDivComponent } from \"../../../../editor/src/js/components/widgets/styled-components/ElementWrapperComponent\";\r\nimport NavComponent from \"../../../../editor/src/js/components/widgets/styled-components/NavComponent\";\r\nimport DEFAULT_REACT_ELEMENTS from \"../constants/DEFAULT_REACT_ELEMENTS\";\r\nconst {\r\n  altrpCompare,\r\n  altrpRandomId,\r\n  conditionsChecker,\r\n  isEditor,\r\n  replaceContentWithData,\r\n  setTitle\r\n} = window.altrpHelpers;\r\n\r\nclass ElementWrapper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      elementDisplay: !this.props.element.getSettings(\"default_hidden\")\r\n    };\r\n    this.reactElement = this.props.element.getSettings(\"react_element\");\r\n    this.elementId = this.props.element.getId();\r\n    this.settings = this.props.element.getSettings();\r\n    props.element.wrapper = this;\r\n    this.elementWrapperRef = React.createRef();\r\n    this.elementRef = React.createRef();\r\n    if(! isEditor()){\r\n      appStore.dispatch(addElement(this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Отлавливаем ошибки\r\n   * @param error\r\n   * @param errorInfo\r\n   */\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState(state => ({\r\n      ...state,\r\n      error: error,\r\n      errorInfo: errorInfo\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Иногда надо обновить элемент (FrontElement)\r\n   */\r\n  componentDidMount() {\r\n    !isEditor() && window?.frontApp?.onWidgetMount();\r\n    if (_.isFunction(this.props.element.update)) {\r\n      this.props.element.update();\r\n      this.props.element.updateFonts();\r\n    }\r\n    this.checkElementDisplay();\r\n  }\r\n  /**\r\n   * Подписываемся на обновление store редакса\r\n   */\r\n  updateStore = () => {\r\n    if (this.state.currentModel !== appStore.getState().currentModel) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        currentModel: appStore.getState().currentModel\r\n      }));\r\n    }\r\n    /**\r\n     * Обновляем пользователя\r\n     */\r\n    if (this.state.currentUser !== appStore.getState().currentUser) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        currentModel: appStore.getState().currentUser\r\n      }));\r\n    }\r\n\r\n    /**\r\n     * Обновляем currentDataStorage\r\n     */\r\n    if (\r\n      this.state.currentDataStorage !== appStore.getState().currentDataStorage\r\n    ) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        currentDataStorage: appStore.getState().currentDataStorage\r\n      }));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Вернет HTMLElement, в котором записаны css стили текущего компонента\r\n   * @return {null | HTMLElement}\r\n   */\r\n  getStylesHTMLElement() {\r\n    if (!_.get(window, \"stylesModule.stylesContainer.current\")) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      window.stylesModule.stylesContainer.current.getElementsByClassName(\r\n        `altrp-styles${this.props.element.getId()}`\r\n      )[0] || null\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Нужно ли обновить отображение обертки элементов\r\n   * @param {{}} prevProps\r\n   * @param {{}} prevState\r\n   */\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.checkElementDisplay();\r\n    if (\r\n      appStore.getState().currentModel.getProperty(\"altrpModelUpdated\") &&\r\n      appStore\r\n        .getState()\r\n        .currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\r\n      !isEditor() &&\r\n      this.props.element.getName() === \"section\"\r\n    ) {\r\n      let title = appStore.getState().currentTitle;\r\n      title = replaceContentWithData(title);\r\n      if (appStore.getState().altrpPage.getProperty(\"title\") !== title) {\r\n        appStore.dispatch(changeCurrentPageProperty(\"title\", title));\r\n      }\r\n      setTitle(title);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Обновить элемент изменив this.state.updateToken\r\n   */\r\n  updateElement() {\r\n    this.setState(state => ({ ...state, updateToken: altrpRandomId() }));\r\n  }\r\n\r\n  /**\r\n   * Проверка видимости элемента\r\n   * @param {{}} prevProps\r\n   * @param {{}} prevState\r\n   */\r\n  checkElementDisplay(prevProps, prevState) {\r\n    /**\r\n     * @member {FrontElement} element\r\n     */\r\n    const { element } = this.props;\r\n    if (!element.getSettings(\"conditional_other\")) {\r\n      return;\r\n    }\r\n    let conditions = element.getSettings(\"conditions\", []);\r\n    conditions = conditions.map(c => {\r\n      const {\r\n        conditional_model_field: modelField,\r\n        conditional_other_operator: operator,\r\n        conditional_other_condition_value: value\r\n      } = c;\r\n      return {\r\n        modelField,\r\n        operator,\r\n        value\r\n      };\r\n    });\r\n    let elementDisplay = conditionsChecker(\r\n      conditions,\r\n      element.getSettings(\"conditional_other_display\") === \"AND\",\r\n      this.props.element.getCurrentModel(),\r\n      true\r\n    );\r\n\r\n    if (this.state.elementDisplay === elementDisplay) {\r\n      return;\r\n    }\r\n\r\n    this.setState(state => ({\r\n      ...state,\r\n      elementDisplay\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Переключает видимость элемента\r\n   */\r\n  toggleElementDisplay() {\r\n    this.setState(state => ({\r\n      ...state,\r\n      elementDisplay: !state.elementDisplay\r\n    }));\r\n  }\r\n  /**\r\n   * Метод для проверки видимости поля формы\r\n   * @return {boolean}\r\n   */\r\n  inputIsDisplay() {\r\n    const { formsStore } = this.state;\r\n    const formId = this.props.element.getSettings(\"form_id\", \"\");\r\n    const logic = this.props.element.getSettings(\r\n      \"form_condition_display_on\",\r\n      \"AND\"\r\n    );\r\n    const formConditions = this.props.element.getSettings(\r\n      \"form_conditions\",\r\n      []\r\n    );\r\n    let display = true;\r\n    formConditions.forEach(c => {\r\n      if (logic === \"AND\") {\r\n        display *= altrpCompare(\r\n          _.get(formsStore, `${formId}.${c.field_id}`),\r\n          c.value,\r\n          c.operator\r\n        );\r\n      } else {\r\n        display += altrpCompare(\r\n          _.get(formsStore, `${formId}.${c.field_id}`),\r\n          c.value,\r\n          c.operator\r\n        );\r\n      }\r\n    });\r\n    return display;\r\n  }\r\n\r\n  render() {\r\n    const {element} = this.props;\r\n    const {\r\n      hide_on_wide_screen,\r\n      hide_on_desktop,\r\n      hide_on_laptop,\r\n      hide_on_tablet,\r\n      hide_on_big_phone,\r\n      hide_on_small_phone,\r\n      hide_on_trigger,\r\n      isFixed,\r\n      tooltip_position\r\n    } = element.settings;\r\n    let { tooltip_text } = element.settings;\r\n    let classes = `altrp-element altrp-element${element.getId()} altrp-element_${element.getType()}`;\r\n    classes += element.getPrefixClasses() + \" \";\r\n    if (element.getType() === \"widget\") {\r\n      classes += ` altrp-widget_${element.getName()}`;\r\n    }\r\n    if(this.props.element.getResponsiveSetting('css_class')){\r\n      classes += ` ${replaceContentWithData(\r\n        this.props.element.getResponsiveSetting('css_class'),\r\n        this.props.element.getCurrentModel().getData()\r\n      )} `;\r\n    }\r\n    if (hide_on_wide_screen) {\r\n      classes += \" hide_on_wide_screen\";\r\n    }\r\n    if (hide_on_desktop) {\r\n      classes += \" hide_on_desktop\";\r\n    }\r\n    if (hide_on_laptop) {\r\n      classes += \" hide_on_laptop\";\r\n    }\r\n    if (hide_on_tablet) {\r\n      classes += \" hide_on_tablet\";\r\n    }\r\n    if (hide_on_big_phone) {\r\n      classes += \" hide_on_big_phone\";\r\n    }\r\n    if (hide_on_small_phone) {\r\n      classes += \" hide_on_small_phone\";\r\n    }\r\n    if (isFixed) {\r\n      classes += \" fixed-section\";\r\n    }\r\n    if (this.state.errorInfo) {\r\n      return (\r\n        <div className=\"altrp-error\" data-eltype={element.getType()}>\r\n          <h2>Something went wrong.</h2>\r\n          <details style={{ whiteSpace: \"pre-wrap\" }}>\r\n            {this.state.error && this.state.error.toString()}\r\n            <br />\r\n            {this.state.errorInfo.componentStack}\r\n          </details>\r\n        </div>\r\n      );\r\n    }\r\n    const styles = {};\r\n\r\n    if (element.getResponsiveSetting(\"layout_column_width\")) {\r\n      if (\r\n        Number(element.getResponsiveSetting(\"layout_column_width\"))\r\n      ) {\r\n        styles.width =\r\n          element.getResponsiveSetting(\"layout_column_width\") + \"%\";\r\n      } else {\r\n        styles.width = element.getResponsiveSetting(\r\n          \"layout_column_width\"\r\n        );\r\n      }\r\n    }\r\n    if (!this.state.elementDisplay) {\r\n      styles.display = \"none\";\r\n    }\r\n    let CSSId = element.getSettings(\"advanced_element_id\", \"\");\r\n    CSSId = replaceContentWithData(\r\n      CSSId,\r\n      element.getCurrentModel().getData()\r\n    );\r\n    if (this.CSSId !== CSSId) {\r\n      this.CSSId = CSSId;\r\n    }\r\n    let ContentComponent = frontElementsManager.getComponentClass(\r\n      element.getName()\r\n    );\r\n    const content = React.createElement(ContentComponent, {\r\n      ref: this.elementRef,\r\n      rootElement: this.props.rootElement,\r\n      ElementWrapper: this.props.ElementWrapper,\r\n      element: element,\r\n      children: element.getChildren(),\r\n      match: this.props.match,\r\n      currentModel: this.props.currentModel,\r\n      currentUser: this.props.currentUser,\r\n      currentDataStorage: this.props.currentDataStorage,\r\n      altrpresponses: this.props.altrpresponses,\r\n      formsStore: this.props.formsStore,\r\n      elementDisplay: this.state.elementDisplay,\r\n      altrpPageState: this.props.altrpPageState,\r\n      altrpMeta: this.props.altrpMeta,\r\n      updateToken: this.state.updateToken,\r\n      currentScreen: this.props.currentScreen,\r\n      baseRender: this.props.baseRender,\r\n      history: this.props.history,\r\n      appStore\r\n    });\r\n    if (element.getTemplateType() === \"email\") {\r\n      if (!this.state.elementDisplay) {\r\n        return null;\r\n      }\r\n      return <>{content}</>;\r\n    }\r\n\r\n    let WrapperComponent = ElementWrapperDivComponent;\r\n    switch (element.getName()) {\r\n      case \"nav\":\r\n        WrapperComponent = NavComponent;\r\n        break;\r\n    }\r\n\r\n    tooltip_text = replaceContentWithData(\r\n      tooltip_text,\r\n      element.getCurrentModel().getData()\r\n    );\r\n\r\n    const wrapperProps = {\r\n      className: classes,\r\n      ref: this.elementWrapperRef,\r\n      elementId: this.elementId,\r\n      settings: this.settings,\r\n      style: styles,\r\n      id: this.CSSId,\r\n    };\r\n    if (\r\n      this.reactElement ||\r\n      DEFAULT_REACT_ELEMENTS.indexOf(element.getName()) !== -1\r\n    ) {\r\n      wrapperProps[\"data-react-element\"] = element.getId();\r\n    }\r\n    if(! _.isEmpty(element.getResponsiveSetting('wrapper_click_actions'))){\r\n      wrapperProps[\"data-altrp-wrapper-click-actions\"] = element.getId();\r\n    }\r\n    wrapperProps[\"data-altrp-id\"] = element.getId();\r\n    return  (\r\n      <WrapperComponent {...wrapperProps} element={element.getId()}>\r\n        {content}\r\n        {tooltip_text && (\r\n          <AltrpTooltip position={tooltip_position}>\r\n            {tooltip_text}\r\n          </AltrpTooltip>\r\n        )}\r\n      </WrapperComponent>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    altrpresponses: state.altrpresponses,\r\n    formsStore: state.formsStore,\r\n    currentDataStorage: state.currentDataStorage,\r\n    currentModel: state.currentModel,\r\n    currentUser: state.currentUser,\r\n    altrpMeta: state.altrpMeta,\r\n    altrpPageState: state.altrpPageState,\r\n    currentScreen: state.currentScreen\r\n  };\r\n}\r\nlet _export;\r\nif(window['h-altrp']){\r\n  _export = ElementWrapper;\r\n} else {\r\n  _export = withRouter(ElementWrapper)\r\n}\r\nexport default window.reactRedux.connect(mapStateToProps, null, null, {\r\n  forwardRef: true\r\n})(_export);\r\n","export const ADD_ELEMENT = 'ADD_ELEMENT';\r\nexport const CLEAR_ELEMENTS = 'CLEAR_ELEMENTS';\r\n\r\n/**\r\n *\r\n * @param {React.Component}elementComponent\r\n * @return {{}} - {\r\n *     type: {string},\r\n *     sectionComponent: {React.Component},\r\n *   }\r\n */\r\nexport function addElement(elementComponent) {\r\n  return {\r\n    type: ADD_ELEMENT,\r\n    elementComponent\r\n  };\r\n}\r\n\r\n/**\r\n * Перед загрузкой новых данных, старые удаляем\r\n * @return {{type: string}}\r\n */\r\nexport function clearElements() {\r\n  return {\r\n    type: CLEAR_ELEMENTS,\r\n  };\r\n}\r\n\r\n"],"sourceRoot":""}