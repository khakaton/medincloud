{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./resources/modules/editor/src/js/classes/AltrpModel.js","webpack:///./resources/modules/editor/src/js/components/widgets/DashboardsWidget.js"],"names":["_assertThisInitialized","self","ReferenceError","_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","TypeError","prototype","create","constructor","value","writable","configurable","_possibleConstructorReturn","call","_setPrototypeOf","p","_typeof","obj","Symbol","iterator","AltrpModel","data","this","cloneDeep","clone","isEmpty","name","defaultValue","get","has","getData","set","unset","window","AltrpDashboards","React","lazy","DataSourceDashboards","DashboardsWidget","props","state","settings","element","getSettings","settingsData","child","refChild","createRef","fireAction","bind","calculateDrawerWidth","component","elementDecorator","baseRender","render","id","getId","axios","headers","document","querySelector","getAttribute","req","console","log","JSON","parse","setState","action","current","alert","allKeys","_","keys","currentBreakpoint","getCurrentBreakpoint","result","keyData","filter","item","includes","drawer","drawerWidth","key","names","split","length","size","unit","containerWidth","positioning_custom_width","dataByDataSource","dataSource","global_parameter","showButton","showExportButton","currentUser","Suspense","fallback","ref","items","counter","newCounter","delimer","rep","globalParameter","Component"],"mappings":"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","file":"DashboardsWidget.0d213ff8a7a0ac0e3c91.bundle.js","sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","/**\r\n * Имеет интерфейс для доступы к свойствам data (любой вложенности)\r\n * @class AltrpModel\r\n */\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport get from 'lodash.get';\r\nimport set from 'lodash.set';\r\nimport has from 'lodash.has';\r\nimport unset from 'lodash.unset';\r\nimport isEmpty from 'lodash.isempty';\r\n// import {cloneDeep, get, set, has, unset, isString, isEmpty} from \"lodash\";\r\n\r\nclass AltrpModel {\r\n  constructor(data = {}) {\r\n    this.data = cloneDeep(data);\r\n  }\r\n\r\n  /**\r\n   * Возваращает объект данных\r\n   * @params {boolean} clone - клонировать или ссылку на данные\r\n   * @return {{}}\r\n   */\r\n  getData(clone = true) {\r\n    if(clone){\r\n      return cloneDeep(this.data);\r\n    }\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Пустой ли объект\r\n   */\r\n  isEmpty(){\r\n    return isEmpty(this.data);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  getProperty(name, defaultValue = '') {\r\n    return get(this.data, name, defaultValue);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  hasProperty(name, defaultValue = '') {\r\n    return has(this.data, name);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {{}}\r\n   */\r\n  setProperty(name, value = '') {\r\n    if(value instanceof AltrpModel){\r\n      value = value.getData(false);\r\n    }\r\n    return set(this.data, name, value);\r\n  }\r\n  /**\r\n   * Удаляет свойства name\r\n   * @params {string} name\r\n   * @return {*}\r\n   */\r\n  unsetProperty(name) {\r\n    return unset(this.data, name);\r\n  }\r\n}\r\nwindow.AltrpModel = AltrpModel;\r\nexport default AltrpModel\r\n","import axios from \"axios\";\r\nimport { getCurrentBreakpoint } from \"../../../../../front-app/src/js/helpers\";\r\n\r\nconst AltrpDashboards = React.lazy(() =>\r\n  import(/* webpackChunkName: 'AltrpDashboards' */\"../altrp-dashboards/AltrpDashboards\")\r\n);\r\nconst DataSourceDashboards = React.lazy(() =>\r\n  import(/* webpackChunkName: 'DataSourceDashboards' */\"../altrp-dashboards/DataSourceDashboards\")\r\n);\r\n\r\nclass DashboardsWidget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      settings: props.element.getSettings(),\r\n      settingsData: [],\r\n      child: {}\r\n    };\r\n\r\n    this.refChild = React.createRef();\r\n    this.fireAction = this.fireAction.bind(this);\r\n    this.calculateDrawerWidth = this.calculateDrawerWidth.bind(this);\r\n\r\n    props.element.component = this;\r\n\r\n    if (window.elementDecorator) {\r\n      window.elementDecorator(this);\r\n    }\r\n    if(props.baseRender){\r\n      this.render = props.baseRender(this);\r\n    }\r\n  }\r\n\r\n  async componentWillMount() {\r\n    try {\r\n      const id = this.props.element.getId();\r\n      const req = await axios.get(`/ajax/dashboards/datasource/${id}/data`, {\r\n        headers: {\r\n          \"X-CSRF-TOKEN\": document\r\n            .querySelector('meta[name=\"csrf-token\"]')\r\n            .getAttribute(\"content\")\r\n        }\r\n      });\r\n      console.log(req.data.settings);\r\n      let data = JSON.parse(req.data.settings) || JSON.parse(\"{}\");\r\n      this.setState(state => ({\r\n        ...state,\r\n        settingsData: data\r\n      }));\r\n    } catch (e) {\r\n      console.log(\"ERROR ==>\", e);\r\n    }\r\n  }\r\n\r\n  fireAction(action) {\r\n    if (typeof this.refChild.current[action] !== \"undefined\") {\r\n      this.refChild.current[action]();\r\n    } else {\r\n      alert(\"ERROR, NOT FOUND ACTION\");\r\n    }\r\n  }\r\n\r\n  calculateDrawerWidth() {\r\n    const allKeys = _.keys(this.props.element.getSettings());\r\n    const currentBreakpoint = getCurrentBreakpoint();\r\n    let result = false;\r\n    let keyData = \"\";\r\n    let keys = allKeys.filter(item => item.includes(\"drawerWidth\"));\r\n    let drawer = this.props.element.getSettings().drawerWidth;\r\n    for (let key of keys) {\r\n      let names = key.split(\"_\");\r\n      const name = names[names.length - 1];\r\n      if (name == currentBreakpoint) {\r\n        result = true;\r\n        keyData = key;\r\n        break;\r\n      }\r\n    }\r\n    if (result) {\r\n      drawer = this.props.element.getSettings(keyData);\r\n    }\r\n    return drawer?.size + drawer?.unit || \"30%\";\r\n  }\r\n\r\n  render() {\r\n    const containerWidth = this.props.element.getSettings()\r\n      .positioning_custom_width.size;\r\n    const dataByDataSource = this.props.element.getSettings().dataSource;\r\n    const settings = this.props.element.getSettings();\r\n    const global_parameter = this.state.settings.global_parameter;\r\n    const showButton = this.props.element.getSettings().showButton;\r\n    const showExportButton = this.props.element.getSettings().showExportButton;\r\n    const currentUser = this.props.currentUser.data;\r\n    const drawerWidth = this.calculateDrawerWidth();\r\n    const settingsData = this.state.settingsData;\r\n    return (\r\n      <Suspense fallback={\"Loading\"}>\r\n        {!dataByDataSource ? (\r\n          <AltrpDashboards\r\n            settings={this.props.element.getSettings()}\r\n            globalParameter={global_parameter}\r\n            currentUser={currentUser}\r\n            //  currentDataStorage={this.props.currentDataStorage}\r\n            id={this.props.element.getId()}\r\n          />\r\n        ) : (\r\n          <DataSourceDashboards\r\n            ref={this.refChild}\r\n            showButton={showButton}\r\n            showExportButton={showExportButton}\r\n            settings={this.props.element.getSettings()}\r\n            id={this.props.element.getId()}\r\n            containerWidth={containerWidth}\r\n            items={settingsData.items}\r\n            counter={settingsData.newCounter}\r\n            drawerWidth={drawerWidth}\r\n            delimer={this.props.element.getSettings(\"delimer\")}\r\n            rep={this.props.element.getSettings(\"rep\", [])}\r\n          />\r\n        )}\r\n      </Suspense>\r\n    );\r\n  }\r\n}\r\nexport default DashboardsWidget;\r\n"],"sourceRoot":""}