{"version":3,"sources":["webpack:///./resources/modules/admin/src/components/dashboard/widgets/DynamicBarChart.js","webpack:///./resources/modules/admin/src/components/dashboard/WidgetDiagram.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/fields/TypeField.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/fields/FilterField.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/fields/LegendField.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/fields/LegendPositionField.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/fields/SourceField.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/fields/ColorSchemeField.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/fields/VerticalTableField.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/fields/SortDataField.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/AddWidget.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/EditWidget.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/CardWidget.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/fields/GlobalParameter.js","webpack:///./resources/modules/editor/src/js/components/altrp-dashboards/AltrpDashboards.js"],"names":["regagroScheme","_","find","Schemes","value","colors","milkScheme","milkScheme2","widget","width","height","dataSource","groupMode","layout","colorScheme","reverse","enableLabel","padding","innerPadding","borderRadius","borderWidth","sort","tickRotation","bottomAxis","enableGridX","enableGridY","customColorSchemeChecker","customColors","widgetID","yScaleMax","useCustomTooltips","useState","isLoading","setIsLoading","data","setData","getData","useCallback","length","getWidgetData","source","filter","charts","status","map","item","index","key","Number","sortBy","useEffect","Spinner","EmptyWidget","console","log","style","margin","top","right","bottom","left","indexBy","scheme","colorBy","axisBottom","tooltip","datum","TooltipBar","enable","tickSize","tickPadding","legend","legendOffset","type","BAR","isDashboard","PIE","DynamicPieChart","LINE","DynamicLineChart","TABLE","DynamicTableWidget","POINT","DynamicPointChart","setWidget","allowedTypes","Form","as","custom","onChange","e","target","getTypeName","param","changeTitle","options","setOptions","getOptions","axios","model","req","label","oldParam","findLabel","option","oldLabel","paramName","required","className","legendPosition","sources","name","sourceName","url","Object","keys","schemes","checked","isVertical","id","onAdd","setIsShow","settings","title","useRef","onSave","current","JSON","stringify","titleHandle","string","oldString","includes","replace","composeSources","sql","currentSource","setTimeout","Card","ref","onFocus","onBlur","defaultValue","s","split","types","getTypesBySource","Button","variant","onClick","disabled","EditWidget","onEdited","setIsEdit","React","onDeleted","isMobile","isEdit","saveWidget","itemDom","querySelector","domtoimage","png","link","document","createElement","download","Date","getTime","href","click","Dropdown","drop","color","zIndex","background","trigger","content","props","state","this","parameter","setState","setGlobalOption","preventDefault","stopPropagation","Component","registerLocale","ru","setDefaultLocale","globalParameter","start","setFullYear","getFullYear","end","widgets","setWidgets","isShow","startDate","setStartDate","endDate","setEndDate","screen","getSettings","headers","parse","getWidgets","myWidgets","filters","hasOwnProperty","w","animated","error","handleRemove","handleEdit","handleChangeStartDate","date","handleChangeEndDate","handleWeek","sub","weeks","handleMonth","months","closeOnScroll","popperClassName","popperPlacement","selected","selectsStart","dateFormat","showYearDropdown","minDate","selectsEnd","Nav"],"mappings":"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","file":"AltrpDashboards.a7b5ff462f0cd7d1c648.bundle.js","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nimport Spinner from \"./Spinner\";\r\nimport EmptyWidget from \"./EmptyWidget\";\r\n\r\nimport Schemes from \"../../../../../editor/src/js/components/altrp-dashboards/settings/NivoColorSchemes\";\r\nconst regagroScheme = _.find(Schemes, { value: \"regagro\" }).colors;\r\nconst milkScheme = _.find(Schemes, { value: \"milk\" }).colors;\r\nconst milkScheme2 = _.find(Schemes, { value: \"milk2\" }).colors;\r\n\r\nimport { ResponsiveBar } from \"@nivo/bar\";\r\n\r\nimport { getWidgetData } from \"../services/getWidgetData\";\r\nimport TooltipBar from \"./d3/TooltipBar\";\r\n\r\nconst DynamicBarChart = ({\r\n  widget,\r\n  width = 300,\r\n  height = 450,\r\n  dataSource = [],\r\n  groupMode = \"stacked\",\r\n  layout = \"vertical\",\r\n  colorScheme = \"regagro\",\r\n  reverse = false,\r\n  enableLabel = false,\r\n  padding = 0.1,\r\n  innerPadding = 0,\r\n  borderRadius = 0,\r\n  borderWidth = 0,\r\n  sort = \"\",\r\n  tickRotation = 0,\r\n  bottomAxis = true,\r\n  enableGridX = true,\r\n  enableGridY = true,\r\n  customColorSchemeChecker = false,\r\n  customColors = [],\r\n  yScaleMax,\r\n  widgetID,\r\n  useCustomTooltips\r\n}) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const getData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    if (dataSource.length == 0) {\r\n      const charts = await getWidgetData(widget.source, widget.filter);\r\n      if (charts.status === 200) {\r\n        let data = charts.data.data.map((item, index) => {\r\n          return {\r\n            [item.key]: Number(item.data),\r\n            key: item.key,\r\n            value: Number(item.data)\r\n          };\r\n        });\r\n        setData(data || []);\r\n        setIsLoading(false);\r\n      }\r\n    } else {\r\n      if (\r\n        sort !== null &&\r\n        typeof sort !== \"undefined\" &&\r\n        typeof dataSource !== \"undefined\"\r\n      ) {\r\n        switch (sort) {\r\n          case \"value\":\r\n            dataSource = _.sortBy(dataSource, [\"value\"]);\r\n            break;\r\n          case \"key\":\r\n            dataSource = _.sortBy(dataSource, [\"key\"]);\r\n            break;\r\n          default:\r\n            dataSource = dataSource;\r\n            break;\r\n        }\r\n      }\r\n      setData(dataSource || []);\r\n      setIsLoading(false);\r\n    }\r\n  }, [widget]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [getData]);\r\n\r\n  if (isLoading) return <Spinner />;\r\n\r\n  if (data.length === 0) return <EmptyWidget />;\r\n  console.log(\"====================================\");\r\n  console.log(colorScheme);\r\n  console.log(\"====================================\");\r\n  return (\r\n    <>\r\n      <div style={{ height: `${height}px` }}>\r\n        <ResponsiveBar\r\n          data={data}\r\n          margin={{\r\n            top: 30,\r\n            right: 30,\r\n            bottom: 30,\r\n            left: 30\r\n          }}\r\n          indexBy=\"key\"\r\n          colors={\r\n            customColorSchemeChecker && customColors.length > 0\r\n              ? customColors\r\n              : colorScheme === \"regagro\"\r\n              ? regagroScheme\r\n              : colorScheme === \"milk\"\r\n              ? milkScheme\r\n              : colorScheme === \"milk2\"\r\n              ? milkScheme2\r\n              : { scheme: colorScheme }\r\n          }\r\n          colorBy=\"index\"\r\n          layout={layout}\r\n          axisBottom={\r\n            bottomAxis && {\r\n              tickRotation: tickRotation\r\n            }\r\n          }\r\n          tooltip={datum => (\r\n            <TooltipBar\r\n              enable={useCustomTooltips}\r\n              datum={datum}\r\n              widgetID={widgetID}\r\n            ></TooltipBar>\r\n          )}\r\n          enableGridX={enableGridX}\r\n          enableGridY={enableGridY}\r\n          enableLabel={enableLabel}\r\n          reverse={reverse}\r\n          groupMode={groupMode}\r\n          padding={padding}\r\n          innerPadding={innerPadding}\r\n          borderRadius={borderRadius}\r\n          borderWidth={borderWidth}\r\n          axisBottom={{\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: \"key\",\r\n            legendOffset: 32\r\n          }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DynamicBarChart;\r\n","import React from \"react\";\r\n\r\nimport { BAR, PIE, LINE, TABLE, POINT } from \"./widgetTypes\";\r\n\r\nimport DynamicBarChart from \"./widgets/DynamicBarChart\";\r\nimport DynamicPieChart from \"./widgets/DynamicPieChart\";\r\nimport DynamicLineChart from \"./widgets/DynamicLineChart\";\r\nimport DynamicTableWidget from \"./widgets/DynamicTableWidget\";\r\nimport DynamicPointChart from \"./widgets/DynamicPointChart\";\r\n\r\nconst WidgetDiagram = ({ widget, width = 350, height = 450 }) => {\r\n  switch (widget.type) {\r\n    case BAR:\r\n      return (\r\n        <DynamicBarChart\r\n          width={width}\r\n          height={height}\r\n          widget={widget}\r\n          isDashboard={true}\r\n        />\r\n      );\r\n    case PIE:\r\n      return (\r\n        <DynamicPieChart\r\n          width={width}\r\n          height={height}\r\n          widget={widget}\r\n          isDashboard={true}\r\n        />\r\n      );\r\n    case LINE:\r\n      return (\r\n        <DynamicLineChart\r\n          width={width}\r\n          height={height}\r\n          widget={widget}\r\n          isDashboard={true}\r\n        />\r\n      );\r\n    case TABLE:\r\n      return (\r\n        <DynamicTableWidget\r\n          width={width}\r\n          height={height}\r\n          widget={widget}\r\n          isDashboard={true}\r\n        />\r\n      );\r\n    case POINT:\r\n      return (\r\n        <DynamicPointChart\r\n          width={width}\r\n          height={height}\r\n          widget={widget}\r\n          isDashboard={true}\r\n        />\r\n      );\r\n    default:\r\n      return <></>;\r\n  }\r\n};\r\n\r\nexport default WidgetDiagram;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { getTypeName } from \"../../../../../../admin/src/components/dashboard/widgetTypes\";\r\n\r\nfunction TypeField({ widget, setWidget, allowedTypes }) {\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label>Тип виджета</Form.Label>\r\n      <Form.Control\r\n        as=\"select\"\r\n        custom\r\n        value={widget.type}\r\n        onChange={(e) => setWidget({ ...widget, type: e.target.value })}\r\n      >\r\n        {allowedTypes.map((value, key) => (\r\n          <option key={key} value={value}>\r\n            {getTypeName(value)}\r\n          </option>\r\n        ))}\r\n      </Form.Control>\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nexport default TypeField;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport axios from \"axios\";\r\n\r\nfunction FilterField({ widget, setWidget, param, changeTitle }) {\r\n  const [options, setOptions] = useState([]);\r\n  //const [selected, setSelected] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const getOptions = useCallback(\r\n    async (param) => {\r\n      console.log('KOSTYA =>', param);\r\n      setIsLoading(true);\r\n      const req = await axios(`/ajax/models/queries/${param.model}/${param.value}`);\r\n      if (req.status === 200) {\r\n        console.log(req.data.data);\r\n        setOptions(req.data.data);\r\n        setIsLoading(false);\r\n      }\r\n    },\r\n    [param]\r\n  );\r\n\r\n  useEffect(() => {\r\n    options.length === 0 && getOptions(param);\r\n  }, [param]);\r\n\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label>{param.label}</Form.Label>\r\n      <Form.Control\r\n        as=\"select\"\r\n        custom\r\n        value={widget.filter?.[param.value] || \"\"}\r\n        onChange={(e) => {\r\n          let oldParam = widget.filter[param.value] || {};\r\n          let findLabel = options.find(option => option.value == oldParam);\r\n          let oldLabel = typeof findLabel !== 'undefined' ? findLabel.label : false;\r\n          console.log(oldLabel, '<---');\r\n          setWidget({ ...widget, filter: { ...widget.filter, [param.value]: e.target.value } })\r\n          let paramName = options.find(option => option.value == e.target.value).label || '';\r\n          changeTitle(` / ${paramName}`, ` / ${oldLabel}`);\r\n        }\r\n        }\r\n        required\r\n      >\r\n        <option value=\"\">-</option>\r\n        {options.map(({ value, label }) => (\r\n          <option key={value} value={value}>\r\n            {label}\r\n          </option>\r\n        ))}\r\n      </Form.Control>\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nexport default FilterField;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nfunction LegendField({ widget, setWidget }) {\r\n  return (\r\n    <Form.Group className=\"d-none\">\r\n      <Form.Label>Легенда</Form.Label>\r\n      <Form.Control\r\n        as=\"select\"\r\n        custom\r\n        value={widget.options.legend}\r\n        onChange={(e) =>\r\n          setWidget({\r\n            ...widget,\r\n            options: { ...widget.options, legend: e.target.value },\r\n          })\r\n        }\r\n        required\r\n      >\r\n        <option value=\"\">Не показывать</option>\r\n        <option value=\"horizontal\">Горизонтальная</option>\r\n        <option value=\"vertical\">Вертикальная</option>\r\n      </Form.Control>\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nexport default LegendField;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nfunction LegendPositionField({ widget, setWidget }) {\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label>Положение легенды</Form.Label>\r\n      <Form.Control\r\n        as=\"select\"\r\n        custom\r\n        value={widget.options.legendPosition}\r\n        onChange={(e) =>\r\n          setWidget({\r\n            ...widget,\r\n            options: { ...widget.options, legendPosition: e.target.value, legend: e.target.value == 'left' || e.target.value == 'right' ? 'vertical' : 'horizontal' },\r\n          })\r\n        }\r\n        required\r\n      >\r\n        <option value=\"bottom\">Внизу</option>\r\n        <option value=\"left\">Слева</option>\r\n        <option value=\"right\">Справа</option>\r\n        <option value=\"top\">Сверху</option>\r\n      </Form.Control>\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nexport default LegendPositionField;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { queryString } from \"../helpers/queryString\";\r\n\r\nfunction SourceField({ widget, setWidget, sources, changeTitle }) {\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label className={{\r\n        'd-none': sources.length === 1\r\n      }}>{sources.length > 1 || sources.length == 0 ? \"Источник данных\" : `Источник данных: ${sources[0].name}`}</Form.Label>\r\n      <Form.Control\r\n        as=\"select\"\r\n        custom\r\n        className={{\r\n          'd-none': sources.length === 1\r\n        }}\r\n        value={widget.source}\r\n        onChange={(e) => {\r\n          setWidget({\r\n            ...widget,\r\n            source: e.target.value //+ queryString(widget.filter),\r\n          });\r\n\r\n          let sourceName = sources.find(source => source.url == e.target.value).label || '';\r\n          changeTitle(` / ${sourceName}`);\r\n        }\r\n        }\r\n        required\r\n      >\r\n        <option value=\"\">-</option>\r\n        {sources.map(({ url, name }) => (\r\n          <option key={url} value={url}>\r\n            {name}\r\n          </option>))}\r\n      </Form.Control>\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nexport default SourceField;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { schemes } from \"reaviz\";\r\n\r\nfunction ColorSchemeField({ widget, setWidget }) {\r\n  let colors = Object.keys(schemes).map((name) => {\r\n    return { label: name, value: name };\r\n  });\r\n\r\n  colors = [...colors, { label: \"Custom\", value: \"Custom\" }];\r\n  return (\r\n    <Form.Group className=\"d-none\">\r\n      <Form.Label>Цветовая схема</Form.Label>\r\n      <Form.Control\r\n        as=\"select\"\r\n        custom\r\n        value={widget.options.colorScheme}\r\n        onChange={(e) =>\r\n          setWidget({ ...widget, options: { ...widget.options, colorScheme: e.target.value } })\r\n        }\r\n        required\r\n      >\r\n        {colors.map(({ label, value }) => (\r\n          <option key={value} value={value}>\r\n            {label}\r\n          </option>\r\n        ))}\r\n      </Form.Control>\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nexport default ColorSchemeField;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nfunction VerticalTableField({ widget, setWidget }) {\r\n  return (\r\n    <Form.Group>\r\n      <Form.Check\r\n        type=\"checkbox\"\r\n        checked={widget.options.isVertical}\r\n        label=\"Вертикальная таблица\"\r\n        onChange={(e) =>\r\n          setWidget({\r\n            ...widget,\r\n            options: { ...widget.options, isVertical: e.target.checked },\r\n          })\r\n        }\r\n      />\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nexport default VerticalTableField;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nfunction SortDataField({ widget, setWidget}) {\r\n\r\n    const sort = [\r\n        {\r\n            label: 'Без сортировки',\r\n            value: 0\r\n        },\r\n        {\r\n            label: 'По ключу',\r\n            value: 1\r\n        },\r\n        {\r\n            label: 'По значению',\r\n            value: 2\r\n        }\r\n    ]\r\n\r\n    return (<Form.Group>\r\n    <Form.Label>Сортировка данных</Form.Label>\r\n    <Form.Control\r\n      as=\"select\"\r\n      custom\r\n      value={widget.options.sort || 0}\r\n      onChange={(e) => setWidget({ ...widget, options: { ...widget.options, sort: e.target.value }})}\r\n      required\r\n    >\r\n      {sort.map(({ label, value }) => (\r\n        <option key={value} value={value}>\r\n          {label}\r\n        </option>\r\n      ))}\r\n    </Form.Control>\r\n  </Form.Group>);\r\n}\r\n\r\nexport default SortDataField;","import React, { useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { TABLE } from \"../../../../../admin/src/components/dashboard/widgetTypes\";\r\n\r\nimport WidgetDiagram from \"../../../../../admin/src/components/dashboard/WidgetDiagram\";\r\nimport TypeField from \"./fields/TypeField\";\r\nimport FilterField from \"./fields/FilterField\";\r\nimport LegendField from \"./fields/LegendField\";\r\nimport LegendPositionField from \"./fields/LegendPositionField\";\r\nimport SourceField from \"./fields/SourceField\";\r\nimport ColorSchemeField from \"./fields/ColorSchemeField\";\r\nimport VerticalTableField from \"./fields/VerticalTableField\";\r\nimport SortDataField from \"./fields/SortDataField\";\r\nimport { queryString } from \"./helpers/queryString\";\r\n\r\nconst AddWidget = ({ id, onAdd, setIsShow, settings }) => {\r\n  const [widget, setWidget] = useState({\r\n    type: TABLE,\r\n    source: \"\",\r\n    options: {\r\n      isVertical: false,\r\n      legend: \"\",\r\n      legendPosition: \"bottom\",\r\n      colorScheme: 'Custom'\r\n    },\r\n    filter: {},\r\n  });\r\n\r\n  const title = useRef(\"\");\r\n\r\n  const onSave = async () => {\r\n    const data = {\r\n      ...widget,\r\n      title: title.current.value,\r\n      options: JSON.stringify(widget.options),\r\n      filter: JSON.stringify(widget.filter),\r\n    };\r\n    console.log('ON SAVE =>', JSON.stringify(widget.options),\r\n      JSON.stringify(widget.filter));\r\n    const req = await axios.post(`/ajax/dashboards/${id}`, data);\r\n    if (req.status === 200) {\r\n      onAdd(req.data);\r\n      setIsShow(false);\r\n    }\r\n  };\r\n\r\n  const handleFocus = (e) => {\r\n    const { value } = e.target;\r\n    if (value === \"Новый виджет\") {\r\n      title.current.value = \"\";\r\n    }\r\n  };\r\n\r\n  const handleBlur = (e) => {\r\n    const { value } = e.target;\r\n    if (value === \"\") {\r\n      title.current.value = \"Новый виджет\";\r\n    }\r\n  };\r\n\r\n  const getTypesBySource = (s) => {\r\n    let string = s;\r\n    string = string.includes('?') ? string.split('?')[0] : s;\r\n\r\n    const source = settings.sql?.find(\r\n      (item) => string === `/ajax/models/queries/${item.model}/${item.value}`\r\n    );\r\n    return source?.types?.map((type) => type.value) || [];\r\n  };\r\n\r\n  const titleHandle = (string, oldString = false) => {\r\n    if (title.current.value.includes(oldString)) {\r\n      title.current.value = title.current.value.replace(oldString, string);\r\n    }\r\n    if (!title.current.value.includes(string)) {\r\n      title.current.value += string;\r\n    }\r\n  }\r\n\r\n  const composeSources = (sources = []) => {\r\n    if ((!sources) || sources.length === 0) return [];\r\n\r\n    return sources.map((source) => {\r\n      return {\r\n        name: source.label,\r\n        url: `/ajax/models/queries/${source.model}/${source.value}`,\r\n      };\r\n    });\r\n  };\r\n\r\n  if (composeSources(settings.sql).length === 1) {\r\n    let currentSource = composeSources(settings.sql)[0];\r\n    // let filter = '';\r\n    // if (Object.keys(widget.filter).length !== 0) {\r\n    //   filter = queryString(widget.filter);\r\n    // }\r\n    widget.source = currentSource.url;\r\n\r\n    setTimeout(() => titleHandle(`${currentSource.name}`), 0);\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <Card.Title>Добавить виджет</Card.Title>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Label>Название виджета</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              ref={title}\r\n              onFocus={handleFocus}\r\n              onBlur={handleBlur}\r\n              defaultValue=\"\"\r\n              required\r\n            />\r\n          </Form.Group>\r\n\r\n          <SourceField\r\n            widget={widget}\r\n            setWidget={setWidget}\r\n            sources={composeSources(settings.sql)}\r\n            changeTitle={titleHandle}\r\n          />\r\n\r\n          <SortDataField widget={widget} setWidget={setWidget} />\r\n          \r\n          {widget.source &&\r\n            settings.filter?.length > 0 &&\r\n            settings.filter?.map((param) => (\r\n              <FilterField key={param.value} widget={widget} setWidget={setWidget} param={param}\r\n                changeTitle={titleHandle} />\r\n            ))}\r\n\r\n          <TypeField\r\n            widget={widget}\r\n            setWidget={setWidget}\r\n            allowedTypes={[...getTypesBySource(widget.source), TABLE]}\r\n          />\r\n\r\n          {widget.source && widget.type === TABLE && (\r\n            <VerticalTableField widget={widget} setWidget={setWidget} />\r\n          )}\r\n\r\n          <ColorSchemeField widget={widget} setWidget={setWidget} />\r\n\r\n\r\n          {/* <LegendField widget={widget} setWidget={setWidget} /> */}\r\n          {widget.options?.legend && <LegendPositionField widget={widget} setWidget={setWidget} />}\r\n        </Form>\r\n\r\n        <div className={`widget-placeholder altrp-chart ${widget.options?.legendPosition}`}>\r\n          {widget.source && <WidgetDiagram widget={widget} width={360} height={360} />}\r\n        </div>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <Button variant=\"secondary\" onClick={() => setIsShow(false)}>\r\n          Закрыть\r\n        </Button>\r\n        <Button variant=\"warning\" onClick={onSave} disabled={widget.source === \"\"}>\r\n          Сохранить\r\n        </Button>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddWidget;\r\n","import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { TABLE } from \"../../../../../admin/src/components/dashboard/widgetTypes\";\r\n\r\nimport WidgetDiagram from \"../../../../../admin/src/components/dashboard/WidgetDiagram\";\r\nimport TypeField from \"./fields/TypeField\";\r\nimport LegendField from \"./fields/LegendField\";\r\nimport LegendPositionField from \"./fields/LegendPositionField\";\r\nimport FilterField from \"./fields/FilterField\";\r\nimport SourceField from \"./fields/SourceField\";\r\nimport ColorSchemeField from \"./fields/ColorSchemeField\";\r\nimport VerticalTableField from \"./fields/VerticalTableField\";\r\nimport SortDataField from \"./fields/SortDataField\";\r\nimport { queryString } from \"./helpers/queryString\";\r\n\r\nconst EditWidget = ({ data, onEdited, setIsEdit, settings }) => {\r\n  const [widget, setWidget] = useState(data);\r\n\r\n  const title = useRef(widget.title);\r\n\r\n  const onSave = async () => {\r\n    onEdited({\r\n      ...widget,\r\n      title: title.current.value,\r\n    });\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const getTypesBySource = (s) => {\r\n    let string = s;\r\n    string = string.includes('?') ? string.split('?')[0] : s;\r\n\r\n    const source =\r\n      settings &&\r\n      settings.sql?.find((item) => string === `/ajax/models/queries/${item.model}/${item.value}`);\r\n\r\n    return source?.types?.map((type) => type.value) || [];\r\n  };\r\n\r\n  const composeSources = (sources = []) => {\r\n    if ((!sources) || sources.length === 0) return [];\r\n\r\n    return sources.map((source) => {\r\n      return {\r\n        name: source.label,\r\n        url: `/ajax/models/queries/${source.model}/${source.value}`,\r\n      };\r\n    });\r\n  };\r\n\r\n  const titleHandle = (string, oldString = false) => {\r\n    if (title.current.value.includes(oldString)) {\r\n      title.current.value = title.current.value.replace(oldString, string);\r\n    }\r\n\r\n    if (!title.current.value.includes(string)) {\r\n      title.current.value += string;\r\n    }\r\n  }\r\n\r\n  if (composeSources(settings.sql).length === 1) {\r\n    let currentSource = composeSources(settings.sql)[0];\r\n    // let filter = '';\r\n    // if (Object.keys(widget.filter).length !== 0) {\r\n    // console.log(widget.filter);\r\n    // filter = queryString(widget.filter);\r\n    // }\r\n    widget.source = currentSource.url;\r\n    // widget.source = currentSource.url + filter;\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        {/* <Card.Title>Редактировать виджет</Card.Title> */}\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Label>Название виджета</Form.Label>\r\n            <Form.Control type=\"text\" ref={title} defaultValue={widget.title} required />\r\n          </Form.Group>\r\n\r\n          <SourceField\r\n            widget={widget}\r\n            setWidget={setWidget}\r\n            sources={composeSources(settings.sql)}\r\n            changeTitle={titleHandle}\r\n          />\r\n          <SortDataField widget={widget} setWidget={setWidget} />\r\n\r\n          {widget.source &&\r\n            settings.filter?.length > 0 &&\r\n            settings.filter?.map((param) => (\r\n              <FilterField key={param.value} widget={widget} setWidget={setWidget} param={param} changeTitle={titleHandle} />\r\n            ))}\r\n\r\n          <TypeField\r\n            widget={widget}\r\n            setWidget={setWidget}\r\n            allowedTypes={[...getTypesBySource(widget.source), TABLE]}\r\n          />\r\n\r\n          {widget.source && widget.type === TABLE && (\r\n            <VerticalTableField widget={widget} setWidget={setWidget} />\r\n          )}\r\n\r\n          <ColorSchemeField widget={widget} setWidget={setWidget} />\r\n\r\n          <LegendField widget={widget} setWidget={setWidget} />\r\n          <LegendPositionField widget={widget} setWidget={setWidget} />\r\n        </Form>\r\n\r\n        <div className={`widget-placeholder altrp-chart ${widget.options?.legendPosition}`}>\r\n          {widget.source && <WidgetDiagram widget={widget} width={360} height={360} />}\r\n        </div>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <Button variant=\"secondary\" onClick={() => setIsEdit(false)}>\r\n          Закрыть\r\n        </Button>\r\n        <Button variant=\"warning\" onClick={onSave} disabled={widget.source === \"\"}>\r\n          Сохранить\r\n        </Button>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default React.memo(EditWidget);\r\n","import React, { useState, useRef } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport domtoimage from \"dom-to-image\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport ThreeDotsVertical from \"react-bootstrap-icons/dist/icons/three-dots-vertical\";\r\n\r\nimport GearFill from \"react-bootstrap-icons/dist/icons/sliders\";\r\nimport TrashFill from \"react-bootstrap-icons/dist/icons/trash\";\r\nimport PrinterFill from \"react-bootstrap-icons/dist/icons/printer\";\r\nimport FileEarMark from \"react-bootstrap-icons/dist/icons/cloud-download\";\r\nimport Pin from \"../../../svgs/pin.svg\";\r\n\r\nimport EditWidget from \"./EditWidget\";\r\nimport WidgetDiagram from \"../../../../../admin/src/components/dashboard/WidgetDiagram\";\r\n\r\nimport { exportComponentAsJPEG } from \"react-component-export-image\";\r\n\r\nfunction CardWidget({ widget, onDeleted, onEdited, settings, isMobile }) {\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const ref = useRef(null);\r\n\r\n  const saveWidget = async () => {\r\n    const itemDom = ref.current.querySelector(\".card-body\");\r\n    const png = await domtoimage.toPng(itemDom);\r\n    const link = document.createElement(\"a\");\r\n    link.download = `widget_${new Date().getTime()}.png`;\r\n    link.href = png;\r\n    link.click();\r\n  };\r\n\r\n  return (\r\n    <Card key={widget.id} ref={ref}>\r\n      <Card.Header>\r\n        <Card.Title>{widget.title}</Card.Title>\r\n        <Card.Title>\r\n          <div className=\"dropdownTogglerContainer\">\r\n            <Dropdown drop=\"left\">\r\n              <Dropdown.Toggle variant=\"light\">\r\n                <ThreeDotsVertical color=\"#7a7a7b\" />\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu\r\n                className=\"dropdownMenuToggle\"\r\n                style={{\r\n                  zIndex: 999999,\r\n                  background: \"rgba(255,255,255,1)\"\r\n                }}\r\n              >\r\n                <Dropdown.Item>\r\n                  <ReactToPrint\r\n                    trigger={() => {\r\n                      return (\r\n                        <button type=\"button\" title=\"Распечатать виджет\">\r\n                          <PrinterFill />\r\n                        </button>\r\n                      );\r\n                    }}\r\n                    content={() => ref.current}\r\n                  />\r\n                </Dropdown.Item>\r\n                <Dropdown.Item>\r\n                  <button\r\n                    type=\"button\"\r\n                    title=\"Скачать файл\"\r\n                    onClick={saveWidget}\r\n                  >\r\n                    <FileEarMark />\r\n                  </button>\r\n                </Dropdown.Item>\r\n                <Dropdown.Item>\r\n                  <button\r\n                    type=\"button\"\r\n                    title=\"Настроить виджет\"\r\n                    onClick={() => setIsEdit(!isEdit)}\r\n                  >\r\n                    <GearFill />\r\n                  </button>\r\n                </Dropdown.Item>\r\n                <Dropdown.Item>\r\n                  <button\r\n                    type=\"button\"\r\n                    title=\"Удалить виджет\"\r\n                    onClick={() => onDeleted(widget)}\r\n                  >\r\n                    <TrashFill />\r\n                  </button>\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </div>\r\n        </Card.Title>\r\n      </Card.Header>\r\n      <Card.Body className={`altrp-chart ${widget.options?.legendPosition}`}>\r\n        {isEdit ? (\r\n          <EditWidget\r\n            settings={settings}\r\n            data={widget}\r\n            onEdited={onEdited}\r\n            setIsEdit={setIsEdit}\r\n          />\r\n        ) : (\r\n          <WidgetDiagram widget={widget} width={360} height={300} />\r\n        )}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CardWidget;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport axios from \"axios\";\r\n\r\nclass GlobalParameter extends Component {\r\n      constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n              options: [],\r\n            };\r\n      }\r\n\r\n      async componentDidMount() {\r\n            const req = await axios(`/ajax/models/queries/${this.props.parameter.model}/${this.props.parameter.value}`);\r\n            if(req.status === 200){\r\n                  this.setState({\r\n                        options: req.data.data\r\n                  });\r\n            }\r\n            else{\r\n                  this.setState({\r\n                        options: []\r\n                  });\r\n            }\r\n      }\r\n\r\n      render(){\r\n            return(\r\n               <Form.Control\r\n                 as=\"select\"\r\n                 className=\"global-select\"\r\n                 onChange={e=>{\r\n                    this.props.setGlobalOption(this.props.parameter.value,e.target.value)\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                  }}\r\n                 custom\r\n               >\r\n                 <option value=\"\">{this.props.parameter.label}</option>\r\n                 {this.state.options.map(({ id, name, value, label },index) => (\r\n                   <option key={index} value={value || id}>\r\n                     {label || name}\r\n                   </option>\r\n                 ))}\r\n               </Form.Control>\r\n            );\r\n      }\r\n}\r\n\r\nexport default GlobalParameter;","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport DatePicker, { registerLocale, setDefaultLocale } from \"react-datepicker\";\r\nimport sub from \"date-fns/sub\";\r\nimport axios from \"axios\";\r\nimport ru from \"date-fns/locale/ru\";\r\n\r\nimport ThreeDotsVertical from \"react-bootstrap-icons/dist/icons/three-dots-vertical\";\r\n\r\nimport AddWidget from \"./AddWidget\";\r\nimport CardWidget from \"./CardWidget\";\r\nimport GlobalParameter from \"./fields/GlobalParameter\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nregisterLocale(\"ru\", ru);\r\nsetDefaultLocale(\"ru\");\r\n\r\nconst AltrpDashboards = ({ id, settings, globalParameter }) => {\r\n  const start = new Date().setFullYear(new Date().getFullYear() - 1);\r\n  const end = new Date().getTime();\r\n  const [widgets, setWidgets] = useState([]);\r\n  const [isShow, setIsShow] = useState(false);\r\n  const [startDate, setStartDate] = useState(start);\r\n  const [endDate, setEndDate] = useState(end);\r\n  const isMobile = screen.width <= 480; //Проверка на ширину экрана\r\n  let navPosition = 'jusitfy-content-end';\r\n  /*\r\n   * Получить настройки дашборда для текущего пользователя\r\n   */\r\n\r\n  const getSettings = async (id) => {\r\n    try {\r\n      // Отправляем запрос\r\n      const req = await axios(`/ajax/dashboards/${id}/settings`, {\r\n        headers: [\r\n          { key: 'Cache-Control', value: 'no-store' }\r\n        ]\r\n      });\r\n      // Если успешно\r\n      if (req.status === 200) {\r\n        console.log(\"req.data :>> \", req.data);\r\n        // Получаем настройки\r\n        return JSON.parse(req.data.settings);\r\n      } else {\r\n        return {};\r\n      }\r\n    } catch (error) {\r\n      return {};\r\n    }\r\n  };\r\n\r\n  /*\r\n   * Получаем настройки и виджеты\r\n   */\r\n  const getWidgets = async (id) => {\r\n    try {\r\n      const req = await axios(`/ajax/dashboards/${id}`, {\r\n        headers: [\r\n          { key: 'Cache-Control', value: 'no-store' }\r\n        ]\r\n      });\r\n      if (req.status === 200) {\r\n        console.log(\"req.data DASHBOARDS:>> \", req.data);\r\n        return req.data;\r\n      } else {\r\n        return [];\r\n      }\r\n    } catch (error) {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  /*\r\n   * Получаем данные\r\n   */\r\n  const getData = useCallback(\r\n    async (id, startDate, endDate) => {\r\n      try {\r\n        // Получаем виджеты\r\n        const myWidgets = await getWidgets(id);\r\n        // Если виджетов нет ничего не делаем\r\n        //if (myWidgets.length === 0) return;\r\n        // Если есть, получаем настройки\r\n        const filters = await getSettings(id);\r\n        // Если настройки есть\r\n        if (filters !== null && filters.hasOwnProperty(\"startDate\") && filters.hasOwnProperty(\"endDate\")) {\r\n          // Записываем вижеты в состояние с настройками\r\n          setWidgets(\r\n            myWidgets.map((w) => {\r\n              return {\r\n                ...w,\r\n                options: { ...JSON.parse(w.options), animated: settings.animated },\r\n                filter: { ...JSON.parse(w.filter), ...filters },\r\n              };\r\n            })\r\n          );\r\n          // Записываем даты в состояние\r\n          setStartDate(filters.startDate);\r\n          setEndDate(filters.endDate);\r\n        } else {\r\n          // Возвращаем виджеты с дефолтными настройками\r\n          setWidgets(\r\n            myWidgets.map((w) => {\r\n              return {\r\n                ...w,\r\n                options: { ...JSON.parse(w.options), animated: settings.animated },\r\n                filter: { ...JSON.parse(w.filter), startDate, endDate },\r\n              };\r\n            })\r\n          );\r\n          // И записываем настройки\r\n          axios.post(`/ajax/dashboards/${id}/settings`, { settings: { startDate, endDate } }, {\r\n            headers: [\r\n              { key: 'Cache-Control', value: 'no-store' }\r\n            ]\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n       }\r\n    },\r\n    [id, settings.animated, startDate, endDate]\r\n  );\r\n\r\n  const handleAdd = (widget) => {\r\n    setWidgets([widget, ...widgets]);\r\n  };\r\n\r\n  const handleRemove = (widget) => {\r\n    setWidgets(widgets.filter((w) => w.id !== widget.id));\r\n    axios.delete(`/ajax/dashboards/${widget.id}`, {\r\n      headers: [\r\n        { key: 'Cache-Control', value: 'no-store' }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const handleEdit = (widget) => {\r\n    setWidgets(widgets.map((w) => (w.id === widget.id ? widget : w)));\r\n    axios.put(`/ajax/dashboards/${widget.id}`, {\r\n      ...widget,\r\n      options: JSON.stringify(widget.options),\r\n      filter: JSON.stringify(widget.filter),\r\n    }, {\r\n      headers: [\r\n        { key: 'Cache-Control', value: 'no-store' }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const handleChangeStartDate = (date) => {\r\n    setStartDate(date.getTime());\r\n    axios.post(`/ajax/dashboards/${id}/settings`, {\r\n      settings: { startDate: date.getTime(), endDate },\r\n    }, {\r\n      headers: [\r\n        { key: 'Cache-Control', value: 'no-store' }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const handleChangeEndDate = (date) => {\r\n    setEndDate(date.getTime());\r\n    axios.post(`/ajax/dashboards/${id}/settings`, {\r\n      settings: { startDate, endDate: date.getTime() },\r\n    }, {\r\n      headers: [\r\n        { key: 'Cache-Control', value: 'no-store' }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const handleWeek = () => {\r\n    const start = sub(endDate, { weeks: 1 }).getTime();\r\n    setStartDate(start);\r\n    axios.post(`/ajax/dashboards/${id}/settings`, { settings: { startDate: start, endDate } }, {\r\n      headers: [\r\n        { key: 'Cache-Control', value: 'no-store' }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const handleMonth = () => {\r\n    const start = sub(endDate, { months: 1 }).getTime();\r\n    setStartDate(start);\r\n    axios.post(`/ajax/dashboards/${id}/settings`, { settings: { startDate: start, endDate } }, {\r\n      headers: [\r\n        { key: 'Cache-Control', value: 'no-store' }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const setGlobalOption = (key, value) => {\r\n    setWidgets(widgets.map(widget => ({\r\n      ...widget,\r\n      filter: { ...widget.filter, [key]: value }\r\n    })));\r\n  }\r\n  /**\r\n   * Навигационное меню, показывающееся на экаранах шириной более 480px\r\n   * */\r\n  const navigationMenu = () => (\r\n    <Nav className={navPosition}>\r\n      <Nav.Item className=\"nav-button\" onClick={() => setIsShow(true)}>\r\n        Добавить виджет\r\n      </Nav.Item>\r\n      <Nav.Item className=\"nav-datepickers\">\r\n        <div className=\"nav-datepicker\">\r\n          <DatePicker\r\n            closeOnScroll={true}\r\n            className=\"form-control first\"\r\n            popperClassName=\"datepicker-popper-mobile\"\r\n            popperPlacement=\"bottom-end\"\r\n            selected={startDate}\r\n            selectsStart\r\n            onChange={handleChangeStartDate}\r\n            dateFormat=\"dd.MM.yyyy\"\r\n            showYearDropdown\r\n          />\r\n        </div>\r\n        <div className=\"nav-datepicker\">\r\n          <DatePicker\r\n            closeOnScroll={true}\r\n            className=\"form-control last\"\r\n            popperClassName=\"datepicker-popper-mobile\"\r\n            popperPlacement=\"bottom-end\"\r\n            selected={endDate}\r\n            minDate={startDate}\r\n            selectsEnd\r\n            onChange={handleChangeEndDate}\r\n            dateFormat=\"dd.MM.yyyy\"\r\n            showYearDropdown\r\n          />\r\n        </div>\r\n      </Nav.Item>\r\n      <Nav.Item className=\"nav-button\" onClick={handleWeek}>\r\n        Неделя\r\n      </Nav.Item>\r\n      <Nav.Item className=\"nav-button\" onClick={handleMonth}>\r\n        Месяц\r\n      </Nav.Item>\r\n      { globalParameter &&\r\n        globalParameter.map((param, index) => (<Nav.Item key={index}>\r\n          <GlobalParameter settings={settings} setGlobalOption={setGlobalOption} parameter={param} />\r\n        </Nav.Item>))\r\n      }\r\n    </Nav>\r\n  );\r\n\r\n\r\n  /**\r\n   * Выпадающее меню, показывающееся на экаранах шириной менее 480px\r\n   * */\r\n  const dropdownMenu = () => (\r\n    <Dropdown>\r\n      <Dropdown.Toggle variant=\"light\">\r\n        <ThreeDotsVertical color=\"#7a7a7b\" />\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setIsShow(true)}>Добавить виджет</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.Item onClick={handleWeek}>Неделя</Dropdown.Item>\r\n        <Dropdown.Item onClick={handleMonth}>Месяц</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.ItemText as=\"div\">\r\n          <DatePicker\r\n            closeOnScroll={true}\r\n            className=\"form-control first\"\r\n            popperClassName=\"datepicker-popper-mobile\"\r\n            popperPlacement=\"bottom-end\"\r\n            selected={startDate}\r\n            selectsStart\r\n            onChange={handleChangeStartDate}\r\n            dateFormat=\"dd.MM.yyyy\"\r\n            showYearDropdown\r\n          />\r\n        </Dropdown.ItemText>\r\n        <Dropdown.ItemText as=\"div\">\r\n          <DatePicker\r\n            closeOnScroll={true}\r\n            className=\"form-control last\"\r\n            popperClassName=\"datepicker-popper-mobile\"\r\n            popperPlacement=\"bottom-end\"\r\n            selected={endDate}\r\n            minDate={startDate}\r\n            selectsEnd\r\n            onChange={handleChangeEndDate}\r\n            dateFormat=\"dd.MM.yyyy\"\r\n            showYearDropdown\r\n          />\r\n        </Dropdown.ItemText>\r\n        <Dropdown.Divider />\r\n        {globalParameter &&\r\n          globalParameter.map((param, index) => (<Dropdown.Item onClick={e => { e.stopPropagation(); e.preventDefault(); }} key={index}>\r\n            <GlobalParameter settings={settings} setGlobalOption={setGlobalOption} parameter={param} />\r\n          </Dropdown.Item>))\r\n        }\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n\r\n  useEffect(() => {\r\n    getData(id, startDate, endDate);\r\n  }, [id, startDate, endDate]);\r\n\r\n  return (\r\n    <div className=\"altrp-dashboard\">\r\n      <div className=\"altrp-dashboard__controls\">\r\n        {isMobile ? dropdownMenu() : navigationMenu()}\r\n      </div>\r\n      <div className=\"altrp-dashboard__widgets\">\r\n        {isShow && (\r\n          <AddWidget settings={settings} id={id} setIsShow={setIsShow} onAdd={handleAdd} />\r\n        )}\r\n        {widgets.map((widget) => {\r\n          return (\r\n          <CardWidget\r\n            settings={settings}\r\n            key={widget.id}\r\n            widget={widget}\r\n            onDeleted={handleRemove}\r\n            onEdited={handleEdit}\r\n            isMobile={isMobile}\r\n          />\r\n        )})}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AltrpDashboards;\r\n"],"sourceRoot":""}