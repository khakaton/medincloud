{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","webpack:///./resources/modules/editor/src/js/components/altrp-image/Skeleton.js","webpack:///./resources/modules/editor/src/js/components/altrp-image/ImagePlaceholder.js","webpack:///./resources/modules/editor/src/js/components/altrp-image/AltrpImage.js","webpack:///./resources/modules/editor/src/js/components/widgets/IconWidget.js"],"names":["_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","defaultBaseColor","SkeletonSpan","styled","duration","delay","keyframes","Math","floor","undefined","color","highlightColor","props","className","_","isNumber","width","settings","aspect_ratio_size","getResponsiveSetting","Number","height","indexOf","style","custom_aspect","isString","mediaWidth","mediaHeight","window","altrpHelpers","isEditor","isSSR","renderAsset","AltrpImage","imageRef","React","createRef","visible","element","lazy","altrpImageLazy","state","update","timeoutId","setTimeout","setState","clearTimeout","this","prevProps","prevState","current","getRoot","popupGUID","popupTrigger","popupID","scrollPosition","scroller","mainScrollbars","document","querySelector","checkElementInViewBox","media","image","noDefault","placeholderStyles","File","default","keys","length","url","name","assetType","background","placeholder","main_color","ref","getSettings","altrpSkeletonColor","altrpSkeletonHighlightColor","cloneElement","id","Fragment","Component","reactRedux","connect","IconWidget","__","component","elementDecorator","baseRender","render","bodyContent","label","createElement","html_tag_additional_options_content","label_icon_box_content","switch_link_icon_box_content","global_link_additional_options_content","link","link_icon_box_content","indicator","indicator_additional_options_content","pos","x","horizontal_offset_indicator_content","y","vertical_offset_indicator_content","rotate","rotate_indicator_content","size","transform","unit","iconComponent","iconsManager","renderIcon","icon_indicator_content","badge","badge_additional_options_content","badgeClasses","position_badge_content","horizontal_offset_badge_content","vertical_offset_badge_content","rotate_badge_content","text_badge_content","bodyStyles","footerStyles","headerStyles","bodyAlignment","footerAligment","icon_position_desktop_position_style","textAlign","justifyContent","marginLeft","marginBottom","marginRight","readMore","read_more_button_additional_options_content","ReadMoreIcon","icon_read_more_content","readMorePosOnHover","show_on_hover_additional_options_content","horizontal_offset_additional_options_content","vertical_offset_additional_options_content","readMoreContent","icon_position_additional_options_content","text_read_more_content","readMoreLink","link_read_more_content","readMoreNoLink","iconContent","media_icon_box_content","description_icon_box_content","iconContentLink","global_link_link_additional_options_content"],"mappings":"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","file":"IconWidget.112e197bb409c588f843.bundle.js","sourcesContent":["export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import styled, { keyframes} from 'styled-components';\r\n\r\nexport const defaultBaseColor = \"#eee\";\r\n\r\nexport const defaultHighlightColor = \"#f5f5f5\";\r\n\r\nexport const skeletonKeyframes = (duration, delay) => keyframes`\r\n  0% {\r\n    background-position: -200px 0;\r\n  }\r\n  ${\r\n  delay > 0\r\n    ? `${Math.floor((1 / (duration + delay)) * duration * 100)}% {\r\n    background-position: calc(200px + 100%) 0;\r\n  }`\r\n    : undefined\r\n}\r\n  100% {\r\n    background-position: calc(200px + 100%) 0;\r\n  }\r\n`;\r\nconst SkeletonSpan = styled.span`\r\n  animation: ${skeletonKeyframes} 1.2s ease-in-out infinite;\r\n  background-color: ${({color})=>`${color || defaultBaseColor}`};\r\n  background-size: 200px 100%;\r\n  background-repeat: no-repeat;\r\n  background-image: linear-gradient(90deg, ${({highlightColor, color})=>{\r\n    return `${color || defaultBaseColor}, ${highlightColor || defaultHighlightColor}, ${color || defaultBaseColor}`;\r\n  }});\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  height: 100%;\r\n`;\r\nconst Skeleton = (props) => <div className={props.className}><SkeletonSpan {...props} className=\"altrp-skeleton__span\"/></div>\r\nexport default Skeleton;\r\n","import styled from 'styled-components';\r\nimport {getResponsiveSetting} from \"../../../../../front-app/src/js/helpers\";\r\n\r\nconst ImagePlaceholder = styled.div`& {\r\n  position: relative;\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n  width:${props => {\r\n  if (_.isNumber(props.width)) {\r\n    return props.width + 'px';\r\n  }\r\n  return props.width ? props.width : '100%'\r\n}};\r\n${(props) => {\r\n  const {settings} = props;\r\n  const aspect_ratio_size = getResponsiveSetting(settings, 'aspect_ratio_size');\r\n  if(Number(aspect_ratio_size) !== 0 && aspect_ratio_size === 'custom'|| Number(aspect_ratio_size)){\r\n    return 'height:auto;'\r\n  }\r\n  if(! props.height || props.height.indexOf('%') !== -1) {\r\n    return 'height:auto;'\r\n  }\r\n  return `height:${props.height ? props.height : 'auto'};`;\r\n}}\r\n\r\n  background-color: ${props => props.color ? props.color : '#fff'};\r\n}\r\n&::before{\r\n  display: block;\r\n  content: '';\r\n  width: 100%;\r\n${(props) => {\r\n  const {settings, height} = props;\r\n  let style = '';\r\n  const aspect_ratio_size = getResponsiveSetting(settings, 'aspect_ratio_size');\r\n  if(Number(aspect_ratio_size) !== 0) {\r\n    if(aspect_ratio_size === 'custom') {\r\n      let custom_aspect = getResponsiveSetting(settings, 'custom_aspect');\r\n      custom_aspect = Number(custom_aspect) || 100;\r\n      style += `padding-top:${custom_aspect}%;`;\r\n    } else if(Number(aspect_ratio_size)){\r\n      style += `padding-top:${aspect_ratio_size}%;`;\r\n    }\r\n    return style;\r\n  }\r\n  if (height && _.isString(height) && height.indexOf('%') === -1) {\r\n    return style;\r\n  }\r\n  if (Number(props.mediaWidth) && Number(props.mediaHeight)) {\r\n    style += `padding-top:${(props.mediaHeight / props.mediaWidth) * 100}%;`\r\n  }\r\n  return style;\r\n}};\r\n}\r\n&& .altrp-skeleton,\r\n&& .altrp-image{\r\n  position:absolute;\r\n  top:0;\r\n  left:0;\r\n  right:0;\r\n  bottom:0;\r\n  height:100%;\r\n  width:100%;\r\n}\r\n`;\r\n\r\nexport default ImagePlaceholder;\r\n","import Skeleton from './Skeleton';\r\nimport ImagePlaceholder from \"./ImagePlaceholder\";\r\nimport {checkElementInViewBox} from \"../../../../../front-app/src/js/helpers/elements\";\r\nconst {isEditor, isSSR, renderAsset} = window.altrpHelpers;\r\n\r\nclass AltrpImage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.imageRef = React.createRef();\r\n    let visible = true;\r\n    if(isSSR() && ! props.element?.getResponsiveSetting('lazyload_disable')){\r\n      visible = false;\r\n    } else if (isEditor() || props.lazy === false) {\r\n\r\n    } else if (window.altrpImageLazy\r\n        && window.altrpImageLazy !== 'none'\r\n        && props.element\r\n        && ! props.element?.getResponsiveSetting('lazyload_disable')) {\r\n      visible = false;\r\n    }\r\n    this.state = {\r\n      visible,\r\n      update: 0,\r\n    };\r\n    this.timeoutId = setTimeout(() => this.setState(state => ({...state, update: state.update++})), 500);\r\n  }\r\n\r\n  /**\r\n   * очищаем обновление\r\n   */\r\n  componentWillUnmount() {\r\n    clearTimeout(this.timeoutId);\r\n  }\r\n\r\n  /**\r\n   * Проверим нужно ли обновить видимость\r\n   * @param {{}} prevProps\r\n   * @param {{}} prevState\r\n   */\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(this.state.visible){\r\n      clearTimeout(this.timeoutId);\r\n    }\r\n    if (this.state.visible || ! this.imageRef.current) {\r\n      return;\r\n    }\r\n    if(this.props?.element?.getRoot()?.popupGUID && this.props.element.getRoot().popupGUID === this.props.popupTrigger.popupID){\r\n      this.setState(state => ({...state, visible: true}));\r\n    }\r\n    if (prevProps.scrollPosition === this.props.scrollPosition && prevState.update === this.state.update) {\r\n      return;\r\n    }\r\n    let scroller = window.mainScrollbars;\r\n    if(! scroller){\r\n      scroller = document.querySelector('.front-app-content');\r\n    }\r\n    if(! scroller){\r\n      scroller = document.querySelector('.front-app');\r\n    }\r\n    if (this.imageRef.current && checkElementInViewBox(this.imageRef.current, scroller)) {\r\n      clearTimeout(this.timeoutId);\r\n      this.setState(state => ({...state, visible: true}));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let media = {...this.props.image};\r\n    const {visible} = this.state;\r\n    const noDefault = this.props.noDefault || false;\r\n    const placeholderStyles = {};\r\n\r\n    let width = this.props.width;\r\n    let height = this.props.height;\r\n    if (! isSSR() && this.props.image instanceof File) {\r\n      media = this.props.image\r\n    } else {\r\n      if (this.props.default) {\r\n        if ((Object.keys(media).length === 0)) {\r\n          media = this.props.default;\r\n        }\r\n      } else if (noDefault) {\r\n        return \"\"\r\n      } else {\r\n        media.url = media.url || '/img/nullImage.png';\r\n        media.name = media.name || 'null';\r\n        media.assetType = media.assetType || undefined;\r\n      }\r\n    }\r\n    let image = renderAsset(media);\r\n    if(visible || window.altrpImageLazy === 'skeleton'){\r\n      placeholderStyles.background = 'transparent';\r\n    }\r\n\r\n    let placeholder = <ImagePlaceholder color={media.main_color}\r\n                                        className={'altrp-image-placeholder '}\r\n                                        ref={this.imageRef}\r\n                                        settings={this.props.element?.getSettings() || {}}\r\n                                        height={height}\r\n                                        width={width}\r\n                                        style={placeholderStyles}\r\n                                        mediaWidth={media.width || 100}\r\n                                        mediaHeight={media.height || 75}>\r\n      {window.altrpImageLazy === 'skeleton'\r\n        && ! visible\r\n        &&\r\n          <Skeleton className=\"altrp-skeleton\"\r\n                    color={window.altrpSkeletonColor}\r\n                    highlightColor={window.altrpSkeletonHighlightColor}/>\r\n\r\n      }\r\n      {visible && React.cloneElement(image, {\r\n        className: this.props.className,\r\n        id: this.props.id || null,\r\n        style: this.props.style,\r\n      })}\r\n      </ImagePlaceholder>;\r\n\r\n    return <React.Fragment>\r\n      {placeholder}\r\n    </React.Fragment>\r\n  }\r\n}\r\n\r\nlet _export;\r\nif (isEditor()) {\r\n  _export = AltrpImage;\r\n} else {\r\n\r\n  function mapStateToProps(state) {\r\n    return {\r\n      scrollPosition: state.scrollPosition,\r\n      popupTrigger: state.popupTrigger,\r\n    };\r\n  }\r\n\r\n  _export = window.reactRedux.connect(mapStateToProps)(AltrpImage)\r\n}\r\nexport default _export;\r\n","import AltrpImage from \"../altrp-image/AltrpImage\";\r\nimport AltrpLink from \"../altrp-link/AltrpLink\";\r\n\r\nclass IconWidget extends Component {\r\n  __;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      settings: props.element.getSettings(),\r\n    };\r\n    props.element.component = this;\r\n    if (window.elementDecorator) {\r\n      window.elementDecorator(this);\r\n    }\r\n    if(props.baseRender){\r\n      this.render = props.baseRender(this);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let label = React.createElement(this.state.settings.html_tag_additional_options_content || \"h3\", {\r\n        className: \"altrp-icon-body-label\"\r\n      },\r\n      this.state.settings.label_icon_box_content\r\n    );\r\n\r\n    let bodyContent;\r\n\r\n    if(this.state.settings.switch_link_icon_box_content && !this.state.settings.global_link_additional_options_content) {\r\n      bodyContent = (\r\n        <AltrpLink className=\"altrp-icon-body-link\" link={this.state.settings.link_icon_box_content}>\r\n          {\r\n            label\r\n          }\r\n        </AltrpLink>\r\n      )\r\n    } else {\r\n      bodyContent = (\r\n        <div className=\"altrp-icon-body-link\" >\r\n          {\r\n            label\r\n          }\r\n        </div>\r\n      )\r\n    }\r\n\r\n    //indicator\r\n    let indicator = \"\";\r\n\r\n    if(this.state.settings.indicator_additional_options_content) {\r\n      let pos = {};\r\n\r\n      let x = this.state.settings.horizontal_offset_indicator_content;\r\n      let y = this.state.settings.vertical_offset_indicator_content;\r\n      let rotate = this.state.settings.rotate_indicator_content;\r\n\r\n      if(x.size === \"\") {\r\n        x.size = \"0\";\r\n      }\r\n      if(y.size === \"\") {\r\n        y.size = \"0\";\r\n      }\r\n      if(rotate.size === \"\") {\r\n        rotate.size = \"0\"\r\n      }\r\n\r\n      pos = {\r\n        transform: `translate(${x.size+x.unit}, ${y.size+y.unit}) rotate(${rotate.size}deg)`\r\n      };\r\n\r\n      indicator = <AltrpImage\r\n        default={{\r\n          assetType: \"icon\",\r\n          name: \"arrow\",\r\n          iconComponent: iconsManager.renderIcon(\"arrow\")\r\n        }}\r\n        element={this.props.element}\r\n        style={pos}\r\n        image={this.state.settings.icon_indicator_content}\r\n        className=\"altrp-icon-indicator\"\r\n      />\r\n    }\r\n\r\n    //badge\r\n    let badge = \"\";\r\n    if(this.state.settings.badge_additional_options_content) {\r\n\r\n      let badgeClasses = \"altrp-icon-badge\";\r\n\r\n      switch (this.state.settings.position_badge_content) {\r\n        case \"topLeft\":\r\n          badgeClasses += \" altrp-icon-badge-top-left\";\r\n          break;\r\n        case \"topCenter\":\r\n          badgeClasses += \" altrp-icon-badge-top-center\";\r\n          break;\r\n        case \"topRight\":\r\n          badgeClasses += \" altrp-icon-badge-top-right\";\r\n          break;\r\n        case \"centerLeft\":\r\n          badgeClasses += \" altrp-icon-badge-center-left\";\r\n          break;\r\n        case \"center\":\r\n          badgeClasses += \" altrp-icon-badge-center\";\r\n          break;\r\n        case \"centerRight\":\r\n          badgeClasses += \" altrp-icon-badge-center-right\";\r\n          break;\r\n        case \"bottomLeft\":\r\n          badgeClasses += \" altrp-icon-badge-bottom-left\";\r\n          break;\r\n        case \"bottomCenter\":\r\n          badgeClasses += \" altrp-icon-badge-bottom\";\r\n          break;\r\n        case \"bottomRight\":\r\n          badgeClasses += \" altrp-icon-badge-bottom-right\";\r\n          break;\r\n      }\r\n\r\n      let pos = {};\r\n\r\n      let x = this.state.settings.horizontal_offset_badge_content;\r\n      let y = this.state.settings.vertical_offset_badge_content;\r\n      let rotate = this.state.settings.rotate_badge_content;\r\n\r\n      if(x.size === \"\") {\r\n        x.size = \"0\";\r\n      }\r\n      if(y.size === \"\") {\r\n        y.size = \"0\";\r\n      }\r\n      if(rotate.size === \"\") {\r\n        rotate.size = \"0\"\r\n      }\r\n\r\n      pos = {\r\n        transform: `translate(${x.size+x.unit}, ${y.size+y.unit}) rotate(${rotate.size}deg)`\r\n      };\r\n\r\n      badge = (\r\n        <div className={badgeClasses} style={pos}>\r\n          {\r\n            this.state.settings.text_badge_content\r\n          }\r\n        </div>\r\n      )\r\n    }\r\n\r\n    //style for altrp-icon-body, altrp-icon-footer\r\n    let bodyStyles = {};\r\n    let footerStyles = {};\r\n    let headerStyles = {};\r\n    let bodyAlignment = this.props.element.getSettings(\"header_alignment_content_style\", \"center\");\r\n    let footerAligment = this.props.element.getSettings(\"description_alignment_content_style\", \"center\");\r\n\r\n    switch (this.state.settings.icon_position_desktop_position_style) {\r\n      case \"row\":\r\n        if(!bodyAlignment) {\r\n          bodyStyles = {\r\n            textAlign: \"left\",\r\n            justifyContent: \"flex-start\"\r\n          };\r\n        }\r\n        if(!footerAligment) {\r\n          footerStyles = {\r\n            textAlign: \"left\",\r\n            justifyContent: \"flex-start\"\r\n          };\r\n        }\r\n        headerStyles = {\r\n          marginLeft: 0,\r\n          marginBottom: 0\r\n        };\r\n        break;\r\n      case \"column\":\r\n        if(!bodyAlignment) {\r\n          bodyStyles = {\r\n            textAlign: \"center\",\r\n            justifyContent: \"center\"\r\n          };\r\n        }\r\n        if(!footerAligment) {\r\n          footerStyles = {\r\n            textAlign: \"center\",\r\n            justifyContent: \"center\"\r\n          };\r\n        }\r\n        headerStyles = {\r\n          marginLeft: 0,\r\n          marginRight: 0\r\n        };\r\n        break;\r\n      case \"row-reverse\":\r\n        if(!bodyAlignment) {\r\n          bodyStyles = {\r\n            textAlign: \"right\",\r\n            justifyContent: \"flex-end\"\r\n          };\r\n        }\r\n        if(!footerAligment) {\r\n          footerStyles = {\r\n            textAlign: \"right\",\r\n            justifyContent: \"flex-end\"\r\n          };\r\n        }\r\n        headerStyles = {\r\n          marginRight: 0,\r\n          marginBottom: 0\r\n        };\r\n        break\r\n    }\r\n\r\n    //footer Alignment\r\n    switch (bodyAlignment) {\r\n      case \"flex-start\":\r\n        bodyStyles.textAlign = \"left\";\r\n        break;\r\n      case \"center\":\r\n        bodyStyles.textAlign = \"center\";\r\n        break;\r\n      case \"flex-end\":\r\n        bodyStyles.textAlign = \"right\";\r\n        break;\r\n    }\r\n\r\n    switch (footerAligment) {\r\n      case \"flex-start\":\r\n        footerStyles.textAlign = \"left\";\r\n        break;\r\n      case \"center\":\r\n        footerStyles.textAlign = \"center\";\r\n        break;\r\n      case \"flex-end\":\r\n        footerStyles.textAlign = \"right\";\r\n        break;\r\n    }\r\n\r\n    //read more\r\n    let readMore = \"\";\r\n    if(this.state.settings.read_more_button_additional_options_content) {\r\n\r\n      let ReadMoreIcon = (props) => Object.keys(this.state.settings.icon_read_more_content).length !== 0 ? (\r\n        <AltrpImage\r\n          image={this.state.settings.icon_read_more_content}\r\n          element={this.props.element}\r\n          className={\"altrp-icon-read-more-icon\" + \" altrp-icon-read-more-icon-\" + props.pos}\r\n        />\r\n      ) : \"\";\r\n\r\n      let readMorePosOnHover = {};\r\n\r\n      if(this.state.settings.show_on_hover_additional_options_content) {\r\n        let x = this.state.settings.horizontal_offset_additional_options_content;\r\n        let y = this.state.settings.vertical_offset_additional_options_content;\r\n\r\n        if(x.size === \"\") {\r\n          x.size = \"0\";\r\n        }\r\n        if(y.size === \"\") {\r\n          y.size = \"0\";\r\n        }\r\n        readMorePosOnHover = {\r\n          transform: `translate(${x.size+x.unit}, ${y.size+y.unit})`\r\n        }\r\n      }\r\n\r\n      let readMoreContent = (\r\n        <React.Fragment>\r\n          {\r\n            this.state.settings.icon_position_additional_options_content === \"left\" ? <ReadMoreIcon pos=\"left\" /> : \"\"\r\n          }\r\n          {\r\n            this.state.settings.text_read_more_content\r\n          }\r\n          {\r\n            this.state.settings.icon_position_additional_options_content === \"right\" ? <ReadMoreIcon pos=\"right\" /> : \"\"\r\n          }\r\n        </React.Fragment>\r\n      );\r\n\r\n      let readMoreLink = (\r\n        <AltrpLink className=\"altrp-icon-read-more-link\" link={this.state.settings.link_read_more_content}>\r\n          {\r\n            readMoreContent\r\n          }\r\n        </AltrpLink>\r\n      );\r\n\r\n      let readMoreNoLink = (\r\n        <div className=\"altrp-icon-read-more-link\">\r\n          {\r\n            readMoreContent\r\n          }\r\n        </div>\r\n      );\r\n\r\n      readMore = (\r\n        <div style={{...readMorePosOnHover, ...bodyStyles}} className={\"altrp-icon-read-more\" + (this.state.settings.show_on_hover_additional_options_content ? \" altrp-icon-read-more-on-hover\" : \"\")}>\r\n          {\r\n            this.state.settings.global_link_additional_options_content ? readMoreNoLink : readMoreLink\r\n          }\r\n        </div>\r\n      )\r\n    }\r\n\r\n    let iconContent = (\r\n      <div className=\"altrp-icon-background-image\">\r\n        <div className=\"altrp-icon\">\r\n          <div className=\"altrp-icon-header\" style={headerStyles}>\r\n            <div className=\"altrp-icon-i-wrapper\">\r\n              <AltrpImage\r\n                image={this.state.settings.media_icon_box_content}\r\n                element={this.props.element}\r\n                default={{\r\n                  assetType: \"icon\",\r\n                  name: 'star',\r\n                  iconComponent: iconsManager.renderIcon('star')\r\n                }}\r\n                className={\"altrp-icon-i\"}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"altrp-icon-content\">\r\n            <div className=\"altrp-icon-body\" style={bodyStyles}>\r\n              {\r\n                bodyContent\r\n              }\r\n            </div>\r\n            <div className=\"altrp-icon-footer\" style={footerStyles}>\r\n              <p className=\"altrp-icon-footer-text\">\r\n                {\r\n                  this.state.settings.description_icon_box_content\r\n                }\r\n              </p>\r\n            </div>\r\n            {\r\n              readMore\r\n            }\r\n          </div>\r\n\r\n          {\r\n            indicator\r\n          }\r\n          {\r\n            badge\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    let iconContentLink = (\r\n      <AltrpLink className=\"altrp-icon-global-link\" link={this.state.settings.global_link_link_additional_options_content}>\r\n        {\r\n          iconContent\r\n        }\r\n      </AltrpLink>\r\n    );\r\n\r\n    return this.state.settings.global_link_additional_options_content ? iconContentLink : iconContent\r\n  }\r\n}\r\n\r\nexport default IconWidget;\r\n"],"sourceRoot":""}