{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./resources/modules/editor/src/js/components/widgets/InputSliderWidget.js","webpack:///./resources/modules/front-app/src/js/store/forms-data-storage/actions.js"],"names":["_assertThisInitialized","self","ReferenceError","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","TypeError","prototype","create","constructor","_possibleConstructorReturn","call","_setPrototypeOf","p","_taggedTemplateLiteral","strings","raw","slice","freeze","defineProperties","_typeof","Symbol","iterator","isEditor","window","altrpHelpers","Slider","altrpLibs","Blueprint","globalDefaults","push","SliderWrapper","styled","div","props","styles","handleSize","size","max","toFixed","handle","InputSliderWidget","dispatchFieldValueToStore","userInput","formId","element","getFormId","fieldName","getFieldId","indexOf","replaceContentWithData","_","isObject","appStore","dispatch","changeFormFieldValue","change_actions","getSettings","actionsManager","default","callAllWidgetActions","getIdForAction","getValue","state","get","getState","getResponsiveSetting","step","min","settings","component","elementDecorator","baseRender","render","onChange","bind","label","prevProps","prevState","decimalPlace","this","Number","isInteger","Math","abs","console","log","setState","s","custom","thousandsSeparator","thousandsSeparatorValue","decimalSeparator","replace","toString","labelStepSize","vertical","isNaN","className","stepSize","labelPrecision","labelRenderer","Component","CHANGE_FORM_FIELD_VALUE","CLEAR_FORM_FIELD_VALUE","type","changedField"],"mappings":"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","file":"InputSliderWidget.08ca7b98d94019f85024.bundle.js","sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","const { isEditor } =\n  window.altrpHelpers\nimport {changeFormFieldValue} from \"../../../../../front-app/src/js/store/forms-data-storage/actions\";\n\nconst Slider = window.altrpLibs.Blueprint.Slider;\n\n(window.globalDefaults = window.globalDefaults || []).push(`\n.bp3-slider-label{\n    white-space: nowrap;\n}\n.bp3-slider-handle{\n    z-index: 2;\n}\n.bp3-slider-label{\n    z-index: 1;\n}\n`);\n\nconst SliderWrapper = styled.div`\n  .altrp-field-slider .bp3-slider-handle {\n    background-image: none;\n  }\n\n  ${(props) => {\n    let styles = \"\";\n\n    if(props.handleSize) {\n      if(props.handleSize.size) {\n        styles += `\n        &.altrp-field-slider-horizontal .bp3-slider-handle {\n          left: calc(${(props.value/props.max*100).toFixed(2)}% - ${props.handle/ 2 + props.handleSize.size}px) !important;\n        }\n\n        &.altrp-field-slider-vertical .bp3-slider-handle {\n          bottom: calc(${(props.value/props.max*100).toFixed(2)}% - ${props.handle/ 2 + props.handleSize.size}px) !important;\n        }Size.size\n        `\n      }\n    }\n\n    return styles\n  }}\n`;\n\nclass InputSliderWidget extends Component {\n  constructor(props) {\n    super(props);\n\n    let step = props.element.getResponsiveSetting(\"step\", \"\", null);\n    const min = props.element.getResponsiveSetting(\"min\", \"\", 0);\n    const max = props.element.getResponsiveSetting(\"max\", \"\", 100);\n\n    if(step) {\n      step = (max - min) / step;\n    }\n\n    this.state = {\n      settings: props.element.getSettings(),\n      value: min,\n      step: step || 1,\n    };\n\n    props.element.component = this;\n\n    if (window.elementDecorator) {\n      window.elementDecorator(this);\n    }\n    if(props.baseRender){\n      this.render = props.baseRender(this);\n    }\n    this.onChange = this.onChange.bind(this);\n    this.label = this.label.bind(this);\n  }\n\n  _componentDidUpdate(prevProps, prevState) {\n\n\n\n\n  }\n  /**\n   * Передадим значение в хранилище формы\n   * @param {*} value\n   * @param {boolean} userInput true - имзенилось пользователем\n   */\n  dispatchFieldValueToStore = async (value, userInput = false) => {\n    let formId = this.props.element.getFormId();\n    let fieldName = this.props.element.getFieldId();\n    if (fieldName.indexOf(\"{{\") !== -1) {\n      fieldName = replaceContentWithData(fieldName);\n    }\n    if (_.isObject(this.props.appStore) && fieldName && formId) {\n      this.props.appStore.dispatch(\n        changeFormFieldValue(fieldName, value, formId, userInput)\n      );\n      if (userInput) {\n        const change_actions = this.props.element.getSettings(\"change_actions\");\n\n        if (change_actions && !isEditor()) {\n          const actionsManager = (\n            await import(\n              /* webpackChunkName: 'ActionsManager' */\n              \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\n              )\n          ).default;\n          await actionsManager.callAllWidgetActions(\n            this.props.element.getIdForAction(),\n            \"change\",\n            change_actions,\n            this.props.element\n          );\n        }\n      }\n    }\n  };\n\n  onChange(value) {\n    // const step = this.state.step\n\n    // if(!Number.isInteger(value)) {\n    //   value = parseFloat(value.toFixed(String(step).split(\".\")[1].split(\"\").length))\n    // }\n    let decimalPlace = this.props.element.getResponsiveSetting(\"decimal_place\", \"\", null);\n    if(!Number.isInteger(value) && decimalPlace) {\n      decimalPlace = Math.abs(decimalPlace);\n      console.log(value);\n      value = value\n        .toFixed(decimalPlace)\n    }\n    if(isEditor()){\n      this.setState((s) => ({...s, value}))\n    } else {\n      this.dispatchFieldValueToStore(value)\n    }\n  }\n\n  label(value) {\n    let decimalPlace = this.props.element.getResponsiveSetting(\"decimal_place\", \"\", null);\n    const custom = this.props.element.getResponsiveSetting(\"custom_label\", \"\", \"{n}\");\n    const thousandsSeparator = this.props.element.getResponsiveSetting(\"thousands_separator\", \"\", false);\n    const thousandsSeparatorValue = this.props.element.getResponsiveSetting(\"thousands_separator_value\", \"\", \" \");\n    const decimalSeparator = this.props.element.getResponsiveSetting(\"decimal_separator\", \"\", \",\");\n    value = Number(value)\n\n    if(!Number.isInteger(value) && decimalPlace) {\n      decimalPlace = Math.abs(decimalPlace);\n      value = value\n        .toFixed(decimalPlace)\n    }\n    if(!Number.isInteger(value) && decimalSeparator) {\n      value = value.replace(\".\", decimalSeparator)\n    }\n\n    if(thousandsSeparator && thousandsSeparatorValue) {\n      value = value\n        .toString()\n        .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, thousandsSeparatorValue);\n    }\n\n\n    return custom\n      .toString()\n      .replace(/{n}/, value)\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  getValue = () => {\n    let value;\n    let formId = this.props.element.getFormId();\n    let fieldName = this.props.element.getFieldId();\n    if (isEditor()) {\n      value = this.state.value;\n    } else {\n      value = _.get(appStore.getState(), `formsStore.${formId}.${fieldName}`, '')\n    }\n\n    return value || this.props.element.getResponsiveSetting('min') || 0;\n  }\n\n  /**\n   *\n   * @returns {JSX.Element}\n   */\n  render() {\n    const min = this.props.element.getResponsiveSetting(\"min\", \"\", 0);\n    const max = this.props.element.getResponsiveSetting(\"max\", \"\", 100);\n    const labelStepSize = this.props.element.getResponsiveSetting(\"label_step\", \"\", 25);\n    const decimalPlace = this.props.element.getResponsiveSetting(\"decimal_place\", \"\", null);\n    const vertical = this.props.element.getResponsiveSetting(\"vertical\", \"\", false);\n    const handleSize = this.props.element.getResponsiveSetting(\"handle_size\", \"\", null);\n    let step = this.props.element.getResponsiveSetting(\"step\", \"\", 1);\n    if(step == '0'){\n      step = 1;\n    }\n    let value = this.getValue()\n    console.log(value);\n    value = Number(value)\n    if(Number.isNaN(value)){\n      value = Number(min)\n    }\n    return (\n      <SliderWrapper\n        value={this.state.value}\n        max={max}\n        handleSize={handleSize}\n        className={\"altrp-field-slider-wrapper\" + (vertical ? \" altrp-field-slider-vertical\" : \" altrp-field-slider-horizontal\")}\n      >\n        <Slider\n          min={min}\n          max={max}\n          stepSize={step}\n          value={value}\n          onChange={this.onChange}\n          labelPrecision={decimalPlace}\n          labelRenderer={this.label}\n          labelStepSize={labelStepSize}\n          vertical={vertical}\n          className=\"altrp-field-slider\"\n        />\n      </SliderWrapper>\n    );\n  }\n}\n\nexport default InputSliderWidget;\n","export const CHANGE_FORM_FIELD_VALUE = 'CHANGE_FORM_FIELD_VALUE';\nexport const CLEAR_FORM_FIELD_VALUE = 'CHANGE_FORM_FIELD_VALUE';\n\n/**\n * Получает данные поля формы и сохраняет в хранилище\n * @param {string}fieldName\n * @param {*}value\n * @param {string}formId\n * @param {boolean}userInput\n * @return {{type: string, fieldName: *, value: *, formId: *}}\n */\nexport function changeFormFieldValue(fieldName, value, formId, userInput) {\n  return {\n    type: CHANGE_FORM_FIELD_VALUE,\n    fieldName,\n    value,\n    formId,\n    changedField: userInput ? `${formId}.${fieldName}` : null,\n  };\n}\n/**\n * Очистить данные поля формы и сохраняет в хранилище\n * @param {string | null}formId\n * @return {{type: string, fieldName: *, value: *, formId: *}}\n */\nexport function clearFormStorage(formId = null) {\n  return {\n    type: CLEAR_FORM_FIELD_VALUE,\n    formId,\n  };\n}\n\n"],"sourceRoot":""}