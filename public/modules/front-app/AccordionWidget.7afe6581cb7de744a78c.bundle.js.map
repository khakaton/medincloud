{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/classes/AltrpModel.js","webpack:///./resources/modules/editor/src/js/components/widgets/AccordionWidget.js"],"names":["AltrpModel","data","this","cloneDeep","clone","isEmpty","name","defaultValue","get","has","value","getData","set","unset","window","globalDefaults","push","AccordionWidget","props","settings","element","getSettings","state","activeItem","id","metaData","i","length","Number","open","bind","component","elementDecorator","baseRender","render","e","currentTarget","dataset","key","multiple_additional_content","setState","items","repeater_meta_data_section","icon","active_icon","icon_accordion_content","renderAssetIcon","className","active_icon_accordion_content","accordion_items","map","item","idx","onClick","React","createElement","title_html_tag_accordion_content","title_repeater","dangerouslySetInnerHTML","__html","wysiwyg_repeater","Component"],"mappings":"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","file":"AccordionWidget.7afe6581cb7de744a78c.bundle.js","sourcesContent":["/**\r\n * Имеет интерфейс для доступы к свойствам data (любой вложенности)\r\n * @class AltrpModel\r\n */\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport get from 'lodash.get';\r\nimport set from 'lodash.set';\r\nimport has from 'lodash.has';\r\nimport unset from 'lodash.unset';\r\nimport isEmpty from 'lodash.isempty';\r\n// import {cloneDeep, get, set, has, unset, isString, isEmpty} from \"lodash\";\r\n\r\nclass AltrpModel {\r\n  constructor(data = {}) {\r\n    this.data = cloneDeep(data);\r\n  }\r\n\r\n  /**\r\n   * Возваращает объект данных\r\n   * @params {boolean} clone - клонировать или ссылку на данные\r\n   * @return {{}}\r\n   */\r\n  getData(clone = true) {\r\n    if(clone){\r\n      return cloneDeep(this.data);\r\n    }\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Пустой ли объект\r\n   */\r\n  isEmpty(){\r\n    return isEmpty(this.data);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  getProperty(name, defaultValue = '') {\r\n    return get(this.data, name, defaultValue);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  hasProperty(name, defaultValue = '') {\r\n    return has(this.data, name);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {{}}\r\n   */\r\n  setProperty(name, value = '') {\r\n    if(value instanceof AltrpModel){\r\n      value = value.getData(false);\r\n    }\r\n    return set(this.data, name, value);\r\n  }\r\n  /**\r\n   * Удаляет свойства name\r\n   * @params {string} name\r\n   * @return {*}\r\n   */\r\n  unsetProperty(name) {\r\n    return unset(this.data, name);\r\n  }\r\n}\r\nwindow.AltrpModel = AltrpModel;\r\nexport default AltrpModel\r\n","import {renderAssetIcon} from \"../../../../../front-app/src/js/helpers\";\r\n\r\n(window.globalDefaults = window.globalDefaults || []).push(`\r\n  .altrp-accordion-item-button {\r\n    background-color: rgb(52, 59, 76);\r\n    color: #ffffff;\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: row;\r\n    cursor: pointer;\r\n    width: 100%;\r\n    padding: 15px 20px;\r\n    z-index: 4;\r\n  }\r\n\r\n  .altrp-accordion-item-content {\r\n    background-color: rgb(79, 90, 114);\r\n    color: #ffffff;\r\n    width: 100%;\r\n    height: 100%;\r\n    line-height: 0;\r\n    padding-left: 20px !important;\r\n    padding-right: 20px !important;\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    transition: 250ms ease-in-out;\r\n    z-index: 0;\r\n    text-align: left;\r\n    top: -1em;\r\n    height: 0px;\r\n  }\r\n\r\n  .altrp-accordion-item-content-show {\r\n    padding: 15px 20px;\r\n    line-height: 1;\r\n    top: 0;\r\n    z-index: 0;\r\n    height: auto;\r\n  }\r\n\r\n  .altrp-accordion-item-content * {\r\n    margin: 0;\r\n  }\r\n\r\n  .altrp-accordion-item-label-container {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    margin-right: auto;\r\n  }\r\n\r\n  .altrp-accordion-item:first-child {\r\n    margin-top: 0px !important;\r\n  }\r\n\r\n  .altrp-accordion-item-icon {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n`);\r\n\r\nclass AccordionWidget extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    let settings = props.element.getSettings();\r\n    this.state = {\r\n      settings: settings,\r\n      activeItem: {\r\n        id: [],\r\n      }\r\n    };\r\n\r\n    const metaData = props.element.getSettings(\"repeater_meta_data_section\", []);\r\n    const activeItem = props.element.getSettings(\"active_item_additional_content\", 0);\r\n    for (let i = 0; i<metaData.length; i++) {\r\n      if(i !== Number(activeItem - 1)) {\r\n        this.state.activeItem.id.push(false)\r\n      } else {\r\n        this.state.activeItem.id.push(true)\r\n      };\r\n    };\r\n\r\n    this.open = this.open.bind(this);\r\n    props.element.component = this;\r\n    if(window.elementDecorator){\r\n      window.elementDecorator(this);\r\n    }\r\n    if(props.baseRender){\r\n      this.render = props.baseRender(this);\r\n    }\r\n  }\r\n\r\n  open(e) {\r\n    let activeItem = Number(e.currentTarget.dataset.key) || 0;\r\n\r\n    if(!this.state.settings.multiple_additional_content) {\r\n      for (let i = 0; i<this.state.activeItem.id.length; i++) {\r\n        if (i === activeItem) {\r\n          this.setState((state) => {\r\n            state.activeItem.id[activeItem] = !state.activeItem.id[activeItem];\r\n            return {\r\n              ...state\r\n            };\r\n          });\r\n        } else {\r\n          this.setState((state) => {\r\n            state.activeItem.id[i] = false;\r\n            return {\r\n              ...state\r\n            };\r\n          });\r\n        }\r\n      };\r\n    };\r\n  };\r\n\r\n  render(){\r\n    let items = this.state.settings.repeater_meta_data_section || [];\r\n    let icon = \"\";\r\n    let active_icon = \"\";\r\n\r\n    if(this.state.settings.icon_accordion_content) {\r\n      icon = renderAssetIcon(this.state.settings.icon_accordion_content,\r\n        {className: \"altrp-accordion-item-icon-svg\"}\r\n        );\r\n    }\r\n\r\n    if(this.state.settings.active_icon_accordion_content) {\r\n      active_icon = renderAssetIcon(this.state.settings.active_icon_accordion_content,\r\n        {className: \"altrp-accordion-item-active-icon-svg\"}\r\n      );\r\n    }\r\n\r\n    let accordion_items = items.map((item, idx) => {\r\n\r\n      return (\r\n        <div className=\"altrp-accordion-item\" key={idx}>\r\n          {/*button*/}\r\n          <div className=\"altrp-accordion-item-button\" data-key={idx} onClick={(e) => this.open(e)}>\r\n            <div className=\"altrp-accordion-item-label-container\">\r\n              {\r\n                React.createElement(\r\n                  this.state.settings.title_html_tag_accordion_content,\r\n                  {\r\n                    className: \"altrp-accordion-item-label\"\r\n                  },\r\n                  [item.title_repeater]\r\n                )\r\n              }\r\n            </div>\r\n            {/*icon*/}\r\n            <div className=\"altrp-accordion-item-icon\">\r\n              {this.state.activeItem.id[idx] ? active_icon : icon}\r\n            </div>\r\n          </div>\r\n          {/*content*/}\r\n          {\r\n            React.createElement(\"div\", {\r\n              className: \"altrp-accordion-item-content\" + (this.state.activeItem.id[idx] ?\r\n                  \" altrp-accordion-item-content-show\"\r\n                  :\r\n                  \"\"\r\n              )\r\n              ,\r\n              dangerouslySetInnerHTML: {\r\n                __html: item.wysiwyg_repeater\r\n              },\r\n              \"data-item\": idx\r\n            })\r\n          }\r\n        </div>\r\n      )\r\n    });\r\n\r\n    return <div className=\"altrp-accordion\">\r\n      {\r\n        accordion_items\r\n      }\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default AccordionWidget\r\n"],"sourceRoot":""}