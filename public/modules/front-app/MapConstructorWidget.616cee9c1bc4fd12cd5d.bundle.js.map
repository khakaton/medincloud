{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./resources/modules/editor/src/js/components/altrp-map/AltrpMapConstructor.js","webpack:///./resources/modules/editor/src/js/components/widgets/MapConstructorWidget.js"],"names":["_assertThisInitialized","self","ReferenceError","_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","TypeError","prototype","create","constructor","value","writable","configurable","_possibleConstructorReturn","call","_setPrototypeOf","p","_typeof","obj","Symbol","iterator","settings","id","useState","isLoading","setIsLoading","geoJson","setGeoJson","editable","canvas","zoom","lat","lng","latDs","lngDs","centerByDatasource","style_height","style_margin","objects","url","field_id","url_connect","field_first_connect","field_second_connect","onlyDatasource","parameters","latitude","longitude","currentDataStorage","useSelector","state","data","getDataByPath","featuredObjectsFromModel","useMemo","axios","response","map","item","dbID","_","get","result","JSON","parse","dynamicGeoObjectsRepeater","keys","length","r","geoObj","path","Array","isArray","type","geometry","coordinates","Number","inCluster","useCluster","properties","fillOpacity","icon","tooltip","tooltipByKeyboard","popup","popupByKeyboard","fillColor","color","colorPickedHex","flat","getData","useCallback","dynamicGeoObjects","features","req","status","responseData","cloneDeep","featuers","concat","getDataFromModel","featuredFromModel","dataFromModel","repeaterObjects","filter","useEffect","MapDesigner","saveData","stringify","style","height","size","unit","marginTop","top","marginBottom","bottom","marginLeft","left","marginRight","right","isEditable","preferCanvas","center","window","globalDefaults","push","props","element","getSettings","component","elementDecorator","baseRender","render","this","Component"],"mappings":"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","file":"MapConstructorWidget.616cee9c1bc4fd12cd5d.bundle.js","sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import React, { useEffect, useState, useCallback, useMemo } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getDataByPath } from \"../../../../../front-app/src/js/helpers\";\r\n\r\nimport MapDesigner from \"./MapDesigner\";\r\n\r\nfunction AltrpMapConstructor({ settings, id }) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [geoJson, setGeoJson] = useState({});\r\n\r\n  const {\r\n    editable,\r\n    canvas,\r\n    zoom,\r\n    lat,\r\n    lng,\r\n    latDs,\r\n    lngDs,\r\n    centerByDatasource = false,\r\n    style_height = {},\r\n    style_margin = {},\r\n    objects = {},\r\n    url,\r\n    field_id,\r\n    url_connect = null,\r\n    field_first_connect = null,\r\n    field_second_connect = null,\r\n    onlyDatasource = false,\r\n    parameters\r\n  } = settings;\r\n  let latitude = lat;\r\n  let longitude = lng;\r\n\r\n  const currentDataStorage = useSelector(\r\n    state => state.currentDataStorage.data\r\n  );\r\n  if (centerByDatasource) {\r\n    const latDatasource = getDataByPath(latDs, 50.7496449);\r\n    const lngDatasource = getDataByPath(lngDs, 86.1250068);\r\n    latitude = latDatasource;\r\n    longitude = lngDatasource;\r\n  }\r\n\r\n  const featuredObjectsFromModel = useMemo(async () => {\r\n    const response = await axios.get(url);\r\n    const data = response.data.data.map(item => {\r\n      const dbID = _.get(item, \"id\");\r\n      const responseItem = JSON.parse(_.get(item, field_id));\r\n      const result = responseItem;\r\n      result[\"dbID\"] = dbID;\r\n      return result;\r\n    });\r\n    return data;\r\n  }, [url, field_id]);\r\n\r\n  const dynamicGeoObjectsRepeater = useMemo(() => {\r\n    if (_.keys(objects).length > 0) {\r\n      return objects\r\n        .map(r => {\r\n          const geoObj = getDataByPath(r.path, []);\r\n          const result = Array.isArray(geoObj)\r\n            ? geoObj.map(data => ({\r\n                type: \"Feature\",\r\n                geometry: {\r\n                  type: \"Point\",\r\n                  coordinates: [\r\n                    Number(_.get(data, r.latitude)),\r\n                    Number(_.get(data, r.longitude))\r\n                  ]\r\n                },\r\n                id: data.id,\r\n                inCluster: r?.useCluster || false,\r\n                properties: {\r\n                  fillOpacity: 1,\r\n                  icon: r.icon || \"GoogleMarker\",\r\n                  tooltip: r.tooltipByKeyboard\r\n                    ? r.tooltip\r\n                    : _.get(data, r.tooltip) || \"\",\r\n                  popup: r.popupByKeyboard\r\n                    ? r.popup\r\n                    : _.get(data, r.popup) || \"\",\r\n                  fillColor: r.color?.colorPickedHex || \"#3388ff\"\r\n                }\r\n              }))\r\n            : {\r\n                type: \"Feature\",\r\n                geometry: {\r\n                  type: \"Point\",\r\n                  coordinates: [\r\n                    Number(_.get(geoObj, r.latitude)),\r\n                    Number(_.get(geoObj, r.longitude))\r\n                  ]\r\n                },\r\n\r\n                id: geoObj.id,\r\n                inCluster: r?.useCluster || false,\r\n                properties: {\r\n                  fillOpacity: 1,\r\n                  icon: r.icon || \"GoogleMarker\",\r\n                  tooltip: r.tooltipByKeyboard\r\n                    ? r.tooltip\r\n                    : _.get(geoObj, r.tooltip) || \"\",\r\n                  popup: r.popupByKeyboard\r\n                    ? r.popup\r\n                    : _.get(geoObj, r.popup) || \"\",\r\n                  fillColor: r.color?.colorPickedHex || \"#3388ff\"\r\n                }\r\n              };\r\n          return result;\r\n        })\r\n        .flat();\r\n    }\r\n  }, [objects, currentDataStorage]);\r\n  // Сохраняем данные карты\r\n  const handleSave = data => {\r\n    if (!onlyDatasource) {\r\n      if (typeof url === \"undefined\" || url === null) {\r\n        axios.post(`/ajax/maps/${id}`, {\r\n          data: JSON.stringify({\r\n            type: \"FeatureCollection\",\r\n            features: data.features.filter(\r\n              item => typeof item.id !== \"undefined\"\r\n            )\r\n          })\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const getData = useCallback(\r\n    async (id, dynamicGeoObjects) => {\r\n      if (onlyDatasource) {\r\n        let data = {\r\n          type: \"FeatureCollection\",\r\n          features: dynamicGeoObjects\r\n        };\r\n        setGeoJson(data);\r\n        setIsLoading(false);\r\n      } else {\r\n        try {\r\n          setIsLoading(true);\r\n          const req = await axios(`/ajax/maps/${id}`);\r\n          if (req.status === 200) {\r\n            let responseData = _.cloneDeep(req.data);\r\n            let data = [];\r\n            let featuers = responseData.features;\r\n            if (_.keys(dynamicGeoObjects).length > 0) {\r\n              data = featuers.concat(dynamicGeoObjects);\r\n            }\r\n            req.data.features = data.length > 0 ? data : featuers;\r\n            setGeoJson(req.data);\r\n            setIsLoading(false);\r\n          }\r\n        } catch (error) {\r\n          let data = {\r\n            type: \"FeatureCollection\",\r\n            features: dynamicGeoObjects\r\n          };\r\n          setGeoJson(data);\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n    },\r\n    [id]\r\n  );\r\n\r\n  const getDataFromModel = useCallback(\r\n    async (featuredFromModel, dynamicGeoObjects) => {\r\n      if (url !== null) {\r\n        try {\r\n          setIsLoading(true);\r\n          const dataFromModel = await featuredFromModel;\r\n          const repeaterObjects = dynamicGeoObjects;\r\n          let result = dataFromModel;\r\n          result = result\r\n            .concat(repeaterObjects)\r\n            .filter(item => typeof item !== \"undefined\");\r\n          setGeoJson({\r\n            type: \"FeatureCollection\",\r\n            features: result\r\n          });\r\n          setIsLoading(false);\r\n        } catch (error) {}\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    [url]\r\n  );\r\n  // При изменении карты подгружаем новые данные\r\n  useEffect(() => {\r\n    if (typeof url !== \"undefined\" && url != \"\" && url !== null) {\r\n      getDataFromModel(featuredObjectsFromModel, dynamicGeoObjectsRepeater);\r\n    } else {\r\n      getData(id, dynamicGeoObjectsRepeater);\r\n    }\r\n  }, [id, dynamicGeoObjectsRepeater]);\r\n\r\n  return (\r\n    <MapDesigner\r\n      data={geoJson}\r\n      saveData={handleSave}\r\n      isLoading={isLoading}\r\n      id={id}\r\n      settings={settings}\r\n      url_connect={url_connect}\r\n      field_first_connect={field_first_connect}\r\n      field_second_connect={field_second_connect}\r\n      style={{\r\n        height: style_height.size + style_height.unit,\r\n        marginTop: style_margin.top + style_margin.unit,\r\n        marginBottom: style_margin.bottom + style_margin.unit,\r\n        marginLeft: style_margin.left + style_margin.unit,\r\n        marginRight: style_margin.right + style_margin.unit\r\n      }}\r\n      isEditable={editable}\r\n      preferCanvas={canvas}\r\n      zoom={+zoom}\r\n      url={url}\r\n      field_id={field_id}\r\n      center={[latitude || 50.7496449, longitude || 86.1250068]}\r\n      parameters={parameters}\r\n    />\r\n  );\r\n}\r\n\r\nexport default AltrpMapConstructor;\r\n","import AltrpMap from \"../altrp-map/AltrpMapConstructor\";\r\n\r\nimport(\"../../../sass/altrp-map.scss\");\r\n\r\n(window.globalDefaults = window.globalDefaults || []).push(`\r\n  .altrp-map {\r\n    position: relative;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    &__preloader {\r\n      position: absolute;\r\n      height: 100%;\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      background-color: rgba(255, 255, 255, 0.6);\r\n      z-index: 9999;\r\n      text-align: center;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      img {\r\n        display: inline-block;\r\n        width: 64px;\r\n        height: 64px;\r\n      }\r\n    }\r\n\r\n    &__container {\r\n      position: absolute;\r\n      top: 0;\r\n      right: 0;\r\n      left: 0;\r\n      bottom: 0;\r\n    }\r\n\r\n    &__paint {\r\n      background-color: #fff;\r\n      box-shadow: 0 1px 5px rgba(0, 0, 0, 0.65);\r\n      border-radius: 4px;\r\n      text-align: center;\r\n      button {\r\n        margin-top: 3px;\r\n        background: none;\r\n        border: 0;\r\n        cursor: pointer;\r\n        padding: 3px 6px;\r\n      }\r\n    }\r\n\r\n    &__modal {\r\n      .modal {\r\n        &__body {\r\n          position: absolute;\r\n          display: none;\r\n          width: 100%;\r\n          height: 100%;\r\n          overflow: auto;\r\n          left: 0;\r\n          top: 0;\r\n          background-color: #fff;\r\n          z-index: 9999;\r\n          box-shadow: 0 0 20px 20px rgba(0, 0, 0, 0.1);\r\n          border-radius: 4px;\r\n          padding: 20px;\r\n          &.open {\r\n            display: block;\r\n          }\r\n          .close {\r\n            position: absolute;\r\n            top: 10px;\r\n            right: 10px;\r\n            padding: 5px 7px;\r\n            border: 0;\r\n          }\r\n          &-color {\r\n            button {\r\n              border: 0;\r\n              width: 30px;\r\n              height: 30px;\r\n              background: none;\r\n              margin: 10px 10px 20px 0;\r\n              cursor: pointer;\r\n              &.active {\r\n                background-image: url(\"../svgs/correct.png\");\r\n                background-position: center center;\r\n                background-repeat: no-repeat;\r\n              }\r\n            }\r\n          }\r\n          &-text {\r\n            label {\r\n              //color: #919191;\r\n              //display: flex;\r\n              //flex-direction: column;\r\n              //font-size: 0.9rem;\r\n              textarea,\r\n              input {\r\n                margin: 10px 0 20px;\r\n                padding: 5px;\r\n                border: 1px solid #919191;\r\n                font-family: Arial, Helvetica, sans-serif;\r\n              }\r\n              input[type=\"range\"] {\r\n                padding: 0;\r\n              }\r\n            }\r\n          }\r\n          &-icon {\r\n            margin: 10px 0 20px;\r\n            button {\r\n              background-color: #fff;\r\n              border: 0;\r\n              padding: 5px 8px;\r\n              cursor: pointer;\r\n              border-radius: 3px;\r\n              &.active {\r\n                border: 1px solid #343a40;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .leaflet-marker-icon {\r\n    &.leaflet-div-icon:not(.leaflet-editing-icon) {\r\n      background: transparent;\r\n      border: none;\r\n    }\r\n  }\r\n\r\n  .leaflet-bottom.leaflet-right {\r\n    display: none;\r\n  }\r\n\r\n`);\r\n\r\nclass MapConstructorWidget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      settings: props.element.getSettings()\r\n    };\r\n\r\n    props.element.component = this;\r\n\r\n    if (window.elementDecorator) {\r\n      window.elementDecorator(this);\r\n    }\r\n    if (props.baseRender) {\r\n      this.render = props.baseRender(this);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <AltrpMap settings={this.state.settings} id={this.props.element.id} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapConstructorWidget;\r\n"],"sourceRoot":""}