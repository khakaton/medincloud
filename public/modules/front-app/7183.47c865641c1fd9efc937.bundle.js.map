{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/classes/AltrpModel.js","webpack:///./resources/modules/editor/src/js/components/altrp-map/helpers/isMarker.js","webpack:///./resources/modules/editor/src/js/components/altrp-map/helpers/isPolygon.js","webpack:///./resources/modules/editor/src/js/components/altrp-map/Icons/AnimalsIcon.js","webpack:///./resources/modules/editor/src/js/components/altrp-map/Icons/BeeIcon.js","webpack:///./resources/modules/editor/src/js/components/altrp-map/Icons/CowIcon.js","webpack:///./resources/modules/editor/src/js/components/altrp-map/Icons/HomeIcon.js","webpack:///./resources/modules/editor/src/js/components/altrp-map/Icons/HorseIcon.js","webpack:///./resources/modules/editor/src/js/components/altrp-map/Icons/MarkerIcon.js","webpack:///./resources/modules/editor/src/js/components/altrp-map/Icons/GoogleMarkerIcon.js","webpack:///./resources/modules/editor/src/js/components/altrp-map/Icons/PigIcon.js","webpack:///./resources/modules/editor/src/js/components/altrp-map/Icons/SheepIcon.js","webpack:///./resources/modules/editor/src/js/components/altrp-map/DivIcon.js","webpack:///./resources/modules/editor/src/js/components/altrp-map/helpers/tooltipOptions.js","webpack:///./resources/modules/editor/src/js/components/altrp-map/ModalComponent.js","webpack:///./resources/modules/editor/src/js/components/altrp-map/ModalControl.js","webpack:///./resources/modules/editor/src/js/components/altrp-map/Loader.js","webpack:///./resources/modules/editor/src/js/components/altrp-map/Icons/PaintIcon.js","webpack:///./resources/modules/editor/src/js/components/altrp-map/MapDesigner.js","webpack:///./resources/modules/editor/src/js/components/altrp-map/helpers/isCircle.js"],"names":["AltrpModel","data","this","cloneDeep","clone","isEmpty","name","defaultValue","get","has","value","getData","set","unset","window","isMarker","feature","geometry","type","properties","icon","isPolygon","positions","AnimalsIcon","props","viewBox","width","height","d","cx","cy","r","React","BeeIcon","CowIcon","HomeIcon","transform","HorseIcon","MarkerIcon","fill","GoogleMarkerIcon","version","PigIcon","SheepIcon","iconTypes","Marker","MemoMarkerIcon","GoogleMarker","MemoGoogleMarkerIcon","Animals","MemoAnimalsIcon","Bee","MemoBeeIcon","Cow","MemoCowIcon","Home","MemoHomeIcon","Horse","MemoHorseIcon","Pig","Sheep","customIcon","html","color","size","Icon","renderToStaticMarkup","divIcon","direction","sticky","styled","settings","styledString","ref","markers","selected","state","open","onClose","setState","fg","updateGeoObjectToModel","url_connect","field_first_connect","field_second_connect","id","parameters","url","colors","icons","Object","keys","useState","setProperties","points","setPoints","localParameters","setLocalParatemters","getLayer","layer","leafletElement","eachLayer","item","getLayerId","getId","parametersInput","useMemo","layout","dbID","axios","inputs","map","parameter","index","inputComponent","input_type","parameter_path","className","key","getDataByPath","length","options","_","parameter_value","label","parameter_label","defaultValueSelect","parent_field_to_save","parameter_title","filter","option","onChange","handleParameterSelect","defaultValueText","replace","e","handleParametersInput","defaultValueNumber","Number","console","log","defaultValueDate","defaultValueUnset","field","altrp_ajax","JSON","stringify","then","res","target","setLocalParametersCallback","useCallback","useEffect","useLayoutEffect","features","calculatePoints","L","polygonPoints","coordinates","marker","markerCoordinates","pointInPolygon","push","radius","getRadius","center","getLatLng","pointInCircle","point","vs","x","y","inside","i","j","xi","yi","xj","yj","Math","abs","distanceTo","handleSelected","difference","includes","val","parse","coords","split","lat","long","rowID","view","values","obj","alert","deleteConnectedModel","objectID","updateConnectedModel","sendConnectedModel","row_id","field_second_id","calculateToSelect","toString","popup","it","setOptionsToSelect","objID","response","result","field_first_id","debounce","optionsToSelect","getLayoutData","currentPoints","secondPointsIDs","dataToSelect","find","row","localID","resultPoints","featureID","ModalComponent","tooltip","event","getTooltip","setTooltipContent","bindTooltip","tooltipOptions","setPopupContent","bindPopup","isMulti","placeholder","input","fillColor","style","backgroundColor","onClick","hex","setIcon","setStyle","handleFillColor","handleColor","fillOpacity","Slider","newValue","setOpacity","handleFillOpacity","min","max","step","handleIcon","renderOption","Spinner","animation","role","PaintIcon","noob","zoom","isEditable","isLoading","isTransformLatLng","interactionOptions","saveData","onTap","field_id","FG","useRef","ModalRef","setSelected","setOpen","setMarkers","geoObject","handleObserver","current","addEventListener","geojson","toGeoJSON","opacity","currentFeatures","newObject","saveGeoObjectToModel","layers","_layers","json","handleMarkerClick","originalEvent","DomEvent","stopPropagation","handlePolygonClick","handleCircleClick","whenReady","clearLayers","coordsToLatLng","pointToLayer","latlng","onEachFeature","inCluster","addLayer","parent","document","body","isEditor","getElementById","contentWindow","onclick","scrollWheelZoom","touchZoom","crs","CRS","doubleClickZoom","keyboard","TileLayer","subdomains","attribution","reuseTiles","updateWhenIdle","MarkerCluster","FeatureGroup","position","onCreated","onDeleted","onEdited","onEditStop","onDrawStart","draw","circlemarker","rectangle","polyline","polygon","circle","edit","remove","Control","createPortal","getContainer","placement","defaultOpen","maskClosable","handler","forwardRef"],"mappings":"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","file":"7183.47c865641c1fd9efc937.bundle.js","sourcesContent":["/**\r\n * Имеет интерфейс для доступы к свойствам data (любой вложенности)\r\n * @class AltrpModel\r\n */\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport get from 'lodash.get';\r\nimport set from 'lodash.set';\r\nimport has from 'lodash.has';\r\nimport unset from 'lodash.unset';\r\nimport isEmpty from 'lodash.isempty';\r\n// import {cloneDeep, get, set, has, unset, isString, isEmpty} from \"lodash\";\r\n\r\nclass AltrpModel {\r\n  constructor(data = {}) {\r\n    this.data = cloneDeep(data);\r\n  }\r\n\r\n  /**\r\n   * Возваращает объект данных\r\n   * @params {boolean} clone - клонировать или ссылку на данные\r\n   * @return {{}}\r\n   */\r\n  getData(clone = true) {\r\n    if(clone){\r\n      return cloneDeep(this.data);\r\n    }\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Пустой ли объект\r\n   */\r\n  isEmpty(){\r\n    return isEmpty(this.data);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  getProperty(name, defaultValue = '') {\r\n    return get(this.data, name, defaultValue);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  hasProperty(name, defaultValue = '') {\r\n    return has(this.data, name);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {{}}\r\n   */\r\n  setProperty(name, value = '') {\r\n    if(value instanceof AltrpModel){\r\n      value = value.getData(false);\r\n    }\r\n    return set(this.data, name, value);\r\n  }\r\n  /**\r\n   * Удаляет свойства name\r\n   * @params {string} name\r\n   * @return {*}\r\n   */\r\n  unsetProperty(name) {\r\n    return unset(this.data, name);\r\n  }\r\n}\r\nwindow.AltrpModel = AltrpModel;\r\nexport default AltrpModel\r\n","export const isMarker = (feature) => {\r\n  return feature && feature.geometry.type === \"Point\" && feature.properties.icon;\r\n};\r\n","export const isPolygon = (feature) => {\r\n  return feature && feature.geometry.type === \"Polygon\" && feature.properties.positions;\r\n};\r\n","import * as React from \"react\";\r\n\r\nfunction AnimalsIcon(props) {\r\n  return (\r\n    <svg viewBox=\"0 0 512 512\" width=\"1em\" height=\"1em\" {...props}>\r\n      <path d=\"M38.566 226.524c-1.773 6.146-3.234 16.026 1.371 25.452 4.4 9 13.011 15.28 25.613 18.712 13.409 45.769 32.841 83.082 57.8 110.956 33 36.867 75.05 56.417 125.051 58.207L261.205 474l-30.774 6.155a8 8 0 103.138 15.69l74.008-14.8 5.268 10.535a8 8 0 1014.31-7.156l-8-16a8.005 8.005 0 00-8.724-4.267l-33.331 6.664-11.766-31.37a203.1 203.1 0 0088.275-30.945c28.49-18.291 51.477-43.434 68.324-74.728 19.97-37.1 31.256-82.935 33.591-136.333a30.743 30.743 0 002.766-.775 22.32 22.32 0 0014.606-14.8c2.33-7.493 1.006-16.66-3.219-22.293L464 152h24a8 8 0 007.845-9.569c-4.934-24.67-20.528-33.819-32.74-37.149a53.818 53.818 0 00-7.578-1.476 53.959 53.959 0 00-1.091-4.9 33.547 33.547 0 0015.881-19.5 23.594 23.594 0 00-3.339-21.438A24.131 24.131 0 00447.48 48h-.851A24.042 24.042 0 00424 32h-1.371A24.042 24.042 0 00400 16h-16a8 8 0 00-8 8v45.483c-25.135 12.759-35.251 45.118-42.463 68.2-2.511 8.035-5.852 18.73-8.426 22.316H89.45L26.809 136.51a8 8 0 00-10.728 6.358c-.338 2.364-7.55 55.706 22.485 83.656zm419.054-49.408a6.377 6.377 0 01-4.432 4.39 14.355 14.355 0 01-10.456-.61 7.87 7.87 0 01-4.6-5.232 7.984 7.984 0 011.32-6.939L448 157.333l8.879 11.839c.792 1.056 1.745 4.715.741 7.944zm1.737-56.268A26.768 26.768 0 01477.133 136H448v-16.649a41.581 41.581 0 0111.357 1.497zM392 32h8a8.009 8.009 0 018 8 8 8 0 008 8h8a8.009 8.009 0 018 8 8 8 0 008 8h7.48a7.98 7.98 0 016.532 3.345 7.757 7.757 0 011.113 7.044 17.86 17.86 0 01-7.5 9.919 43.461 43.461 0 00-2.3-2.992C435.562 69.826 420.312 64 400 64a58.749 58.749 0 00-8 .535zm-43.191 110.455C359.485 108.285 370.707 80 400 80c15.786 0 34.485 4.4 39.252 24.012-.467.075-.753.13-.821.143A8 8 0 00432 112v32a7.964 7.964 0 002.022 5.3l-7.366 9.821a23.992 23.992 0 009.94 36.549q1.465.607 2.928 1.068c-2.219 50.732-12.765 94.11-31.424 128.982-15.44 28.853-36.464 52.035-62.486 68.9C301.02 423.525 256.433 424 256 424c-102.228 0-150.225-78.87-172.715-150.009l33.089 5.515c10.647 9.42 64.3 53.83 129.183 53.829q3.607 0 7.263-.187c39.442-2.044 74.845-20.854 105.225-55.908 28.155-32.483 37.534-59.679 27.875-80.833-5.964-13.061-18.743-22.855-37.982-29.108-2.452-.8-4.928-1.506-7.41-2.144 2.996-5.806 5.42-13.546 8.281-22.7zM296 176c46.459 0 69.394 13.975 75.366 27.054 6.728 14.735-2.059 36.764-25.411 63.707-27.4 31.609-58.977 48.568-93.868 50.4-54.494 2.876-103.25-31.877-120.234-45.581 19.284-18.712 79.286-75.439 118.078-95.583zm-200.8 0h124.2c-37.9 26.087-81.869 67.728-98.41 83.812-9.467-13.94-28.375-46.826-25.79-83.812zm-64.009-20.759L79.356 173.3c-3.129 36.8 12.051 69.234 23.293 87.7l-29.211-4.868C63.422 254.1 57 250.369 54.35 245.027c-3.827-7.711.779-17.394.8-17.448a8 8 0 00-2.35-9.979c-20.185-15.139-22.1-46.274-21.609-62.359z\" />\r\n      <circle cx={408} cy={112} r={8} />\r\n    </svg>\r\n  );\r\n}\r\n\r\nconst MemoAnimalsIcon = React.memo(AnimalsIcon);\r\nexport default MemoAnimalsIcon;\r\n","import * as React from \"react\";\r\n\r\nfunction BeeIcon(props) {\r\n  return (\r\n    <svg viewBox=\"0 0 512 512\" width=\"1em\" height=\"1em\" {...props}>\r\n      <path d=\"M434.871 242.39c-37.932-27.628-91.206-30.938-158.422-9.9a79.965 79.965 0 00-9.047-19.566c31.529-13.879 55.3-34.446 71.025-61.546 22.514-38.8 23.41-82.957 20.2-113.165a23.995 23.995 0 00-43.716-10.857L213.29 177.109a79.972 79.972 0 00-57.2 12.038 38.682 38.682 0 00-15.547-17.047c-11.551-6.672-25.76-6.775-40.008-.292A69.831 69.831 0 0080 186.386c-14.165-6.153-27.52-6.153-38.1.138C24.472 196.892 16 222.234 16 264a8 8 0 0016 0c0-43.779 9.832-58.818 18.081-63.725 6.058-3.6 13.294-2.77 19.39-.789a90.753 90.753 0 00-2.5 4.04c-8.306 14.386-12.1 30.34-10.688 44.923 1.51 15.58 8.7 27.834 20.256 34.5a38.208 38.208 0 0019.3 5.079 50.1 50.1 0 0020.71-4.787 63.556 63.556 0 006.989-3.74 79.334 79.334 0 0010.654 21.899l-28.976 46.36a8 8 0 00-.8 6.77l8 24a8 8 0 1015.178-5.06l-6.808-20.425 24.337-38.939a80.636 80.636 0 0024.884 16l-17.157 34.315a8 8 0 000 7.156l32 64a8 8 0 1014.31-7.156L168.944 368l16.656-33.316a79.808 79.808 0 0038.4-2.367V352a8 8 0 004.422 7.155l45.615 22.808 54.808 109.615a8 8 0 1014.31-7.156l-56-112a8 8 0 00-3.577-3.577L240 347.056v-21.819a80.37 80.37 0 0014.2-10.458C285.938 348.256 370.02 426.7 460.374 426.7c4.863 0 9.754-.228 14.647-.7a23.864 23.864 0 0021.548-23.529c.445-34.301-4.676-118.549-61.698-160.081zM328.148 36.34a7.586 7.586 0 016.511-3.521 8.784 8.784 0 012.089.251 7.728 7.728 0 015.966 6.833c2.961 27.837 2.22 68.38-18.126 103.444-21.58 37.19-60.8 60.775-116.719 70.247zM80.831 211.526a68 68 0 0111.39-14.742c4.5 3.241 5.583 13.133-.1 22.979A26.554 26.554 0 0180.765 230.7c-1.724.784-4.778 1.816-7.589.992a66.379 66.379 0 017.655-20.166zm29.1 57.155c-9.415 4.282-18.429 4.43-25.384.416s-11.05-11.832-12.154-21.3a24.818 24.818 0 003 .182 29.076 29.076 0 0012-2.717 42.247 42.247 0 0018.59-17.5c8.472-14.674 7.891-31.017-.572-40.539.582-.3 1.166-.58 1.755-.848a34.161 34.161 0 0114.051-3.323 22.42 22.42 0 0111.331 2.907c15.022 8.674 16.723 35.037 3.713 57.569-6.661 11.521-16.008 20.454-26.334 25.153zM240 305.907V296a8 8 0 00-16 0v19.313a63.285 63.285 0 01-30.863 4.3l6.018-12.038a8 8 0 00-14.31-7.156l-7.672 15.344a64.525 64.525 0 01-23.373-15.542l4.988-7.981a8 8 0 00-13.568-8.48l-1.582 2.53a63.231 63.231 0 01-6.39-17.773 84.445 84.445 0 0012.869-16.991c8.305-14.385 12.1-30.339 10.687-44.922-.035-.362-.088-.712-.129-1.069A63.875 63.875 0 01200 192c1.043 0 2.084.042 3.123.092l-18.6 27.416a8 8 0 007.5 12.443q33.245-3.693 60.124-13.045a63.92 63.92 0 01-12.146 87zm24.854-3.151A79.542 79.542 0 00280 256c0-2.595-.138-5.177-.388-7.742a293.452 293.452 0 0150.882-11.718l-53.551 78.543a455.063 455.063 0 01-12.089-12.327zm23.833 23.505l62.287-91.356q25.566-.675 46.281 6.116l-76.532 112.254c-12.038-9.233-22.843-18.544-32.036-27.014zm52.387 41.649q-3.789-2.54-7.461-5.137l78.735-115.486a98.4 98.4 0 0113.1 8.036 102.561 102.561 0 0119.188 18.6L369.043 384.8q-13.798-7.4-27.969-16.89zm139.5 34.352a7.886 7.886 0 01-7.091 7.805 144.777 144.777 0 01-35.229-1.027l38.626-57.929a282.814 282.814 0 013.69 51.151zm-8.5-72.78l-50.772 76.145a216.467 216.467 0 01-37.808-13.61l70.956-104.082a164.389 164.389 0 0117.616 41.547z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nconst MemoBeeIcon = React.memo(BeeIcon);\r\nexport default MemoBeeIcon;\r\n","import * as React from \"react\";\r\n\r\nfunction CowIcon(props) {\r\n  return (\r\n    <svg height=\"1em\" viewBox=\"0 0 512 512\" width=\"1em\" {...props}>\r\n      <path d=\"M117.47 263.589A8 8 0 00120 264a48.725 48.725 0 009.9-1.181c8.1-1.84 13.678-5.509 16.566-10.905 2.824-5.277 2.717-11.344-.305-18.1 3.973-4.062 8.506-10.442 8.506-18.411 0-8.345-4.788-15.769-14.229-22.063a18.618 18.618 0 00-20.729-.461c-10.84 6.615-20.9 27.278-18.607 47.493 1.351 11.906 7.165 20.149 16.368 23.217zm10.574-57.048a3.261 3.261 0 011.685-.6 3.348 3.348 0 011.833.713c2.646 1.764 7.085 5.242 7.1 8.726.021 3.844-4.793 8.381-7.134 9.981a8 8 0 00-2.189 11.075c3.3 4.948 3.3 7.4 3.016 7.923-.867 1.635-5.992 3.269-10.868 3.585-3-1.721-4.1-5.953-4.492-9.376-1.18-10.422 3.783-27.593 11.049-32.027z\" />\r\n      <path d=\"M44.471 158.065C30.887 170.55 24 190.042 24 216v80a8 8 0 0016 0v-80c0-21.3 5.147-36.825 15.3-46.154a37.76 37.76 0 0116.234-8.627c-19.087 42.113 2.561 110.975 7.885 126.5l-22.77 53.131a7.994 7.994 0 00-.538 4.466l8 48c.068.412.168.819.3 1.215l8 24A8 8 0 0080 424h40a8 8 0 007.155-11.578L112 382.111v-42.8l1.439-1.438A110.098 110.098 0 00144 345.216V352a8 8 0 0016 0v-6.861a77.862 77.862 0 0029.087-8.739l5.256 5.257a8 8 0 0011.314-11.314l-2.993-2.992a103.97 103.97 0 0017.423-18.393c39.46 25.857 88.462 18.171 108.9 13.272l7.053 70.57c.059.59.183 1.172.371 1.734l8 24A8 8 0 00352 424h40a8 8 0 007.155-11.578L384 382.111v-70.528a24.396 24.396 0 006.782-2.973c12.752-8.037 21.216-28.1 25.156-59.618 3.668-29.346 12.287-41.158 18.87-45.9 5.34-3.846 10.056-3.486 11.176-3.332l11.9 3.968a24.038 24.038 0 0027.556-9.461l2.557-3.835a24.073 24.073 0 00-1.66-28.826c-13.668-16.128-39.207-45.795-56.676-63.264-10.134-10.134-19.47-10.781-25.515-9.54-10.183 2.09-17.6 10.68-22.178 17.882a7.995 7.995 0 00-4.395-2.53l-40-8a7.999 7.999 0 00-9 10.816l7.954 19.884c.063.159.133.313.2.471L334.7 128H232c-.441 0-.88.037-1.315.109l-46.779 7.8-54.775-7.824A7.918 7.918 0 00128 128c-18.71 0-33.581 5.287-44.359 15.733-8.565-.075-25.36 1.64-39.17 14.332zM85.766 408l-5.333-16h18.623l8 16zm74.441-78.979c-12.794 1.635-25.077-.693-35.013-3.924 10.533-11.145 31.827-30.525 54.467-32.948a39.204 39.204 0 0127.585 7.22c-13.028 17.343-28.818 27.325-47.039 29.652zM357.766 408l-5.333-16h18.623l8 16zm116.366-236.042a8.007 8.007 0 01.552 9.594l-2.564 3.848a8.006 8.006 0 01-9.178 3.154l-12.41-4.14a6.454 6.454 0 00-.592-.172c-.851-.2-1.715-.341-2.586-.422-2.349-11.153-7.764-22.87-16.7-36.255-3.765-5.648-6.227-17.151-7.1-32.58 16.665 17.329 38.383 42.582 50.578 56.973zm-103.538-52.881L379.056 136h-5.391a23.886 23.886 0 01-22.284-15.087l-2.468-6.172zM327.123 144H336a8 8 0 002.53-.411l7.6-2.534A39.835 39.835 0 00373.665 152H392a8 8 0 007.155-11.578l-8.223-16.447c.19-.321.357-.655.5-1 2.151-5.377 8.819-16.9 15.793-18.461.218 24.693 3.61 42.158 10.125 51.931 7.509 11.251 12.195 21.17 14.214 30.118a35.447 35.447 0 00-5.387 3.048c-10.984 7.526-18.8 21.382-23.323 41.279-5.035 6.045-11.369 9.11-18.854 9.11-6.141 0-6.724-1.194-9.176-6.219C370.433 224.784 364.437 216 344 216a6.134 6.134 0 01-4.672-2.237C331.3 205.515 326.83 179.7 327.123 144zM160 148.653l22.869 3.266a7.962 7.962 0 002.446-.028L232.662 144h34.887c-3.485 6.526-4.965 12.776-4.382 18.681.755 7.664 4.8 14.3 12.033 19.719 6.1 4.574 9.11 9.454 9.206 14.919.2 11.508-12.2 24.173-17.223 28.287-22.34 15.587-40.076 20.529-52.716 14.687-19.25-8.9-22.471-40.711-22.5-41.017a8.002 8.002 0 00-3.167-5.676l-19.2-14.4A24.102 24.102 0 01160 160zm175.997 155.349c-17.375 0-24.154-25.61-24.244-25.959a8 8 0 00-15.517 3.9 70.663 70.663 0 007.977 18.3 51.42 51.42 0 007.116 9.061 166.45 166.45 0 01-18.093 1.723c-29.607 1.158-53.877-5.969-72.117-21.17-12.883-10.735-27.422-15.313-43.217-13.608-37.019 4-68.178 41.768-71.893 46.429l-7.669 7.668A8.002 8.002 0 0096 336v40H77.444l-5.168-31 23.077-53.846a8.007 8.007 0 00.155-5.914 311.238 311.238 0 01-12.722-49.224c-5.771-34.121-3.249-60.143 7.293-75.252 7.787-11.164 20.014-16.648 37.365-16.764L144 146.367V160a40.172 40.172 0 0016 32l16.507 12.381c1.62 10.391 8.15 39.711 31.182 50.405a42.248 42.248 0 0018.012 3.865c14.736 0 31.773-6.717 50.887-20.1.14-.1.276-.2.41-.307 2.431-1.945 23.743-19.623 23.406-41.147-.113-7.292-2.913-17.982-15.605-27.5-3.541-2.656-5.408-5.433-5.71-8.49-.439-4.445 2.277-10.447 7.688-17.11h24.348c-.441 51.935 8.732 72.7 16.741 80.927A22.198 22.198 0 00344 232c12.151 0 13.768 3.312 16.445 8.8C363.4 246.852 367.864 256 384 256a39.497 39.497 0 0015.225-2.942c-4.048 26.588-10.808 36.783-15.225 40.686V272a8 8 0 00-16 0v104h-17.56l-6.48-64.8c-.519-5.259-3.85-7.462-7.963-7.198z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nconst MemoCowIcon = React.memo(CowIcon);\r\nexport default MemoCowIcon;\r\n","import * as React from \"react\";\r\n\r\nfunction HomeIcon(props) {\r\n  return (\r\n    <svg viewBox=\"0 0 512 512\" width=\"1em\" height=\"1em\" {...props}>\r\n      <path d=\"M471.982 417.008Q472 416.5 472 416a32.036 32.036 0 00-32-32V236l28.8-21.6a8 8 0 00-.08-12.859L400 151.322V64a8 8 0 008-8V24a8 8 0 00-8-8h-80a8 8 0 00-8 8v32a8 8 0 008 8v28.861l-59.28-43.32a8 8 0 00-9.44 0l-208 152a8 8 0 00-.08 12.859L72 236v148a32.036 32.036 0 00-32 32q0 .5.018 1.008A32 32 0 0048 480h416a32 32 0 007.982-62.992zM328 32h64v16h-64zm8 72V64h48v75.63L335.243 104zm-80-38.092l194.555 142.176-18.628 13.971L260.706 97.53a8 8 0 00-9.412 0L80.073 222.055l-18.628-13.971zM32 448a16.019 16.019 0 0115.76-16h.019c.409.057.818.106 1.235.133a8 8 0 008.023-10.716A15.727 15.727 0 0156 416a16.019 16.019 0 0116-16v64H48a16.019 16.019 0 01-16-16zm344 16h-96V288h96zm16 0V280a8 8 0 00-8-8H272a8 8 0 00-8 8v184H88V236.074l168-122.182 168 122.182V464zm72 0h-24v-64a16.019 16.019 0 0116 16 15.727 15.727 0 01-1.037 5.421 8 8 0 008.023 10.716c.417-.027.826-.076 1.235-.133h.019a16 16 0 01-.24 32z\" />\r\n      <path d=\"M224 272h-96a8 8 0 00-8 8v112a8 8 0 008 8h96a8 8 0 008-8V280a8 8 0 00-8-8zm-8 56h-32v-40h32zm-48-40v40h-32v-40zm-32 56h32v40h-32zm48 40v-40h32v40z\" />\r\n      <circle cx={304} cy={368} r={8} transform=\"rotate(-67.5 304 368)\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nconst MemoHomeIcon = React.memo(HomeIcon);\r\nexport default MemoHomeIcon;\r\n","import * as React from \"react\";\r\n\r\nfunction HorseIcon(props) {\r\n  return (\r\n    <svg height=\"1em\" viewBox=\"0 0 511.956 511.956\" width=\"1em\" {...props}>\r\n      <path d=\"M438.57 139.298c1.86-1.86 2.93-4.44 2.93-7.07s-1.07-5.21-2.93-7.07-4.44-2.93-7.07-2.93-5.21 1.07-7.07 2.93-2.93 4.44-2.93 7.07 1.07 5.21 2.93 7.07 4.44 2.93 7.07 2.93 5.21-1.07 7.07-2.93z\" />\r\n      <path d=\"M502.508 137.552l-37.262-44.228-.085-.099a51.153 51.153 0 00-16.402-12.566V44.691a10.001 10.001 0 00-18.35-5.502l-5.932 9.003h-24.845c-36.726 0-71.792 11.479-101.407 33.197-23.581 17.291-42.461 40.493-54.602 67.097l-9.938 21.778h-32.681c-5.523 0-10 4.477-10 10s4.477 10 10 10h47.448c27.26 0 53.626-9.823 74.241-27.659l57.703-49.924a70.393 70.393 0 0146.05-17.157 31.17 31.17 0 0123.55 10.741l37.255 44.219.084.099c5.15 5.953 6.113 14.615 2.398 21.555-4.657 8.698-15.4 12.446-24.486 8.525l-35.324-15.127a10 10 0 00-12.645 4.276l-25.709 45.537a10 10 0 00-1.292 4.916v24.5c0 20.946-10.561 40.184-28.251 51.462-26.351 16.8-42.083 45.01-42.083 75.462v74.909c0 1.522.348 3.025 1.017 4.393l3.068 6.274H299.61V339.927c0-18.837-15.325-34.162-34.162-34.162H146.305l5.337-14.246c1.938-5.172-.684-10.935-5.856-12.872-5.172-1.939-10.935.684-12.873 5.856l-32.774 87.48a10.007 10.007 0 00-.636 3.508v71.107c0 1.523.348 3.025 1.017 4.394l3.068 6.273H79.171V349.676c0-25.054-6.798-50.526-19.661-73.662-4.66-8.381-7.16-17.914-7.231-27.567-.111-15.274 5.825-29.728 16.715-40.697 11.193-11.274 26.113-17.484 42.011-17.484 5.523 0 10-4.477 10-10s-4.477-10-10-10c-21.268 0-41.229 8.308-56.205 23.394a79.949 79.949 0 00-5.179 5.748C21.828 202.007 0 225.458 0 253.919v106.883c0 28.333 13.574 55.342 36.311 72.247a9.974 9.974 0 005.963 1.975 9.988 9.988 0 007.153-3.008l.324-.332a104.318 104.318 0 009.419-11.082v39.422c0 9.506 7.734 17.24 17.24 17.24h71.905c5.987 0 11.455-3.032 14.625-8.111s3.493-11.323.862-16.702l-3.994-8.167v-66.579l24.177-51.94h34.488l-29.339 127.909c-1.32 5.756.033 11.706 3.712 16.324s9.176 7.267 15.081 7.267h30.151c6.696 0 12.811-3.391 16.356-9.072s3.906-12.663.964-18.68l-1.926-3.938 26.137-97.11v111.56c0 9.506 7.734 17.24 17.24 17.24h31.601c5.987 0 11.454-3.032 14.625-8.111 3.17-5.079 3.493-11.323.862-16.702l-3.994-8.168V371.69c0-23.584 12.274-45.49 32.834-58.598 23.48-14.97 37.499-40.513 37.499-68.327v-21.872l20.011-35.444 27.059 11.587c18.522 7.997 40.494.329 50.018-17.458 7.589-14.17 5.634-31.854-4.856-44.026zM367.31 97.556l-57.703 49.924a93.473 93.473 0 01-53.797 22.477l6.009-13.168a151.828 151.828 0 0148.233-59.271c26.162-19.184 57.138-29.325 89.58-29.325h11.666l-6.595 10.009a90.383 90.383 0 00-37.393 19.354zM41.289 411.075C27.827 397.986 20 379.776 20 360.802V253.919c0-12.213 6.337-22.967 15.889-29.169a76.767 76.767 0 00-3.609 23.842c.095 12.996 3.467 25.838 9.75 37.14 11.213 20.171 17.141 42.282 17.141 63.944v9.871c-.005 18.902-6.299 36.897-17.882 51.528zm99.454-39.804a10.004 10.004 0 00-.934 4.22v71.107c0 1.523.348 3.025 1.017 4.393l3.068 6.273h-18.863a17.352 17.352 0 00-1.532-4.814l-3.995-8.167v-66.98l19.308-51.538h23.114zm92.443 72.728a9.998 9.998 0 00.673 6.993l3.068 6.273H208.83l30.163-131.5h26.015z\" />\r\n      <path d=\"M156.01 190.268c2.63 0 5.2-1.07 7.07-2.93 1.86-1.86 2.93-4.44 2.93-7.07 0-2.64-1.07-5.21-2.93-7.07a10.05 10.05 0 00-7.07-2.93c-2.64 0-5.21 1.06-7.08 2.93a10.048 10.048 0 00-2.92 7.07c0 2.63 1.06 5.21 2.92 7.07s4.44 2.93 7.08 2.93z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nconst MemoHorseIcon = React.memo(HorseIcon);\r\nexport default MemoHorseIcon;\r\n","import * as React from \"react\";\r\n\r\nfunction MarkerIcon(props) {\r\n  return (\r\n    <svg height=\"1em\" viewBox=\"0 0 511.999 511.999\" width=\"1em\" {...props}>\r\n      <path\r\n        d=\"M256 511.999a15.001 15.001 0 01-12.72-7.05l-73.972-118.353C98.5 353.119 53 281.565 53 203 53 91.065 144.065 0 256 0s203 91.065 203 203c0 78.565-45.501 150.119-116.309 183.596l-73.972 118.353a15.001 15.001 0 01-12.719 7.05z\"\r\n        fill=\"#fdbf00\"\r\n      />\r\n      <path\r\n        d=\"M256 0c-.001 0-.001 0 0 0v511.999c5.172 0 9.979-2.665 12.72-7.05l73.972-118.353C413.499 353.119 459 281.565 459 203 459 91.065 367.934 0 256 0z\"\r\n        fill=\"#ff8856\"\r\n      />\r\n      <path\r\n        d=\"M256.5 344.73c-77.875 0-141.23-63.356-141.23-141.23S178.625 62.27 256.5 62.27s141.23 63.356 141.23 141.23-63.355 141.23-141.23 141.23z\"\r\n        fill=\"#fff4f4\"\r\n      />\r\n      <path\r\n        d=\"M256.5 282c-33.115 0-60.056-26.941-60.056-60.056 0-17.118 12.55-41.082 23.077-58.171 5.292-8.591 11.038-16.987 16.18-23.64C242.548 131.272 248.047 125 256.5 125s13.952 6.272 20.799 15.133c5.142 6.653 10.888 15.049 16.18 23.64 10.527 17.089 23.077 41.054 23.077 58.171C316.555 255.059 289.615 282 256.5 282z\"\r\n        fill=\"#ff435b\"\r\n      />\r\n      <path\r\n        d=\"M256.5 62.269c-.167 0-.333.006-.5.006v282.448c.167.001.333.006.5.006 77.875 0 141.23-63.356 141.23-141.23S334.375 62.269 256.5 62.269z\"\r\n        fill=\"#f6efea\"\r\n      />\r\n      <path\r\n        d=\"M293.478 163.772c-5.292-8.591-11.038-16.987-16.18-23.64-6.847-8.861-12.346-15.133-20.799-15.133-.17 0-.332.018-.5.023v156.965c.167.001.333.013.5.013 33.115 0 60.056-26.941 60.056-60.056 0-17.118-12.55-41.082-23.077-58.172z\"\r\n        fill=\"#cc2e43\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nconst MemoMarkerIcon = React.memo(MarkerIcon);\r\nexport default MemoMarkerIcon;\r\n","import * as React from \"react\";\r\n\r\nfunction GoogleMarkerIcon(props) {\r\n  return (\r\n    <svg height=\"1em\" version=\"1.1\" width=\"1em\" {...props}>\r\n      <g transform=\"translate(0 -1028.4)\">\r\n        <path d=\"m12 0c-4.4183 2.3685e-15 -8 3.5817-8 8 0 1.421 0.3816 2.75 1.0312 3.906 0.1079 0.192 0.221 0.381 0.3438 0.563l6.625 11.531 6.625-11.531c0.102-0.151 0.19-0.311 0.281-0.469l0.063-0.094c0.649-1.156 1.031-2.485 1.031-3.906 0-4.4183-3.582-8-8-8zm0 4c2.209 0 4 1.7909 4 4 0 2.209-1.791 4-4 4-2.2091 0-4-1.791-4-4 0-2.2091 1.7909-4 4-4z\" fill=\"#e74c3c\" transform=\"translate(0 1028.4)\" /><path d=\"m12 3c-2.7614 0-5 2.2386-5 5 0 2.761 2.2386 5 5 5 2.761 0 5-2.239 5-5 0-2.7614-2.239-5-5-5zm0 2c1.657 0 3 1.3431 3 3s-1.343 3-3 3-3-1.3431-3-3 1.343-3 3-3z\" fill=\"#c0392b\" transform=\"translate(0 1028.4)\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nconst MemoGoogleMarkerIcon = React.memo(GoogleMarkerIcon);\r\nexport default MemoGoogleMarkerIcon;\r\n","import * as React from \"react\";\r\n\r\nfunction PigIcon(props) {\r\n  return (\r\n    <svg height=\"1em\" viewBox=\"0 0 60 44\" width=\"1em\" {...props}>\r\n      <g transform=\"translate(-1)\">\r\n        <path d=\"M29.108 5.209A36.952 36.952 0 0025 5a24.955 24.955 0 00-7.292 1.052 1 1 0 00.584 1.913A22.966 22.966 0 0125 7c1.3-.006 2.6.061 3.892.2a1 1 0 00.216-1.989z\" />\r\n        <circle cx={33} cy={7} r={1} />\r\n        <path d=\"M60 34H46.611a2.071 2.071 0 00-.113-.846 10.592 10.592 0 01-.5-2.176.53.53 0 00-.009-.1c-.053-.9.18-1.795.668-2.555.482-.766.912-1.564 1.286-2.388 5.5-.312 8.013-1.942 9.139-3.2.394.083.744.141 1.026.179.087.012.175.018.263.018a2.02 2.02 0 001.961-1.6l.618-3.12a2 2 0 00-1.5-2.35 14.9 14.9 0 01-2.087-.616 9.42 9.42 0 01-3.061-2.08 4.24 4.24 0 00.567-2.136c.012-1.29 1.319-2.817 1.82-3.3a1 1 0 00-.532-1.713 11.489 11.489 0 00-2.431-.057c.286-.41.608-.795.963-1.149a1 1 0 00-.533-1.715c-.2-.029-4.86-.723-7.9 2.154a4.091 4.091 0 00-.885 1.206C36.428 1.675 30.064 1 25 1 16.337 1 9.07 4.573 5.825 9.807A3.991 3.991 0 017 2a1 1 0 000-2 5.985 5.985 0 00-2.107 11.593A11.429 11.429 0 004 16a14.737 14.737 0 003.537 9.969c.3.334.472.765.484 1.215.125 2.285.385 4.561.779 6.816H2a1 1 0 000 2h58a1 1 0 000-2zm-7.132-22.995a1.954 1.954 0 01-.925 1.741l-.057.028h-.006a1.925 1.925 0 01-2.515-.659 1.863 1.863 0 01.264-2.5 6.969 6.969 0 014.305-1.672 5.871 5.871 0 00-1.066 3.062zm-.929-5.978a7.463 7.463 0 00-.737 1.424 7.83 7.83 0 00-2.891 1.666c-.4-.24-.795-.47-1.185-.691.112-.276.282-.525.5-.729a6.992 6.992 0 014.313-1.67zM14.958 34a2.4 2.4 0 00-.1-1.227 13.667 13.667 0 01-.617-2.669 21.012 21.012 0 01-.191-1.933.967.967 0 01.457-.876c.331-.21.638-.447.943-.684.293.083.595.155.895.23-.222.45-.323.952-.292 1.453.038.7.111 1.429.209 2.093.13 1.043.37 2.07.719 3.061A.409.409 0 0116.6 34zm20.954-6.183c.214.238.336.544.343.864.098 1.783.298 3.559.6 5.319H18.959c.075-.414.04-.841-.1-1.238a13.072 13.072 0 01-.618-2.658 21.012 21.012 0 01-.191-1.933.967.967 0 01.437-.859c2.428.455 4.893.685 7.363.688a36.289 36.289 0 009.243-1.172c.312.42.607.745.819.989zM40 34h-1.118a45.2 45.2 0 01-.628-5.391 3.324 3.324 0 00-.853-2.127A8.864 8.864 0 0135 20a1 1 0 00-2 0c-.03 1.732.325 3.45 1.036 5.03a34.51 34.51 0 01-8.186.97c-2.93.005-5.85-.336-8.7-1.015A11.784 11.784 0 0020 17.29V14a1 1 0 00-2 0v3.29a9.794 9.794 0 01-4.569 8.318 2.965 2.965 0 00-1.38 2.686c.038.7.111 1.429.209 2.1.135 1.043.374 2.07.716 3.064a.4.4 0 01-.047.377.389.389 0 01-.329.165h-1.766a56.789 56.789 0 01-.814-6.889 3.875 3.875 0 00-.994-2.477A12.739 12.739 0 016 16C6 8.71 14.346 3 25 3c5 0 11.326.684 20.4 5.742a.934.934 0 00.12.076c.556.3 1.124.633 1.693.974a3.87 3.87 0 00.5 3.458 3.917 3.917 0 003.25 1.742 4.1 4.1 0 001.774-.41l.1-.052a11.277 11.277 0 003.803 2.57c.766.288 1.55.522 2.349.7l-.616 3.123a11.958 11.958 0 01-4.819-1.762 1 1 0 10-1.108 1.666c.75.495 1.553.908 2.392 1.232-1.156.826-3.378 1.75-7.6 1.906-.392.023-.805.035-1.238.035h-1.315c.195-.65.301-1.322.315-2a1 1 0 00-2 0 7.182 7.182 0 01-.638 2.607v.008c-.39.92-.855 1.805-1.391 2.647a6.181 6.181 0 00-.974 3.76c.008.1.018.2.028.275.127.894.323 1.776.587 2.639a.143.143 0 01-.121.064zm2.612 0a2.06 2.06 0 00-.111-.84 10.922 10.922 0 01-.5-2.149l-.014-.139a4.2 4.2 0 01.674-2.547c.472-.748.897-1.525 1.273-2.325h1.758c-.22.411-.46.831-.732 1.263a6.245 6.245 0 00-.967 3.759l.009.1c0 .065.012.129.018.167.124.896.32 1.781.585 2.646a.139.139 0 01-.115.065zM52 39a1 1 0 00-1-1H11a1 1 0 000 2h40a1 1 0 001-1zM20 42a1 1 0 000 2h22a1 1 0 000-2z\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nconst MemoPigIcon = React.memo(PigIcon);\r\nexport default MemoPigIcon;\r\n","import * as React from \"react\";\r\n\r\nfunction SheepIcon(props) {\r\n  return (\r\n    <svg viewBox=\"0 0 512 512\" width=\"1em\" height=\"1em\" {...props}>\r\n      <circle cx={432} cy={144} r={8} />\r\n      <path d=\"M488 88a40.045 40.045 0 00-40-40q-.505 0-1.009.013a32.006 32.006 0 00-47.6-19.368 36 36 0 00-58.625 5.439 40 40 0 00-48.595 55.7 40.141 40.141 0 00-27.52 30.992 48.137 48.137 0 00-33.831 6.361A39.769 39.769 0 00208 120a40.2 40.2 0 00-34.129 19.144A32.074 32.074 0 00140 143.017a31.991 31.991 0 00-47.823 9.2A40.85 40.85 0 0088 152a40.045 40.045 0 00-40 40 40.85 40.85 0 00.214 4.177 31.994 31.994 0 00-14.384 38.5 47.987 47.987 0 004.349 77.783A48.01 48.01 0 0088 383.333V456a7.949 7.949 0 00.851 3.575h-.006l16 32A8 8 0 00112 496h32a8 8 0 007.155-11.578L136 454.112v-62.3a44.015 44.015 0 0022.676-8.829 40.052 40.052 0 0056.366-5.731 36 36 0 0039.8 1.439A47.88 47.88 0 00320 379.709V456a7.949 7.949 0 00.851 3.575h-.006l16 32A8 8 0 00344 496h32a8 8 0 007.155-11.578L368 454.112v-62.791A48.07 48.07 0 00408 344q0-.4-.007-.8a40.06 40.06 0 0028.174-56.342 47.979 47.979 0 008.2-70.176 39.836 39.836 0 003.613-15.95c7.453 3.153 15.616 5.726 23.211 5.726a24.635 24.635 0 0013.043-3.365C492.042 198.335 496 189.22 496 176c0-25.846-11.877-45.458-22.1-57.551A39.916 39.916 0 00488 88zM104 448v-66.081a44.216 44.216 0 0016 8.39V448zm12.944 32l-8-16h14.112l8 16zM336 448v-62.5a48.237 48.237 0 0016 5.807V448zm12.944 32l-8-16h14.112l8 16zm72.741-203.069a8 8 0 00-2.844 12.2A23.7 23.7 0 01424 304a24.028 24.028 0 01-24 24h-.511a8 8 0 00-8.132 9.569A32.753 32.753 0 01392 344a32 32 0 01-60.8 13.951 8 8 0 00-14.4 0A32.189 32.189 0 01288 376a31.734 31.734 0 01-25.739-12.989 8 8 0 00-12.093-.892 20 20 0 01-30.284-2.279 8 8 0 00-13.8 1.591 24.025 24.025 0 01-40.9 5.479 8 8 0 00-12.246-.328 27.989 27.989 0 01-43.721-2.31 8 8 0 00-11.057-1.922 31.989 31.989 0 01-42.114-47.542A8 8 0 0052.849 302a32.005 32.005 0 01-4.807-57.738 8 8 0 002.658-11.385A15.89 15.89 0 0148 224a16.053 16.053 0 0111.5-15.348 8 8 0 005.447-9.926 24.038 24.038 0 0129.777-29.777 8 8 0 009.926-5.447 15.987 15.987 0 0128.678-4.336 8 8 0 0013.34 0 15.981 15.981 0 0124.8-2.316 8 8 0 0013.429-3.4 24.018 24.018 0 0139.962-10.542 8 8 0 0010.721.456A32.041 32.041 0 01256 136a31.657 31.657 0 0112.941 2.73 8 8 0 0011.2-8.231A21.775 21.775 0 01280 128a24.028 24.028 0 0124-24c.731 0 1.49.036 2.256.106a8 8 0 005.993-13.995 24 24 0 0128.44-38.488 8 8 0 0011.977-4.745 20 20 0 0137.6-3.009 8 8 0 0013.445 1.885A16 16 0 01432 56c0 .259-.008.52-.017.779a8 8 0 0010.022 7.98A23.692 23.692 0 01448 64a24 24 0 11-21.508 34.666 8 8 0 00-13.6-1.189 16 16 0 01-19.056 5.289 141.659 141.659 0 00-1.976-24.24 8 8 0 00-13.809-3.878l-72 80a8 8 0 004.7 13.255 128.178 128.178 0 0018.39 1.261c17.259 0 42.047-3.331 53.534-20.762q.723-1.1 1.386-2.234A15.946 15.946 0 01392 160a39.441 39.441 0 01-1.516 6.834 8 8 0 009.651 10.475A53.888 53.888 0 01408 176a24.011 24.011 0 0119.846 37.51 8 8 0 001.322 10.5 32 32 0 01-7.483 52.922zM369.32 139.6c-7.256 11.008-25.782 13.622-40.445 13.61l48.917-54.352c.335 13.178-1.214 29.727-8.472 40.742zm21.416 26.629q-.129.276-.234.558a5.605 5.605 0 01.234-.56zm9.431 11.071c.12-.034.239-.07.357-.11-.059.018-.177.06-.357.11zM480 176c0 4.084-.531 11.259-4.09 13.428-6.669 4.062-24.123-4.292-32.914-8.773A40.025 40.025 0 00408 160a31.892 31.892 0 00-17.756-28.667 90.267 90.267 0 002.5-12.169 31.9 31.9 0 0025.223-4.706 40.026 40.026 0 0041.536 11.847C468.4 136.055 480 153.156 480 176z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nconst MemoSheepIcon = React.memo(SheepIcon);\r\nexport default MemoSheepIcon;\r\n","import React from \"react\";\r\nimport { renderToStaticMarkup } from \"react-dom/server\";\r\nimport { divIcon } from \"leaflet/src/layer/marker/DivIcon\";\r\n\r\nimport MemoAnimalsIcon from \"./Icons/AnimalsIcon\";\r\nimport MemoBeeIcon from \"./Icons/BeeIcon\";\r\nimport MemoCowIcon from \"./Icons/CowIcon\";\r\nimport MemoHomeIcon from \"./Icons/HomeIcon\";\r\nimport MemoHorseIcon from \"./Icons/HorseIcon\";\r\nimport MemoMarkerIcon from \"./Icons/MarkerIcon\";\r\nimport MemoGoogleMarkerIcon from \"./Icons/GoogleMarkerIcon\";\r\nimport MemoPigIcon from \"./Icons/PigIcon\";\r\nimport MemoSheepIcon from \"./Icons/SheepIcon\";\r\n\r\nexport const iconTypes = {\r\n  Marker: MemoMarkerIcon,\r\n  GoogleMarker: MemoGoogleMarkerIcon,\r\n  Animals: MemoAnimalsIcon,\r\n  Bee: MemoBeeIcon,\r\n  Cow: MemoCowIcon,\r\n  Home: MemoHomeIcon,\r\n  Horse: MemoHorseIcon,\r\n  Pig: MemoPigIcon,\r\n  Sheep: MemoSheepIcon\r\n};\r\n\r\nexport const customIcon = (\r\n  name = \"GoogleMarker\",\r\n  color = \"#3388ff\",\r\n  size = [36, 36]\r\n) => {\r\n  // Получаем svg\r\n  let html;\r\n  let Icon = iconTypes[name];\r\n  if (Icon) {\r\n    html = renderToStaticMarkup(\r\n      <Icon fill={color} width={size[0]} height={size[1]} />\r\n    );\r\n  } else {\r\n    html = renderToStaticMarkup(\r\n      <MemoGoogleMarkerIcon fill={color} width={size[0]} height={size[1]} />\r\n    );\r\n  }\r\n  // Возвращаем html-svg иконку\r\n  return new divIcon({ html });\r\n};\r\n","const tooltipOptions = {\r\n  direction: \"top\",\r\n  sticky: true,\r\n};\r\n\r\nexport default tooltipOptions;\r\n","import styled from \"styled-components\";\r\nimport {styledString} from \"../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport default styled.div`\r\n\r\n  & .modal__body-save {\r\n    cursor: pointer;\r\n    display: block;\r\n    border: 0;\r\n    padding: 10px 15px;\r\n    background-color: #6c757d;\r\n    color: #fff;\r\n  }\r\n  \r\n  & .modal__body-text label {\r\n     color: #919191;\r\n     display: flex;\r\n     flex-direction: column;\r\n     font-size: 0.9rem;\r\n  }\r\n  \r\n  & .modal__body-color label {\r\n     color: #919191;\r\n     display: flex;\r\n     flex-direction: column;\r\n     font-size: 0.9rem;\r\n  }\r\n  \r\n  ${({settings}) => {\r\n  const styles = [\r\n    \"altrp-custom--typographic\",\r\n      [\"\", \"styles_font_drawer\", \"typographic\"],\r\n      [\"color\", \"styles_font_color_drawer\", \"color\"],\r\n    \"}\",\r\n    \r\n    `modal__body-save`,\r\n      [\"background-color\", \"background_color_btn\", \"color\"],\r\n      [\"\", \"font_typographic_btn\", \"typographic\"],\r\n      [\"color\", \"font_color_btn\", \"color\"],\r\n    \"}\",\r\n    \r\n    \".MuiSlider-root\",\r\n      [\"color\", \"slider_range_color\", \"color\"],\r\n    \"}\",\r\n    \r\n    \"modal__body-text label, .modal__body-color label\",\r\n      [\"\", \"styles_font_drawer_label\", \"typographic\"],\r\n      [\"color\", \"styles_font_color_drawer_label\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-custom--typographic:hover\",\r\n      [\"\", \"styles_font_drawer\", \"typographic\", \":hover\"],\r\n      [\"color\", \"styles_font_color_drawer\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    `modal__body-save:hover`,\r\n      [\"background-color\", \"background_color_btn\", \"color\", \":hover\"],\r\n      [\"\", \"font_typographic_btn\", \"typographic\", \":hover\"],\r\n      [\"color\", \"font_color_btn\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"modal__body-text label:hover, .modal__body-color:hover label\",\r\n      [\"\", \"styles_font_drawer_label\", \"typographic\", \":hover\"],\r\n      [\"color\", \"styles_font_color_drawer_label\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \".MuiSlider-root:hover\",\r\n      [\"color\", \"slider_range_color\", \"color\", \":hover\"],\r\n    \"}\",\r\n  ];\r\n  return styledString(styles, settings)\r\n}}\r\n`;\r\n","import React, {\r\n  useState,\r\n  useLayoutEffect,\r\n  useEffect,\r\n  useCallback,\r\n  useMemo,\r\n  forwardRef\r\n} from \"react\";\r\nimport Select from \"react-select\";\r\nimport L from \"leaflet\";\r\n\r\nimport { iconTypes, customIcon } from \"./DivIcon\";\r\nimport tooltipOptions from \"./helpers/tooltipOptions\";\r\nimport axios from \"axios\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { getDataByPath } from \"../../../../../front-app/src/js/helpers\";\r\nimport { useGetLatest } from \"react-table\";\r\nimport ModalComponent from \"./ModalComponent\";\r\n\r\nconst ModalControl = (\r\n  {\r\n    markers = [],\r\n    selected,\r\n    state,\r\n    open,\r\n    onClose,\r\n    setState,\r\n    fg,\r\n    updateGeoObjectToModel,\r\n    url_connect = null,\r\n    field_first_connect = null,\r\n    field_second_connect = null,\r\n    id,\r\n    parameters,\r\n    url,\r\n    settings,\r\n  },\r\n  ref\r\n) => {\r\n  const colors = [\"#3388ff\", \"#dc3545\", \"#28a745\", \"#ffc107\", \"#6c757d\"];\r\n  const icons = Object.keys(iconTypes);\r\n  const [properties, setProperties] = useState({});\r\n  const [points, setPoints] = useState([]);\r\n  const [localParameters, setLocalParatemters] = useState([]);\r\n\r\n  const getId = layer => {\r\n    if (layer.feature?.id) {\r\n      return layer.feature.id;\r\n    } else {\r\n      return fg.leafletElement.getLayerId(layer);\r\n    }\r\n  };\r\n\r\n  const getLayer = () => {\r\n    let layer;\r\n    fg.leafletElement.eachLayer(item => {\r\n      if (selected === getId(item)) {\r\n        layer = item;\r\n      }\r\n    });\r\n    return layer;\r\n  };\r\n\r\n  // const [pointResult, setPointsResult] = useState([]);\r\n  const parametersInput = useMemo(async () => {\r\n    const layout = getLayer();\r\n    const dbID = layout.feature.dbID;\r\n    let defaultValue = (await axios.get(`${url}/${dbID}`)).data;\r\n    const inputs =\r\n      parameters?.map((parameter, index) => {\r\n        let inputComponent;\r\n        switch (parameter?.input_type) {\r\n          case \"select\": {\r\n            if (!parameter.parameter_path) {\r\n              inputComponent = (\r\n                <div className=\"mb-3\" key={index}>\r\n                  Please set path to datasource in editor settings\r\n                </div>\r\n              );\r\n              break;\r\n            }\r\n            const data = getDataByPath(parameter.parameter_path);\r\n            if (data.length === 0) {\r\n              inputComponent = (\r\n                <div className=\"mb-3\" key={index}>\r\n                  Empty list of parameters\r\n                </div>\r\n              );\r\n              break;\r\n            }\r\n            const options = data?.map(item => ({\r\n              value: _.get(item, parameter.parameter_value),\r\n              label: _.get(item, parameter.parameter_label)\r\n            }));\r\n            const defaultValueSelect = _.get(\r\n              defaultValue,\r\n              parameter.parent_field_to_save\r\n            );\r\n            inputComponent = (\r\n              <div className=\"mb-3\" key={index}>\r\n                <label>\r\n                  {parameter?.parameter_title || \"\"}\r\n                  <Select\r\n                    defaultValue={options.filter(\r\n                      option => option.value === defaultValueSelect\r\n                    )}\r\n                    options={options}\r\n                    onChange={value =>\r\n                      handleParameterSelect(\r\n                        value,\r\n                        parameter.parent_field_to_save\r\n                      )\r\n                    }\r\n                  />\r\n                </label>\r\n              </div>\r\n            );\r\n            break;\r\n          }\r\n          case \"text\": {\r\n            let defaultValueText = _.get(\r\n              defaultValue,\r\n              parameter.parent_field_to_save\r\n            );\r\n            if (defaultValueText !== null) {\r\n              defaultValueText = defaultValueText.replace(/[\"']/g, \"\");\r\n            }\r\n            inputComponent = (\r\n              <div className=\"modal__body-text\">\r\n                <label>\r\n                  {parameter?.parameter_title || \"\"}\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={defaultValueText}\r\n                    onChange={e =>\r\n                      handleParametersInput(e, parameter.parent_field_to_save)\r\n                    }\r\n                  />\r\n                </label>\r\n              </div>\r\n            );\r\n            break;\r\n          }\r\n          case \"number\": {\r\n            let defaultValueNumber = _.get(\r\n              defaultValue,\r\n              parameter.parent_field_to_save\r\n            );\r\n            defaultValueNumber = Number(defaultValueNumber);\r\n            console.log(\"====================================\");\r\n            console.log(defaultValueNumber);\r\n            console.log(\"====================================\");\r\n            inputComponent = (\r\n              <div className=\"modal__body-text\">\r\n                <label>\r\n                  {parameter?.parameter_title || \"\"}\r\n                  <input\r\n                    type=\"number\"\r\n                    defaultValue={defaultValueNumber}\r\n                    onChange={e =>\r\n                      handleParametersInput(e, parameter.parent_field_to_save)\r\n                    }\r\n                  />\r\n                </label>\r\n              </div>\r\n            );\r\n            break;\r\n          }\r\n          case \"date\": {\r\n            const defaultValueDate = _.get(\r\n              defaultValue,\r\n              parameter.parent_field_to_save\r\n            );\r\n            console.log(\"====================================\");\r\n            console.log(parameter.parent_field_to_save, defaultValueDate);\r\n            console.log(\"====================================\");\r\n            inputComponent = (\r\n              <div className=\"modal__body-text\">\r\n                <label>\r\n                  {parameter?.parameter_title || \"\"}\r\n                  <input\r\n                    type=\"date\"\r\n                    defaultValue={defaultValueDate}\r\n                    onChange={e =>\r\n                      handleParametersInput(e, parameter.parent_field_to_save)\r\n                    }\r\n                  />\r\n                </label>\r\n              </div>\r\n            );\r\n            break;\r\n          }\r\n          default: {\r\n            const defaultValueUnset = _.get(\r\n              defaultValue,\r\n              parameter.parent_field_to_save\r\n            );\r\n            inputComponent = (\r\n              <div className=\"mb-3\" key={index}>\r\n                <label>\r\n                  {parameter?.parameter_title || \"\"}\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={defaultValueUnset}\r\n                    onChange={e =>\r\n                      handleParametersInput(e, parameter.parent_field_to_save)\r\n                    }\r\n                  />\r\n                </label>\r\n              </div>\r\n            );\r\n            break;\r\n          }\r\n        }\r\n        return inputComponent;\r\n      }) || [];\r\n\r\n    return inputs;\r\n  }, [parameters]);\r\n\r\n  const handleParameterSelect = async (options, field) => {\r\n    const layout = getLayer();\r\n    const dbID = layout.feature.dbID;\r\n\r\n    await axios\r\n      .put(`${url}/${dbID}`, {\r\n        altrp_ajax: true,\r\n        [field]: JSON.stringify(options.value)\r\n      })\r\n      .then(res => {\r\n        console.log(\"====================================\");\r\n        console.log(res);\r\n        console.log(\"====================================\");\r\n      });\r\n  };\r\n\r\n  const handleParametersInput = async (e, field) => {\r\n    const layout = getLayer();\r\n    const dbID = layout.feature.dbID;\r\n\r\n    await axios\r\n      .put(`${url}/${dbID}`, {\r\n        altrp_ajax: true,\r\n        [field]: e.target.value\r\n      })\r\n      .then(res => {\r\n        console.log(\"====================================\");\r\n        console.log(res);\r\n        console.log(\"====================================\");\r\n      });\r\n  };\r\n\r\n  const setLocalParametersCallback = useCallback(async () => {\r\n    const inputs = await parametersInput;\r\n    setLocalParatemters(inputs);\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (parametersInput) {\r\n      setLocalParametersCallback(parametersInput);\r\n    }\r\n  }, [parametersInput]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (selected) {\r\n      const feature = state.features.filter(item => item.id === selected);\r\n      console.log(selected);\r\n      if (feature.length > 0) {\r\n        setProperties(feature[0].properties);\r\n      }\r\n    }\r\n  }, [selected, state.features]);\r\n\r\n  // Сохраняем все настройки\r\n  const saveSettings = () => {\r\n    const features = state.features.map(item => {\r\n      if (item.id === selected) {\r\n        item.properties = properties;\r\n        if (typeof item.dbID !== \"undefined\" && item.dbID !== null) {\r\n          updateGeoObjectToModel(item);\r\n        }\r\n      }\r\n      return item;\r\n    });\r\n    setState({ ...state, features });\r\n    onClose();\r\n  };\r\n\r\n  const handleFillColor = hex => {\r\n    setProperties({ ...properties, fillColor: hex });\r\n    const layer = getLayer();\r\n    if (layer instanceof L.Marker) {\r\n      layer.setIcon(customIcon(properties.icon, hex));\r\n    } else {\r\n      layer.setStyle({ fillColor: hex });\r\n    }\r\n  };\r\n\r\n  //Меняем цвет границы\r\n  const handleColor = hex => {\r\n    setProperties({ ...properties, color: hex });\r\n    const layer = getLayer();\r\n    if (layer instanceof L.Marker) {\r\n      layer.setIcon(customIcon(properties.icon, hex));\r\n    } else {\r\n      layer.setStyle({ color: hex });\r\n    }\r\n  };\r\n\r\n  const handleIcon = name => {\r\n    setProperties({ ...properties, icon: name });\r\n    const layer = getLayer();\r\n    layer.setIcon(customIcon(name, properties.fillColor));\r\n  };\r\n\r\n  const handleTooltip = event => {\r\n    setProperties({ ...properties, tooltip: event.target.value });\r\n    const layer = getLayer();\r\n    if (layer.getTooltip()) {\r\n      layer.setTooltipContent(event.target.value);\r\n    } else {\r\n      layer.bindTooltip(event.target.value, tooltipOptions);\r\n    }\r\n  };\r\n\r\n  const handlePopup = event => {\r\n    setProperties({ ...properties, popup: event.target.value });\r\n    const layer = getLayer();\r\n    if (layer.getTooltip()) {\r\n      layer.setPopupContent(event.target.value);\r\n    } else {\r\n      layer.bindPopup(event.target.value);\r\n    }\r\n  };\r\n\r\n  const handleFillOpacity = value => {\r\n    setProperties({ ...properties, fillOpacity: value });\r\n    const layer = getLayer();\r\n    if (layer instanceof L.Marker) {\r\n      layer.setOpacity(value);\r\n    } else {\r\n      layer.setStyle({ fillOpacity: value });\r\n    }\r\n  };\r\n\r\n  const calculatePoints = () => {\r\n    const layer = getLayer();\r\n    let points = [];\r\n    if (markers != null && markers.length > 0) {\r\n      if (layer instanceof L.Polygon) {\r\n        const polygonPoints = layer.feature.geometry.coordinates[0];\r\n        for (let marker of markers) {\r\n          const markerCoordinates = marker.feature.geometry.coordinates;\r\n          if (pointInPolygon(markerCoordinates, polygonPoints)) {\r\n            points.push(marker);\r\n          }\r\n        }\r\n      }\r\n      if (layer instanceof L.Circle) {\r\n        const radius = layer.getRadius();\r\n        const center = layer.getLatLng();\r\n        for (let marker of markers) {\r\n          if (pointInCircle(marker, radius, center)) {\r\n            points.push(marker);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return points;\r\n  };\r\n  const pointInPolygon = (point, vs) => {\r\n    const x = point[0],\r\n      y = point[1];\r\n\r\n    let inside = false;\r\n    for (let i = 0, j = vs.length - 1; i < vs.length; j = i++) {\r\n      let xi = vs[i][0],\r\n        yi = vs[i][1];\r\n      let xj = vs[j][0],\r\n        yj = vs[j][1];\r\n\r\n      let intersect =\r\n        yi > y != yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\r\n      if (intersect) inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n  };\r\n\r\n  const pointInCircle = (marker, radius, center) => {\r\n    const markerCoordinates = marker.getLatLng();\r\n    const inCircle = Math.abs(center.distanceTo(markerCoordinates)) <= radius;\r\n    return inCircle;\r\n  };\r\n\r\n  const handleSelected = async options => {\r\n    const difference =\r\n      points\r\n        ?.filter(x => !options?.includes(x))\r\n        ?.map(item => {\r\n          const val = JSON.parse(item.value);\r\n          const coordinates = val.coords.split(\",\");\r\n          return {\r\n            coordinates: {\r\n              lat: coordinates[0],\r\n              long: coordinates[1]\r\n            },\r\n            id: val.id,\r\n            rowID: val?.rowID || -1,\r\n            view: item.label\r\n          };\r\n        }) || [];\r\n\r\n    let values =\r\n      options?.map(item => {\r\n        const val = JSON.parse(item.value);\r\n        const coordinates = val.coords.split(\",\");\r\n        return {\r\n          coordinates: {\r\n            lat: coordinates[0],\r\n            long: coordinates[1]\r\n          },\r\n          id: val.id,\r\n          rowID: val?.rowID || -1,\r\n          view: item.label\r\n        };\r\n      }) || [];\r\n\r\n    const layout = getLayer();\r\n\r\n    if (\r\n      typeof layout.feature?.dbID !== \"undefined\" &&\r\n      layout.feature.dbID !== null\r\n    ) {\r\n      if (field_first_connect === null) {\r\n        throw \"Not set first column connect\";\r\n      }\r\n      if (field_second_connect === null) {\r\n        throw \"Not set second column connect\";\r\n      }\r\n      const dbID = layout.feature.dbID;\r\n      if (difference.length > 0) {\r\n        for (let obj of difference) {\r\n          const objectID = obj.id;\r\n          if (objectID === null) {\r\n            alert(\"Error, return with objects data source field 'id'\");\r\n            throw \"Error, return with objects data source field 'id'\";\r\n          }\r\n          if (obj.rowID != -1) {\r\n            deleteConnectedModel(Number(obj.rowID));\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let obj of values) {\r\n        const objectID = obj.id;\r\n        if (obj.id === null) {\r\n          alert(\"Error, return with objects data source field 'id'\");\r\n          throw \"Error, return with objects data source field 'id'\";\r\n        }\r\n\r\n        if (obj.rowID != -1) {\r\n          updateConnectedModel(Number(obj.rowID), dbID, Number(objectID));\r\n          continue;\r\n        } else {\r\n          const { row_id, field_second_id } = await sendConnectedModel(\r\n            dbID,\r\n            Number(objectID)\r\n          );\r\n          options =\r\n            options?.map(item => {\r\n              const val = JSON.parse(item.value);\r\n              if (Number(val.id) == Number(field_second_id)) {\r\n                return {\r\n                  value: JSON.stringify({\r\n                    ...val,\r\n                    rowID: row_id\r\n                  }),\r\n                  label: item.label\r\n                };\r\n              }\r\n              return { ...item };\r\n            }) || [];\r\n          console.log(options);\r\n          continue;\r\n        }\r\n      }\r\n      setPoints(options);\r\n      const calculateToSelect = calculatePoints()\r\n        .map(item => {\r\n          return {\r\n            value: JSON.stringify({\r\n              coords: item.feature.geometry.coordinates.toString(),\r\n              id: item.feature.id\r\n            }),\r\n            label: item.feature.properties.popup\r\n          };\r\n        })\r\n        .filter(point => {\r\n          const views = options?.map(it => it.label);\r\n          return !views.includes(point.label);\r\n        });\r\n      setOptionsToSelect(calculateToSelect);\r\n    } else {\r\n      throw \"No database ID\";\r\n    }\r\n  };\r\n\r\n  const sendConnectedModel = async (dbID, objID) => {\r\n    const response = await axios.post(url_connect, {\r\n      [field_first_connect]: JSON.stringify(dbID),\r\n      [field_second_connect]: JSON.stringify(objID)\r\n    });\r\n    const result = response.data.data;\r\n    if (result.length === 0) {\r\n      throw \"No data\";\r\n    }\r\n    const row_id = result.id;\r\n    const field_first_id = result[field_first_connect];\r\n    const field_second_id = result[field_second_connect];\r\n    return {\r\n      row_id: row_id,\r\n      field_first_id: field_first_id,\r\n      field_second_id: field_second_id\r\n    };\r\n  };\r\n\r\n  const updateConnectedModel = _.debounce(async (rowID, dbID, objID) => {\r\n    const response = await axios.put(url_connect + `/${rowID}`, {\r\n      [field_first_connect]: JSON.stringify(dbID),\r\n      [field_second_connect]: JSON.stringify(objID)\r\n    });\r\n    console.log(response);\r\n  }, 350);\r\n\r\n  const deleteConnectedModel = _.debounce(async rowID => {\r\n    const response = await axios.delete(url_connect + `/${rowID}`);\r\n    console.log(response);\r\n  }, 350);\r\n\r\n  const renderOption = name => {\r\n    let Icon = iconTypes[name];\r\n    return (\r\n      <button\r\n        key={name}\r\n        type=\"button\"\r\n        className={`icon ${name === properties.icon ? \"active\" : \"\"}`}\r\n        onClick={() => handleIcon(name)}\r\n      >\r\n        <Icon fill={properties.fillColor} width={24} height={24} />\r\n      </button>\r\n    );\r\n  };\r\n\r\n  const [optionsToSelect, setOptionsToSelect] = useState(\r\n    calculatePoints()?.map(item => {\r\n      return {\r\n        value: JSON.stringify({\r\n          coords: item.feature.geometry.coordinates.toString(),\r\n          id: item.feature.id\r\n        }),\r\n        label: item.feature.properties.popup\r\n      };\r\n    }) || []\r\n  );\r\n\r\n  const getLayoutData = useCallback(async () => {\r\n    const layout = getLayer();\r\n    if (\r\n      typeof layout.feature?.dbID !== \"undefined\" &&\r\n      layout.feature.dbID !== null\r\n    ) {\r\n      if (field_first_connect === null) {\r\n        throw \"Not set first column connect\";\r\n      }\r\n      if (field_second_connect === null) {\r\n        throw \"Not set second column connect\";\r\n      }\r\n      const dbID = layout.feature.dbID;\r\n      axios.get(url_connect).then(res => {\r\n        const result = res.data.data;\r\n        if (result.length === 0) {\r\n          throw \"No data\";\r\n        }\r\n\r\n        const currentPoints =\r\n          result.filter(item => item[field_first_connect] == dbID) || [];\r\n\r\n        const secondPointsIDs = currentPoints.map(\r\n          item => item[field_second_connect]\r\n        );\r\n        const dataToSelect = optionsToSelect.map(item => {\r\n          let value = JSON.parse(item.value);\r\n          value = {\r\n            ...value,\r\n            rowID:\r\n              _.find(currentPoints, row => {\r\n                const localID = Number(value.id);\r\n                return row[field_second_connect] === localID;\r\n              })?.id || -1\r\n          };\r\n          return { ...item, value: JSON.stringify(value) };\r\n        });\r\n        setOptionsToSelect(dataToSelect);\r\n        let resultPoints =\r\n          calculatePoints()\r\n            ?.map(item => {\r\n              const featureID = Number(item.feature.id);\r\n              if (secondPointsIDs.includes(featureID)) {\r\n                return item;\r\n              }\r\n            })\r\n            ?.filter(item => typeof item !== \"undefined\") || [];\r\n        if (resultPoints.length > 0) {\r\n          resultPoints = resultPoints.map(item => {\r\n            return {\r\n              value: JSON.stringify({\r\n                coords: item.feature.geometry.coordinates.toString(),\r\n                id: item.feature.id,\r\n                rowID:\r\n                  _.find(currentPoints, row => {\r\n                    const localID = Number(item.feature.id);\r\n                    return row[field_second_connect] === localID;\r\n                  })?.id || -1\r\n              }),\r\n              label: item.feature.properties.popup\r\n            };\r\n          });\r\n          setPoints(resultPoints);\r\n        }\r\n      });\r\n    } else {\r\n      throw \"No database ID\";\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    setPoints([]);\r\n    if (url_connect !== null) {\r\n      getLayoutData();\r\n    }\r\n  }, [selected, url_connect, field_first_connect, field_second_connect]);\r\n  console.log(properties);\r\n  return (\r\n    <div className=\"altrp-map__modal modal\">\r\n      <ModalComponent settings={settings} className={!open ? \"modal__body\" : \"modal__body open\"}>\r\n        <h3 className={`${id} altrp-custom--typographic`}>Настройки</h3>\r\n        <div className=\"modal__body-text\">\r\n          <label>\r\n            Подпись\r\n            <input\r\n              type=\"text\"\r\n              value={properties.tooltip}\r\n              onChange={handleTooltip}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"modal__body-text\">\r\n          <label>\r\n            Всплывающее сообщение\r\n            <textarea value={properties.popup} onChange={handlePopup} />\r\n          </label>\r\n        </div>\r\n        {optionsToSelect.length > 0 && (\r\n          <div className=\"mb-3\">\r\n            <label>\r\n              Объекты\r\n              <Select\r\n                value={points}\r\n                isMulti\r\n                placeholder=\"Выберите объекты\"\r\n                onChange={value => handleSelected(value)}\r\n                options={optionsToSelect}\r\n              />\r\n            </label>\r\n          </div>\r\n        )}\r\n        {localParameters.length > 0 && localParameters.map(input => input)}\r\n        {properties.fillColor && (\r\n          <div className=\"modal__body-color\">\r\n            <label>Цвет заливки</label>\r\n            {colors.map((item, key) => (\r\n              <button\r\n                key={key}\r\n                type=\"button\"\r\n                style={{\r\n                  backgroundColor: item\r\n                }}\r\n                className={`color ${\r\n                  item === properties.fillColor ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => handleFillColor(item)}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n        {properties.color && (\r\n          <div className=\"modal__body-color\">\r\n            <label>Цвет границы</label>\r\n            {colors.map((item, key) => (\r\n              <button\r\n                key={key}\r\n                type=\"button\"\r\n                style={{\r\n                  backgroundColor: item\r\n                }}\r\n                className={`color ${item === properties.color ? \"active\" : \"\"}`}\r\n                onClick={() => handleColor(item)}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n        {properties.fillOpacity && (\r\n          <div className=\"modal__body-text\">\r\n            <label>\r\n              Прозрачность заливки\r\n              <Slider\r\n                className={`${id} altrp-dashboard__edit--range-edit-color`}\r\n                defaultValue={properties.fillOpacity}\r\n                onChange={(e, newValue) => handleFillOpacity(newValue)}\r\n                min={0.1}\r\n                max={1.0}\r\n                step={0.1}\r\n              />\r\n              {/* <input\r\n                  type=\"range\"\r\n                  min=\"0.1\"\r\n                  step=\"0.1\"\r\n                  max=\"1.0\"\r\n                  value={properties.fillOpacity}\r\n                  onChange={handleFillOpacity}\r\n                /> */}\r\n            </label>\r\n          </div>\r\n        )}\r\n        {properties.icon && (\r\n          <div className=\"modal__body-icon\">\r\n            {icons.map(name => renderOption(name))}\r\n          </div>\r\n        )}\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <button\r\n              type=\"button\"\r\n              className={`${id} modal__body-save`}\r\n              style={{\r\n                width: \"100%\"\r\n              }}\r\n              onClick={saveSettings}\r\n            >\r\n              Сохранить\r\n            </button>\r\n          </div>\r\n          <div className=\"col\">\r\n            <button\r\n              type=\"button\"\r\n              className={`${id} modal__body-save`}\r\n              style={{\r\n                width: \"100%\"\r\n              }}\r\n              onClick={onClose}\r\n            >\r\n              Отмена\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </ModalComponent>\r\n    </div>\r\n  );\r\n};\r\nexport default ModalControl;\r\n","import React from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"rrbe-map__preloader\">\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import * as React from \"react\";\r\n\r\nfunction PaintIcon(props) {\r\n  return (\r\n    <svg height=\"1em\" viewBox=\"0 0 512.007 512.007\" width=\"1em\" {...props}>\r\n      <path d=\"M151 421.004c0-33.091-26.909-60-60-60s-60 26.909-60 60v30c0 16.538-14.462 31-31 31v30h61c49.629 0 90-41.371 90-91zM251.063 125.603c-8.005 2.153-12.762 10.351-10.605 18.369 2.067 7.714 9.983 12.788 18.369 10.605 8.06-2.168 12.739-10.406 10.605-18.369-2.166-8.047-10.451-12.74-18.369-10.605zM166.205 239.436c7.96 2.111 16.196-2.521 18.369-10.605 2.166-8.082-2.655-16.236-10.591-18.369h-.015c-4.255-1.148-5.405-.284-8.414.698.17 9.04.289 18.419.352 28.129.11.032.187.118.299.147zM331.542 368.02c-2.17-8.066-10.448-12.728-18.369-10.591-8.143 2.19-12.722 10.499-10.605 18.369 2.139 7.983 10.283 12.7 18.369 10.605 8.005-2.153 12.762-10.351 10.605-18.369zM381.464 181.765c5.845-5.859 5.845-15.381 0-21.226-5.848-5.848-15.353-5.872-21.226 0-5.845 5.845-5.845 15.381.015 21.226 5.83 5.83 15.351 5.83 21.211 0z\" />\r\n      <path d=\"M286.879 30.213c-49.276 1.776-94.508 21.255-130.562 45.985 4.041 27.508 6.896 61.747 8.416 104.092 5.616-.67 11.36-.315 16.985 1.198 24.038 6.427 38.287 31.069 31.831 55.107-5.442 20.332-23.809 33.369-43.389 33.369-1.441 0-2.877-.432-4.318-.571-.181 23.992-.725 47.73-1.76 70.399 15.364 6.383 27.372 14.886 35.213 25.9 15.879 22.31 11.646 48.472 9.976 55.972-5.563 24.913 9.126 50.275 34.292 55.122a226.979 226.979 0 0042.715 4.072c123.369 0 226.727-100.21 225.722-226.655-1.051-128.243-112.028-228.251-225.121-223.99zm52.134 109.116c17.578-17.549 46.113-17.549 63.662 0s17.549 46.099 0 63.647v.015c-17.547 17.518-46.099 17.52-63.647 0-17.535-17.564-17.535-46.113-.015-63.662zm-127.53 12.392c-6.385-23.714 7.54-48.604 31.816-55.093 23.862-6.401 48.662 7.837 55.107 31.816 6.443 23.989-7.773 48.671-31.816 55.107-23.981 6.427-48.663-7.729-55.107-31.83zM328.7 415.379c-23.976 6.423-48.677-7.857-55.107-31.816-6.443-23.989 7.773-48.671 31.816-55.107 24.144-6.423 48.693 7.841 55.107 31.831 6.462 24.026-7.825 48.677-31.816 55.092zm116.674-116.675c-6.426 24.038-31.126 38.265-55.107 31.816-23.974-6.418-38.286-31.024-31.816-55.107 6.493-24.258 31.34-38.185 55.107-31.816 23.98 6.43 38.248 31.157 31.816 55.107z\" />\r\n      <path d=\"M405.795 272.571c-7.857-2.119-16.177 2.459-18.369 10.605-2.166 8.082 2.655 16.236 10.591 18.369 8.214 2.122 16.256-2.692 18.384-10.605 2.138-7.983-2.623-16.23-10.606-18.369zM135.819 271.004c.042-5.019.181-9.959.181-15 0-116.323-7.808-256-45-256s-45 139.677-45 256c0 5.041.139 9.981.181 15zM91 331.004c15.63 0 30.121 4.362 42.942 11.398a1767.157 1767.157 0 001.489-41.398H46.569c.346 14.07.84 27.936 1.489 41.398C60.879 335.365 75.37 331.004 91 331.004z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nconst MemoPaintIcon = React.memo(PaintIcon);\r\nexport default MemoPaintIcon;\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport L, { CRS } from \"leaflet\";\r\nimport axios from \"axios\";\r\nimport Drawer from \"rc-drawer\";\r\nimport { createPortal } from \"react-dom\";\r\n// import MarkerCluster from \"./MarkerCluster\";\r\nimport { MapContainer as Map, FeatureGroup, TileLayer } from \"react-leaflet\";\r\nimport { EditControl } from \"react-leaflet-draw\";\r\n// import Control from \"react-leaflet-control\";\r\n\r\nimport { isCircle } from \"./helpers/isCircle\";\r\nimport { isMarker } from \"./helpers/isMarker\";\r\nimport { isPolygon } from \"./helpers/isPolygon\";\r\nimport { customIcon } from \"./DivIcon\";\r\nimport tooltipOptions from \"./helpers/tooltipOptions\";\r\n\r\nimport ModalControl from \"./ModalControl\";\r\nimport Loader from \"./Loader\";\r\n\r\nimport MemoPaintIcon from \"./Icons/PaintIcon\";\r\nimport { isEditor } from \"../../../../../front-app/src/js/helpers\";\r\n\r\nfunction noob() {}\r\n\r\nfunction MapDesigner({\r\n  className,\r\n  center,\r\n  zoom,\r\n  data = {},\r\n  isEditable = false,\r\n  isLoading = false,\r\n  isTransformLatLng = false,\r\n  interactionOptions = {},\r\n  style = {},\r\n  saveData = noob,\r\n  onTap = noob,\r\n  url,\r\n  field_id,\r\n  id,\r\n  url_connect = null,\r\n  field_first_connect = null,\r\n  field_second_connect = null,\r\n  parameters,\r\n  settings\r\n}) {\r\n  const FG = useRef(null);\r\n  const ModalRef = useRef(null);\r\n  const [selected, setSelected] = useState(null);\r\n  const [state, setState] = useState(data);\r\n  const [open, setOpen] = useState(false);\r\n  const [markers, setMarkers] = useState(null);\r\n\r\n  const updateGeoObjectToModel = geoObject => {\r\n    const { dbID } = geoObject;\r\n    let data = _.cloneDeep(geoObject, {});\r\n    delete data[\"dbID\"];\r\n    axios\r\n      .put(`${url}/${dbID}`, {\r\n        altrp_ajax: true,\r\n        [field_id]: JSON.stringify(data)\r\n      })\r\n      .then(res => {\r\n        console.log(\"====================================\");\r\n        console.log(res);\r\n        console.log(\"====================================\");\r\n      });\r\n  };\r\n\r\n  const deleteGeoObjectToModel = geoObject => {\r\n    const { dbID } = geoObject;\r\n    axios.delete(`${url}/${dbID}`).then(res => {\r\n      console.log(\"====================================\");\r\n      console.log(res);\r\n      console.log(\"====================================\");\r\n    });\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {LeafletEvent} object\r\n   */\r\n  const saveGeoObjectToModel = layer => {\r\n    let geojson = layer.toGeoJSON();\r\n    const { leafletElement } = FG.current;\r\n    let currentFeatures = _.cloneDeep(state.features, []);\r\n    const id = leafletElement.getLayerId(layer);\r\n\r\n    geojson.id = id;\r\n    geojson.properties.tooltip = geojson.properties.tooltip\r\n      ? geojson.properties.tooltip\r\n      : \"\";\r\n    geojson.properties.popup = geojson.properties.popup\r\n      ? geojson.properties.popup\r\n      : \"\";\r\n    // Назначаем цвет заливки\r\n    geojson.properties.fillColor = geojson.properties.fillColor\r\n      ? geojson.properties.fillColor\r\n      : \"#3388ff\";\r\n    // Назначаем прозрачность заливки\r\n    geojson.properties.fillOpacity = geojson.properties.fillOpacity\r\n      ? geojson.properties.fillOpacity\r\n      : 0.5;\r\n    // Задаем опции\r\n    if (layer instanceof L.Circle) {\r\n      // Цвет бордера\r\n      geojson.properties.color = geojson.properties.color\r\n        ? geojson.properties.color\r\n        : \"#3388ff\";\r\n      geojson.properties.radius = layer.getRadius();\r\n    } else if (layer instanceof L.Polygon) {\r\n      // Цвет бордера\r\n      geojson.properties.color = geojson.properties.color\r\n        ? geojson.properties.color\r\n        : \"#3388ff\";\r\n      // Polygon style properties\r\n    } else if (layer instanceof L.Marker) {\r\n      geojson.properties.icon = geojson.properties.opacity\r\n        ? geojson.properties.opacity\r\n        : 1.0;\r\n      // geojson.properties.icon = geojson.properties.icon ? geojson.properties.icon : \"GoogleMarker\";\r\n      geojson.properties.icon = \"GoogleMarker\";\r\n      layer.setIcon(customIcon(geojson.properties.icon));\r\n    }\r\n    axios\r\n      .post(url, {\r\n        altrp_ajax: true,\r\n        [field_id]: JSON.stringify(geojson)\r\n      })\r\n      .then(res => {\r\n        const newObject = {\r\n          ...JSON.parse(res.data.data[field_id]),\r\n          dbID: res.data.data.id\r\n        };\r\n        currentFeatures.push(newObject);\r\n        setState({ ...state, features: currentFeatures });\r\n      });\r\n  };\r\n\r\n  const handleObserver = e => {\r\n    const { leafletElement } = FG.current;\r\n    // Обновляем дерево geojson\r\n\r\n    let features = [];\r\n    // Проходимся по каждому слою\r\n    leafletElement.eachLayer(layer => {\r\n      const id = leafletElement.getLayerId(layer);\r\n      // Вешаем обработчик клика по объекту\r\n      layer.addEventListener(\"click\", handleSelected);\r\n      // Преобразуем в geojson\r\n      let geojson = layer.toGeoJSON();\r\n      // Задаем ID\r\n      geojson.id = id;\r\n      geojson.properties.tooltip = geojson.properties.tooltip\r\n        ? geojson.properties.tooltip\r\n        : \"\";\r\n      geojson.properties.popup = geojson.properties.popup\r\n        ? geojson.properties.popup\r\n        : \"\";\r\n      // Назначаем цвет заливки\r\n      geojson.properties.fillColor = geojson.properties.fillColor\r\n        ? geojson.properties.fillColor\r\n        : \"#3388ff\";\r\n      // Назначаем прозрачность заливки\r\n      geojson.properties.fillOpacity = geojson.properties.fillOpacity\r\n        ? geojson.properties.fillOpacity\r\n        : 0.5;\r\n      // Задаем опции\r\n      if (layer instanceof L.Circle) {\r\n        // Цвет бордера\r\n        geojson.properties.color = geojson.properties.color\r\n          ? geojson.properties.color\r\n          : \"#3388ff\";\r\n        geojson.properties.radius = layer.getRadius();\r\n      } else if (layer instanceof L.Polygon) {\r\n        // Цвет бордера\r\n        geojson.properties.color = geojson.properties.color\r\n          ? geojson.properties.color\r\n          : \"#3388ff\";\r\n        // Polygon style properties\r\n      } else if (layer instanceof L.Marker) {\r\n        geojson.properties.icon = geojson.properties.opacity\r\n          ? geojson.properties.opacity\r\n          : 1.0;\r\n        geojson.properties.icon = geojson.properties.icon\r\n          ? geojson.properties.icon\r\n          : \"GoogleMarker\";\r\n        // geojson.properties.icon = \"GoogleMarker\";\r\n        layer.setIcon(customIcon(geojson.properties.icon));\r\n      }\r\n      // Назначаем подпись\r\n      if (geojson.properties.tooltip) {\r\n        layer.bindTooltip(geojson.properties.tooltip, tooltipOptions);\r\n      }\r\n      // Назначаем всплывающие подсказки\r\n      if (geojson.properties.popup) {\r\n        layer.bindPopup(geojson.properties.popup);\r\n      }\r\n      // Добавляем в массив\r\n      features.push(geojson);\r\n    });\r\n    setState({ ...state, features });\r\n\r\n    if (e.type === \"draw:created\") {\r\n      // Если добавили новый, то делаем его активным\r\n      const id = leafletElement.getLayerId(e.layer);\r\n      setSelected(id);\r\n      if (typeof url !== \"undefined\" && url !== null) {\r\n        saveGeoObjectToModel(e.layer);\r\n      }\r\n    } else if (e.type === \"draw:edited\") {\r\n      if (typeof url !== \"undefined\" && url !== null) {\r\n        const layers = e.layers._layers;\r\n        const layersKeys = _.keys(layers);\r\n        for (let k of layersKeys) {\r\n          const json = layers[k].toGeoJSON();\r\n          updateGeoObjectToModel(json);\r\n        }\r\n      }\r\n    } else if (e.type === \"draw:deleted\") {\r\n      if (typeof url !== \"undefined\" && url !== null) {\r\n        const layers = e.layers._layers;\r\n        const layersKeys = _.keys(layers);\r\n        for (let k of layersKeys) {\r\n          const json = layers[k].toGeoJSON();\r\n          deleteGeoObjectToModel(json);\r\n        }\r\n      }\r\n      // Если удалили, то сбрасываем активный элемент\r\n      setSelected(null);\r\n    }\r\n  };\r\n\r\n  const handleSelected = useCallback(\r\n    e => {\r\n      // Отправляем событие во вне\r\n      onTap(e, FG.current);\r\n      // Проверяем есть ли feature у слоя\r\n      if (e.target.feature) {\r\n        setSelected(e.target.feature.id);\r\n      } else {\r\n        const id = FG.current.leafletElement.getLayerId(e.target);\r\n        setSelected(id);\r\n      }\r\n    },\r\n    [onTap]\r\n  );\r\n\r\n  const handleMapClick = (e, layer) => {\r\n    // e.DomEvent.stopPropagation();\r\n    // console.log(e);\r\n    // e.DomEvent.preventDefault();\r\n    L.DomEvent.stopPropagation(e);\r\n    L.DomEvent.preventDefault(e);\r\n    // e.originalEvent.view.L.DomEvent.stopPropagation(e);\r\n    setSelected(null);\r\n    // console.log(layer);\r\n  };\r\n\r\n  const handleMarkerClick = (e, layer) => {\r\n    e.originalEvent.view.L.DomEvent.stopPropagation(e);\r\n    setSelected(null);\r\n    setSelected(layer.feature.id);\r\n  };\r\n\r\n  const handlePolygonClick = (e, layer) => {\r\n    e.originalEvent.view.L.DomEvent.stopPropagation(e);\r\n    setSelected(null);\r\n    setSelected(layer.feature.id);\r\n  };\r\n\r\n  const handleCircleClick = (e, layer) => {\r\n    e.originalEvent.view.L.DomEvent.stopPropagation(e);\r\n    setSelected(null);\r\n    setSelected(layer.feature.id);\r\n  };\r\n\r\n  const whenReady = useCallback(() => {\r\n    if (!FG.current) return;\r\n    // Очищаем старые слои\r\n    FG.current.leafletElement.clearLayers();\r\n    let markers = [];\r\n    // Добавляем новые слои\r\n    if (state.features?.length > 0) {\r\n      for (const geojson of state.features) {\r\n        // Конвертируем geojson в слой leaflet\r\n        L.geoJSON(geojson, {\r\n          coordsToLatLng: coords => {\r\n            return !isTransformLatLng\r\n              ? L.latLng([coords[1], coords[0]])\r\n              : coords;\r\n          },\r\n          pointToLayer: (geojson, latlng) => {\r\n            // Создаем точные типы слоев\r\n            if (isCircle(geojson)) {\r\n              let circle = L.circle(latlng, geojson.properties);\r\n              return circle;\r\n            } else if (isMarker(geojson)) {\r\n              let marker = L.marker(latlng, geojson.properties);\r\n              return marker;\r\n            } else if (isPolygon(geojson)) {\r\n              let polygon = L.polygon(latlng, geojson.properties);\r\n              return polygon;\r\n            }\r\n          },\r\n          onEachFeature: (feature, layer) => {\r\n            layer.addEventListener(\"click\", handleSelected);\r\n            if (layer instanceof L.Marker) {\r\n              layer.addEventListener(\"click\", e => handleMarkerClick(e, layer));\r\n              layer.setIcon(\r\n                customIcon(\r\n                  feature.properties.icon,\r\n                  feature.properties.fillColor\r\n                )\r\n              );\r\n              layer.setOpacity(feature.properties.fillOpacity);\r\n              if (feature.inCluster) {\r\n                markers.push(layer);\r\n              }\r\n            } else if (layer instanceof L.Polygon) {\r\n              layer.addEventListener(\"click\", e =>\r\n                handlePolygonClick(e, layer)\r\n              );\r\n              layer.setStyle(feature.properties);\r\n            } else if (layer instanceof L.Circle) {\r\n              layer.addEventListener(\"click\", e => handleCircleClick(e, layer));\r\n              layer.setStyle(feature.properties);\r\n            } else {\r\n              layer.setStyle(feature.properties);\r\n            }\r\n            if (feature.properties.tooltip) {\r\n              layer.bindTooltip(feature.properties.tooltip, tooltipOptions);\r\n            }\r\n            if (feature.properties.popup) {\r\n              layer.bindPopup(feature.properties.popup);\r\n            }\r\n            if (!feature.inCluster) {\r\n              FG.current.leafletElement.addLayer(layer);\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    if (markers.length > 0) {\r\n      setMarkers(markers);\r\n    }\r\n  }, [handleSelected, isTransformLatLng, state]);\r\n\r\n  // Сохраняем данные после каждого изменения состояния\r\n  useEffect(() => {\r\n    if (state && state.features) {\r\n      saveData(state);\r\n      whenReady();\r\n    }\r\n  }, [saveData, state]);\r\n\r\n  // Обновляем состояние после каждого изменения пропса\r\n  useEffect(() => {\r\n    if (data && data.features) {\r\n      setState(data);\r\n    }\r\n  }, [data]);\r\n\r\n  let parent = useState(document.body);\r\n\r\n  React.useEffect(() => {\r\n    if (isEditor()) {\r\n      parent[1](\r\n        document.getElementById(\"editorContent\").contentWindow.document.body\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"altrp-map\" style={style}>\r\n      {isLoading && <Loader />}\r\n      <Map\r\n        center={center}\r\n        zoom={zoom}\r\n        onclick={handleMapClick}\r\n        className={`altrp-map__container ${className}`}\r\n        whenReady={whenReady}\r\n        scrollWheelZoom={true}\r\n        touchZoom={true}\r\n        crs={CRS.EPSG3395}\r\n        doubleClickZoom={true}\r\n        keyboard={interactionOptions.keyboard}\r\n        style={{ height: style.height }}\r\n      >\r\n        <TileLayer\r\n          // url=\"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" НЕ УДАЛЯТЬ, НУЖНО ДЛЯ ИНТЕГРАЦИИ\r\n          url=\"http://vec{s}.maps.yandex.net/tiles?l=map&v=4.55.2&z={z}&x={x}&y={y}&scale=2&lang=ru_RU\"\r\n          subdomains={[\"01\", \"02\", \"03\", \"04\"]}\r\n          attribution='<a http=\"yandex.ru\" target=\"_blank\">Яндекс</a>'\r\n          reuseTiles={true}\r\n          updateWhenIdle={false}\r\n        />\r\n        {markers !== null && <MarkerCluster markers={markers} />}\r\n\r\n        <FeatureGroup ref={FG}>\r\n          <EditControl\r\n            position=\"topleft\"\r\n            onCreated={handleObserver}\r\n            onDeleted={handleObserver}\r\n            onEdited={handleObserver}\r\n            onEditStop={handleObserver}\r\n            onDrawStart={handleObserver}\r\n            draw={{\r\n              circlemarker: false,\r\n              rectangle: false,\r\n              polyline: false,\r\n              polygon: isEditable,\r\n              circle: isEditable,\r\n              marker: isEditable\r\n            }}\r\n            edit={{\r\n              edit: isEditable,\r\n              remove: isEditable\r\n            }}\r\n          />\r\n        </FeatureGroup>\r\n        {isEditable && selected && (\r\n          <Control position=\"topleft\" className=\"altrp-map__paint\">\r\n            <button type=\"button\" onClick={() => setOpen(!open)}>\r\n              <MemoPaintIcon width=\"15\" height=\"15\" fill=\"#464646\" />\r\n            </button>\r\n          </Control>\r\n        )}\r\n      </Map>\r\n\r\n      {createPortal(\r\n        <Drawer\r\n          getContainer={null}\r\n          placement=\"right\"\r\n          defaultOpen={true}\r\n          maskClosable={true}\r\n          width={\"400px\"}\r\n          open={open}\r\n          onClose={() => setOpen(false)}\r\n          handler={false}\r\n        >\r\n          {isEditable && selected && (\r\n            <ModalControl\r\n              markers={markers}\r\n              settings={settings}\r\n              url={url}\r\n              url_connect={url_connect}\r\n              field_first_connect={field_first_connect}\r\n              field_second_connect={field_second_connect}\r\n              updateGeoObjectToModel={updateGeoObjectToModel}\r\n              open={open}\r\n              selected={selected}\r\n              id={id}\r\n              onClose={() => setOpen(false)}\r\n              setState={setState}\r\n              state={state}\r\n              forwardRef={ModalRef}\r\n              fg={FG.current}\r\n              parameters={parameters}\r\n            />\r\n          )}\r\n        </Drawer>,\r\n        parent[0]\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapDesigner;\r\n","export const isCircle = (feature) => {\r\n  return feature && feature.geometry.type === \"Point\" && feature.properties.radius;\r\n};\r\n"],"sourceRoot":""}