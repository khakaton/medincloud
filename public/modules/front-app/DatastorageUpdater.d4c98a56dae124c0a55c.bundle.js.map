{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/get.js","webpack:///./node_modules/@babel/runtime/helpers/esm/superPropBase.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./resources/modules/front-app/src/js/classes/modules/DatastorageUpdater.js","webpack:///./resources/modules/front-app/src/js/store/current-data-storage/actions.js","webpack:///./node_modules/dot-prop-immutable/lib/index.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_arrayWithHoles","isArray","_assertThisInitialized","self","ReferenceError","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_defineProperty","obj","value","_get","property","receiver","Reflect","get","base","object","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","_getPrototypeOf","o","setPrototypeOf","__proto__","_inherits","subClass","superClass","create","constructor","_iterableToArray","iter","Symbol","iterator","from","_nonIterableRest","_possibleConstructorReturn","_slicedToArray","arrayWithHoles","_i","_s","_e","_arr","_n","_d","next","done","push","err","unsupportedIterableToArray","nonIterableRest","_toArray","_toConsumableArray","arrayLikeToArray","iterableToArray","_typeof","_unsupportedIterableToArray","minLen","n","toString","slice","name","test","window","altrpHelpers","Resource","isJSON","mbParseJSON","replaceContentWithData","DataStorageUpdater","data","onStoreUpdate","formsStore","appStore","getState","_","isEqual","getProperty","setProperty","onFormsUpdate","subscribe","dataSources","initialUpdate","map","ds","Datasource","currentUser","isEmpty","route","getAll","dispatch","changeCurrentUser","this","filter","dataSource","parameters","find","param","paramValue","indexOf","params","getParams","currentRouterMatch","subscribeToFormsUpdate","required","groupedDataSources","forEach","currentDataStorageLoading","groupPriority","requests","getWebUrl","defaultParams","cloneDeep","needUpdateFromForms","each","paramName","replace","res","preloadedData","altrpPreloadedDatasources","getAlias","unset","getType","id","getQueried","Promise","then","console","error","changeCurrentDataStorage","log","performance","now","all","currentDataStorageLoaded","unsetProperty","clearCurrentDataStorage","findIndex","sortBy","data_source","priority","updating","oldParams","undefined","pendingParameters","AltrpModel","dataStorageUpdater","CHANGE_CURRENT_DATASOURCE","CLEAR_CURRENT_DATASOURCE","SET_CURRENT_DATASOURCE_LOADED","SET_CURRENT_DATASOURCE_LOADING","dataStorageName","type","set","prop","propToArray","setPropImmutableRec","clone","head","getArrayIndex","assign","Math","max","Error","parseInt","split","reduce","ret","el","index","list","last","prev","pop","module","exports","delete","deletePropImmutableRec","concat","toggle","curVal","Boolean","merge","val"],"mappings":"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","file":"DatastorageUpdater.d4c98a56dae124c0a55c.bundle.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import {\r\n  changeCurrentDataStorage,\r\n  clearCurrentDataStorage,\r\n  currentDataStorageLoaded, currentDataStorageLoading\r\n} from \"../../store/current-data-storage/actions\";\r\nimport {changeCurrentUser} from \"../../store/current-user/actions\";\r\nimport Datasource from \"../Datasource\";\r\nconst { Resource, isJSON, mbParseJSON, replaceContentWithData} = window.altrpHelpers;\r\n\r\n/**\r\n * @class DataStorageUpdater\r\n */\r\nclass DataStorageUpdater extends AltrpModel {\r\n\r\n  constructor(data) {    super(data);\r\n    this.setProperty('dataSourcesFormsDependent', []);\r\n    this.setProperty('formsStore', appStore.getState().formsStore);\r\n    appStore.subscribe(this.onStoreUpdate)\r\n  }\r\n\r\n  /**\r\n   *  обновление currentDataStorage\r\n   *  @param {Datasource[]} dataSources\r\n   *  @param {boolean} initialUpdate\r\n   */\r\n  async updateCurrent(dataSources = null, initialUpdate = true) {\r\n    dataSources = dataSources.map(ds => {\r\n      if(ds instanceof Datasource){\r\n        return ds;\r\n      }\r\n      return new Datasource(ds)\r\n    });\r\n    if(appStore.getState().currentUser.isEmpty()){\r\n      let currentUser = await new Resource({ route: \"/ajax/current-user\" }).getAll();\r\n      currentUser = currentUser.data;\r\n      appStore.dispatch(changeCurrentUser(currentUser));\r\n    }\r\n    if(!initialUpdate && !_.get(dataSources, 'length')){\r\n      dataSources = this.getProperty('currentDataSources');\r\n    }\r\n    if(! dataSources){\r\n      dataSources = [];\r\n    }\r\n    if(initialUpdate){\r\n      this.setProperty('currentDataSources', dataSources);\r\n      this.setProperty('updated', false);\r\n      dataSources = dataSources.filter(dataSource => dataSource.getProperty('autoload'));\r\n    }\r\n\r\n    /**\r\n     * Фильтруем проверяя на наличие обязательных параметров\r\n     */\r\n    dataSources = dataSources.filter(dataSource => {\r\n      let parameters = dataSource.getProperty('parameters');\r\n      if(! isJSON(parameters)){\r\n        return true;\r\n      }\r\n      parameters = mbParseJSON(parameters, []);\r\n      /**\r\n       * Находим хотя бы один обязательный параметр, который не имеет значения\r\n       */\r\n      return ! (parameters && parameters.find(param=>{\r\n        if (param.paramValue.toString().indexOf('altrpforms.') !== -1) {\r\n          let params = dataSource.getParams(window.currentRouterMatch.data.params, 'altrpforms.');\r\n          initialUpdate && this.subscribeToFormsUpdate(dataSource, params);\r\n        } else {\r\n          return false;\r\n        }\r\n        if(! param.required){\r\n          return false;\r\n        }\r\n        let value = param.paramValue || '';\r\n        if(value.indexOf('{{') !== -1){\r\n          value = replaceContentWithData(value);\r\n        }\r\n        return ! value;\r\n      }));\r\n    });\r\n    // dataSources = _.sortBy(dataSources, ['data.priority']);\r\n    /**\r\n     * @member {Datasource} dataSource\r\n     */\r\n    const groupedDataSources = {};\r\n    dataSources.forEach(dataSource => {\r\n      groupedDataSources[dataSource.getProperty('priority')] = groupedDataSources[dataSource.getProperty('priority')] || [];\r\n      groupedDataSources[dataSource.getProperty('priority')].push(dataSource);\r\n    });\r\n    initialUpdate && appStore.dispatch(currentDataStorageLoading());\r\n    for (let groupPriority in groupedDataSources){\r\n      if(! groupedDataSources.hasOwnProperty(groupPriority)){\r\n        continue;\r\n      }\r\n      initialUpdate && appStore.dispatch(currentDataStorageLoading());\r\n      let requests = groupedDataSources[groupPriority].map(async dataSource => {\r\n\r\n        if (dataSource.getWebUrl()) {\r\n          let params = dataSource.getParams(window.currentRouterMatch.params, 'altrpforms.');\r\n          let defaultParams = _.cloneDeep(params);\r\n          let needUpdateFromForms = false;\r\n          _.each(params, (paramValue, paramName) => {\r\n            if (paramValue.toString().indexOf('altrpforms.') === 0) {\r\n              params[paramName] = _.get(appStore.getState().formsStore, paramValue.toString().replace('altrpforms.', ''), '');\r\n              needUpdateFromForms = true;\r\n            }\r\n          });\r\n          /**\r\n           * Если нужно взять параметры из формы, то подписываемся на изменения полeй формы\r\n           * и сохраняем параметры, с которыми уже получили данные\r\n           */\r\n          if (needUpdateFromForms) {\r\n            initialUpdate && this.subscribeToFormsUpdate(dataSource, _.cloneDeep(defaultParams));\r\n          }\r\n          let res = {};\r\n          try {\r\n            const preloadedData = _.get(window.altrpPreloadedDatasources, dataSource.getAlias());\r\n            if(preloadedData){\r\n              res = preloadedData;\r\n              _.unset(window.altrpPreloadedDatasources, dataSource.getAlias());\r\n            } else\r\n              if (dataSource.getType() === 'show') {\r\n              let id = _.get(params, 'id', _.get(this.props, 'match.params.id'));\r\n              if (id) {\r\n                res = await (new Resource({ route: dataSource.getWebUrl() })).get(id);\r\n              }\r\n            } else if (!_.isEmpty(params)) {\r\n              res = await (new Resource({ route: dataSource.getWebUrl() })).getQueried(params);\r\n              dataSource.params = _.cloneDeep(params);\r\n            } else {\r\n              res = await (new Resource({ route: dataSource.getWebUrl() })).getAll();\r\n            }\r\n          } catch (err) {\r\n            if(err instanceof Promise){\r\n              err = await err.then();\r\n            }\r\n            console.error(err);\r\n          }\r\n          res = _.get(res, 'data', res);\r\n          dataSources = dataSources.filter(ds => ds !== dataSource);\r\n          if(! dataSources.length){\r\n            this.setProperty('updated', true);\r\n          }\r\n          appStore.dispatch(changeCurrentDataStorage(dataSource.getAlias(), res));\r\n          return res;\r\n        }\r\n      });\r\n      console.log('Update Datasource Start: ',performance.now());\r\n      let responses = await Promise.all(requests);\r\n      console.log('Update Datasource End: ',performance.now());\r\n      initialUpdate && appStore.dispatch(currentDataStorageLoaded());\r\n    }\r\n    if(! dataSources.length){\r\n      appStore.dispatch(currentDataStorageLoaded());\r\n    }\r\n\r\n  }\r\n  /**\r\n   * Обнуляем текущее хранилище dataStorage\r\n   */\r\n  clearCurrent() {\r\n    this.unsetProperty('currentDataSources');\r\n    this.setProperty('dataSourcesFormsDependent', []);\r\n    appStore.dispatch(clearCurrentDataStorage())\r\n  }\r\n  /**\r\n    * подписывает какой либо источник данных на обновление от формы\r\n   * @param {Datasource} dataSource\r\n   * @param {{}} params\r\n   */\r\n  subscribeToFormsUpdate(dataSource, params) {\r\n    let dataSources = this.getProperty('dataSourcesFormsDependent');\r\n    // if(dataSources.indexOf(dataSource) === -1){\r\n    //   dataSources.push(dataSource);\r\n    // }\r\n    if (_.findIndex(dataSources, ds => {\r\n      return ds.dataSource === dataSource;\r\n    }) === -1) {\r\n      dataSources.push({\r\n        dataSource,\r\n        params\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * Вызывается, когда обновляется redux-хранилище\r\n   */\r\n  onStoreUpdate = async () => {\r\n    /**\r\n     * Проверяем обновились ли формы\r\n     * @type {formsStore}\r\n     */\r\n    let formsStore = appStore.getState().formsStore;\r\n\r\n    if (! _.isEqual(this.getProperty('formsStore'), formsStore) && this.getProperty('updated')) {\r\n      this.setProperty('formsStore', formsStore);\r\n      await this.onFormsUpdate();\r\n    }\r\n  };\r\n  /**\r\n   * Вызывается, когда обновляется поле формы для того,\r\n   * чтобы сделать новый запрос по тем dataSource,\r\n   * которые зависят от полей формы\r\n   */\r\n  async onFormsUpdate() {\r\n    let dataSources = this.getProperty('dataSourcesFormsDependent', []);\r\n\r\n    /**\r\n     * Фильтруем, проверяя на наличие обязательных параметров\r\n     */\r\n    dataSources = dataSources.filter(ds => {\r\n      const {dataSource} = ds;\r\n      let parameters = dataSource.getProperty('parameters');\r\n      if(! isJSON(parameters)){\r\n        return true;\r\n      }\r\n      parameters = mbParseJSON(parameters, []);\r\n      /**\r\n       * Находим хотя бы один обзяательный параметр, который имеет пустое значения\r\n       */\r\n      return ! parameters.find(param=>{\r\n        if(! param.required){\r\n          return false;\r\n        }\r\n        let value = param.paramValue || '';\r\n        if(value.indexOf('{{') !== -1){\r\n          value = replaceContentWithData(value);\r\n        }\r\n        return ! value;\r\n      });\r\n    });\r\n    // console.log(dataSources);\r\n    dataSources = _.sortBy(dataSources, data_source => data_source.priority);\r\n    let formsStore = appStore.getState().formsStore;\r\n    for (let ds of dataSources) {\r\n      let { dataSource, updating } = ds;\r\n      let oldParams = _.cloneDeep(dataSource.params);\r\n      /**\r\n       * @member {Datasource} dataSource\r\n       */\r\n      let params = dataSource.getParams(window.currentRouterMatch.params, 'altrpforms.');\r\n      _.forEach(params, (paramValue, paramName) => {\r\n        if (paramValue.toString().indexOf('altrpforms.') === 0) {\r\n          params[paramName] = _.get(formsStore, paramValue.replace('altrpforms.', ''));\r\n          // if(_.isArray(params[paramName])){\r\n          //   params[paramName] = JSON.stringify(params[paramName]);\r\n          // }\r\n        }\r\n      });\r\n      if(updating){\r\n        // console.error(params);\r\n        // console.error(ds);\r\n      }\r\n      if (! _.isEqual(params, oldParams) && ! updating) {\r\n        dataSource.params = _.cloneDeep(params);\r\n        ds.updating = true;\r\n        let res = {};\r\n        try{\r\n          res = await (new Resource({ route: dataSource.getWebUrl() })).getQueried(params);\r\n          res = _.get(res, 'data', res);\r\n          appStore.dispatch(changeCurrentDataStorage(dataSource.getAlias(), res));\r\n        } catch (err) {\r\n          if(err instanceof Promise){\r\n            err = await err.then();\r\n            err = mbParseJSON(err);\r\n          }\r\n          console.error(err);\r\n        } finally {\r\n          /**\r\n           * В случае, если во время запроса возникла необходимость обновления с новыми параметрами,\r\n           * сделаем новый запрос\r\n           */\r\n          if((ds.pendingParameters !== undefined) && ! _.isEqual(ds.pendingParameters, params)){\r\n            try{\r\n              res = await (new Resource({ route: dataSource.getWebUrl() })).getQueried(ds.pendingParameters);\r\n              res = _.get(res, 'data', res);\r\n              appStore.dispatch(changeCurrentDataStorage(dataSource.getAlias(), res));\r\n              dataSource.params = _.cloneDeep(ds.pendingParameters);\r\n            } catch (err) {\r\n              if(err instanceof Promise){\r\n                err = await err.then();\r\n                err = mbParseJSON(err);\r\n              }\r\n              console.error(err);\r\n            } finally {\r\n              _.unset(ds, 'pendingParameters');\r\n            }\r\n          }\r\n          ds.updating = false;\r\n        }\r\n        /**\r\n         * В случае, если во время запроса возникла необходимость обновления с новыми параметрами,\r\n         * сохраним эти параметры\r\n         */\r\n      } else if((! _.isEqual(params, oldParams)) && updating){\r\n        ds.pendingParameters = _.cloneDeep(params);\r\n      }\r\n    }\r\n  }\r\n}\r\nwindow.dataStorageUpdater = window.dataStorageUpdater || new DataStorageUpdater();\r\nexport default window.dataStorageUpdater\r\n","export const CHANGE_CURRENT_DATASOURCE = 'CHANGE_CURRENT_DATASOURCE';\r\nexport const CLEAR_CURRENT_DATASOURCE = 'CLEAR_CURRENT_DATASOURCE';\r\nexport const SET_CURRENT_DATASOURCE_LOADED = 'SET_CURRENT_DATASOURCE_LOADED';\r\nexport const SET_CURRENT_DATASOURCE_LOADING = 'SET_CURRENT_DATASOURCE_LOADING';\r\n\r\n/**\r\n *\r\n * @param {string}dataStorageName\r\n * @param {{}} data\r\n * @return {{}} -\r\n *   {\r\n *     type: {string},\r\n *     dataStorage: {},\r\n *     dataStorageName: {string},\r\n *   }\r\n */\r\nexport function changeCurrentDataStorage(dataStorageName, data = {}) {\r\n  return {\r\n    type: CHANGE_CURRENT_DATASOURCE,\r\n    data,\r\n    dataStorageName\r\n  };\r\n}\r\n\r\n/**\r\n * Перед загрузкой новых данных, старые удаляем\r\n * @return {{}} - type: string\r\n */\r\nexport function clearCurrentDataStorage() {\r\n  return {\r\n    type: CLEAR_CURRENT_DATASOURCE,\r\n  };\r\n}\r\n\r\n/**\r\n * После загрузки сообщаем, что данный обновились, для вызовы _componentDidMount в компонентах элементов\r\n * @return {{type: string}}\r\n */\r\nexport function currentDataStorageLoaded(){\r\n  return {\r\n    type: SET_CURRENT_DATASOURCE_LOADED,\r\n  };\r\n}\r\n/**\r\n * После загрузки сообщаем, что данный обновились, для вызовы _componentDidMount в компонентах элементов\r\n * @return {{type: string}}\r\n */\r\nexport function currentDataStorageLoading(){\r\n  return {\r\n    type: SET_CURRENT_DATASOURCE_LOADING,\r\n  };\r\n}\r\n\r\n","/**\n * Set a value by a dot path.\n * @param obj The object to evaluate.\n * @param prop The path to be set.\n * @param value The value to set.\n */\nfunction set(obj, prop, value) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tconst setPropImmutableRec = (obj, prop, value, i) => {\n\t\tlet clone, head = prop[i];\n\n\t\tif (prop.length > i) {\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\thead = getArrayIndex(head, obj);\n\t\t\t\tclone = obj.slice();\n\t\t\t} else {\n\t\t\t\tclone = Object.assign({}, obj);\n\t\t\t}\n\t\t\tclone[head] = setPropImmutableRec(obj[head] !== undefined ? obj[head] : {}, prop, value, i + 1);\n\t\t\treturn clone;\n\t\t}\n\n\t\treturn typeof value === 'function' ? value(obj) : value;\n\t};\n\n\treturn setPropImmutableRec(obj, prop, value, 0);\n}\n\n/**\n * Get a value by a dot path.\n * @param obj The object to evaluate.\n * @param prop The path to value that should be returned.\n * @param [value] The default value that should be returned when the target doesn't exist.\n */\nfunction get(obj, prop, value) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tfor (var i = 0; i < prop.length; i++) {\n\t\tif (obj === null || typeof obj !== 'object') {\n\t\t\treturn value;\n\t\t}\n\t\tlet head = prop[i];\n\t\tif (Array.isArray(obj) && head === '$end') {\n\t\t\thead = obj.length - 1;\n\t\t}\n\t\tobj = obj[head];\n\t}\n\n\tif (typeof obj === 'undefined') {\n\t\treturn value;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Delete a property by a dot path.\n * If target container is an object, the property is deleted.\n * If target container is an array, the index is deleted.\n * If target container is undefined, nothing is deleted.\n * @param obj The object to evaluate.\n * @param prop The path to the property or index that should be deleted.\n */\nfunction _delete(obj, prop) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tconst deletePropImmutableRec = (obj, prop, i) => {\n\t\tlet clone, head = prop[i];\n\n\t\tif (obj === null || typeof obj !== 'object' ||\n\t\t\t!Array.isArray(obj) && obj[head] === undefined) {\n\n\t\t\treturn obj;\n\t\t}\n\n\t\tif (prop.length - 1 > i) {\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\thead = getArrayIndex(head, obj);\n\t\t\t\tclone = obj.slice();\n\t\t\t} else {\n\t\t\t\tclone = Object.assign({}, obj);\n\t\t\t}\n\n\t\t\tclone[head] = deletePropImmutableRec(obj[head], prop, i + 1);\n\t\t\treturn clone;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\thead = getArrayIndex(head, obj);\n\t\t\tclone = [].concat(obj.slice(0, head), obj.slice(head + 1));\n\t\t} else {\n\t\t\tclone = Object.assign({}, obj);\n\t\t\tdelete clone[head];\n\t\t}\n\n\t\treturn clone;\n\t};\n\n\treturn deletePropImmutableRec(obj, prop, 0);\n}\n\n/**\n * Toggles a value.  The target value is evaluated using Boolean(currentValue).  The result will always be a JSON boolean.\n * Be careful with strings as target value, as \"true\" and \"false\" will toggle to false, but \"0\" will toggle to true.\n * Here is what Javascript considers false:  0, -0, null, false, NaN, undefined, and the empty string (\"\")\n * @param obj The object to evaluate.\n * @param prop The path to the value.\n */\nfunction toggle(obj, prop) {\n\tconst curVal = get(obj, prop);\n\treturn set(obj, prop, !Boolean(curVal));\n}\n\n/**\n * Merges a value.  The target value must be an object, array, null, or undefined.\n * If target is an object, Object.assign({}, target, param) is used.\n * If target an array, target.concat(param) is used.\n * If target is null or undefined, the value is simply set.\n * @param obj The object to evaluate.\n * @param prop The path to the value.\n * @param val The value to merge into the target value.\n */\nfunction merge(obj, prop, val) {\n\tconst curVal = get(obj, prop);\n\tif (typeof curVal === 'object') {\n\t\tif (Array.isArray(curVal)) {\n\t\t\treturn set(obj, prop, curVal.concat(val));\n\t\t} else if (curVal === null) {\n\t\t\treturn set(obj, prop, val);\n\t\t}\n\t\telse {\n\t\t\tlet merged = Object.assign({}, curVal, val);\n\t\t\treturn set(obj, prop, merged);\n\t\t}\n\t} else if (typeof curVal === 'undefined') {\n\t\treturn set(obj, prop, val);\n\t}\n\telse {\n\t\treturn obj;\n\t}\n}\n\nfunction getArrayIndex(head, obj) {\n\tif (head === '$end') {\n\t\thead = Math.max(obj.length - 1, 0);\n\t}\n\tif (!/^\\+?\\d+$/.test(head)) {\n\t\tthrow new Error(`Array index '${head}' has to be an integer`);\n\t}\n\treturn parseInt(head);\n}\n\nfunction propToArray(prop) {\n\treturn prop.split('.').reduce((ret, el, index, list) => {\n\t\tconst last = index > 0 && list[index - 1];\n\t\tif (last && /(?:^|[^\\\\])\\\\$/.test(last)) {\n\t\t\tconst prev = ret.pop();\n\t\t\tret.push(prev.slice(0, -1) + '.' + el);\n\t\t} else {\n\t\t\tret.push(el);\n\t\t}\n\t\treturn ret;\n\t}, []);\n}\n\nmodule.exports = {\n\tset,\n\tget,\n\tdelete: _delete,\n\ttoggle,\n\tmerge\n};\n"],"sourceRoot":""}