{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/store/altrp-dashboard/actions.js","webpack:///./resources/modules/front-app/src/js/store/altrp-dashboard-export/actions.js","webpack:///./resources/modules/front-app/src/js/store/current-data-storage/actions.js","webpack:///./resources/modules/front-app/src/js/store/current-email-template/actions.js","webpack:///./resources/modules/front-app/src/js/store/current-model/actions.js","webpack:///./resources/modules/front-app/src/js/store/current-page/actions.js","webpack:///./resources/modules/front-app/src/js/store/current-title/actions.js","webpack:///./resources/modules/front-app/src/js/store/elements-storage/actions.js","webpack:///./resources/modules/front-app/src/js/store/fonts-storage/actions.js","webpack:///./resources/modules/front-app/src/js/store/media-screen-storage/actions.js","webpack:///./resources/modules/front-app/src/js/store/menus-storage/actions.js","webpack:///./resources/modules/front-app/src/js/store/popup-trigger/actions.js","webpack:///./resources/modules/front-app/src/js/store/scroll-position/actions.js","webpack:///./resources/modules/front-app/src/js/store/routes/reducers.js","webpack:///./resources/modules/front-app/src/js/store/current-model/reducers.js","webpack:///./resources/modules/front-app/src/js/store/forms-data-storage/reducers.js","webpack:///./resources/modules/editor/src/js/classes/AltrpUser.js","webpack:///./resources/modules/front-app/src/js/store/current-user/reducers.js","webpack:///./resources/modules/front-app/src/js/store/current-data-storage/reducers.js","webpack:///./resources/modules/front-app/src/js/store/scroll-position/reducers.js","webpack:///./resources/modules/front-app/src/js/store/popup-trigger/reducers.js","webpack:///./resources/modules/front-app/src/js/store/elements-storage/reducers.js","webpack:///./resources/modules/front-app/src/js/store/hide-triggers/actions.js","webpack:///./resources/modules/front-app/src/js/store/hide-triggers/reducers.js","webpack:///./resources/modules/front-app/src/js/store/responses-storage/reducers.js","webpack:///./resources/modules/editor/src/js/store/altrp-dashboard/reducers.js","webpack:///./resources/modules/front-app/src/js/store/altrp-meta-storage/reducers.js","webpack:///./resources/modules/front-app/src/js/store/altrp-page-state-storage/reducers.js","webpack:///./resources/modules/front-app/src/js/store/fonts-storage/reducers.js","webpack:///./resources/modules/front-app/src/js/store/user-local-storage/reducers.js","webpack:///./resources/modules/front-app/src/js/store/altrp-dashboard-export/reducers.js","webpack:///./resources/modules/front-app/src/js/store/media-screen-storage/reducers.js","webpack:///./resources/modules/front-app/src/js/store/current-title/reducers.js","webpack:///./resources/modules/front-app/src/js/store/current-page/reducers.js","webpack:///./resources/modules/front-app/src/js/store/menus-storage/reducers.js","webpack:///./resources/modules/front-app/src/js/store/elements-settings/reducers.js","webpack:///./resources/modules/front-app/src/js/store/areas/reducers.js","webpack:///./resources/modules/front-app/src/js/store/reducers.js","webpack:///./resources/modules/front-app/src/js/store/user-local-storage/actions.js","webpack:///./resources/modules/front-app/src/js/store/current-email-template/reducers.js","webpack:///./resources/modules/front-app/src/js/store/store.js"],"names":["EDIT_ELEMENT","editElement","payload","type","DASHBOARD_EXPORT","exportDashboard","CHANGE_CURRENT_DATASOURCE","CLEAR_CURRENT_DATASOURCE","SET_CURRENT_DATASOURCE_LOADED","SET_CURRENT_DATASOURCE_LOADING","changeCurrentDataStorage","dataStorageName","data","clearCurrentDataStorage","currentDataStorageLoaded","currentDataStorageLoading","CHANGE_CURRENT_EMAIL_TEMPLATE","changeCurrentEmailTemplate","template","CHANGE_CURRENT_MODEL","changeCurrentModel","model","CHANGE_CURRENT_PAGE","CHANGE_CURRENT_PAGE_PROPERTY","changeCurrentPageProperty","propertyName","value","CHANGE_CURRENT_TITLE","changeCurrentTitle","title","ADD_ELEMENT","CLEAR_ELEMENTS","addElement","elementComponent","clearElements","ADD_FONT","REMOVE_FONT","addFont","elementId","controllerName","fontName","SET_CURRENT_SCREEN","setCurrentScreen","screen","ADD_MENU","addMenu","menu","TRIGGER_POPUP","togglePopup","SET_SCROLL_TOP","setScrollValue","top","window","pageUpdater","startUpdating","routes","altrpPages","_data","push","Route","defaultState","_","isArray","model_data","defaultModel","altrpModelUpdated","this","getProperty","permissions","ownPermissions","find","ownPermission","permission","parseInt","id","isString","name","roles","ownRoles","ownRole","role","isAuth","length","hasPermissions","hasRoles","AltrpModel","current_user","defaultDataStorage","initialState","popupID","defaultElementStorage","TOGGLE_TRIGGER","SET_DEFAULT_TRIGGERS","defaultResponsesStorage","require","altrpHelpers","setAltrpIndex","saveDataToLocalStorage","isSSR","defaultAltrpMeta","getDataFromLocalStorage","addEventListener","altrpMeta","undefined","isObject","appStore","dispatch","replaceAltrpMeta","defaultPageState","defaultFontsStorage","defaultLocalStorage","element","defaultScreen","CONSTANTS","fullMediaQuery","query","replace","matchMedia","matches","isEditor","Cookies","set","defaultTitle","document","defaultPage","url","location","href","currentPage","defaultMenus","altrpMenus","defaultSettings","defaultAreas","page_areas","map","a","Area","areaFactory","combineReducers","appRoutes","state","action","CHANGE_APP_ROUTES","currentModel","formsStore","formId","fieldName","changedField","CHANGE_FORM_FIELD_VALUE","get","cloneDeep","CLEAR_FORM_FIELD_VALUE","currentUser","user","local_storage","CHANGE_CURRENT_USER","Array","CHANGE_CURRENT_USER_PROPERTY","path","setProperty","form","Resource","route","put","then","res","changeCurrentUser","catch","error","console","SET_NOTICE_FOR_USER","newNotice","notice","SET_USERS_ONLINE","members","AltrpUser","SSR","rootElement","getElementById","classList","add","remove","currentDataStorage","dataStorage","scrollPosition","popupTrigger","elements","elementStorage","hideTriggers","includes","filter","item","concat","altrpresponses","responsesStorage","ADD_RESPONSE_DATA","CLEAR_ALL_RESPONSE_DATA","CHANGE_ALTRP_META","metaValue","metaName","getData","REPLACE_ALTRP_META","REPLACE_ALTRP_META_FROM_LOCAL_STORAGE","altrpPageState","CHANGE_PAGE_STATE","stateValue","stateName","CLEAR_PAGE_STATE","altrpFonts","fontsStorage","clone","unsetProperty","userLocalStorage","result","currentScreen","expires","currentTitle","currentEmailTemplate","altrpPage","page","menus","guid","elementsSettings","elementSettings","CHANGE_SETTINGS","mutate","settings","elementName","childrenLength","REPLACE_SETTINGS","areas","SET_AREAS","preloadedState","__PRELOADED_STATE__","createStore","rootReducer","ALTRP_DEBUG","_dis","trace","bind"],"mappings":"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","file":"3564.1f41b21376a96ba378ca.bundle.js","sourcesContent":["export const EDIT_ELEMENT = \"EDIT_ELEMENT\";\r\n\r\nexport function editElement(payload) {\r\n  return {\r\n    type: EDIT_ELEMENT,\r\n    payload\r\n  };\r\n}\r\n","export const DASHBOARD_EXPORT = \"DASHBOARD_EXPORT\";\r\n\r\nexport function exportDashboard(payload) {\r\n  return {\r\n    type: DASHBOARD_EXPORT,\r\n    payload\r\n  };\r\n}\r\n","export const CHANGE_CURRENT_DATASOURCE = 'CHANGE_CURRENT_DATASOURCE';\r\nexport const CLEAR_CURRENT_DATASOURCE = 'CLEAR_CURRENT_DATASOURCE';\r\nexport const SET_CURRENT_DATASOURCE_LOADED = 'SET_CURRENT_DATASOURCE_LOADED';\r\nexport const SET_CURRENT_DATASOURCE_LOADING = 'SET_CURRENT_DATASOURCE_LOADING';\r\n\r\n/**\r\n *\r\n * @param {string}dataStorageName\r\n * @param {{}} data\r\n * @return {{}} -\r\n *   {\r\n *     type: {string},\r\n *     dataStorage: {},\r\n *     dataStorageName: {string},\r\n *   }\r\n */\r\nexport function changeCurrentDataStorage(dataStorageName, data = {}) {\r\n  return {\r\n    type: CHANGE_CURRENT_DATASOURCE,\r\n    data,\r\n    dataStorageName\r\n  };\r\n}\r\n\r\n/**\r\n * Перед загрузкой новых данных, старые удаляем\r\n * @return {{}} - type: string\r\n */\r\nexport function clearCurrentDataStorage() {\r\n  return {\r\n    type: CLEAR_CURRENT_DATASOURCE,\r\n  };\r\n}\r\n\r\n/**\r\n * После загрузки сообщаем, что данный обновились, для вызовы _componentDidMount в компонентах элементов\r\n * @return {{type: string}}\r\n */\r\nexport function currentDataStorageLoaded(){\r\n  return {\r\n    type: SET_CURRENT_DATASOURCE_LOADED,\r\n  };\r\n}\r\n/**\r\n * После загрузки сообщаем, что данный обновились, для вызовы _componentDidMount в компонентах элементов\r\n * @return {{type: string}}\r\n */\r\nexport function currentDataStorageLoading(){\r\n  return {\r\n    type: SET_CURRENT_DATASOURCE_LOADING,\r\n  };\r\n}\r\n\r\n","export const CHANGE_CURRENT_EMAIL_TEMPLATE = \"CHANGE_CURRENT_EMAIL_TEMPLATE\";\r\n\r\n\r\nexport function changeCurrentEmailTemplate(template) {\r\n  return {\r\n    type: CHANGE_CURRENT_EMAIL_TEMPLATE,\r\n    template\r\n  };\r\n}\r\n","export const CHANGE_CURRENT_MODEL = 'CHANGE_CURRENT_MODEL';\r\n\r\nexport function changeCurrentModel(model) {\r\n  return {\r\n    type: CHANGE_CURRENT_MODEL,\r\n    model\r\n  };\r\n}\r\n\r\n","export const CHANGE_CURRENT_PAGE = \"CHANGE_CURRENT_PAGE\";\r\nexport const CHANGE_CURRENT_PAGE_PROPERTY = \"CHANGE_CURRENT_PAGE_PROPERTY\";\r\n\r\nexport function changeCurrentPage(pageData) {\r\n  return {\r\n    type: CHANGE_CURRENT_PAGE,\r\n    pageData: pageData || {}\r\n  };\r\n}\r\n\r\nexport function changeCurrentPageProperty(propertyName, value) {\r\n  return {\r\n    type: CHANGE_CURRENT_PAGE_PROPERTY,\r\n    propertyName,\r\n    value,\r\n  };\r\n}\r\n\r\n","export const CHANGE_CURRENT_TITLE = 'CHANGE_CURRENT_TITLE';\r\n\r\nexport function changeCurrentTitle(title) {\r\n  return {\r\n    type: CHANGE_CURRENT_TITLE,\r\n    title\r\n  };\r\n}\r\n\r\n","export const ADD_ELEMENT = 'ADD_ELEMENT';\r\nexport const CLEAR_ELEMENTS = 'CLEAR_ELEMENTS';\r\n\r\n/**\r\n *\r\n * @param {React.Component}elementComponent\r\n * @return {{}} - {\r\n *     type: {string},\r\n *     sectionComponent: {React.Component},\r\n *   }\r\n */\r\nexport function addElement(elementComponent) {\r\n  return {\r\n    type: ADD_ELEMENT,\r\n    elementComponent\r\n  };\r\n}\r\n\r\n/**\r\n * Перед загрузкой новых данных, старые удаляем\r\n * @return {{type: string}}\r\n */\r\nexport function clearElements() {\r\n  return {\r\n    type: CLEAR_ELEMENTS,\r\n  };\r\n}\r\n\r\n","export const ADD_FONT = 'ADD_FONT';\r\nexport const REMOVE_FONT = 'REMOVE_FONT';\r\n\r\n/**\r\n *\r\n * @param {string} elementId\r\n * @param {string} controllerName\r\n * @param {string} fontName\r\n * @return {{}} -\r\n *   {\r\n *     type: {string},\r\n *     metaValue: {},\r\n *     metaName: {string},\r\n *   }\r\n */\r\nexport function addFont(elementId, controllerName, fontName) {\r\n  return {\r\n    type: ADD_FONT,\r\n    elementId,\r\n    controllerName,\r\n    fontName\r\n  };\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} elementId\r\n * @param {string} controllerName\r\n * @return {{}} -\r\n *   {\r\n *     type: {string},\r\n *     metaValue: {},\r\n *     metaName: {string},\r\n *   }\r\n */\r\nexport function removeFont(elementId, controllerName, ) {\r\n  return {\r\n    type: REMOVE_FONT,\r\n    elementId,\r\n    controllerName,\r\n\r\n  };\r\n}\r\n","export const SET_CURRENT_SCREEN = 'SET_CURRENT_SCREEN';\r\n\r\n/**\r\n * Меняем текущий экран из списка CONSTANTS.SCREENS\r\n *\r\n */\r\nexport function setCurrentScreen(screen){\r\n  return {\r\n    type: SET_CURRENT_SCREEN,\r\n    screen,\r\n  };\r\n}\r\n\r\n","export const ADD_MENU = 'ADD_MENU';\r\n/**\r\n *\r\n * @param {{}} menu\r\n * @return {{}} -\r\n *   {\r\n *     type: {string},\r\n *     menu: {},\r\n *   }\r\n */\r\nexport function addMenu(menu) {\r\n  return {\r\n    type: ADD_MENU,\r\n    menu,\r\n  };\r\n}\r\n","export const TRIGGER_POPUP = \"TRIGGER_POPUP\";\r\n\r\nexport const togglePopup = payload => ({\r\n  type: TRIGGER_POPUP,\r\n  payload\r\n});","export const SET_SCROLL_TOP = \"SET_SCROLL_TOP\";\r\n/**\r\n *\r\n * @param {{\r\n *  top: int\r\n * }} payload\r\n * @return {{type: string, payload: {}}}\r\n */\r\nexport const setScrollValue = payload => {\r\n  if(payload.top) {\r\n\r\n    if(window.pageUpdater){\r\n      window.pageUpdater.startUpdating();\r\n    }\r\n  }\r\n  return {\r\n    type: SET_SCROLL_TOP,\r\n    payload\r\n  };\r\n};\r\n","import {CHANGE_APP_ROUTES,} from './actions'\r\nimport Route from \"../../classes/Route\";\r\n\r\nlet routes = [];\r\nif(window.altrpPages){\r\n  for (let _data of window.altrpPages) {\r\n    routes.push(Route.routeFabric(_data));\r\n  }\r\n}\r\nconst defaultState = {\r\n  routes,\r\n};\r\n\r\nexport function appRoutesReducer(state, action) {\r\n  state = state || defaultState;\r\n  switch (action.type) {\r\n    case CHANGE_APP_ROUTES:{\r\n      state = {\r\n        routes: action.routes,\r\n      };\r\n    }break;\r\n  }\r\n  return state;\r\n}\r\n","import {CHANGE_CURRENT_MODEL} from './actions'\r\nimport AltrpModel from \"../../../../../editor/src/js/classes/AltrpModel\";\r\nif(_.isArray(window.model_data)){\r\n  window.model_data = {...window.model_data}\r\n}\r\nconst defaultModel = window.model_data || {\r\n\r\n};\r\nwindow.model_data && (defaultModel.altrpModelUpdated = true);\r\n\r\nexport function currentModelReducer(model, action) {\r\n  model = model || defaultModel;\r\n  switch (action.type) {\r\n    case CHANGE_CURRENT_MODEL:{\r\n      model = action.model;\r\n    }break;\r\n  }\r\n  if(model instanceof AltrpModel){\r\n    return model;\r\n  }\r\n  return new AltrpModel(model);\r\n}\r\n","import {CHANGE_FORM_FIELD_VALUE, CLEAR_FORM_FIELD_VALUE} from './actions'\r\n\r\nconst defaultState = {\r\n\r\n};\r\n\r\nexport function formsStoreReducer(state, {type, formId, fieldName, value, changedField}) {\r\n  state = state || defaultState;\r\n  switch (type) {\r\n    case CHANGE_FORM_FIELD_VALUE:{\r\n      if(_.get(state, [formId, fieldName]) !== value){\r\n        state = _.cloneDeep(state);\r\n        state.changedField = changedField;\r\n        _.set(state, [formId, fieldName], value);\r\n      }\r\n\r\n    }break;\r\n    case CLEAR_FORM_FIELD_VALUE:{\r\n      if(formId){\r\n        state = _.cloneDeep(state);\r\n        _.set(state, [formId], {});\r\n      } else {\r\n        state = {};\r\n      }\r\n    }break;\r\n  }\r\n  return state;\r\n}","/**\r\n * Имеет интерфейс пользователя\r\n * @class AltrpUser\r\n */\r\n\r\nimport AltrpModel from \"./AltrpModel\";\r\n\r\nclass AltrpUser extends AltrpModel{\r\n  /**\r\n   * Проверяет является ли пользователь гостем\r\n   * @return {boolean}\r\n   */\r\n  isGuest(){\r\n    return this.getProperty('is_guest', false)\r\n  }\r\n  /**\r\n   * Проверяет является ли авторизованным пользователем\r\n   * @return {boolean}\r\n   */\r\n  isAuth(){\r\n    return this.getProperty('created_at', false)\r\n  }\r\n\r\n  /**\r\n   * Проверяет наличие permission у пользователя\r\n   * @param {array} permissions\r\n   * $return {boolean}\r\n   */\r\n  hasPermissions(permissions = []){\r\n    if(! _.isArray(permissions)){\r\n      permissions = [permissions];\r\n    }\r\n    let ownPermissions = this.getProperty('permissions', []);\r\n    return _.find(ownPermissions, ownPermission => {\r\n      return _.find(permissions, permission => {\r\n        if(parseInt(permission)){\r\n          return parseInt(permission) === parseInt(ownPermission.id);\r\n        }\r\n        if(_.isString(permission)){\r\n          return permission === ownPermission.name;\r\n        }\r\n      });\r\n    });\r\n  }\r\n  /**\r\n   * Проверяет наличие роли у пользователя\r\n   * @param {array} roles\r\n   * $return {boolean}\r\n   */\r\n  hasRoles(roles = []){\r\n    if(! _.isArray(roles)){\r\n      roles = [roles];\r\n    }\r\n    let ownRoles = this.getProperty('roles', []);\r\n    return _.find(ownRoles, ownRole => {\r\n      return _.find(roles, role => {\r\n        if(parseInt(role)){\r\n          return parseInt(role) === parseInt(ownRole.id);\r\n        }\r\n        if(_.isString(role)){\r\n          return role === ownRole.name;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Проверяет доступ пользователя по необходимым роля и разрешениям\r\n   * @param {array} permissions\r\n   * @param {array} roles\r\n   * $return {boolean}\r\n   *\r\n   */\r\n  checkUserAllowed(permissions = [], roles = []){\r\n    if(! this.isAuth()){\r\n      return false;\r\n    }\r\n    roles = _.isArray(roles) ? roles : [];\r\n    permissions = _.isArray(permissions) ? permissions : [];\r\n    if(! (permissions.length || roles.length)){\r\n      return true;\r\n    }\r\n    if(this.hasPermissions(permissions)){\r\n      return true;\r\n    }\r\n    if(this.hasRoles(roles)){\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default AltrpUser","import {\r\n  changeCurrentUser,\r\n  changeUpdateUserNotification,\r\n  CHANGE_CURRENT_USER,\r\n  SET_USERS_ONLINE,\r\n  CHANGE_CURRENT_USER_PROPERTY,\r\n  SET_NOTICE_FOR_USER,\r\n} from \"./actions\";\r\nimport AltrpUser from \"../../../../../editor/src/js/classes/AltrpUser\";\r\nimport Resource from \"../../../../../editor/src/js/classes/Resource\";\r\n\r\nconst defaultModel = window.current_user || {};\r\nexport function currentUserReducer(user, action) {\r\n  user = user || defaultModel;\r\n  let localStorage = action.user?.local_storage;\r\n  switch (action.type) {\r\n    case CHANGE_CURRENT_USER:\r\n      {\r\n        user = action.user;\r\n        if (Array.isArray(user.local_storage)) {\r\n          user.local_storage = {};\r\n        }\r\n      }\r\n      break;\r\n    case CHANGE_CURRENT_USER_PROPERTY:\r\n      {\r\n        let path = action.path;\r\n        let value = action.value;\r\n        user.setProperty(path, value);\r\n        const data = _.cloneDeep(user.getProperty(\"local_storage\"));\r\n        const form = {\r\n          local_storage: data\r\n        };\r\n        new Resource({ route: `/ajax/current-user` })\r\n          .put(\"\", form)\r\n          .then(res => {\r\n            appStore.dispatch(changeCurrentUser(res.data));\r\n          })\r\n          .catch(error => console.error(error));\r\n      }\r\n      break;\r\n    case SET_NOTICE_FOR_USER:\r\n      {\r\n        let newNotice = action.notice;\r\n        user = { ...user, notice: [...user.data?.notice || [], newNotice] };\r\n      }\r\n      break;\r\n    case SET_USERS_ONLINE:\r\n      {\r\n        user = { ...user, members: action.members };\r\n      }\r\n      break;\r\n  }\r\n  if (! (user instanceof AltrpUser)) {\r\n    user = new AltrpUser(user);\r\n  }\r\n  if(! window.SSR){\r\n    const rootElement = document.getElementById('front-app');\r\n    if(user.hasRoles('admin')){\r\n      rootElement && rootElement.classList.add('front-app_admin')\r\n    } else{\r\n      rootElement && rootElement.classList.remove('front-app_admin');\r\n    }\r\n  }\r\n  return user;\r\n}\r\n","import {\r\n  CHANGE_CURRENT_DATASOURCE,\r\n  CLEAR_CURRENT_DATASOURCE,\r\n  SET_CURRENT_DATASOURCE_LOADED,\r\n  SET_CURRENT_DATASOURCE_LOADING\r\n} from './actions'\r\nimport AltrpModel from \"../../../../../editor/src/js/classes/AltrpModel\";\r\nimport {setAltrpIndex} from \"../../helpers\";\r\n\r\nconst defaultDataStorage = {\r\n\r\n};\r\n\r\nexport function currentDataStorageReducer(dataStorage, action) {\r\n  dataStorage = dataStorage || new AltrpModel(defaultDataStorage);\r\n  switch (action.type) {\r\n    case CHANGE_CURRENT_DATASOURCE:{\r\n      let data = action.data;\r\n      if(_.isArray(data)){\r\n        setAltrpIndex(data);\r\n      }\r\n      dataStorage = _.cloneDeep(dataStorage);\r\n      dataStorage.setProperty(action.dataStorageName, data);\r\n    }break;\r\n    case CLEAR_CURRENT_DATASOURCE:{\r\n      dataStorage = new AltrpModel({});\r\n      dataStorage.setProperty('currentDataStorageLoaded', false);\r\n    }break;\r\n    case SET_CURRENT_DATASOURCE_LOADED:{\r\n      dataStorage = _.cloneDeep(dataStorage);\r\n      dataStorage.setProperty('currentDataStorageLoaded', true);\r\n    }break;\r\n    case SET_CURRENT_DATASOURCE_LOADING:{\r\n      dataStorage = _.cloneDeep(dataStorage);\r\n      dataStorage.setProperty('currentDataStorageLoaded', false);\r\n    }break;\r\n  }\r\n  if(dataStorage instanceof AltrpModel){\r\n    return dataStorage;\r\n  }\r\n  return new AltrpModel(dataStorage);\r\n}\r\n","import { SET_SCROLL_TOP } from \"./actions\";\r\n\r\nconst initialState = {}\r\n\r\nexport const scrollReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_SCROLL_TOP:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import { TRIGGER_POPUP } from \"./actions\";\r\n\r\nconst initialState = { popupID: null };\r\n\r\nexport const popupReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case TRIGGER_POPUP: {\r\n      return {popupID: state.popupID === payload ? null : payload};\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};","import {CLEAR_ELEMENTS, ADD_ELEMENT} from \"./actions\";\r\n\r\nconst defaultElementStorage = [];\r\n\r\nexport function elementsStorageReducer(elementStorage, action) {\r\n  elementStorage = elementStorage || defaultElementStorage;\r\n  switch (action.type) {\r\n    case CLEAR_ELEMENTS: {\r\n      elementStorage = defaultElementStorage;\r\n    }\r\n    break;\r\n    case ADD_ELEMENT: {\r\n      if(! _.isArray(elementStorage)){\r\n        elementStorage = defaultElementStorage;\r\n      }\r\n      elementStorage.push(action.elementComponent);\r\n      elementStorage = [...elementStorage];\r\n    }\r\n    break;\r\n  }\r\n  return elementStorage;\r\n}","export const TOGGLE_TRIGGER = \"TOGGLE_TRIGGER\";\r\nexport const SET_DEFAULT_TRIGGERS = \"SET_DEFAULT_TRIGGERS\";\r\n\r\nexport const toggleTrigger = payload => ({\r\n  type: TOGGLE_TRIGGER,\r\n  payload\r\n});\r\n\r\nexport const setDefaultTriggers = payload => ({\r\n  type: SET_DEFAULT_TRIGGERS,\r\n  payload\r\n});\r\n","import { TOGGLE_TRIGGER } from \"./actions\";\r\nimport { SET_DEFAULT_TRIGGERS } from \"./actions\";\r\n\r\nconst initialState = [];\r\n\r\nexport const hideTriggersReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case TOGGLE_TRIGGER:      \r\n      return state.includes(payload) ? state.filter(item => item !== payload) : [...state, payload];\r\n    case SET_DEFAULT_TRIGGERS:\r\n      return state.concat(payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import {ADD_RESPONSE_DATA, CLEAR_ALL_RESPONSE_DATA} from './actions'\r\nimport AltrpModel from \"../../../../../editor/src/js/classes/AltrpModel\";\r\nimport {setAltrpIndex} from \"../../helpers\";\r\n\r\nconst defaultResponsesStorage = {\r\n  \r\n};\r\n\r\nexport function responsesStorageReducer(responsesStorage, action) {\r\n  responsesStorage = responsesStorage || new AltrpModel(defaultResponsesStorage);\r\n  switch (action.type) {\r\n    case ADD_RESPONSE_DATA:{\r\n      let data = action.data;\r\n      if(_.isArray(data)){\r\n        setAltrpIndex(data);\r\n      }\r\n      responsesStorage = _.cloneDeep(responsesStorage);\r\n      responsesStorage.setProperty(action.formId, data);\r\n    }break;\r\n    case CLEAR_ALL_RESPONSE_DATA:{\r\n      responsesStorage = new AltrpModel({});\r\n    }break;\r\n  }\r\n  if(responsesStorage instanceof AltrpModel){\r\n    return responsesStorage;\r\n  }\r\n  return new AltrpModel(responsesStorage);\r\n}","import { EDIT_ELEMENT } from \"./actions\";\r\n\r\nif (typeof _ === \"undefined\") {\r\n  global._ = require(\"lodash\");\r\n}\r\n\r\nconst defaultState = {};\r\n\r\nexport function elementReducer(state, action) {\r\n  state = state || defaultState;\r\n  const data = _.cloneDeep(action.payload);\r\n  switch (action.type) {\r\n    case EDIT_ELEMENT:\r\n      {\r\n        state = data;\r\n      }\r\n      break;\r\n  }\r\n  return state;\r\n}\r\n","import {CHANGE_ALTRP_META, REPLACE_ALTRP_META, REPLACE_ALTRP_META_FROM_LOCAL_STORAGE, replaceAltrpMeta} from './actions'\r\nconst { AltrpModel,setAltrpIndex, saveDataToLocalStorage, isSSR} = window.altrpHelpers;\r\n\r\nconst defaultAltrpMeta = isSSR() ? {} :window.altrpHelpers.getDataFromLocalStorage('altrpmeta', {});\r\n// console.log();\r\n/**\r\n *\r\n * @param {{}} altrpMeta\r\n * @param {{}}  action\r\n *   {\r\n *     type: {string},\r\n *     metaValue: {},\r\n *     metaName: {string},\r\n *   }\r\n */\r\nexport function altrpMetaReducer(altrpMeta, action) {\r\n  altrpMeta = altrpMeta || new AltrpModel(defaultAltrpMeta);\r\n  switch (action.type) {\r\n    case CHANGE_ALTRP_META:{\r\n      let {metaValue, metaName } = action;\r\n      altrpMeta = _.cloneDeep(altrpMeta);\r\n      if(_.isArray(metaValue)){\r\n        setAltrpIndex(metaValue);\r\n      }\r\n      altrpMeta.setProperty(metaName, metaValue);\r\n      saveDataToLocalStorage('altrpmeta', altrpMeta.getData())\r\n    }break;\r\n    case REPLACE_ALTRP_META:{\r\n      let {metaValue, } = action;\r\n      altrpMeta = new AltrpModel(metaValue);\r\n      if(_.isArray(metaValue)){\r\n        setAltrpIndex(metaValue);\r\n      }\r\n      saveDataToLocalStorage('altrpmeta', altrpMeta.getData())\r\n    }break;\r\n    case REPLACE_ALTRP_META_FROM_LOCAL_STORAGE:{\r\n      let {metaValue } = action;\r\n      altrpMeta = new AltrpModel(metaValue);\r\n      if(_.isArray(metaValue)){\r\n        setAltrpIndex(metaValue);\r\n      }\r\n    }break;\r\n  }\r\n  if(altrpMeta instanceof AltrpModel){\r\n    return altrpMeta;\r\n  }\r\n  return new AltrpModel(altrpMeta);\r\n}\r\n\r\nif(! isSSR()){\r\n  window.addEventListener('storage', ()=>{\r\n    const altrpMeta = window.altrpHelpers.getDataFromLocalStorage('altrpmeta', {});\r\n    if(altrpMeta !== undefined && _.isObject(altrpMeta)){\r\n      appStore.dispatch(replaceAltrpMeta(altrpMeta, true));\r\n    }\r\n  })\r\n}\r\n","import {CHANGE_PAGE_STATE, CLEAR_PAGE_STATE} from './actions'\r\nimport AltrpModel from \"../../../../../editor/src/js/classes/AltrpModel\";\r\nimport {setAltrpIndex} from \"../../helpers\";\r\n\r\nconst defaultPageState = {\r\n  \r\n};\r\n/**\r\n *\r\n * @param {{}|AltrpModel} altrpPageState\r\n * @param {{}}  action\r\n *   {\r\n *     type: {string},\r\n *     metaValue: {},\r\n *     metaName: {string},\r\n *   }\r\n * @return {AltrpModel}\r\n */\r\nexport function altrpPageStateReducer(altrpPageState, action) {\r\n  altrpPageState = altrpPageState || new AltrpModel(defaultPageState);\r\n  switch (action.type) {\r\n    case CHANGE_PAGE_STATE:{\r\n      let stateValue = action.stateValue;\r\n      altrpPageState = _.cloneDeep(altrpPageState);\r\n      if(_.isArray(stateValue)){\r\n        setAltrpIndex(stateValue);\r\n      }\r\n      altrpPageState.setProperty(action.stateName, stateValue);\r\n    }break;\r\n    case CLEAR_PAGE_STATE:{\r\n      altrpPageState = new AltrpModel(defaultPageState);\r\n    }break;\r\n  }\r\n  if(altrpPageState instanceof AltrpModel){\r\n    return altrpPageState;\r\n  }\r\n  return new AltrpModel(altrpPageState);\r\n}","import {ADD_FONT, REMOVE_FONT} from './actions'\r\nimport AltrpModel from \"../../../../../editor/src/js/classes/AltrpModel\";\r\n\r\nconst defaultFontsStorage = new AltrpModel({\r\n  \r\n});\r\n/**\r\n *\r\n * @param {AltrpModel} fontsStorage\r\n * @param {{}}  action\r\n *   {\r\n *     type: {string},\r\n *     metaValue: {},\r\n *     metaName: {string},\r\n *   }\r\n */\r\nexport function fontsReducer(fontsStorage = defaultFontsStorage, action) {\r\n  switch (action.type) {\r\n    case ADD_FONT:{\r\n      const{\r\n        elementId,\r\n        controllerName,\r\n        fontName,\r\n      } = action;\r\n      fontsStorage.setProperty(`${elementId}_${controllerName}`, fontName);\r\n      fontsStorage = _.clone(fontsStorage);\r\n    }break;\r\n    case REMOVE_FONT:{\r\n      const{\r\n        elementId,\r\n        controllerName,\r\n      } = action;\r\n      fontsStorage.unsetProperty(`${elementId}_${controllerName}`);\r\n      fontsStorage = _.clone(fontsStorage);\r\n    }break;\r\n  }\r\n\r\n  return fontsStorage;\r\n}\r\n","import { CHANGE_USER_LOCAL_STORAGE } from \"./actions\";\r\n\r\nconst defaultLocalStorage = {\r\n  element: \"test\"\r\n};\r\n\r\nexport function changeLocalStorageReducer(data, action) {\r\n  let result = data || defaultLocalStorage;\r\n  switch (action.type) {\r\n    case CHANGE_USER_LOCAL_STORAGE:\r\n      {\r\n        result = data;\r\n      }\r\n      break;\r\n  }\r\n  return result;\r\n}\r\n","import { DASHBOARD_EXPORT } from \"./actions\";\r\n\r\nconst defaultState = {};\r\n\r\nexport function exportDashboard(state, action) {\r\n  state = state || defaultState;\r\n  const data = _.cloneDeep(action.payload);\r\n  switch (action.type) {\r\n    case DASHBOARD_EXPORT:\r\n      {\r\n        state = data;\r\n      }\r\n      break;\r\n  }\r\n  return state;\r\n}\r\n","if (typeof window === \"undefined\") {\r\n  global.window = {};\r\n}\r\nimport { SET_CURRENT_SCREEN } from \"./actions\";\r\nimport CONSTANTS from \"../../../../../editor/src/js/consts\";\r\n\r\nconst defaultScreen =\r\n  CONSTANTS.SCREENS.find(screen => {\r\n    if (!screen.fullMediaQuery) {\r\n      return false;\r\n    }\r\n    let query = screen.fullMediaQuery;\r\n    query = query.replace(\"@media\", \"\");\r\n    return typeof window.matchMedia !== \"undefined\"\r\n      ? window?.matchMedia(query).matches\r\n      : false;\r\n  }) || CONSTANTS.SCREENS[0];\r\nif(!window.altrpHelpers.isEditor()){\r\n  window.Cookies.set('__altrp_current_device', defaultScreen.name);\r\n}\r\nexport function mediaScreenReducer(currentScreen, action) {\r\n  currentScreen = currentScreen || defaultScreen;\r\n  switch (action.type) {\r\n    case SET_CURRENT_SCREEN:\r\n      {\r\n        window.Cookies.set('__altrp_current_device', action.screen.name, { expires: 365 });\r\n        currentScreen = action.screen;\r\n      }\r\n      break;\r\n  }\r\n  return currentScreen;\r\n}\r\n","if (typeof document === \"undefined\") {\r\n  global.document = {};\r\n}\r\nimport { CHANGE_CURRENT_TITLE } from \"./actions\";\r\n\r\nconst defaultTitle = document?.title || \"\";\r\n\r\nexport function currentTitleReducer(title, action) {\r\n  title = title || defaultTitle;\r\n  switch (action.type) {\r\n    case CHANGE_CURRENT_TITLE:\r\n      {\r\n        title = action.title;\r\n      }\r\n      break;\r\n  }\r\n  return title;\r\n}\r\n","import { CHANGE_CURRENT_PAGE, CHANGE_CURRENT_PAGE_PROPERTY } from \"./actions\";\r\nimport AltrpModel from \"../../../../../editor/src/js/classes/AltrpModel\";\r\n\r\nif (typeof location === \"undefined\") {\r\n  global.location = {};\r\n}\r\n\r\nconst defaultPage = {\r\n  url: location?.href || \"\",\r\n  title: window?.currentPage?.title || \"\",\r\n};\r\n\r\nexport function currentPageReducer(page, action) {\r\n  page = page || defaultPage;\r\n  switch (action.type) {\r\n    case CHANGE_CURRENT_PAGE:\r\n      {\r\n        page = action.page;\r\n      }\r\n      break;\r\n    case CHANGE_CURRENT_PAGE_PROPERTY:\r\n      {\r\n        page = _.clone(page);\r\n        page.setProperty(action.propertyName, action.value);\r\n      }\r\n      break;\r\n  }\r\n\r\n  if (page instanceof AltrpModel) {\r\n    return page;\r\n  }\r\n  return new AltrpModel(page);\r\n}\r\n","import {ADD_MENU, } from './actions'\r\n\r\nconst defaultMenus = window.altrpMenus || [];\r\n/**\r\n *\r\n * @param {[]} menus\r\n * @param {{\r\n *  components: {},\r\n *  type: string\r\n * }}  action\r\n */\r\nexport function menusReducer(menus = defaultMenus, action) {\r\n  switch (action.type) {\r\n    case ADD_MENU:{\r\n      if(menus.find(menu=>menu.guid === action.menu.guid)){\r\n        return menus;\r\n      }\r\n      menus = [...menus];\r\n      menus.push(action.menu)\r\n    }break;\r\n  }\r\n\r\n  return menus;\r\n}\r\n","import { CHANGE_SETTINGS, REPLACE_SETTINGS} from \"./actions\";\r\nimport mutate from \"dot-prop-immutable\";\r\n\r\nconst defaultSettings = {};\r\n\r\nexport function elementsSettingsReducer(elementSettings, action) {\r\n  elementSettings = elementSettings || defaultSettings;\r\n  switch (action.type) {\r\n    case CHANGE_SETTINGS: {\r\n      if(elementSettings[action.elementId]){\r\n        mutate.delete( elementSettings,action.elementId);\r\n      }\r\n\r\n      elementSettings = mutate.set(elementSettings, action.elementId, {\r\n        settings: {...action.settings},\r\n        name: action.elementName,\r\n        childrenLength: action.childrenLength,\r\n      });\r\n    }\r\n    break;\r\n    case REPLACE_SETTINGS: {\r\n      elementSettings = action.settings;\r\n    }\r\n    break;\r\n  }\r\n  return elementSettings;\r\n}\r\n","import { SET_AREAS,} from \"./actions\";\r\n\r\nlet defaultAreas = [];\r\nif(window['h-altrp']){\r\n  defaultAreas = window.page_areas.map(a=> new window.altrpHelpers.Area.areaFactory(a));\r\n}\r\nexport function areasReducer(areas, action) {\r\n  areas = areas || defaultAreas;\r\n  switch (action.type) {\r\n    case SET_AREAS: {\r\n      areas = action.areas;\r\n    }\r\n    break;\r\n  }\r\n  return areas;\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { appRoutesReducer } from \"./routes/reducers\";\r\nimport { currentModelReducer } from \"./current-model/reducers\";\r\nimport { formsStoreReducer } from \"./forms-data-storage/reducers\";\r\nimport { currentUserReducer } from \"./current-user/reducers\";\r\nimport { currentDataStorageReducer } from \"./current-data-storage/reducers\";\r\nimport { scrollReducer } from \"./scroll-position/reducers\";\r\nimport { popupReducer } from \"./popup-trigger/reducers\";\r\nimport { elementsStorageReducer } from \"./elements-storage/reducers\";\r\nimport { hideTriggersReducer } from \"./hide-triggers/reducers\";\r\nimport { responsesStorageReducer } from \"./responses-storage/reducers\";\r\nimport { elementReducer } from \"../../../../editor/src/js/store/altrp-dashboard/reducers\";\r\nimport { altrpMetaReducer } from \"./altrp-meta-storage/reducers\";\r\nimport { altrpPageStateReducer } from \"./altrp-page-state-storage/reducers\";\r\nimport { fontsReducer } from \"./fonts-storage/reducers\";\r\nimport { changeLocalStorageReducer } from \"./user-local-storage/reducers\";\r\nimport { exportDashboard } from \"./altrp-dashboard-export/reducers\";\r\nimport { mediaScreenReducer } from \"./media-screen-storage/reducers\";\r\nimport { currentTitleReducer } from \"./current-title/reducers\";\r\nimport { currentEmailTemplateReducer } from \"./current-email-template/reducers\";\r\nimport { currentPageReducer } from \"./current-page/reducers\";\r\nimport {menusReducer} from \"./menus-storage/reducers\";\r\nimport {elementsSettingsReducer} from \"./elements-settings/reducers\";\r\nimport {areasReducer} from \"./areas/reducers\";\r\n\r\nexport default combineReducers({\r\n  appRoutes: appRoutesReducer,\r\n  currentModel: currentModelReducer,\r\n  formsStore: formsStoreReducer,\r\n  currentUser: currentUserReducer,\r\n  currentDataStorage: currentDataStorageReducer,\r\n  scrollPosition: scrollReducer,\r\n  popupTrigger: popupReducer,\r\n  elements: elementsStorageReducer,\r\n  hideTriggers: hideTriggersReducer,\r\n  altrpresponses: responsesStorageReducer,\r\n  editElement: elementReducer,\r\n  altrpMeta: altrpMetaReducer,\r\n  altrpPageState: altrpPageStateReducer,\r\n  altrpFonts: fontsReducer,\r\n  userLocalStorage: changeLocalStorageReducer,\r\n  exportDashboard: exportDashboard,\r\n  currentScreen: mediaScreenReducer,\r\n  currentTitle: currentTitleReducer,\r\n  currentEmailTemplate: currentEmailTemplateReducer,\r\n  altrpPage: currentPageReducer,\r\n  altrpMenus: menusReducer,\r\n  elementsSettings: elementsSettingsReducer,\r\n  areas: areasReducer,\r\n});\r\n","export const CHANGE_USER_LOCAL_STORAGE = \"CHANGE_USER_LOCAL_STORAGE\";\r\n\r\nexport function changeStorageData(user) {\r\n  return {\r\n    type: CHANGE_USER_LOCAL_STORAGE,\r\n    user: user || {}\r\n  };\r\n}\r\n","import {\r\n  CHANGE_CURRENT_EMAIL_TEMPLATE\r\n} from \"./actions\";\r\n\r\n\r\nconst defaultTemplate = null;\r\n\r\nexport function currentEmailTemplateReducer(template, action) {\r\n  template = template || defaultTemplate;\r\n  switch (action.type) {\r\n    case CHANGE_CURRENT_EMAIL_TEMPLATE:\r\n      {\r\n        template = action.template;\r\n      }\r\n      break;\r\n  }\r\n  return template;\r\n}\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n// Grab the state from a global variable injected into the server-generated HTML\r\nconst preloadedState = window.__PRELOADED_STATE__;\r\n\r\n// Allow the passed state to be garbage-collected\r\ndelete window.__PRELOADED_STATE__;\r\nlet appStore = createStore(rootReducer, preloadedState);\r\nwindow.appStore = appStore;\r\nif (window.ALTRP_DEBUG) {\r\n  let _dis = appStore.dispatch;\r\n  appStore.dispatch = function(action) {\r\n    console.trace(action);\r\n    _dis.bind(appStore)(action);\r\n  };\r\n}\r\nexport default appStore;\r\n"],"sourceRoot":""}